var e,t,s,i={194:(e,t,s)=>{s.r(t),s.d(t,{NeuralMesh:()=>i});class i{constructor(){this.nodes=new Map,this.connections=new Map,this.activations=new Map,this.learningRate=.01}addNode(e,t,s=0){const i={type:t,activation:0,bias:s};this.nodes.set(e,i),this.activations.set(e,0)}addConnection(e,t,s){if(!this.nodes.has(e)||!this.nodes.has(t))throw new Error(`Cannot connect non-existent nodes: ${e} -> ${t}`);this.connections.has(e)||this.connections.set(e,new Map),this.connections.get(e).set(t,s)}stimulate(e,t){const s=this.nodes.get(e);s&&"input"===s.type?this.activations.set(e,t):console.warn(`Cannot stimulate non-input node: ${e}`)}propagate(){for(const[e,t]of this.nodes)"input"!==t.type&&this.activations.set(e,t.bias);for(const[e,t]of this.connections){const s=this.activations.get(e)||0;for(const[e,i]of t){const t=(this.activations.get(e)||0)+s*i;this.activations.set(e,this.sigmoid(t))}}}sigmoid(e){return 1/(1+Math.exp(-e))}getActivation(e){return this.activations.get(e)||0}mutate(e=.05){for(const t of this.connections.values())for(const[s,i]of t)Math.random()<e&&(t.set(s,i+.2*(Math.random()-.5)),t.set(s,Math.max(-2,Math.min(2,t.get(s)||0))));for(const t of this.nodes.values())Math.random()<e&&(t.bias+=.1*(Math.random()-.5),t.bias=Math.max(-1,Math.min(1,t.bias)))}getNeuralActivity(){let e=0,t=0;for(const s of this.activations.values())e+=Math.abs(s),t++;return t>0?e/t:0}getConnectionStrength(){let e=0,t=0;for(const s of this.connections.values())for(const i of s.values())e+=Math.abs(i),t++;return t>0?e/t:0}toJSON(){return{nodes:Array.from(this.nodes.values()),connections:Array.from(this.connections.values()).map((e=>Array.from(e.entries()))),activations:Object.fromEntries(this.activations)}}async initialize(){0===this.nodes.size&&this.setupDefaultNetwork(),this.propagate()}setupDefaultNetwork(){this.addNode("sensory_input","input"),this.addNode("memory_input","input"),this.addNode("processing_1","hidden",.1),this.addNode("processing_2","hidden",-.1),this.addNode("motor_output","output"),this.addNode("emotion_output","output"),this.addConnection("sensory_input","processing_1",.8),this.addConnection("memory_input","processing_2",.6),this.addConnection("processing_1","motor_output",.9),this.addConnection("processing_2","emotion_output",.7),this.addConnection("processing_1","processing_2",.3)}async suspend(){this.activations.clear(),console.log("Neural mesh suspended")}async getCPUUsage(){const e=this.nodes.size*this.connections.size;return Math.min(1,e/1e3)}async getMemoryUsage(){const e=64*(this.nodes.size+this.connections.size);return Math.min(1,e/1048576)}}},326:(e,t,s)=>{s.r(t),s.d(t,{OrganismCore:()=>n});class i{constructor(){this.errorQueue=[],this.maxQueueSize=1e3,this.logLevel="warning",this.metrics={errorCount:0,lastErrorTime:0,errorsByComponent:new Map,errorsByMethod:new Map,recoveryAttempts:0,recoverySuccesses:0}}static getInstance(){return i.instance||(i.instance=new i),i.instance}setLogLevel(e){this.logLevel=e}logError(e){this.updateMetrics(e),this.addToQueue(e),this.outputError(e)}logSimpleError(e,t,s,i="error",r){const a=s instanceof Error?s.message:String(s),n={component:e,method:t,timestamp:Date.now(),severity:i,details:{message:a,context:r,originalError:s instanceof Error?{name:s.name,stack:s.stack}:void 0}};console["warning"===i?"warn":"debug"===i?"debug":"info"===i?"info":"error"](`[${e}][${t}] ${a}`,r||""),this.recordError(n)}validateRequired(e,t,s,i){const r=[];null==e&&r.push(`${t} is required`);const a={isValid:0===r.length,errors:r,warnings:[],context:{component:s,method:i,timestamp:Date.now(),severity:r.length>0?"error":"info"}};return a.isValid||this.logError(a.context),a}validateType(e,t,s={},i,r,a){const n=[];if(s.required&&null==e&&n.push(`${i} is required`),null!=e){const r=typeof e;r!==t&&n.push(`${i} must be of type ${t}, got ${r}`),"number"===t&&"number"==typeof e&&(void 0!==s.min&&e<s.min&&n.push(`${i} must be >= ${s.min}`),void 0!==s.max&&e>s.max&&n.push(`${i} must be <= ${s.max}`),Number.isFinite(e)||n.push(`${i} must be a finite number`)),"string"===t&&"string"==typeof e&&(void 0!==s.min&&e.length<s.min&&n.push(`${i} must be at least ${s.min} characters long`),void 0!==s.max&&e.length>s.max&&n.push(`${i} must be at most ${s.max} characters long`),s.pattern&&!s.pattern.test(e)&&n.push(`${i} does not match required pattern`))}const o={isValid:0===n.length,errors:n,warnings:[],context:{component:r,method:a,timestamp:Date.now(),severity:n.length>0?"error":"warning",details:{fieldName:i,expectedType:t,actualValue:e}}};return o.isValid||this.logError(o.context),o}async withRetry(e,t,s){let i=null;for(let r=1;r<=t.maxRetries;r++){this.metrics.recoveryAttempts++;try{const t=await e();return r>1&&(this.metrics.recoverySuccesses++,this.logSimpleError(s.component,s.method,`Recovery successful after ${r} attempts`,"info")),t}catch(e){if(i=e instanceof Error?e:new Error(String(e)),this.logSimpleError(s.component,s.method,`Attempt ${r}/${t.maxRetries} failed: ${i.message}`,"warning"),r<t.maxRetries&&t.shouldRetry(i,r)){await this.delay(t.backoffMs*r);continue}break}}if(this.logSimpleError(s.component,s.method,`All ${t.maxRetries} retry attempts failed. Last error: ${i?.message}`,"error"),void 0!==t.fallbackValue)return t.fallbackValue;throw i}safeExecute(e,t,s){try{return e()}catch(e){return this.logSimpleError(s.component,s.method,e,"error"),t}}async safeExecuteAsync(e,t,s){try{return await e()}catch(e){return this.logSimpleError(s.component,s.method,e,"error"),t}}getMetrics(){return{...this.metrics}}getRecentErrors(e=50){return this.errorQueue.slice(-e)}reset(){this.metrics={errorCount:0,lastErrorTime:0,errorsByComponent:new Map,errorsByMethod:new Map,recoveryAttempts:0,recoverySuccesses:0},this.errorQueue=[]}updateMetrics(e){this.metrics.errorCount++,this.metrics.lastErrorTime=e.timestamp;const t=this.metrics.errorsByComponent.get(e.component)||0;this.metrics.errorsByComponent.set(e.component,t+1);const s=`${e.component}.${e.method}`,i=this.metrics.errorsByMethod.get(s)||0;this.metrics.errorsByMethod.set(s,i+1)}addToQueue(e){this.errorQueue.push(e),this.errorQueue.length>this.maxQueueSize&&(this.errorQueue=this.errorQueue.slice(-this.maxQueueSize))}outputError(e){if(!this.shouldLog(e.severity))return;const t=`[${new Date(e.timestamp).toISOString()}] ${e.severity.toUpperCase()} ${e.component}.${e.method}`;switch(e.severity){case"critical":case"error":console.error(t,e.details);break;case"warning":console.warn(t,e.details);break;case"info":console.info(t,e.details);break;case"debug":console.debug(t,e.details)}}shouldLog(e){const t=["debug","info","warning","error","critical"],s=t.indexOf(this.logLevel);return t.indexOf(e)>=s}delay(e){return new Promise((t=>setTimeout(t,e)))}recordError(e){this.updateMetrics(e),this.addToQueue(e)}}i.instance=null;const r=i.getInstance();class a{constructor(e,t={}){this.pendingMutations=new Map,this.debounceTimer=null,this.totalRequests=0,this.totalBatches=0,this.averageBatchSize=0,this.lastBatchTime=0,this.onBatchReady=e,this.config={debounceMs:50,maxBatchSize:10,maxWaitTimeMs:200,combinationStrategy:"weighted",...t}}addMutation(e,t="normal"){const s=`mutation_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,i={id:s,rate:Math.max(0,Math.min(1,e)),timestamp:Date.now(),priority:t};return this.pendingMutations.set(s,i),this.totalRequests++,this.scheduleBatchProcessing(),s}cancelMutation(e){return this.pendingMutations.delete(e)}async flushBatch(){this.debounceTimer&&(clearTimeout(this.debounceTimer),this.debounceTimer=null),await this.processPendingMutations()}scheduleBatchProcessing(){this.debounceTimer&&clearTimeout(this.debounceTimer),this.pendingMutations.size>=this.config.maxBatchSize||this.hasHighPriorityMutation()||this.hasOldestMutationExceededMaxWait()?this.processPendingMutations().catch((e=>{r.logSimpleError("MutationBatcher","scheduleBatchProcessing",e)})):this.debounceTimer=setTimeout((()=>{this.processPendingMutations().catch((e=>{r.logSimpleError("MutationBatcher","debounceTimer",e)}))}),this.config.debounceMs)}hasHighPriorityMutation(){return Array.from(this.pendingMutations.values()).some((e=>"high"===e.priority))}hasOldestMutationExceededMaxWait(){const e=Date.now(),t=Array.from(this.pendingMutations.values()).reduce(((e,t)=>t.timestamp<e.timestamp?t:e));return t&&e-t.timestamp>this.config.maxWaitTimeMs}async processPendingMutations(){if(0===this.pendingMutations.size)return;const e=Array.from(this.pendingMutations.values());this.pendingMutations.clear();try{const t=this.combineMutations(e);await this.onBatchReady(t),this.updateStatistics(e.length),this.lastBatchTime=Date.now()}catch(t){r.logSimpleError("MutationBatcher","processPendingMutations",t),e.forEach((e=>{this.pendingMutations.set(e.id,e)}))}}combineMutations(e){if(0===e.length)throw new Error("Cannot combine empty mutations array");const t=e.map((e=>e.rate)),s=e.map((e=>e.priority)),i=e.map((e=>e.timestamp));let r;switch(this.config.combinationStrategy){case"average":default:r=t.reduce(((e,t)=>e+t),0)/t.length;break;case"max":r=Math.max(...t);break;case"sum":r=Math.min(1,t.reduce(((e,t)=>e+t),0));break;case"weighted":r=this.calculateWeightedRate(e)}const a=s.includes("high"),n=s.includes("normal"),o=a?"high":n?"normal":"low",c=Math.max(...i)-Math.min(...i);return{combinedRate:Math.max(0,Math.min(1,r)),requestCount:e.length,timespan:c,priority:o}}calculateWeightedRate(e){let t=0,s=0;const i=Date.now();return e.forEach((e=>{let r=1;switch(e.priority){case"high":r=3;break;case"normal":r=2;break;case"low":r=1}const a=i-e.timestamp,n=r*Math.exp(-a/1e3);s+=e.rate*n,t+=n})),t>0?s/t:0}updateStatistics(e){this.totalBatches++,this.averageBatchSize=.9*this.averageBatchSize+.1*e}getStatistics(){const e=this.totalBatches>0?this.totalRequests/this.totalBatches:1;return{totalRequests:this.totalRequests,totalBatches:this.totalBatches,averageBatchSize:this.averageBatchSize,compressionRatio:e,pendingMutations:this.pendingMutations.size,lastBatchTime:this.lastBatchTime,config:{...this.config}}}updateConfig(e){this.config={...this.config,...e}}dispose(){this.debounceTimer&&(clearTimeout(this.debounceTimer),this.debounceTimer=null),this.pendingMutations.clear()}}class n{constructor(e,t,i){this.interpreter=null,this.id=Math.random().toString(36).substr(2,9),this.isBooted=!1;const n=this.validateInput(e,t);if(!n.isValid)throw new Error(`OrganismCore creation failed: ${n.errors.join(", ")}`);if(this.dna=e,i)this.mesh=i(),this.neuralMesh=this.mesh;else{const{NeuralMesh:e}=s(194);this.mesh=new e,this.neuralMesh=this.mesh}this.traits={curiosity:.5,focus:.5,rhythm:.5,empathy:.5,creativity:.5,energy:.5,harmony:.5,wisdom:.1,...t},this.energy=1,this.health=1,this.lastMutation=Date.now(),this.metabolismRate=.01,this.mutationBatcher=new a(this.processBatchedMutation.bind(this),{debounceMs:100,maxBatchSize:5,maxWaitTimeMs:500,combinationStrategy:"weighted"}),this.initializeNeuralNetwork().catch((e=>{r.logSimpleError("OrganismCore","constructor",e,"error")}))}validateInput(e,t){const s=r.validateType(e,"string",{required:!0,min:10,pattern:/^[ATCG]+$/i},"dna","OrganismCore","validateInput");if(!s.isValid)return s;if(!/^[ATCG]+$/i.test(e))return{isValid:!1,errors:["DNA must contain only valid nucleotide characters (A, T, C, G)"],warnings:[],context:{component:"OrganismCore",method:"validateInput",timestamp:Date.now(),severity:"error",details:{fieldName:"dna",invalidCharacters:e.replace(/[ATCG]/gi,"")}}};if(t)for(const[e,s]of Object.entries(t)){const t=r.validateType(s,"number",{required:!0,min:0,max:1},`trait.${e}`,"OrganismCore","validateInput");if(!t.isValid)return t}return{isValid:!0,errors:[],warnings:[]}}async initializeNeuralNetwork(){return r.withRetry((async()=>{await this.mesh.initialize(),this.mesh.stimulate("sensory_input",this.traits.curiosity),this.mesh.stimulate("memory_input",this.traits.focus)}),{maxRetries:3,backoffMs:100,shouldRetry:(e,t)=>t<3},{component:"OrganismCore",method:"initializeNeuralNetwork"})}update(e=1){r.safeExecute((()=>{const t=r.validateType(e,"number",{required:!0,min:.001,max:1e3},"deltaTime","OrganismCore","update");if(!t.isValid)throw new Error(`Invalid deltaTime: ${t.errors.join(", ")}`);this.mesh.propagate(),this.updateEnergy(e),this.updateHealth(),this.evolveTraits()}),void 0,{component:"OrganismCore",method:"update"})}updateEnergy(e){r.safeExecute((()=>{const t=this.mesh.getNeuralActivity()*this.metabolismRate*e;this.energy=Math.max(0,Math.min(1,this.energy-t)),this.energy<.2&&(this.health*=.999)}),void 0,{component:"OrganismCore",method:"updateEnergy"})}updateHealth(){r.safeExecute((()=>{this.energy>.8&&(this.health=Math.min(1,this.health+.001)),this.health=Math.max(0,this.health)}),void 0,{component:"OrganismCore",method:"updateHealth"})}evolveTraits(){r.safeExecute((()=>{const e=this.mesh.getNeuralActivity(),t=this.mesh.getConnectionStrength();this.traits.focus+=.001*(e-.5),this.traits.creativity+=.001*(t-.5),Object.keys(this.traits).forEach((e=>{const t=e;this.traits[t]=Math.max(0,Math.min(1,this.traits[t]))}))}),void 0,{component:"OrganismCore",method:"evolveTraits"})}stimulate(e,t){r.safeExecute((()=>{const s=r.validateType(e,"string",{required:!0},"inputId","OrganismCore","stimulate"),i=r.validateType(t,"number",{required:!0},"value","OrganismCore","stimulate");if(!s.isValid||!i.isValid)throw new Error("Invalid stimulate parameters");this.mesh.stimulate(e,t)}),void 0,{component:"OrganismCore",method:"stimulate"})}async processBatchedMutation(e){return r.safeExecuteAsync((async()=>{await this.mesh.mutate(e.combinedRate);const t=.5*e.combinedRate;Object.keys(this.traits).forEach((s=>{if(Math.random()<t){const t=.1*(Math.random()-.5)*e.combinedRate,i=s;this.traits[i]=Math.max(0,Math.min(1,this.traits[i]+t))}})),this.lastMutation=Date.now(),r.logSimpleError("OrganismCore","processBatchedMutation",`Processed batched mutation: rate=${e.combinedRate.toFixed(3)}, requests=${e.requestCount}`,"info")}),void 0,{component:"OrganismCore",method:"processBatchedMutation"})}mutate(e=.05){r.safeExecute((()=>{const t=r.validateType(e,"number",{required:!0,min:0,max:1},"rate","OrganismCore","mutate");if(!t.isValid)throw new Error(`Invalid mutation rate: ${t.errors.join(", ")}`);let s="normal";e>.3?s="high":e<.01&&(s="low");const i=this.mutationBatcher.addMutation(e,s);r.logSimpleError("OrganismCore","mutate",`Queued mutation: id=${i}, rate=${e}, priority=${s}`,"debug")}),void 0,{component:"OrganismCore",method:"mutate"})}async flushMutations(){return r.safeExecuteAsync((async()=>{await this.mutationBatcher.flushBatch()}),void 0,{component:"OrganismCore",method:"flushMutations"})}feed(e=.3){r.safeExecute((()=>{const t=r.validateType(e,"number",{required:!0,min:0,max:1},"amount","OrganismCore","feed");if(!t.isValid)throw new Error(`Invalid feed amount: ${t.errors.join(", ")}`);this.energy=Math.min(1,this.energy+e)}),void 0,{component:"OrganismCore",method:"feed"})}getTraits(){return{...this.traits}}setTraits(e){r.safeExecute((()=>{const t=this.validateInput(this.dna,e);if(!t.isValid)throw new Error(`Invalid traits: ${t.errors.join(", ")}`);Object.keys(e).forEach((t=>{const s=e[t];"number"!=typeof s||isNaN(s)||(this.traits[t]=s)}))}),void 0,{component:"OrganismCore",method:"setTraits"})}getState(){return{id:"core",generation:1,health:this.health,energy:this.energy,traits:this.getTraits(),visualDNA:this.dna,lastMutation:this.lastMutation,mutations:[],createdAt:Date.now(),dna:this.dna,birthTime:Date.now(),socialConnections:[],memoryFragments:[]}}async getPerformanceMetrics(){try{return{...await this.measurePerformance(),neuralActivity:this.calculateNeuralActivity(),connectionStrength:this.calculateConnectionStrength(),mutationStats:this.mutationBatcher.getStatistics()}}catch(e){return this.logger?.error("Failed to get performance metrics",{organismId:this.id,err:e}),{cpu:0,memory:0,neuralActivity:0,connectionStrength:0,mutationStats:this.mutationBatcher.getStatistics()}}}toJSON(){return{mesh:this.mesh.toJSON(),traits:this.traits,energy:this.energy,health:this.health,dna:this.dna,timestamp:Date.now()}}getShaderParameters(){return{energy:this.energy,health:this.health,neuralActivity:this.mesh.getNeuralActivity(),creativity:this.traits.creativity,focus:this.traits.focus,time:Date.now()/1e3}}async boot(){try{if(this.logger?.debug("Starting organism boot sequence",this.id),!this.neuralMesh)throw new Error("Neural mesh not provided");this.neuralMesh.addNode("sensory_input","input"),this.neuralMesh.addNode("memory_input","input"),this.neuralMesh.addNode("decision_output","output"),this.neuralMesh.addNode("emotion_output","output"),this.neuralMesh.addConnection("sensory_input","decision_output",.5),this.neuralMesh.addConnection("memory_input","emotion_output",.3),this.isBooted=!0,this.logger?.info("Organism boot completed successfully",this.id)}catch(e){throw this.logger?.error("Failed to boot organism",{organismId:this.id,error:e}),r.logSimpleError("OrganismCore","boot",e instanceof Error?e.message:"Boot failed","error"),e}}async hibernate(){return r.safeExecuteAsync((async()=>{await this.mutationBatcher.flushBatch(),this.mutationBatcher.dispose(),await this.mesh.suspend(),console.log("Organism core hibernating...")}),void 0,{component:"OrganismCore",method:"hibernate"})}async measurePerformance(){try{return{cpu:await this.mesh.getCPUUsage(),memory:await this.mesh.getMemoryUsage(),neuralActivity:this.calculateNeuralActivity(),connectionStrength:this.calculateConnectionStrength()}}catch(e){return{cpu:0,memory:0,neuralActivity:0,connectionStrength:0}}}calculateNeuralActivity(){try{return this.mesh.getNeuralActivity()}catch(e){return 0}}calculateConnectionStrength(){try{return this.mesh.getConnectionStrength()}catch(e){return 0}}handleBootError(){}}}},r={};function a(e){var t=r[e];if(void 0!==t)return t.exports;var s=r[e]={exports:{}};return i[e](s,s.exports,a),s.exports}function n(){if("undefined"!=typeof crypto&&crypto.randomUUID)try{return crypto.randomUUID()}catch(e){console.warn("crypto.randomUUID failed, using fallback:",e)}return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}))}function o(e){return e&&"object"==typeof e?c(e):e}function c(e,t=new WeakSet){if(null==e)return e;if("function"==typeof e)return"[Function]";if(e instanceof Date)return e.toISOString();if(e instanceof Error)return{name:e.name,message:e.message,stack:e.stack};if(e instanceof WebGLRenderingContext||e instanceof WebGL2RenderingContext||e instanceof HTMLElement||e instanceof HTMLCanvasElement||e instanceof CanvasRenderingContext2D||e instanceof WebGLProgram||e instanceof WebGLBuffer||e instanceof WebGLTexture||e&&e.$$typeof||e&&e.__reactFiber||e&&e._owner||e&&"object"==typeof e&&e.constructor&&e.constructor.name&&e.constructor.name.includes("Fiber"))return e instanceof HTMLCanvasElement?{tagName:"CANVAS",width:e.width,height:e.height,className:e.className,id:e.id}:"[Non-serializable Object]";if("object"!=typeof e)return e;if(t.has(e))return"[Circular Reference]";if(t.add(e),Array.isArray(e))return e.map((e=>c(e,t)));const s={};for(const i in e)if(e.hasOwnProperty(i))try{s[i]=c(e[i],t)}catch(e){s[i]="[Non-serializable]"}return s}function h(e){return e&&"string"==typeof e.code&&"string"==typeof e.status}function l(e){try{return JSON.parse(JSON.stringify(e))}catch(t){return console.warn("Message serialization issue, cleaning object:",t),u(e)}}function u(e,t=new WeakSet){if(null==e)return e;if("function"==typeof e)return"[Function]";if(e instanceof Date)return e.toISOString();if(e instanceof Error)return{name:e.name,message:e.message,stack:e.stack};if(e instanceof WebGLRenderingContext||e instanceof WebGL2RenderingContext||e instanceof HTMLElement||e instanceof HTMLCanvasElement||e instanceof CanvasRenderingContext2D||e instanceof WebGLProgram||e instanceof WebGLBuffer||e instanceof WebGLTexture||e&&e.$$typeof||e&&e.__reactFiber||e&&e._owner||e&&"object"==typeof e&&e.constructor&&e.constructor.name&&e.constructor.name.includes("Fiber"))return"[Non-serializable Object]";if("object"!=typeof e)return e;if(t.has(e))return"[Circular Reference]";if(t.add(e),Array.isArray(e))return e.map((e=>u(e,t)));const s={};for(const i in e)if(e.hasOwnProperty(i))try{s[i]=u(e[i],t)}catch(e){s[i]="[Non-serializable]"}return s}a.m=i,a.d=(e,t)=>{for(var s in t)a.o(t,s)&&!a.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},a.f={},a.e=e=>Promise.all(Object.keys(a.f).reduce(((t,s)=>(a.f[s](e,t),t)),[])),a.u=e=>"background/"+e+".index.js",a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},e={792:0},t=t=>{var s,i,{__webpack_ids__:r,__webpack_modules__:n,__webpack_runtime__:o}=t,c=0;for(s in n)a.o(n,s)&&(a.m[s]=n[s]);for(o&&o(a);c<r.length;c++)i=r[c],a.o(e,i)&&e[i]&&e[i][0](),e[r[c]]=0},a.f.j=(s,i)=>{var r=a.o(e,s)?e[s]:void 0;if(0!==r)if(r)i.push(r[1]);else{var n=import("../"+a.u(s)).then(t,(t=>{throw 0!==e[s]&&(e[s]=void 0),t}));n=Promise.race([n,new Promise((t=>r=e[s]=[t]))]),i.push(r[1]=n)}},function(e){e.PAGE_VISIT="PAGE_VISIT",e.SCROLL_EVENT="SCROLL_EVENT",e.ORGANISM_UPDATE="ORGANISM_UPDATE",e.ORGANISM_MUTATE="ORGANISM_MUTATE",e.ORGANISM_STATE_CHANGE="ORGANISM_STATE_CHANGE",e.WEBGL_INIT="WEBGL_INIT",e.WEBGL_ERROR="WEBGL_ERROR",e.WEBGL_INITIALIZED="WEBGL_INITIALIZED",e.PERFORMANCE_UPDATE="PERFORMANCE_UPDATE",e.GENERATE_INVITATION="GENERATE_INVITATION",e.INVITATION_GENERATED="INVITATION_GENERATED",e.CONSUME_INVITATION="CONSUME_INVITATION",e.INVITATION_CONSUMED="INVITATION_CONSUMED",e.CHECK_INVITATION="CHECK_INVITATION",e.INVITATION_CHECKED="INVITATION_CHECKED",e.MURMUR="MURMUR",e.GET_INVITER="GET_INVITER",e.INVITER_RESULT="INVITER_RESULT",e.GET_INVITEES="GET_INVITEES",e.INVITEES_RESULT="INVITEES_RESULT",e.GET_INVITATION_HISTORY="GET_INVITATION_HISTORY",e.INVITATION_HISTORY_RESULT="INVITATION_HISTORY_RESULT",e.INTERACTION_DETECTED="INTERACTION_DETECTED",e.REQUEST_SHARED_MUTATION="REQUEST_SHARED_MUTATION",e.SHARED_MUTATION_CODE="SHARED_MUTATION_CODE",e.ACCEPT_SHARED_MUTATION="ACCEPT_SHARED_MUTATION",e.SHARED_MUTATION_RESULT="SHARED_MUTATION_RESULT",e.COLLECTIVE_WAKE_REQUEST="COLLECTIVE_WAKE_REQUEST",e.COLLECTIVE_WAKE_RESULT="COLLECTIVE_WAKE_RESULT",e.CONTEXTUAL_INVITATION="CONTEXTUAL_INVITATION",e.SECRET_RITUAL_TRIGGERED="SECRET_RITUAL_TRIGGERED",e.SECRET_CODE_ENTERED="SECRET_CODE_ENTERED"}(s||(s={}));class d{constructor(e){this.source=e,this.handlers=new Map,this.globalHandlers=new Set,this.filters=[],this.messageQueue=[],this.processing=!1,this.setupListeners()}setupListeners(){chrome.runtime.onMessage.addListener(((e,t,s)=>(this.shouldProcessMessage(e)&&(this.enqueueMessage(e),s({received:!0})),!1)))}shouldProcessMessage(e){return this.filters.every((t=>t(e)))}async enqueueMessage(e){if(this.messageQueue.push(e),!this.processing){this.processing=!0;try{await this.processQueue()}finally{this.processing=!1}}}async processQueue(){for(;this.messageQueue.length>0;){const e=this.messageQueue.shift();await this.processMessage(e)}}async processMessage(e){if(!function(e,t){switch(e){case s.ORGANISM_UPDATE:return(i=t)&&"string"==typeof i.id&&"number"==typeof i.generation&&"number"==typeof i.health&&"number"==typeof i.energy&&i.traits&&"object"==typeof i.traits;case s.ORGANISM_MUTATE:return function(e){return e&&"string"==typeof e.type&&"string"==typeof e.trigger}(t);case s.PAGE_VISIT:case s.SCROLL_EVENT:return function(e){return e&&"string"==typeof e.url&&"number"==typeof e.visitCount}(t);case s.MURMUR:return function(e){return e&&"string"==typeof e.text&&"number"==typeof e.timestamp}(t);case s.GENERATE_INVITATION:case s.CONSUME_INVITATION:case s.CHECK_INVITATION:return function(e){return e&&"string"==typeof e.code}(t);case s.INVITATION_GENERATED:return"string"==typeof t||h(t);case s.INVITATION_CONSUMED:case s.INVITATION_CHECKED:return h(t);case s.SHARED_MUTATION_RESULT:return"string"==typeof t||t&&"object"==typeof t;default:return!0}var i}(e.type,e.payload))return void console.warn(`[MessageBus] Payload non valide pour le type ${e.type}`,e.payload);for(const t of this.globalHandlers)try{await t(e)}catch(e){console.error("Error in global handler:",e)}const t=this.handlers.get(e.type);if(t)for(const s of t)try{await s(e)}catch(t){console.error(`Error in handler for ${e.type}:`,t)}}on(e,t){this.handlers.has(e)||this.handlers.set(e,new Set),this.handlers.get(e).add(t)}off(e,t){const s=this.handlers.get(e);s&&s.delete(t)}onAny(e){this.globalHandlers.add(e)}offAny(e){this.globalHandlers.delete(e)}addFilter(e){this.filters.push(e)}async send(e){const t={...e,source:this.source,timestamp:Date.now(),id:n()};try{const e=l(o(t));if("content"===this.source)await chrome.runtime.sendMessage(e);else{const t=await chrome.tabs.query({}),s=e=>e.active||e.url&&e.url.includes("symbiont"),i=t.filter(s);for(const t of i)t.id&&chrome.tabs.sendMessage(t.id,e).catch((()=>{}));chrome.runtime.sendMessage(e).catch((()=>{}))}}catch(e){console.error("Error sending message:",e)}}sendToBackground(e){this.send(e)}emit(e,t){const s=this.handlers.get(e);s&&s.forEach((s=>s({type:e,payload:t})))}handleMessage(e,t){console.log("Handling message:",e)}onMessage(e,t,s){return console.log("Received message:",e),!0}sendToFrame(e,t,s){console.log("Sending to frame:",t,s)}}class m{constructor(){this.db=null,this.DB_NAME="symbiont-db",this.DB_VERSION=3}async initialize(){return new Promise(((e,t)=>{const s=indexedDB.open(this.DB_NAME,this.DB_VERSION);s.onerror=()=>t(s.error),s.onsuccess=()=>{this.db=s.result,e()},s.onupgradeneeded=e=>{const t=e.target.result;if(!t.objectStoreNames.contains("organisms")){const e=t.createObjectStore("organisms",{keyPath:"id"});e.createIndex("generation","generation",{unique:!1}),e.createIndex("createdAt","createdAt",{unique:!1})}if(!t.objectStoreNames.contains("behaviors")){const e=t.createObjectStore("behaviors",{keyPath:"url"});e.createIndex("lastVisit","lastVisit",{unique:!1}),e.createIndex("visitCount","visitCount",{unique:!1})}if(!t.objectStoreNames.contains("mutations")){const e=t.createObjectStore("mutations",{keyPath:"id",autoIncrement:!0});e.createIndex("timestamp","timestamp",{unique:!1}),e.createIndex("type","type",{unique:!1})}if(t.objectStoreNames.contains("settings")||t.createObjectStore("settings",{keyPath:"key"}),!t.objectStoreNames.contains("invitations")){const e=t.createObjectStore("invitations",{keyPath:"code"});e.createIndex("createdAt","createdAt",{unique:!1}),e.createIndex("status","status",{unique:!1})}}}))}async getOrganism(e){if(!this.db)throw new Error("Database not initialized");return new Promise(((t,s)=>{const i=this.db.transaction(["organisms"],"readonly").objectStore("organisms");if(e){const r=i.get(e);r.onsuccess=()=>t(r.result||null),r.onerror=()=>s(r.error)}else{const e=i.openCursor();e.onsuccess=e=>{const s=e.target.result;t(s?s.value:null)},e.onerror=()=>s(e.error)}}))}async saveOrganism(e){if(!this.db)throw new Error("Database not initialized");return new Promise(((t,s)=>{const i=this.db.transaction(["organisms"],"readwrite").objectStore("organisms").put(e);i.onsuccess=()=>t(),i.onerror=()=>s(i.error)}))}async getBehavior(e){if(!this.db)throw new Error("Database not initialized");return new Promise(((t,s)=>{const i=this.db.transaction(["behaviors"],"readonly").objectStore("behaviors").get(e);i.onsuccess=()=>t(i.result||null),i.onerror=()=>s(i.error)}))}async saveBehavior(e){if(!this.db)throw new Error("Database not initialized");return new Promise(((t,s)=>{const i=this.db.transaction(["behaviors"],"readwrite").objectStore("behaviors").put(e);i.onsuccess=()=>t(),i.onerror=()=>s(i.error)}))}async addMutation(e){if(!this.db)throw new Error("Database not initialized");const t={...e,timestamp:e.timestamp||Date.now()};return new Promise(((e,s)=>{const i=this.db.transaction(["mutations"],"readwrite").objectStore("mutations").add(t);i.onsuccess=()=>e(),i.onerror=()=>s(i.error)}))}async getRecentMutations(e=10){if(!this.db)throw new Error("Database not initialized");return new Promise(((t,s)=>{const i=this.db.transaction(["mutations"],"readonly").objectStore("mutations").index("timestamp").openCursor(null,"prev"),r=[];i.onsuccess=s=>{const i=s.target.result;i&&r.length<e?(r.push(i.value),i.continue()):t(r)},i.onerror=()=>s(i.error)}))}async getSetting(e,t){if(!this.db)throw new Error("Database not initialized");return new Promise(((s,i)=>{const r=this.db.transaction(["settings"],"readonly").objectStore("settings").get(e);r.onsuccess=()=>{const e=r.result;s(e?e.value:t)},r.onerror=()=>i(r.error)}))}async setSetting(e,t){if(!this.db)throw new Error("Database not initialized");return new Promise(((s,i)=>{const r=this.db.transaction(["settings"],"readwrite").objectStore("settings").put({key:e,value:t});r.onsuccess=()=>s(),r.onerror=()=>i(r.error)}))}async addInvitation(e){if(!this.db)throw new Error("Database not initialized");return new Promise(((t,s)=>{const i=this.db.transaction(["invitations"],"readwrite").objectStore("invitations").add({...e,createdAt:e.createdAt||Date.now()});i.onsuccess=()=>t(),i.onerror=()=>s(i.error)}))}async updateInvitation(e){if(!this.db)throw new Error("Database not initialized");return new Promise(((t,s)=>{const i=this.db.transaction(["invitations"],"readwrite").objectStore("invitations").put(e);i.onsuccess=()=>t(),i.onerror=()=>s(i.error)}))}async getInvitation(e){if(!this.db)throw new Error("Database not initialized");return new Promise(((t,s)=>{const i=this.db.transaction(["invitations"],"readonly").objectStore("invitations").get(e);i.onsuccess=()=>t(i.result||null),i.onerror=()=>s(i.error)}))}async getAllInvitations(){if(!this.db)throw new Error("Database not initialized");return new Promise(((e,t)=>{const s=this.db.transaction(["invitations"],"readonly").objectStore("invitations").openCursor(),i=[];s.onsuccess=t=>{const s=t.target.result;s?(i.push(s.value),s.continue()):e(i)},s.onerror=()=>t(s.error)}))}async getBehaviorPatterns(){if(!this.db)throw new Error("Database not initialized");return new Promise(((e,t)=>{const s=this.db.transaction(["behaviors"],"readonly").objectStore("behaviors").openCursor(),i=[];s.onsuccess=t=>{const s=t.target.result;s?(i.push(s.value),s.continue()):(i.sort(((e,t)=>t.visitCount!==e.visitCount?t.visitCount-e.visitCount:t.lastVisit-e.lastVisit)),e(i))},s.onerror=()=>t(s.error)}))}async getRecentActivity(e=864e5){if(!this.db)throw new Error("Database not initialized");const t=Date.now()-e;return new Promise(((e,s)=>{const i=this.db.transaction(["behaviors"],"readonly").objectStore("behaviors").openCursor(),r=[];i.onsuccess=s=>{const i=s.target.result;if(i){const e=i.value,s=(e.interactions||[]).filter((e=>e.timestamp>=t));for(const t of s)r.push({...t,url:e.url});i.continue()}else r.sort(((e,t)=>t.timestamp-e.timestamp)),e(r)},i.onerror=()=>s(i.error)}))}async cleanup(e=30){if(!this.db)throw new Error("Database not initialized");const t=Date.now()-24*e*60*60*1e3;return new Promise(((e,s)=>{const i=this.db.transaction(["mutations"],"readwrite").objectStore("mutations").index("timestamp"),r=IDBKeyRange.upperBound(t),a=i.openCursor(r);a.onsuccess=t=>{const s=t.target.result;s?(s.delete(),s.continue()):e()},a.onerror=()=>s(a.error)}))}close(){this.db&&(this.db.close(),this.db=null)}}class g{constructor(e){this.storage=e}async generateInvitation(e){const t={code:(await a.e(221).then(a.bind(a,221))).v4().slice(0,8).toUpperCase(),donorId:e,symbolicLink:this.generateSymbolicLink(),used:!1,createdAt:Date.now()};return await this.storage.addInvitation(t),t}async consumeInvitation(e,t){const s=await this.storage.getInvitation(e);return!s||s.used?null:(s.used=!0,s.receiverId=t,s.usedAt=Date.now(),await this.storage.updateInvitation(s),s)}async isValid(e){const t=await this.storage.getInvitation(e);return!!t&&!t.used}generateSymbolicLink(){const e=["#FF00FF","#00FFFF","#FFFF00","#FF8800","#00FF88","#8800FF"];return e[Math.floor(Math.random()*e.length)]}async getAllInvitations(){return await this.storage.getAllInvitations()}}const p={loop:["Encore ce même chemin... Qu'y cherches-tu ?","La boucle se répète, intention ou habitude ?","Revenir, encore et encore. Un besoin de repère ?"],idle:["Un temps de pause... ou d'hésitation ?","Le silence aussi fait partie du voyage.","L'inactivité, prélude à une nouvelle exploration ?"],exploration:["Nouveau territoire, nouvelle perspective.","L'exploration nourrit la curiosité.","Tu t'aventures hors des sentiers battus."],routine:["Les habitudes forgent des chemins familiers.","La routine rassure, mais l'inattendu surprend.","Encore ce site, comme un rituel quotidien."],default:["Tu reviens souvent ici quand tu doutes.","Pourquoi cette boucle ?","As-tu remarqué ce schéma dans ta navigation ?","Un autre détour, ou une quête de sens ?","Ce site semble t'attirer dans les moments de réflexion.","Encore une fois, tu explores ce chemin familier.","Et si tu essayais une nouvelle direction ?","La répétition cache-t-elle une intention ?","Un murmure dans le flux de tes habitudes...","Parfois, la boucle est une porte vers l'inattendu."]},y={morning:["Un nouveau jour, une nouvelle boucle commence.","Le matin invite à la découverte.","L'aube de tes habitudes numériques."],afternoon:["L'après-midi, la routine s'installe.","Un moment propice à l'exploration ou à la répétition ?","Le soleil haut, l'esprit vagabonde."],evening:["Le soir, tu reviens à l'essentiel.","La nuit favorise les détours intérieurs.","Encore connecté, même à la tombée du jour."],weekend:["Le week-end, les chemins changent.","Un rythme différent, des envies nouvelles.","La liberté du week-end se lit dans ta navigation."]};class f{generateMurmur(e){if(function(){const e=(new Date).getDay();return 0===e||6===e}()){const e=y.weekend;if(Math.random()<.5)return e[Math.floor(Math.random()*e.length)]}else{const e=function(){const e=(new Date).getHours();return e<12?"morning":e<18?"afternoon":"evening"}();if(y[e]&&Math.random()<.4){const t=y[e];return t[Math.floor(Math.random()*t.length)]}}const t=e&&p[e]?p[e]:p.default;return t[Math.floor(Math.random()*t.length)]}}class w{static detectRepetition(e,t=3){const s={};for(const t of e)s[t.type]=(s[t.type]||0)+1;return Object.entries(s).filter((([e,s])=>s>=t)).map((([e,t])=>({type:"repetition",score:t,details:{eventType:e}})))}static detectAlternance(e,t,s,i=4){let r=0,a=null;for(const i of e)i.type!==t&&i.type!==s||i.type===a?i.type===a&&(r=1,a=i.type):(r++,a=i.type);return r>=i?[{type:"alternance",score:r,details:{typeA:t,typeB:s}}]:[]}static detectBurst(e,t=1e3,s=3){if(e.length<s)return[];let i=1,r=1;for(let s=1;s<e.length;s++)e[s].timestamp-e[s-1].timestamp<=t?(i++,r=Math.max(r,i)):i=1;return r>=s?[{type:"burst",score:r,details:{maxInterval:t}}]:[]}static detectTemporalPattern(e,t=1e3,s=.2){if(e.length<3)return[];const i=[];for(let t=1;t<e.length;t++)i.push(e[t].timestamp-e[t-1].timestamp);const r=i.reduce(((e,t)=>e+t),0)/i.length,a=i.reduce(((e,t)=>e+Math.pow(t-r,2)),0)/i.length,n=Math.sqrt(a);return r>=t&&n/r<s?[{type:"temporal",score:r,details:{std:n,count:e.length}}]:[]}}class v{static getInstance(){return this.instance||(this.instance=new v),this.instance}async setItem(e,t){try{await chrome.storage.local.set({[e]:t})}catch(e){throw console.error("Storage error:",e),e}}async getItem(e){try{return(await chrome.storage.local.get([e]))[e]||null}catch(e){return console.error("Storage retrieval error:",e),null}}async removeItem(e){try{await chrome.storage.local.remove([e])}catch(e){console.error("Storage removal error:",e)}}}class b{static get swLocalStorage(){return{getItem:e=>this.storage.getItem(e),setItem:(e,t)=>this.storage.setItem(e,t),removeItem:e=>this.storage.removeItem(e)}}static get swIndexedDB(){return globalThis.indexedDB}static get swCryptoAPI(){return{...globalThis.crypto,encryptSensitiveData:this.swCrypto.encryptSensitiveData.bind(this.swCrypto),decryptSensitiveData:this.swCrypto.decryptSensitiveData.bind(this.swCrypto)}}}b.storage=v.getInstance(),b.swCrypto=new class{constructor(){this.encryptionKey="symbiont-key-demo"}async encryptSensitiveData(e){try{const t=new TextEncoder,s=t.encode(this.encryptionKey.padEnd(32,"0").slice(0,32)),i=await crypto.subtle.importKey("raw",s,{name:"AES-GCM"},!1,["encrypt"]),r=crypto.getRandomValues(new Uint8Array(12)),a=t.encode(JSON.stringify(e)),n=await crypto.subtle.encrypt({name:"AES-GCM",iv:r},i,a),o=new Uint8Array(r.length+n.byteLength);return o.set(r,0),o.set(new Uint8Array(n),r.length),btoa(String.fromCharCode(...o))}catch(t){console.error("Encryption failed, using fallback:",t);const s=JSON.stringify(e);return btoa(unescape(encodeURIComponent(s)))}}async decryptSensitiveData(e){try{const t=Uint8Array.from(atob(e),(e=>e.charCodeAt(0))),s=t.slice(0,12),i=t.slice(12),r=(new TextEncoder).encode(this.encryptionKey.padEnd(32,"0").slice(0,32)),a=await crypto.subtle.importKey("raw",r,{name:"AES-GCM"},!1,["decrypt"]),n=await crypto.subtle.decrypt({name:"AES-GCM",iv:s},a,i),o=new TextDecoder;return JSON.parse(o.decode(n))}catch(t){console.error("Decryption failed, trying fallback:",t);try{const t=decodeURIComponent(escape(atob(e)));return JSON.parse(t)}catch(e){throw console.error("All decryption methods failed:",e),new Error("Unable to decrypt data")}}}},b.swBroadcastChannel=class{constructor(e){this.handlers=new Map,this.channelName=e,this.setupMessageListener()}setupMessageListener(){chrome.runtime.onMessage.addListener(((e,t,s)=>"CRYPTO_OPERATION"===e.type||e.channel===this.channelName&&(this.handleMessage(e.data),!0)))}serializeMessageData(e){try{return JSON.parse(JSON.stringify(e))}catch(t){return console.warn("Message serialization issue, cleaning object:",t),this.cleanObjectForSerialization(e)}}cleanObjectForSerialization(e,t=new WeakSet){if(null==e)return e;if("function"==typeof e)return"[Function]";if(e instanceof Date)return e.toISOString();if(e instanceof Error)return{name:e.name,message:e.message,stack:e.stack};if(e instanceof WebGLRenderingContext||e instanceof WebGL2RenderingContext||e instanceof HTMLElement||e instanceof WebGLProgram||e instanceof WebGLBuffer||e instanceof WebGLTexture||e&&e.$$typeof||e&&e.__reactFiber||e&&e._owner)return"[Non-serializable Object]";if("object"!=typeof e)return e;if(t.has(e))return"[Circular Reference]";if(t.add(e),Array.isArray(e))return e.map((e=>this.cleanObjectForSerialization(e,t)));const s={};for(const i in e)if(e.hasOwnProperty(i))try{s[i]=this.cleanObjectForSerialization(e[i],t)}catch(e){s[i]="[Non-serializable]"}return s}postMessage(e){const t=this.serializeMessageData(e);chrome.tabs.query({},(e=>{e.forEach((e=>{e.id&&chrome.tabs.sendMessage(e.id,{channel:this.channelName,data:t}).catch((()=>{}))}))})),this.broadcastViaStorage(t)}async broadcastViaStorage(e){const t=v.getInstance(),s=Date.now(),i=`broadcast_${this.channelName}_${s}`;await t.setItem(i,JSON.stringify({data:e,timestamp:s,channel:this.channelName})),setTimeout((async()=>{await t.removeItem(i)}),3e4)}handleMessage(e){(this.handlers.get("message")||[]).forEach((t=>{try{t({data:e})}catch(e){console.error("Message handler error:",e)}}))}set onmessage(e){this.handlers.has("message")||this.handlers.set("message",[]),this.handlers.get("message").push(e)}};const E=b.swLocalStorage,I=(b.swBroadcastChannel,b.swCryptoAPI),S=b.swIndexedDB;class M{constructor(){this.encryptionKey="symbiont-key-demo"}async encryptSensitiveData(e){if(I&&I.subtle){const t=new TextEncoder,s=t.encode(this.encryptionKey.padEnd(32,"0").slice(0,32)),i=await I.subtle.importKey("raw",s,{name:"AES-GCM"},!1,["encrypt"]),r=I.getRandomValues(new Uint8Array(12)),a=t.encode(JSON.stringify(e)),n=await I.subtle.encrypt({name:"AES-GCM",iv:r},i,a),o=new Uint8Array(r.length+n.byteLength);return o.set(r,0),o.set(new Uint8Array(n),r.length),btoa(String.fromCharCode(...o))}{const t=JSON.stringify(e);return btoa(unescape(encodeURIComponent(t)))}}async decryptSensitiveData(e){if("string"!=typeof e)throw new Error("decryptSensitiveData attend une chaîne de caractères.");if(!I||!I.subtle){const t=decodeURIComponent(escape(atob(String(e))));return JSON.parse(t)}try{const t=Uint8Array.from(atob(String(e)),(e=>e.charCodeAt(0))),s=t.slice(0,12),i=t.slice(12),r=(new TextEncoder).encode(this.encryptionKey.padEnd(32,"0").slice(0,32)),a=await I.subtle.importKey("raw",r,{name:"AES-GCM"},!1,["decrypt"]),n=await I.subtle.decrypt({name:"AES-GCM",iv:s},a,i);return JSON.parse((new TextDecoder).decode(n))}catch{const t=decodeURIComponent(escape(atob(String(e))));return JSON.parse(t)}}anonymizeForSharing(e){const t={...e};return"url"in t&&(t.url="anonymized"),"userId"in t&&"string"==typeof t.userId&&(t.userId=this.hash(t.userId)),"id"in t&&"string"==typeof t.id&&(t.id=this.hash(t.id)),t}validateDataAccess(e,t="user"){return!(!e.userId||!e.resource||"admin"===t&&"admin"!==e.role)}hash(e){let t=0;for(let s=0;s<e.length;s++)t=(t<<5)-t+e.charCodeAt(s),t|=0;return btoa(t.toString())}}class T{static setDependencies(e){this.dependencies=e}static createOrganism(e,t){if(!this.dependencies)throw new Error("OrganismFactory dependencies not set. Call setDependencies() first.");const{OrganismCore:s}=a(326);return new s(e,t,this.dependencies.createNeuralMesh)}static createNeuralMesh(){const{NeuralMesh:e}=a(194);return new e}}T.dependencies=null;class N{constructor(){this.failureCount=0,this.open=!1,this.lastFailure=0,this.failureThreshold=5,this.recoveryTimeout=3e4}isOpen(){return this.open&&Date.now()-this.lastFailure>this.recoveryTimeout&&(this.open=!1,this.failureCount=0),this.open}recordSuccess(){this.failureCount=0,this.open=!1}recordFailure(){this.failureCount++,this.lastFailure=Date.now(),this.failureCount>=this.failureThreshold&&(this.open=!0)}}class C{constructor(){this.key="symbiont_messages"}async enqueue(e){console.log("[ResilientMessageBus] enqueue",e);const t=JSON.parse(await E.getItem(this.key)||"[]");t.push(e),await E.setItem(this.key,JSON.stringify(t)),console.log("[ResilientMessageBus] enqueue OK",t.length)}async dequeue(){const e=JSON.parse(await E.getItem(this.key)||"[]"),t=e.shift();return await E.setItem(this.key,JSON.stringify(e)),console.log("[ResilientMessageBus] dequeue",t),t}async getAll(){const e=JSON.parse(await E.getItem(this.key)||"[]");return console.log("[ResilientMessageBus] getAll",e.length),e}}const A=new class{constructor(){this.memoryCache=new Map,this.persistentStorage=chrome.storage?.local,this.indexedDB=null,this.emergencyLocalStorage=E,this.indexedDBReady=this.setupMultiLayerStorage(),this.setupDataReplication(),this.setupIntegrityMonitoring()}async store(e,t,s={}){if(e.includes("symbiont_health_alert_"))console.log("[HybridStorageManager] Skipping health alert storage to prevent quota issues");else{console.log("[HybridStorageManager] store - Mémoire",e,t),this.memoryCache.set(e,t);try{await new Promise(((s,i)=>{this.persistentStorage.set({[e]:t},(()=>{chrome.runtime.lastError?chrome.runtime.lastError.message?.includes("quota")?(console.warn("[HybridStorageManager] Chrome storage quota exceeded, cleaning old data"),this.cleanOldStorageData().then((()=>{this.persistentStorage.set({[e]:t},(()=>{chrome.runtime.lastError?i(chrome.runtime.lastError):s(!0)}))})).catch(i)):i(chrome.runtime.lastError):s(!0)}))})),console.log("[HybridStorageManager] store - chrome.storage.local OK",e)}catch(t){console.warn("[HybridStorageManager] store - chrome.storage.local failed, fallback IndexedDB",e,t)}try{if(await this.indexedDBReady,!this.indexedDB)throw new Error("IndexedDB not ready");await new Promise(((s,i)=>{const r=this.indexedDB.transaction(["symbiont"],"readwrite").objectStore("symbiont").put(t,e);r.onsuccess=()=>s(!0),r.onerror=()=>i(r.error)})),console.log("[HybridStorageManager] store - IndexedDB OK",e)}catch(s){console.warn("[HybridStorageManager] store - IndexedDB failed, fallback localStorage",e,s),await this.emergencyLocalStorage.setItem(e,JSON.stringify(t)),console.log("[HybridStorageManager] store - localStorage d'urgence OK",e)}}}async retrieve(e){if(this.memoryCache.has(e))return console.log("[HybridStorageManager] retrieve - Mémoire HIT",e),this.memoryCache.get(e);try{const t=await new Promise(((t,s)=>{this.persistentStorage.get([e],(i=>{chrome.runtime.lastError?s(chrome.runtime.lastError):t(i[e])}))}));if(void 0!==t)return this.memoryCache.set(e,t),console.log("[HybridStorageManager] retrieve - chrome.storage.local OK",e),t}catch(t){console.warn("[HybridStorageManager] retrieve - chrome.storage.local failed",e,t)}try{if(await this.indexedDBReady,this.indexedDB){const t=await new Promise(((t,s)=>{const i=this.indexedDB.transaction(["symbiont"],"readonly").objectStore("symbiont").get(e);i.onsuccess=()=>t(i.result),i.onerror=()=>s(i.error)}));if(void 0!==t)return this.memoryCache.set(e,t),console.log("[HybridStorageManager] retrieve - IndexedDB OK",e),t}}catch(t){console.warn("[HybridStorageManager] retrieve - IndexedDB failed",e,t)}try{const t=await this.emergencyLocalStorage.getItem(e);if(t)return console.log("[HybridStorageManager] retrieve - localStorage d'urgence OK",e),JSON.parse(t)}catch(t){console.warn("[HybridStorageManager] retrieve - localStorage d'urgence failed",e,t)}return null}setupMultiLayerStorage(){return new Promise((e=>{let t=!1;const s=setTimeout((()=>{t||(console.warn("[HybridStorageManager] IndexedDB init timeout (5s), fallback only"),this.indexedDB=null,t=!0,e(!1))}),5e3);try{const i=S.open("symbiont-db",1);i.onupgradeneeded=e=>{const t=e.target.result;t.objectStoreNames.contains("symbiont")||t.createObjectStore("symbiont")},i.onsuccess=()=>{this.indexedDB=i.result,t||(clearTimeout(s),t=!0,console.log("[HybridStorageManager] IndexedDB ready"),e(!0))},i.onerror=()=>{this.indexedDB=null,t||(clearTimeout(s),t=!0,console.warn("[HybridStorageManager] IndexedDB failed to open"),e(!1))}}catch(i){this.indexedDB=null,t||(clearTimeout(s),t=!0,console.warn("[HybridStorageManager] IndexedDB exception",i),e(!1))}}))}async cleanOldStorageData(){try{const e=(await new Promise(((e,t)=>{this.persistentStorage.get(null,(s=>{chrome.runtime.lastError?t(chrome.runtime.lastError):e(Object.keys(s))}))}))).filter((e=>e.includes("symbiont_health_alert_")||e.includes("broadcast_")||e.includes("_temp_")));e.length>0&&(await new Promise(((t,s)=>{this.persistentStorage.remove(e,(()=>{chrome.runtime.lastError?s(chrome.runtime.lastError):t()}))})),console.log(`[HybridStorageManager] Cleaned ${e.length} old storage items`))}catch(e){console.error("[HybridStorageManager] Failed to clean old storage data:",e)}}isIndexedDBReady(){return!!this.indexedDB}async syncData(){}async syncKeyAcrossLayers(e,t){this.memoryCache.set(e,t);try{await new Promise(((s,i)=>{this.persistentStorage.set({[e]:t},(()=>{chrome.runtime.lastError?i(chrome.runtime.lastError):s(!0)}))}))}catch{}try{await this.indexedDBReady,this.indexedDB&&await new Promise(((s,i)=>{const r=this.indexedDB.transaction(["symbiont"],"readwrite").objectStore("symbiont").put(t,e);r.onsuccess=()=>s(!0),r.onerror=()=>i(r.error)}))}catch{}try{await this.emergencyLocalStorage.setItem(e,JSON.stringify(t))}catch{}}setupDataReplication(){chrome.storage&&chrome.storage.onChanged&&chrome.storage.onChanged.addListener(((e,t)=>{if("local"===t)for(const t in e){const{newValue:s}=e[t];this.syncKeyAcrossLayers(t,s),console.log("[HybridStorageManager] DataReplication - Synchronisation des couches",t)}}))}setupIntegrityMonitoring(){setInterval((async()=>{for(const e of this.memoryCache.keys())try{const t=this.memoryCache.get(e),s=await new Promise((t=>{this.persistentStorage.get([e],(s=>t(s[e])))}));let i;await this.indexedDBReady,this.indexedDB&&(i=await new Promise((t=>{const s=this.indexedDB.transaction(["symbiont"],"readonly").objectStore("symbiont").get(e);s.onsuccess=()=>t(s.result),s.onerror=()=>t(void 0)})));const r=await this.emergencyLocalStorage.getItem(e),a=[t,s,i,r?JSON.parse(r):void 0].filter((e=>void 0!==e));if(!a.every((e=>JSON.stringify(e)===JSON.stringify(a[0])))){console.warn("[HybridStorageManager] IntegrityMonitoring - Divergence détectée pour",e);const t={};for(const e of a){const s=JSON.stringify(e);t[s]=(t[s]||0)+1}const[s]=Object.entries(t).sort(((e,t)=>t[1]-e[1]))[0],i=JSON.parse(s);if(this.memoryCache.set(e,i),this.persistentStorage.set({[e]:i}),this.indexedDB){this.indexedDB.transaction(["symbiont"],"readwrite").objectStore("symbiont").put(i,e)}this.emergencyLocalStorage.setItem(e,JSON.stringify(i)),console.log("[HybridStorageManager] IntegrityMonitoring - Auto-réparation appliquée pour",e)}}catch(t){console.warn("[HybridStorageManager] IntegrityMonitoring - Erreur sur",e,t)}}),6e4)}},_=new class{constructor(){this.connectionState="offline",this.messageQueue=new C,this.failureStrategies=new Map,this.circuitBreaker=new N,this.failureQueue=[],this.isConnected=!1,this.connectionAttempts=0,this.setupFailureStrategies()}setupFailureStrategies(){this.failureStrategies.set("ORGANISM_UPDATE",{maxRetries:3,backoffStrategy:"exponential",fallbackAction:this.cacheOrganismState,criticalLevel:"high"}),this.failureStrategies.set("INTERACTION_DETECTED",{maxRetries:5,backoffStrategy:"linear",fallbackAction:this.queueForLaterSync,criticalLevel:"medium"}),this.failureStrategies.set("PAGE_ANALYSIS_COMPLETE",{maxRetries:2,backoffStrategy:"immediate",fallbackAction:this.processLocally,criticalLevel:"low"})}async send(e){if(this.circuitBreaker.isOpen())return await this.messageQueue.enqueue(e),{success:!1,queued:!0,error:"Circuit breaker open"};let t=0;const s=this.failureStrategies.get(e.type),i=s?.maxRetries||2;for(;t<=i;)try{return await this.simulateSend(e),this.circuitBreaker.recordSuccess(),{success:!0}}catch(r){if(this.circuitBreaker.recordFailure(),t++,t>i)return s&&await s.fallbackAction.call(this,e),await this.messageQueue.enqueue(e),{success:!1,queued:!0,error:r};await this.wait(this.getBackoff(s?.backoffStrategy,t))}return{success:!1,queued:!0,error:"Unknown error"}}async simulateSend(e){return{success:!0,id:`sim_${Date.now()}`}}getBackoff(e="immediate",t){return"exponential"===e?500*Math.pow(2,t):"linear"===e?500*t:0}wait(e){return new Promise((t=>setTimeout(t,e)))}async cacheOrganismState(e){console.log("[ResilientMessageBus] fallback cacheOrganismState",e),await E.setItem("symbiont_organism_cache",JSON.stringify(e))}async queueForLaterSync(e){console.log("[ResilientMessageBus] fallback queueForLaterSync",e),await this.messageQueue.enqueue(e)}async processLocally(e){console.log("[ResilientMessageBus] fallback processLocally",e),await E.setItem("symbiont_local_processing",JSON.stringify(e))}_attemptConnection(){return Promise.resolve(!0)}_processMessage(e){}};async function O(e){return await A.retrieve(e)}async function D(e,t){await A.store(e,t)}new class{constructor(e){this.metrics={cpu:[],memory:[],latency:[],errors:0},this.alertCallback=null,this.lastAlerts=new Map,this.alertCooldown=3e4,e&&(this.alertCallback=e),this.setupMonitoring()}setupMonitoring(){setInterval((()=>{this.collectMetrics(),this.checkHealth()}),3e4)}collectMetrics(){const e=.2*Math.random(),t=20*Math.random(),s=5*Math.random();this.metrics.cpu.push(e),this.metrics.memory.push(t),this.metrics.latency.push(s),this.metrics.cpu.length>20&&this.metrics.cpu.shift(),this.metrics.memory.length>20&&this.metrics.memory.shift(),this.metrics.latency.length>20&&this.metrics.latency.shift()}checkHealth(){const e=e=>e.reduce(((e,t)=>e+t),0)/(e.length||1),t=e(this.metrics.cpu),s=e(this.metrics.memory),i=e(this.metrics.latency);t>.5&&this.alert("CPU élevé : "+t.toFixed(3)),s>50&&this.alert("Mémoire élevée : "+s.toFixed(2)+"MB"),i>10&&this.alert("Latence élevée : "+i.toFixed(2)+"ms"),this.metrics.errors>5&&this.alert("Erreurs détectées : "+this.metrics.errors)}logError(){this.metrics.errors++}alert(e){const t=e.split(":")[0],s=Date.now(),i=this.lastAlerts.get(t);(!i||s-i>this.alertCooldown)&&(console.warn("🛑 [HealthMonitor]",e),this.lastAlerts.set(t,s),this.alertCallback&&this.alertCallback(e))}}((async e=>{await A.store("symbiont_health_alert_"+Date.now(),{msg:e,timestamp:Date.now()})})),(async()=>{const e={type:"ORGANISM_UPDATE",payload:{state:{id:"demo",traits:{focus:1}},timestamp:Date.now()}};(await _.send(e)).success||console.warn("Message ORGANISM_UPDATE fallback, voir la queue persistante.")})();let x=null;x=new class{constructor(){this.organism=null,this.activated=!1,this.events=[],this.collectiveThresholds=[10,50,100,250,500],this.reachedThresholds=[],this.security=new M,this.messageBus=new d("background"),this.storage=new m,this.invitationService=new g(this.storage),this.murmureService=new f,this._organismFactory=new T,O("symbiont_collective_thresholds").then((e=>{this.reachedThresholds=e?JSON.parse(e):[],this.initialize()}))}async initialize(){try{await this.storage.initialize(),this.activated="true"===await O("symbiont_activated"),this.activated?(this.organism=await this.storage.getOrganism(),this.organism||(this.organism=this.createNewOrganism(),await this.storage.saveOrganism(this.organism))):this.organism=null,this.setupMessageHandlers(),this.startPeriodicTasks(),console.log("Background service initialized")}catch(e){console.error("Failed to initialize background service:",e)}}createNewOrganism(){const e=this.generateVisualDNA();return{id:n(),generation:1,health:100,energy:100,traits:{curiosity:100*Math.random(),focus:100*Math.random(),rhythm:100*Math.random(),empathy:100*Math.random(),creativity:100*Math.random()},visualDNA:e,lastMutation:Date.now(),mutations:[],createdAt:Date.now(),dna:e,birthTime:Date.now(),socialConnections:[],memoryFragments:[]}}generateVisualDNA(){let e="";for(let t=0;t<64;t++)e+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(62*Math.random()));return e}setupMessageHandlers(){this.messageBus.on(s.PAGE_VISIT,(async e=>{const{url:t,title:s}=e.payload;let i=await this.storage.getBehavior(t)||{url:t,visitCount:0,totalTime:0,scrollDepth:0,lastVisit:Date.now(),interactions:[]};i.visitCount++,i.lastVisit=Date.now(),await this.storage.saveBehavior(i),this.events.push({type:"visit",timestamp:Date.now(),url:t}),this.updateOrganismTraits(t,s),this.analyzeContextualPatterns()})),this.messageBus.on(s.SCROLL_EVENT,(async e=>{const{url:t,scrollDepth:s}=e.payload,i=await this.storage.getBehavior(t);i&&(i.scrollDepth=Math.max(i.scrollDepth,s),await this.storage.saveBehavior(i)),this.events.push({type:"scroll",timestamp:Date.now(),url:t}),this.analyzeContextualPatterns()})),this.messageBus.on(s.INTERACTION_DETECTED,(e=>{const{type:t,timestamp:s,target:i,data:r}=e.payload;this.events.push({type:t,timestamp:s,target:i,...r}),this.analyzeContextualPatterns()})),this.messageBus.on(s.GENERATE_INVITATION,(async e=>{const{donorId:t}=e.payload,i=await this.invitationService.generateInvitation(t),r={code:i.code,createdAt:i.createdAt,consumed:i.used??!1,inviter:i.donorId,...i.usedAt&&{consumedAt:i.usedAt},...i.receiverId&&{invitee:i.receiverId}};let a=r;try{a=await this.security.encryptSensitiveData(r)}catch(e){a=r}await _.send({type:s.INVITATION_GENERATED,payload:a})})),this.messageBus.on(s.CONSUME_INVITATION,(async e=>{const{code:t,receiverId:i,role:r}=e.payload;if(!this.security.validateDataAccess({userId:i,resource:t,role:r},"user"))return void _.send({type:s.INVITATION_CONSUMED,payload:{error:"Accès refusé."}});const a=await this.invitationService.consumeInvitation(t,i);a&&(this.activated=!0,await D("symbiont_activated","true"),this.organism||(this.organism=this.createNewOrganism(),await this.storage.saveOrganism(this.organism))),_.send({type:s.INVITATION_CONSUMED,payload:a})})),this.messageBus.on(s.CHECK_INVITATION,(async e=>{const{code:t}=e.payload,i=await this.invitationService.isValid(t);_.send({type:s.INVITATION_CHECKED,payload:{code:t,valid:i}})})),this.messageBus.on(s.GET_INVITER,(async e=>{const{userId:t}=e.payload,i=(await this.invitationService.getAllInvitations()).find((e=>e.receiverId===t));_.send({type:s.INVITER_RESULT,payload:i||null})})),this.messageBus.on(s.GET_INVITEES,(async e=>{const{userId:t}=e.payload,i=(await this.invitationService.getAllInvitations()).filter((e=>e.donorId===t));_.send({type:s.INVITEES_RESULT,payload:i})})),this.messageBus.on(s.GET_INVITATION_HISTORY,(async e=>{const{userId:t}=e.payload,i=await this.invitationService.getAllInvitations(),r=[...i.filter((e=>e.receiverId===t)).map((e=>({...e,type:"reçue"}))),...i.filter((e=>e.donorId===t)).map((e=>({...e,type:"envoyée"})))];_.send({type:s.INVITATION_HISTORY_RESULT,payload:r})}));const e=new Map;this.messageBus.on(s.REQUEST_SHARED_MUTATION,(t=>{const{initiatorId:i,traits:r}=t.payload,a=Math.random().toString(36).substr(2,6).toUpperCase(),n=Date.now()+3e5;e.set(a,{initiatorId:i,traits:r,expiresAt:n}),_.send({type:s.SHARED_MUTATION_CODE,payload:{code:a,initiatorId:i,expiresAt:n}})})),this.messageBus.on(s.ACCEPT_SHARED_MUTATION,(async t=>{const{code:i,receiverId:r,traits:a,role:n}=t.payload;if(!this.security.validateDataAccess({userId:r,resource:i,role:n},"user"))return void _.send({type:s.SHARED_MUTATION_RESULT,payload:{error:"Accès refusé."}});const o=e.get(i);if(!o||o.expiresAt<Date.now())return void _.send({type:s.SHARED_MUTATION_RESULT,payload:{error:"Code expiré ou invalide."}});const c={...o.traits};for(const e of Object.keys(a))c[e]=(c[e]??0+a[e]??0)/2;e.delete(i);let h={initiatorId:o.initiatorId,receiverId:r,mergedTraits:c,timestamp:Date.now()};try{h=await this.security.encryptSensitiveData(h)}catch(e){}_.send({type:s.SHARED_MUTATION_RESULT,payload:h})}));let t=new Set,i=null;this.messageBus.on(s.COLLECTIVE_WAKE_REQUEST,(e=>{const{userId:r}=e.payload;t.add(r),i||(i=setTimeout((()=>{_.send({type:s.COLLECTIVE_WAKE_RESULT,payload:{participants:Array.from(t),triggeredAt:Date.now()}}),t.clear(),i=null}),1e4))}));const r=async e=>{const t=await O("symbiont_user_id")||"unknown",i=await this.invitationService.generateInvitation(t);await _.send({type:s.CONTEXTUAL_INVITATION,payload:{invitation:i,context:e}})},a=this.generateMutation.bind(this);this.generateMutation=()=>{const e=a();return"cognitive"===e.type&&r("mutation_cognitive"),e};const n=this.updateOrganismTraits.bind(this);this.updateOrganismTraits=async(e,t)=>{await n(e,t),this.organism&&this.organism.traits.curiosity>90&&await r("curiosity_threshold")};let o=Date.now();chrome.idle.onStateChanged.addListener((e=>{"idle"===e?o=Date.now():"active"===e&&Date.now()-o>18e5&&r("long_inactivity")}));const c=["SYMBIOSE","AWAKEN","ECHO"];this.messageBus.on(s.SECRET_CODE_ENTERED,(e=>{const{code:t}=e.payload;c.includes(t.toUpperCase())&&_.send({type:s.SECRET_RITUAL_TRIGGERED,payload:{code:t,effect:"mutation_unique",timestamp:Date.now()}})}))}async updateOrganismTraits(e,t){if(!this.organism)return;const i=e.toLowerCase(),r=t.toLowerCase();(i.includes("github")||i.includes("stackoverflow")||i.includes("codepen")||i.includes("dribbble"))&&(this.organism.traits.creativity+=.5),(i.includes("docs")||i.includes("wiki")||i.includes("tutorial")||r.includes("guide"))&&(this.organism.traits.focus+=.3),(i.includes("twitter")||i.includes("linkedin")||i.includes("facebook")||i.includes("reddit"))&&(this.organism.traits.empathy+=.4);const a=new URL(e).hostname;if(!await this.hasVisitedDomain(a)&&(this.organism.traits.curiosity+=1),!this.organism)return;const n=this.organism.traits;if(!n)return;Object.keys(n).forEach((e=>{n[e]=Math.max(0,Math.min(100,n[e]))})),await this.checkForMutations(),await this.storage.saveOrganism(this.organism);let o="default";if(await this.isLoop(e)?o="loop":await this.isIdle()?o="idle":await this.isExploration(e)?o="exploration":await this.isRoutine(e)&&(o="routine"),!this.organism)return;const c=this.organism;await _.send({type:s.ORGANISM_UPDATE,payload:{state:c,mutations:await this.storage.getRecentMutations(5)}});const h=this.murmureService.generateMurmur(o);await _.send({type:s.MURMUR,payload:{text:h,pattern:o,timestamp:Date.now()}})}async hasVisitedDomain(e){return(await chrome.tabs.query({})).some((t=>t.url&&new URL(t.url).hostname===e))}async checkForMutations(){if(!this.organism)return;const e=this.organism,t=Date.now(),s=t-(e.lastMutation??0),i=Math.min(.5,s/36e5);if(Math.random()<i){const s=this.generateMutation();await this.storage.addMutation(s),e.lastMutation=t,this.applyMutation(s)}}generateMutation(){const e=["visual","behavioral","cognitive"],t=e[Math.floor(Math.random()*e.length)];return{type:t,trigger:this.getMutationTrigger(t),magnitude:.5*Math.random()+.1,timestamp:Date.now()}}getMutationTrigger(e){const t={visual:["color_shift","pattern_change","size_fluctuation","opacity_variation"],behavioral:["navigation_speed","content_preference","interaction_pattern"],cognitive:["memory_retention","pattern_recognition","association_strength"]}[e];return t[Math.floor(Math.random()*t.length)]}applyMutation(e){if(this.organism)switch(e.type){case"visual":this.organism.visualDNA=this.mutateVisualDNA(this.organism.visualDNA??"",e.magnitude);break;case"behavioral":const t=Object.keys(this.organism.traits),s=t[Math.floor(Math.random()*t.length)];this.organism.traits[s]+=(Math.random()-.5)*e.magnitude*20;break;case"cognitive":if(!this.organism)return;const i=this.organism.traits;if(!i)return;Object.keys(i).forEach((t=>{i[t]+=(Math.random()-.5)*e.magnitude*5}))}}mutateVisualDNA(e,t){const s=Math.floor(e.length*t);let i=e.split("");for(let t=0;t<s;t++)i[Math.floor(Math.random()*e.length)]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(62*Math.random()));return i.join("")}startPeriodicTasks(){setInterval((()=>{this.organism&&(this.organism.health??0)>0&&(this.organism.health=Math.max(0,(this.organism.health??0)-.1),this.organism.energy=Math.max(0,(this.organism.energy??0)-.05))}),6e4),setInterval((async()=>{this.organism&&(await this.storage.saveOrganism(this.organism),await _.send({type:s.ORGANISM_UPDATE,payload:{state:this.organism,mutations:await this.storage.getRecentMutations(5)}}))}),3e4)}async isLoop(e){const t=await this.storage.getBehavior(e);return!!t&&t.visitCount>=3}async isIdle(){return!1}async isExploration(e){const t=await this.storage.getBehavior(e);return!!t&&t.visitCount<=1}async isRoutine(e){const t=await this.storage.getBehavior(e);return!!t&&Date.now()-t.lastVisit<1728e5}async analyzeContextualPatterns(){const e=Date.now();this.events=this.events.filter((t=>e-t.timestamp<18e5)),w.detectBurst(this.events,1e4,5).length>0?this.triggerContextualInvitation("burst_activity"):w.detectTemporalPattern(this.events,6e4,.15).length>0?this.triggerContextualInvitation("temporal_cycle"):w.detectAlternance(this.events,"visit","scroll",6).length>0?this.triggerContextualInvitation("alternance_nav_scroll"):w.detectRepetition(this.events,7).length>0?this.triggerContextualInvitation("repetition_action"):this.checkCollectiveThreshold()}async checkCollectiveThreshold(){const e=(await this.invitationService.getAllInvitations()).length;for(const t of this.collectiveThresholds)if(e>=t&&!this.reachedThresholds.includes(t)){this.reachedThresholds.push(t),await D("symbiont_collective_thresholds",JSON.stringify(this.reachedThresholds)),this.triggerContextualInvitation("collective_threshold_"+t);break}}async triggerContextualInvitation(e){const t=await O("symbiont_user_id")||"unknown",i=await this.invitationService.generateInvitation(t);await _.send({type:s.CONTEXTUAL_INVITATION,payload:{invitation:i,context:e}})}},new class{constructor(){this.peers=new Set,this.organismState=null,this.peerId="peer_"+Math.random().toString(36).substr(2,8),this.channel=new BroadcastChannel("symbiont_network"),this.channel.onmessage=e=>this.handleMessage(e.data),this.announce()}announce(){this.channel.postMessage({type:"announce",peerId:this.peerId})}joinNetwork(e){this.peers.add(e),this.channel.postMessage({type:"join",peerId:this.peerId}),console.log(`[Network] Pair rejoint : ${e}`)}leaveNetwork(e){this.peers.delete(e),this.channel.postMessage({type:"leave",peerId:this.peerId}),console.log(`[Network] Pair quitté : ${e}`)}broadcastMutation(e){this.channel.postMessage({type:"mutation",from:this.peerId,mutation:e}),console.log(`[Network] Diffusion mutation à ${this.peers.size} pairs`)}receiveMutation(e,t){console.log(`[Network] Mutation reçue de ${t}`,e)}performCommunityBackup(e){this.channel.postMessage({type:"backup",from:this.peerId,state:e}),console.log("[Network] Backup communautaire lancé")}handleMessage(e){if(e.peerId!==this.peerId)switch(e.type){case"announce":case"join":this.peers.add(e.peerId);break;case"leave":this.peers.delete(e.peerId);break;case"mutation":this.receiveMutation(e.mutation,e.from);break;case"backup":console.log(`[Network] Backup reçu de ${e.from}`,e.state)}}},new class{constructor(e){this.proposals=new Map,this.votes=new Map,this.onCollectiveMutation=null,this.peerId="peer_"+Math.random().toString(36).substr(2,8),e&&(this.onCollectiveMutation=e)}proposeMutation(e,t){this.proposals.has(e.id)||(this.proposals.set(e.id,[]),this.votes.set(e.id,new Set)),this.proposals.get(e.id).push({mutation:e,proposerId:t}),this.vote(e.id,t),console.log(`[Collective] Mutation proposée par ${t}`)}vote(e,t){this.votes.has(e)||this.votes.set(e,new Set),this.votes.get(e).add(t),console.log(`[Collective] Vote de ${t} pour mutation ${e}`)}aggregateVotes(e){return this.votes.get(e)?.size||0}triggerCollectiveMutation(e,t){const s=this.aggregateVotes(e);return s>Math.max(1,Math.floor(t/2))?(console.log(`[Collective] Mutation collective déclenchée : ${e}`),this.onCollectiveMutation&&this.onCollectiveMutation(e),!0):(console.log(`[Collective] Consensus non atteint pour ${e} (${s}/${t})`),!1)}},new class{constructor(){this.peerId="peer_"+Math.random().toString(36).substr(2,8),this.channel=new BroadcastChannel("symbiont_resilience"),this.channel.onmessage=e=>this.handleMessage(e.data)}requestCommunityBackup(e){this.channel.postMessage({type:"backup_request",from:this.peerId,organismId:e}),console.log(`[SocialResilience] Demande de backup pour ${e}`)}restoreFromCommunity(e){console.log(`[SocialResilience] Restauration depuis la communauté pour ${e}`)}detectMassiveFailure(){console.log("[SocialResilience] Détection de panne massive")}launchCommunityAlert(e){this.channel.postMessage({type:"alert",from:this.peerId,message:e}),console.log(`[SocialResilience] Alerte communautaire : ${e}`)}handleMessage(e){if(e.from!==this.peerId)switch(e.type){case"backup_request":console.log(`[SocialResilience] Backup demandé par ${e.from} pour ${e.organismId}`);break;case"alert":console.log(`[SocialResilience] Alerte reçue : ${e.message}`)}}},new class{constructor(){this.peerId="peer_"+Math.random().toString(36).substr(2,8),this.channel=new BroadcastChannel("symbiont_mystical"),this.channel.onmessage=e=>this.handleMessage(e.data)}triggerMysticalEvent(e,t){this.channel.postMessage({type:"mystical",from:this.peerId,eventId:e,payload:t}),console.log(`[MysticalEvents] Événement mystique déclenché : ${e}`)}propagateToCommunity(e,t){this.channel.postMessage({type:"mystical",from:this.peerId,eventId:e,payload:t}),console.log(`[MysticalEvents] Propagation à la communauté : ${e}`)}applySpecialEffect(e){console.log(`[MysticalEvents] Effet spécial appliqué : ${e}`)}handleMessage(e){e.from!==this.peerId&&"mystical"===e.type&&this.applySpecialEffect(`Effet mystique reçu : ${e.eventId}`)}};