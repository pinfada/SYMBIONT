export declare enum MessageType {
    PAGE_VISIT = "PAGE_VISIT",
    SCROLL_EVENT = "SCROLL_EVENT",
    ORGANISM_UPDATE = "ORGANISM_UPDATE",
    ORGANISM_MUTATE = "ORGANISM_MUTATE",
    ORGANISM_STATE_CHANGE = "ORGANISM_STATE_CHANGE",
    WEBGL_INIT = "WEBGL_INIT",
    WEBGL_ERROR = "WEBGL_ERROR",
    WEBGL_INITIALIZED = "WEBGL_INITIALIZED",
    PERFORMANCE_UPDATE = "PERFORMANCE_UPDATE",
    GENERATE_INVITATION = "GENERATE_INVITATION",
    INVITATION_GENERATED = "INVITATION_GENERATED",
    CONSUME_INVITATION = "CONSUME_INVITATION",
    INVITATION_CONSUMED = "INVITATION_CONSUMED",
    CHECK_INVITATION = "CHECK_INVITATION",
    INVITATION_CHECKED = "INVITATION_CHECKED",
    MURMUR = "MURMUR",
    GET_INVITER = "GET_INVITER",
    INVITER_RESULT = "INVITER_RESULT",
    GET_INVITEES = "GET_INVITEES",
    INVITEES_RESULT = "INVITEES_RESULT",
    GET_INVITATION_HISTORY = "GET_INVITATION_HISTORY",
    INVITATION_HISTORY_RESULT = "INVITATION_HISTORY_RESULT",
    INTERACTION_DETECTED = "INTERACTION_DETECTED",
    REQUEST_SHARED_MUTATION = "REQUEST_SHARED_MUTATION",
    SHARED_MUTATION_CODE = "SHARED_MUTATION_CODE",
    ACCEPT_SHARED_MUTATION = "ACCEPT_SHARED_MUTATION",
    SHARED_MUTATION_RESULT = "SHARED_MUTATION_RESULT",
    COLLECTIVE_WAKE_REQUEST = "COLLECTIVE_WAKE_REQUEST",
    COLLECTIVE_WAKE_RESULT = "COLLECTIVE_WAKE_RESULT",
    CONTEXTUAL_INVITATION = "CONTEXTUAL_INVITATION",
    SECRET_RITUAL_TRIGGERED = "SECRET_RITUAL_TRIGGERED",
    SECRET_CODE_ENTERED = "SECRET_CODE_ENTERED"
}
export interface Message {
    type: MessageType;
    payload?: any;
    target?: string;
    timestamp?: number;
    source?: string;
    id?: string;
}
export declare class MessageBus {
    constructor(channel?: string);
    on(type: MessageType, handler: (message: any) => void): void;
    send(message: any): void;
    subscribe(type: MessageType, handler: (message: any) => void): void;
}
export default MessageBus;
