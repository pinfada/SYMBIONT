"use strict";(self.webpackChunksymbiont=self.webpackChunksymbiont||[]).push([[951],{951:(t,e,r)=>{r.d(e,{OrganismEngine:()=>h});class i{constructor(t){this.cachedParams=null,this.mutationAccumulator=0,this.dna=t,this.interpret()}interpret(t=this.dna){const e=this.hashDNA(t,0),r=this.hashDNA(t,1),i=this.hashDNA(t,2),a={primaryColor:new Float32Array([e%256/255,(e>>8)%256/255,(e>>16)%256/255]),secondaryColor:new Float32Array([r%256/255,(r>>8)%256/255,(r>>16)%256/255]),complexity:e%100/100,symmetry:r%100/100,fluidity:i%100/100,colorVariance:(e^r)%100/100,patternDensity:(r^i)%100/100,evolutionRate:(e^i)%100/100};return this.cachedParams=a,a}hashDNA(t,e){let r=2166136261^e;for(let e=0;e<t.length;e++)r^=t.charCodeAt(e),r*=16777619;return r>>>0}getCurrentParameters(){this.cachedParams||(this.cachedParams=this.interpret());const t={...this.cachedParams};return t.fluidity+=.1*Math.sin(this.mutationAccumulator),t.complexity+=.05*Math.cos(.7*this.mutationAccumulator),t}evolveDNA(t){this.mutationAccumulator+=t,Math.abs(this.mutationAccumulator)>2*Math.PI&&(this.mutateDNA(),this.mutationAccumulator=0)}mutateDNA(){const t=this.dna.split(""),e=Math.floor(Math.random()*t.length),r=String.fromCharCode(33+Math.floor(94*Math.random()));t[e]=r,this.dna=t.join(""),this.cachedParams=null}}class a{constructor(){this.activeMutations=new Map,this.mutationId=0,this.currentState={colorShift:0,patternIntensity:0,sizeMultiplier:1,opacity:1}}apply(t){if(!["color_shift","pattern_change","size_fluctuation","opacity_variation"].includes(t.type))return;const e="mutation_"+this.mutationId++,r=t;return r.startTime=performance.now(),r.progress=0,this.activeMutations.set(e,r),e}update(t){for(const[e,r]of this.activeMutations.entries()){const i=t-(r.startTime||0),a=Math.min(i/r.duration,1);r.progress=this.applyEasing(a,r.easing||"linear"),this.updateMutationState(r),a>=1&&this.activeMutations.delete(e)}}applyEasing(t,e){switch(e){case"ease-in":return t*t;case"ease-out":return t*(2-t);case"bounce":return t<.5?4*t*t*t:1-Math.pow(-2*t+2,3)/2;default:return t}}updateMutationState(t){const e=(t.progress||0)*t.magnitude;switch(t.type){case"color_shift":this.currentState.colorShift=e;break;case"pattern_change":this.currentState.patternIntensity=e;break;case"size_fluctuation":this.currentState.sizeMultiplier=1+.5*e;break;case"opacity_variation":this.currentState.opacity=1-.3*e}}getCurrentState(){return{...this.currentState}}clearAll(){this.activeMutations.clear(),this.currentState={colorShift:0,patternIntensity:0,sizeMultiplier:1,opacity:1}}}class s{constructor(t){this.seed=t}next(){return this.seed=(9301*this.seed+49297)%233280,this.seed/233280}}class n{constructor(t,e){this.perm=new Uint8Array(512),this.params=t,this.rng=new s(e||Date.now())}generateBaseForm(t){const e=new Float32Array(18),r=Math.floor(3+12*t.complexity);for(let i=0;i<r;i++){const a=i/r*Math.PI*2,s=.3+.2*this.rng.next()*t.complexity;e[3*i]=Math.cos(a)*s,e[3*i+1]=Math.sin(a)*s,e[3*i+2]=0}return{vertices:e,normals:this.calculateNormals(e),indices:this.triangulate(r)}}applyLSystem(t){const e={F:"FF+[+F-F-F]-[-F+F+F]","+":"+","-":"-","[":"[","]":"]"};let r="F";for(let i=0;i<t;i++)r=r.split("").map((t=>e[t]||t)).join("");return this.interpretLSystem(r)}generateFractalPattern(t){const e=256,r=new Uint8Array(262144);for(let i=0;i<e;i++)for(let a=0;a<e;a++){const s=this.fractalNoise(a/e,i/e,t),n=4*(i*e+a);r[n]=255*s,r[n+1]=255*s,r[n+2]=255*s,r[n+3]=255}return{data:r,width:e,height:e}}fractalNoise(t,e,r){let i=0,a=1,s=1,n=0;for(let o=0;o<8;o++)i+=this.noise2D(t*s+r,e*s)*a,n+=a,a*=.5,s*=2;return i/n}noise2D(t,e){const r=255&Math.floor(t),i=255&Math.floor(e);t-=Math.floor(t),e-=Math.floor(e);const a=this.fade(t),s=this.fade(e),n=this.perm[r]+i,o=this.perm[r+1]+i;return this.lerp(s,this.lerp(a,this.grad(this.perm[n],t,e),this.grad(this.perm[o],t-1,e)),this.lerp(a,this.grad(this.perm[n+1],t,e-1),this.grad(this.perm[o+1],t-1,e-1)))}fade(t){return t*t*t*(t*(6*t-15)+10)}lerp(t,e,r){return e+t*(r-e)}grad(t,e,r){const i=15&t,a=i<8?e:r,s=i<4?r:12===i||14===i?e:0;return(1&i?-a:a)+(2&i?-s:s)}initPermutation(){const t=new Uint8Array(256);for(let e=0;e<256;e++)t[e]=e;for(let e=255;e>0;e--){const r=Math.floor(this.rng.next()*(e+1));[t[e],t[r]]=[t[r],t[e]]}for(let e=0;e<512;e++)this.perm[e]=t[255&e]}calculateNormals(t){return new Float32Array(t.length)}triangulate(t){return new Uint16Array(t)}interpretLSystem(t){return{vertices:new Float32Array(0),indices:new Uint16Array(0)}}}class o{constructor(t=.3){this.samples=[],this.sampleSize=30,this.lastFrameTime=0,this.gpuLimit=t}startFrame(){this.lastFrameTime=performance.now()}endFrame(){const t=performance.now()-this.lastFrameTime;this.samples.push(t),this.samples.length>this.sampleSize&&this.samples.shift()}getCurrentLoad(){if(0===this.samples.length)return 0;const t=this.samples.reduce(((t,e)=>t+e),0)/this.samples.length;return.7*Math.min(t/16.67,1)}isOverloaded(){return this.getCurrentLoad()>this.gpuLimit}getMetrics(){const t=this.samples.length>0?1e3/(this.samples.reduce(((t,e)=>t+e),0)/this.samples.length):0,e=performance.memory;return{fps:Math.round(t),gpuLoad:this.getCurrentLoad(),memoryUsage:e?e.usedJSHeapSize/1048576:0,drawCalls:1}}}class h{constructor(t,e){this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.frameCount=0,this.elapsedTime=0,this.lastGeometryComplexity=0,this.fractalTexture=null,this.canvas=t;const r=t.getContext("webgl2")||t.getContext("webgl");if(!r)throw new Error("WebGL not supported");this.gl=r,this.canvas.addEventListener("webglcontextlost",(t=>{t.preventDefault(),this.cleanup()})),this.dnaInterpreter=new i(e),this.mutationEngine=new a,this.generator=new n(this.dnaInterpreter.getCurrentParameters()),this.performanceMonitor=new o(.3),this.traits={curiosity:.5,focus:.5,rhythm:.5,empathy:.5,creativity:.5,energy:.5,harmony:.5,wisdom:.1},this.visualProperties={primaryColor:{h:200,s:80,l:60},secondaryColor:{h:340,s:60,l:40}},this.currentState={id:"engine",generation:1,health:1,energy:1,traits:this.traits,visualDNA:e,lastMutation:Date.now(),mutations:[],createdAt:Date.now(),dna:e},this.geometry=this.generator.generateBaseForm(this.dnaInterpreter.getCurrentParameters());const s=this.generator.generateFractalPattern(Date.now());this.fractalTexture=this.createGLTexture(s),this.setupGL(),this.setupShaders(),this.setupBuffers()}setupGL(){const t=this.gl;t.clearColor(0,0,0,0),t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),this.resizeCanvas(),window.addEventListener("resize",this.resizeCanvas.bind(this))}resizeCanvas(){const t=window.devicePixelRatio||1,e=this.canvas.clientWidth,r=this.canvas.clientHeight;this.canvas.width===e*t&&this.canvas.height===r*t||(this.canvas.width=e*t,this.canvas.height=r*t,this.gl.viewport(0,0,this.canvas.width,this.canvas.height))}setupBuffers(){const t=this.gl;this.vertexBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,this.geometry.vertices,t.STATIC_DRAW),this.indexBuffer=t.createBuffer(),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,this.geometry.indices,t.STATIC_DRAW)}setupShaders(){const t=this.gl,e=this.compileShader("",t.VERTEX_SHADER),r=this.compileShader("",t.FRAGMENT_SHADER);if(!e||!r)throw new Error("Shader compilation failed");if(this.program=t.createProgram(),!this.program)throw new Error("Program creation failed");if(t.attachShader(this.program,e),t.attachShader(this.program,r),t.linkProgram(this.program),!t.getProgramParameter(this.program,t.LINK_STATUS))throw new Error("Shader program linking failed: "+t.getProgramInfoLog(this.program));t.deleteShader(e),t.deleteShader(r)}compileShader(t,e){const r=this.gl,i=r.createShader(e);return i?(r.shaderSource(i,t),r.compileShader(i),r.getShaderParameter(i,r.COMPILE_STATUS)?i:(console.error("Shader compilation error:",r.getShaderInfoLog(i)),r.deleteShader(i),null)):null}render(t){if(t){this.currentState=t;const e=t.traits||this.traits,r=this.dnaInterpreter.getCurrentParameters();r.complexity=.3+.7*(e.curiosity??.5),r.patternDensity=.2+.8*(e.creativity??.5),r.colorVariance=.1+.7*(e.creativity??.5),r.symmetry=.2+.7*(e.focus??.5),r.fluidity=.2+.7*(e.energy??.5),Math.abs(r.complexity-this.lastGeometryComplexity)>.2&&(this.geometry=this.generator.generateBaseForm(r),this.setupBuffers(),this.lastGeometryComplexity=r.complexity)}this.performanceMonitor.startFrame();const e=this.gl;e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),this.program&&(e.useProgram(this.program),this.setupAttributes(),this.setupUniforms(),e.drawElements(e.TRIANGLES,this.geometry.indices.length,e.UNSIGNED_SHORT,0),this.frameCount++,this.performanceMonitor.endFrame())}setupAttributes(){const t=this.gl;if(!this.program)return;const e=t.getAttribLocation(this.program,"a_position");t.bindBuffer(t.ARRAY_BUFFER,this.vertexBuffer),t.enableVertexAttribArray(e),t.vertexAttribPointer(e,3,t.FLOAT,!1,0,0),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)}setupUniforms(){const t=this.gl;if(!this.program)return;const e=t.getUniformLocation(this.program,"u_time");t.uniform1f(e,.016*this.frameCount);const r=this.dnaInterpreter.getCurrentParameters();t.uniform3fv(t.getUniformLocation(this.program,"u_primaryColor"),r.primaryColor),t.uniform3fv(t.getUniformLocation(this.program,"u_secondaryColor"),r.secondaryColor),t.uniform1f(t.getUniformLocation(this.program,"u_complexity"),r.complexity),t.uniform1f(t.getUniformLocation(this.program,"u_symmetry"),r.symmetry),t.uniform1f(t.getUniformLocation(this.program,"u_fluidity"),r.fluidity),t.uniform1f(t.getUniformLocation(this.program,"u_colorVariance"),r.colorVariance),t.uniform1f(t.getUniformLocation(this.program,"u_patternDensity"),r.patternDensity),this.mutationEngine.update(performance.now());const i=this.mutationEngine.getCurrentState();if(t.uniform1f(t.getUniformLocation(this.program,"u_mutation"),i.colorShift||0),this.fractalTexture){const e=t.getUniformLocation(this.program,"u_fractalTex");t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.fractalTexture),t.uniform1i(e,0)}}mutate(t){["visual","behavioral","cognitive"].includes(t.type)&&this.mutationEngine.apply(t)}getPerformanceMetrics(){return this.performanceMonitor.getMetrics()}cleanup(){const t=this.gl;this.vertexBuffer&&t.deleteBuffer(this.vertexBuffer),this.indexBuffer&&t.deleteBuffer(this.indexBuffer),this.program&&t.deleteProgram(this.program),window.removeEventListener("resize",this.resizeCanvas.bind(this)),console.log("OrganismEngine resources cleaned up")}isInitialized(){return!!this.gl&&!!this.program}createGLTexture(t){const e=this.gl,r=e.createTexture();return e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,t.width,t.height,0,e.RGBA,e.UNSIGNED_BYTE,t.data),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.REPEAT),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.REPEAT),e.bindTexture(e.TEXTURE_2D,null),r}}}}]);