7ca7888a96459f2a4e06a1e884294923
"use strict";

/* istanbul ignore next */
function cov_1e8yjr3qu8() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/messaging/MessageBus.ts";
  var hash = "7904e37ca861f212ae56918866b0d6d21fb72690";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/messaging/MessageBus.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "3": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 65
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 49
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 67
        }
      },
      "6": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 60
        }
      },
      "7": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 15,
          column: 53
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 82
        }
      },
      "9": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 84
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 84
        }
      },
      "11": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 47
        }
      },
      "12": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 81
        }
      },
      "13": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "14": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 44
        }
      },
      "15": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 47
        }
      },
      "16": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "17": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 37
        }
      },
      "18": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 48
        }
      },
      "19": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 78
        }
      },
      "20": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 47
        }
      },
      "21": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 91
        }
      },
      "22": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 24
        }
      },
      "23": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "24": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 51
        }
      },
      "25": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 97
        }
      },
      "26": {
        start: {
          line: 69,
          column: 29
        },
        end: {
          line: 69,
          column: 65
        }
      },
      "27": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 28
        }
      },
      "28": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "29": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "30": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "31": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 28
        }
      },
      "32": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "33": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 33
        }
      },
      "34": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "35": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "36": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "37": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 43
        }
      },
      "38": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "39": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 19
        }
      },
      "40": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "41": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 38
        }
      },
      "42": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 113,
          column: 18
        }
      },
      "43": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "44": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 72
        }
      },
      "45": {
        start: {
          line: 115,
          column: 31
        },
        end: {
          line: 115,
          column: 70
        }
      },
      "46": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 22
        }
      },
      "47": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "48": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "49": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "50": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 75
        }
      },
      "51": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 52
        }
      },
      "52": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 19
        }
      },
      "53": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 29
        }
      },
      "54": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 34
        }
      },
      "55": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 40
        }
      },
      "56": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 26
        }
      },
      "57": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 31
        }
      },
      "58": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 32
        }
      },
      "59": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 30
        }
      },
      "60": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "61": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "62": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 45
        }
      },
      "63": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 49
        }
      },
      "64": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 25
        }
      },
      "65": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 61
        }
      },
      "66": {
        start: {
          line: 153,
          column: 44
        },
        end: {
          line: 153,
          column: 59
        }
      },
      "67": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 40
        }
      },
      "68": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "69": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 35
        }
      },
      "70": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 164,
          column: 13
        }
      },
      "71": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 42
        }
      },
      "72": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 40
        }
      },
      "73": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "74": {
        start: {
          line: 169,
          column: 28
        },
        end: {
          line: 169,
          column: 53
        }
      },
      "75": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 47
        }
      },
      "76": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "77": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 126
        }
      },
      "78": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 19
        }
      },
      "79": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "80": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "81": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 182,
          column: 39
        }
      },
      "82": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 85
        }
      },
      "83": {
        start: {
          line: 189,
          column: 25
        },
        end: {
          line: 189,
          column: 56
        }
      },
      "84": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "85": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 198,
          column: 13
        }
      },
      "86": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 197,
          column: 17
        }
      },
      "87": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 193,
          column: 43
        }
      },
      "88": {
        start: {
          line: 196,
          column: 20
        },
        end: {
          line: 196,
          column: 102
        }
      },
      "89": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "90": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 47
        }
      },
      "91": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 45
        }
      },
      "92": {
        start: {
          line: 208,
          column: 25
        },
        end: {
          line: 208,
          column: 48
        }
      },
      "93": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "94": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 37
        }
      },
      "95": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 41
        }
      },
      "96": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 44
        }
      },
      "97": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 34
        }
      },
      "98": {
        start: {
          line: 223,
          column: 28
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "99": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "100": {
        start: {
          line: 231,
          column: 37
        },
        end: {
          line: 231,
          column: 86
        }
      },
      "101": {
        start: {
          line: 233,
          column: 33
        },
        end: {
          line: 233,
          column: 67
        }
      },
      "102": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 252,
          column: 13
        }
      },
      "103": {
        start: {
          line: 235,
          column: 16
        },
        end: {
          line: 235,
          column: 63
        }
      },
      "104": {
        start: {
          line: 239,
          column: 29
        },
        end: {
          line: 239,
          column: 56
        }
      },
      "105": {
        start: {
          line: 241,
          column: 38
        },
        end: {
          line: 241,
          column: 102
        }
      },
      "106": {
        start: {
          line: 241,
          column: 47
        },
        end: {
          line: 241,
          column: 102
        }
      },
      "107": {
        start: {
          line: 242,
          column: 35
        },
        end: {
          line: 242,
          column: 61
        }
      },
      "108": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 249,
          column: 17
        }
      },
      "109": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 248,
          column: 21
        }
      },
      "110": {
        start: {
          line: 245,
          column: 24
        },
        end: {
          line: 247,
          column: 27
        }
      },
      "111": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 74
        }
      },
      "112": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 79
        }
      },
      "113": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 27
        }
      },
      "114": {
        start: {
          line: 264,
          column: 25
        },
        end: {
          line: 264,
          column: 48
        }
      },
      "115": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "116": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 266,
          column: 68
        }
      },
      "117": {
        start: {
          line: 266,
          column: 40
        },
        end: {
          line: 266,
          column: 66
        }
      },
      "118": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 71
        }
      },
      "119": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 71
        }
      },
      "120": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 20
        }
      },
      "121": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 84
        }
      },
      "122": {
        start: {
          line: 286,
          column: 0
        },
        end: {
          line: 286,
          column: 32
        }
      },
      "123": {
        start: {
          line: 287,
          column: 0
        },
        end: {
          line: 287,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "isOrganismState",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 24
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "isOrganismMutation",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 27
          }
        },
        loc: {
          start: {
            line: 17,
            column: 33
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "isBehaviorData",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 23
          }
        },
        loc: {
          start: {
            line: 20,
            column: 29
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 20
      },
      "3": {
        name: "isMurmur",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 17
          }
        },
        loc: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "isInvitationPayload",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 28
          }
        },
        loc: {
          start: {
            line: 26,
            column: 34
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "isInvitationResult",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 27
          }
        },
        loc: {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 29
      },
      "6": {
        name: "validatePayload",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 24
          }
        },
        loc: {
          start: {
            line: 32,
            column: 40
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 32
      },
      "7": {
        name: "serializeMessage",
        decl: {
          start: {
            line: 61,
            column: 9
          },
          end: {
            line: 61,
            column: 25
          }
        },
        loc: {
          start: {
            line: 61,
            column: 35
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 61
      },
      "8": {
        name: "cleanObjectForSerialization",
        decl: {
          start: {
            line: 73,
            column: 9
          },
          end: {
            line: 73,
            column: 36
          }
        },
        loc: {
          start: {
            line: 73,
            column: 64
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 73
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 115,
            column: 23
          },
          end: {
            line: 115,
            column: 24
          }
        },
        loc: {
          start: {
            line: 115,
            column: 31
          },
          end: {
            line: 115,
            column: 70
          }
        },
        line: 115
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 133,
            column: 5
          }
        },
        loc: {
          start: {
            line: 133,
            column: 24
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 133
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 21
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 142
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 144,
            column: 45
          },
          end: {
            line: 144,
            column: 46
          }
        },
        loc: {
          start: {
            line: 144,
            column: 80
          },
          end: {
            line: 150,
            column: 9
          }
        },
        line: 144
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 34
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 152
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 153,
            column: 34
          },
          end: {
            line: 153,
            column: 35
          }
        },
        loc: {
          start: {
            line: 153,
            column: 44
          },
          end: {
            line: 153,
            column: 59
          }
        },
        line: 153
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 34
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 155
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        loc: {
          start: {
            line: 167,
            column: 25
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 167
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        loc: {
          start: {
            line: 173,
            column: 34
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 173
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 201,
            column: 22
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 201
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 23
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 207
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 19
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 213
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        loc: {
          start: {
            line: 216,
            column: 20
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 216
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        loc: {
          start: {
            line: 219,
            column: 22
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 219
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 24
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 222
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 241,
            column: 38
          },
          end: {
            line: 241,
            column: 39
          }
        },
        loc: {
          start: {
            line: 241,
            column: 47
          },
          end: {
            line: 241,
            column: 102
          }
        },
        line: 241
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 245,
            column: 76
          },
          end: {
            line: 245,
            column: 77
          }
        },
        loc: {
          start: {
            line: 245,
            column: 82
          },
          end: {
            line: 247,
            column: 25
          }
        },
        line: 245
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 251,
            column: 63
          },
          end: {
            line: 251,
            column: 64
          }
        },
        loc: {
          start: {
            line: 251,
            column: 69
          },
          end: {
            line: 251,
            column: 72
          }
        },
        line: 251
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 30
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 259
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        loc: {
          start: {
            line: 262,
            column: 24
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 262
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 266,
            column: 29
          },
          end: {
            line: 266,
            column: 30
          }
        },
        loc: {
          start: {
            line: 266,
            column: 40
          },
          end: {
            line: 266,
            column: 66
          }
        },
        line: 266
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        loc: {
          start: {
            line: 270,
            column: 40
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 270
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 5
          }
        },
        loc: {
          start: {
            line: 275,
            column: 45
          },
          end: {
            line: 279,
            column: 5
          }
        },
        line: 275
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 281,
            column: 4
          },
          end: {
            line: 281,
            column: 5
          }
        },
        loc: {
          start: {
            line: 281,
            column: 53
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 281
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 11
          },
          end: {
            line: 15,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 11
          },
          end: {
            line: 10,
            column: 14
          }
        }, {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 11,
            column: 34
          }
        }, {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 42
          }
        }, {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 13,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 15,
            column: 18
          }
        }, {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 15,
            column: 52
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 14
          }
        }, {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 46
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 18,
            column: 81
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 11
          },
          end: {
            line: 21,
            column: 14
          }
        }, {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 45
          }
        }, {
          start: {
            line: 21,
            column: 49
          },
          end: {
            line: 21,
            column: 83
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 14
          }
        }, {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 46
          }
        }, {
          start: {
            line: 24,
            column: 50
          },
          end: {
            line: 24,
            column: 83
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 14
          }
        }, {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 46
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 30,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 30,
            column: 14
          }
        }, {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 46
          }
        }, {
          start: {
            line: 30,
            column: 50
          },
          end: {
            line: 30,
            column: 80
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 35,
            column: 44
          }
        }, {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 37,
            column: 47
          }
        }, {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 49
          }
        }, {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 40,
            column: 43
          }
        }, {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 42,
            column: 37
          }
        }, {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 58
          }
        }, {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 57
          }
        }, {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 46,
            column: 48
          }
        }, {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 48,
            column: 78
          }
        }, {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 58
          }
        }, {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 51,
            column: 47
          }
        }, {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 91
          }
        }, {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 24
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 48,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 48,
            column: 46
          }
        }, {
          start: {
            line: 48,
            column: 50
          },
          end: {
            line: 48,
            column: 77
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 54,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 54,
            column: 46
          }
        }, {
          start: {
            line: 54,
            column: 51
          },
          end: {
            line: 54,
            column: 58
          }
        }, {
          start: {
            line: 54,
            column: 62
          },
          end: {
            line: 54,
            column: 89
          }
        }],
        line: 54
      },
      "9": {
        loc: {
          start: {
            line: 73,
            column: 42
          },
          end: {
            line: 73,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 73,
            column: 49
          },
          end: {
            line: 73,
            column: 62
          }
        }],
        line: 73
      },
      "10": {
        loc: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "11": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 74,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 74,
            column: 20
          }
        }, {
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 74,
            column: 41
          }
        }],
        line: 74
      },
      "12": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "13": {
        loc: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "14": {
        loc: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "15": {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "16": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 102,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 44
          }
        }, {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 92,
            column: 45
          }
        }, {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 93,
            column: 34
          }
        }, {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 94,
            column: 40
          }
        }, {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 47
          }
        }, {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 96,
            column: 35
          }
        }, {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 97,
            column: 34
          }
        }, {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 35
          }
        }, {
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 99,
            column: 12
          }
        }, {
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 99,
            column: 28
          }
        }, {
          start: {
            line: 100,
            column: 9
          },
          end: {
            line: 100,
            column: 12
          }
        }, {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 32
          }
        }, {
          start: {
            line: 101,
            column: 9
          },
          end: {
            line: 101,
            column: 12
          }
        }, {
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 101,
            column: 26
          }
        }, {
          start: {
            line: 102,
            column: 9
          },
          end: {
            line: 102,
            column: 12
          }
        }, {
          start: {
            line: 102,
            column: 16
          },
          end: {
            line: 102,
            column: 39
          }
        }, {
          start: {
            line: 102,
            column: 43
          },
          end: {
            line: 102,
            column: 58
          }
        }, {
          start: {
            line: 102,
            column: 62
          },
          end: {
            line: 102,
            column: 82
          }
        }, {
          start: {
            line: 102,
            column: 86
          },
          end: {
            line: 102,
            column: 124
          }
        }],
        line: 91
      },
      "17": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "18": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "19": {
        loc: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "20": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "21": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "22": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "23": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "24": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "25": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "26": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "27": {
        loc: {
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        }, {
          start: {
            line: 237,
            column: 17
          },
          end: {
            line: 252,
            column: 13
          }
        }],
        line: 234
      },
      "28": {
        loc: {
          start: {
            line: 241,
            column: 47
          },
          end: {
            line: 241,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 47
          },
          end: {
            line: 241,
            column: 57
          }
        }, {
          start: {
            line: 241,
            column: 62
          },
          end: {
            line: 241,
            column: 69
          }
        }, {
          start: {
            line: 241,
            column: 73
          },
          end: {
            line: 241,
            column: 101
          }
        }],
        line: 241
      },
      "29": {
        loc: {
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 248,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 248,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "30": {
        loc: {
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0, 0],
      "1": [0, 0, 0],
      "2": [0, 0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/messaging/MessageBus.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/messaging/MessageBus.ts"],
      sourcesContent: ["import { Message, MessageType } from '../../shared/messaging/MessageBus';\r\nimport { OrganismState, OrganismMutation } from '../../shared/types/organism';\r\nimport { InvitationPayload, InvitationResult } from '../../shared/types/invitation';\r\nimport { Murmur } from '../../shared/types/murmur';\r\nimport { generateUUID } from '../../shared/utils/uuid';\r\nimport { sanitizeMessage } from '../../shared/utils/serialization';\r\nimport { SecureLogger } from '@shared/utils/secureLogger';\n\r\ntype MessageHandler<T extends Message = Message> = (message: T) => void | Promise<void>;\r\ntype MessageFilter = (message: Message) => boolean;\r\n\r\nfunction isOrganismState(obj: any): obj is OrganismState {\r\n  return obj &&\r\n    typeof obj.id === 'string' &&\r\n    typeof obj.generation === 'number' &&\r\n    typeof obj.health === 'number' &&\r\n    typeof obj.energy === 'number' &&\r\n    obj.traits && typeof obj.traits === 'object';\r\n}\r\n\r\nfunction isOrganismMutation(obj: any): obj is OrganismMutation {\r\n  return obj && typeof obj.type === 'string' && typeof obj.trigger === 'string';\r\n}\r\n\r\nfunction isBehaviorData(obj: any): boolean {\r\n  return obj && typeof obj.url === 'string' && typeof obj.visitCount === 'number';\r\n}\r\n\r\nfunction isMurmur(obj: any): obj is Murmur {\r\n  return obj && typeof obj.text === 'string' && typeof obj.timestamp === 'number';\r\n}\r\n\r\nfunction isInvitationPayload(obj: any): obj is InvitationPayload {\r\n  return obj && typeof obj.code === 'string';\r\n}\r\n\r\nfunction isInvitationResult(obj: any): obj is InvitationResult {\r\n  return obj && typeof obj.code === 'string' && typeof obj.status === 'string';\r\n}\r\n\r\nfunction validatePayload(type: MessageType, payload: any): boolean {\r\n  switch (type) {\r\n    case MessageType.ORGANISM_UPDATE:\r\n      return isOrganismState(payload);\r\n    case MessageType.ORGANISM_MUTATE:\r\n      return isOrganismMutation(payload);\r\n    case MessageType.PAGE_VISIT:\r\n    case MessageType.SCROLL_EVENT:\r\n      return isBehaviorData(payload);\r\n    case MessageType.MURMUR:\r\n      return isMurmur(payload);\r\n    case MessageType.GENERATE_INVITATION:\r\n    case MessageType.CONSUME_INVITATION:\r\n    case MessageType.CHECK_INVITATION:\r\n      return isInvitationPayload(payload);\r\n    case MessageType.INVITATION_GENERATED:\r\n      return typeof payload === 'string' || isInvitationResult(payload);\r\n    case MessageType.INVITATION_CONSUMED:\r\n    case MessageType.INVITATION_CHECKED:\r\n      return isInvitationResult(payload);\r\n    case MessageType.SHARED_MUTATION_RESULT:\r\n      // Accepte un string (chiffr\xE9) ou un objet (r\xE9sultat de mutation)\r\n      return typeof payload === 'string' || (payload && typeof payload === 'object');\r\n    // Ajouter d'autres cas selon les besoins\r\n    default:\r\n      return true; // Par d\xE9faut, on accepte (\xE0 affiner selon les besoins)\r\n  }\r\n}\r\n\r\n// Fonction pour nettoyer les messages avant s\xE9rialisation\r\nfunction serializeMessage(message: any): any {\r\n  try {\r\n    // Test de s\xE9rialisation avec JSON.parse/stringify\r\n    return JSON.parse(JSON.stringify(message));\r\n  } catch (error) {\r\n    SecureLogger.warn('Message serialization issue, cleaning object:', error);\r\n    \r\n    // Nettoyage manuel pour les cas probl\xE9matiques\r\n    const cleanMessage = cleanObjectForSerialization(message);\r\n    return cleanMessage;\r\n  }\r\n}\r\n\r\nfunction cleanObjectForSerialization(obj: any, seen = new WeakSet()): any {\r\n  if (obj === null || obj === undefined) {\r\n    return obj;\r\n  }\r\n  \r\n  if (typeof obj === 'function') {\r\n    return '[Function]'; // Remplace les fonctions par une string\r\n  }\r\n  \r\n  if (obj instanceof Date) {\r\n    return obj.toISOString(); // Convertit les dates en ISO string\r\n  }\r\n  \r\n  if (obj instanceof Error) {\r\n    return {\r\n      name: obj.name,\r\n      message: obj.message,\r\n      stack: obj.stack\r\n    };\r\n  }\r\n\r\n  // Objets WebGL, DOM, React non-s\xE9rialisables\r\n  if (obj instanceof WebGLRenderingContext || \r\n      obj instanceof WebGL2RenderingContext ||\r\n      obj instanceof HTMLElement ||\r\n      obj instanceof HTMLCanvasElement ||\r\n      obj instanceof CanvasRenderingContext2D ||\r\n      obj instanceof WebGLProgram ||\r\n      obj instanceof WebGLBuffer ||\r\n      obj instanceof WebGLTexture ||\r\n      (obj && obj.$$typeof) || // React elements\r\n      (obj && obj.__reactFiber) || // React fiber\r\n      (obj && obj._owner) || // React internal\r\n      (obj && typeof obj === 'object' && obj.constructor && obj.constructor.name && obj.constructor.name.includes('Fiber')) // React Fiber variants\r\n  ) {\r\n    return '[Non-serializable Object]';\r\n  }\r\n  \r\n  if (typeof obj !== 'object') {\r\n    return obj; // Primitives sont OK\r\n  }\r\n  \r\n  // V\xE9rification des r\xE9f\xE9rences circulaires AVANT la r\xE9cursion\r\n  if (seen.has(obj)) {\r\n    return '[Circular Reference]';\r\n  }\r\n  seen.add(obj);\r\n  \r\n  if (Array.isArray(obj)) {\r\n    return obj.map(item => cleanObjectForSerialization(item, seen));\r\n  }\r\n  \r\n  // Pour les objets, on nettoie r\xE9cursivement\r\n  const cleaned: any = {};\r\n  \r\n  for (const key in obj) {\r\n    if (obj.hasOwnProperty(key)) {\r\n      try {\r\n        cleaned[key] = cleanObjectForSerialization(obj[key], seen);\r\n      } catch (error) {\r\n        // Supprime les logs verbeux pour \xE9viter le spam\r\n        cleaned[key] = '[Non-serializable]';\r\n      }\r\n    }\r\n  }\r\n  \r\n  return cleaned;\r\n}\r\n\r\nexport class MessageBus {\r\n  private handlers: Map<MessageType, Set<MessageHandler>> = new Map();\r\n  private globalHandlers: Set<MessageHandler> = new Set();\r\n  private filters: MessageFilter[] = [];\r\n  private messageQueue: Message[] = [];\r\n  private processing = false;\r\n\r\n  constructor(private readonly source: 'background' | 'content' | 'popup') {\r\n    this.setupListeners();\r\n  }\r\n\r\n  private setupListeners(): void {\r\n    // @ts-expect-error Param\xE8tre r\xE9serv\xE9 pour usage futur\r\n    chrome.runtime.onMessage.addListener((message: Message, sender, sendResponse) => {\r\n      if (this.shouldProcessMessage(message)) {\r\n        this.enqueueMessage(message);\r\n        sendResponse({ received: true });\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  private shouldProcessMessage(message: Message): boolean {\r\n    return this.filters.every(filter => filter(message));\r\n  }\r\n\r\n  private async enqueueMessage(message: Message): Promise<void> {\r\n    this.messageQueue.push(message);\r\n    if (!this.processing) {\r\n      this.processing = true;\r\n      try {\r\n        await this.processQueue();\r\n      } finally {\r\n        this.processing = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async processQueue(): Promise<void> {\r\n    while (this.messageQueue.length > 0) {\r\n      const message = this.messageQueue.shift()!;\r\n      await this.processMessage(message);\r\n    }\r\n  }\r\n\r\n  private async processMessage(message: Message): Promise<void> {\r\n    // --- Validation stricte du payload ---\r\n    if (!validatePayload(message.type, message.payload)) {\r\n      SecureLogger.warn(`[MessageBus] Payload non valide pour le type ${message.type}`, message.payload);\r\n      return;\r\n    }\r\n\r\n    // Global handlers\r\n    for (const handler of this.globalHandlers) {\r\n      try {\r\n        await handler(message);\r\n      } catch (error) {\r\n        SecureLogger.error(`Error in global handler:`, error);\r\n      }\r\n    }\r\n\r\n    // Type-specific handlers\r\n    const handlers = this.handlers.get(message.type);\r\n    if (handlers) {\r\n      for (const handler of handlers) {\r\n        try {\r\n          await handler(message);\r\n        } catch (error) {\r\n          SecureLogger.error(`Error in handler for ${message.type}:`, error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public on<T extends Message>(type: T['type'], handler: MessageHandler<T>): void {\r\n    if (!this.handlers.has(type)) {\r\n      this.handlers.set(type, new Set());\r\n    }\r\n    this.handlers.get(type)!.add(handler as MessageHandler);\r\n  }\r\n\r\n  public off<T extends Message>(type: T['type'], handler: MessageHandler<T>): void {\r\n    const handlers = this.handlers.get(type);\r\n    if (handlers) {\r\n      handlers.delete(handler as MessageHandler);\r\n    }\r\n  }\r\n\r\n  public onAny(handler: MessageHandler): void {\r\n    this.globalHandlers.add(handler);\r\n  }\r\n\r\n  public offAny(handler: MessageHandler): void {\r\n    this.globalHandlers.delete(handler);\r\n  }\r\n\r\n  public addFilter(filter: MessageFilter): void {\r\n    this.filters.push(filter);\r\n  }\r\n\r\n  public async send(message: Omit<Message, 'source' | 'timestamp' | 'id'>): Promise<void> {\r\n    const fullMessage: Message = {\r\n      ...message,\r\n      source: this.source,\r\n      timestamp: Date.now(),\r\n      id: generateUUID(),\r\n    } as Message;\r\n\r\n    try {\r\n      // Sanitize le message d'abord pour \xE9viter les objets probl\xE9matiques\r\n      const sanitizedMessage = sanitizeMessage(fullMessage);\r\n      // Nettoyer le message avant envoi pour \xE9viter les erreurs de s\xE9rialisation\r\n      const cleanMessage = serializeMessage(sanitizedMessage);\r\n      \r\n      if (this.source === 'content') {\r\n        await chrome.runtime.sendMessage(cleanMessage);\r\n      } else {\r\n        // Send to all tabs for content scripts\r\n        const tabs = await chrome.tabs.query({});\r\n        // Routage intelligent : on ne cible que les tabs actifs ou pertinents\r\n        const isRelevantTab = (tab: any) => tab.active || (tab.url && tab.url.includes('symbiont'));\r\n        const activeTabs = tabs.filter(isRelevantTab);\r\n        for (const tab of activeTabs) {\r\n          if (tab.id) {\r\n            chrome.tabs.sendMessage(tab.id, cleanMessage).catch(() => {\r\n              // Ignore errors for inactive tabs\r\n            });\r\n          }\r\n        }\r\n        // Also send to runtime for popup/background\r\n        chrome.runtime.sendMessage(cleanMessage).catch(() => {});\r\n      }\r\n    } catch (error) {\r\n      SecureLogger.error('Error sending message:', error);\r\n    }\r\n  }\r\n\r\n  // Ajout pour compatibilit\xE9 content script\r\n  public sendToBackground(message: any): void {\r\n    this.send(message);\r\n  }\r\n\r\n  public emit(type: any, payload: any): void {\r\n    // Appel direct des handlers si besoin (mock minimal)\r\n    const handlers = this.handlers.get(type as MessageType);\r\n    if (handlers) {\r\n      handlers.forEach(handler => handler({ type, payload }));\r\n    }\r\n  }\r\n\r\n  // @ts-expect-error Variables r\xE9serv\xE9es pour usage futur\r\n  private handleMessage(message: any, targetFrame: string): void {\r\n    // Handle cross-frame messages\r\n    SecureLogger.info('Handling message:', message);\r\n  }\r\n\r\n  // @ts-expect-error Param\xE8tre r\xE9serv\xE9 pour usage futur\r\n  private onMessage(message: any, sender: chrome.runtime.MessageSender, sendResponse: (response?: any) => void): boolean {\r\n    // Handle incoming message\r\n    SecureLogger.info('Received message:', message);\r\n    return true;\r\n  }\r\n\r\n  // @ts-expect-error Variables r\xE9serv\xE9es pour usage futur\r\n  private sendToFrame(handleMessage: (msg: any) => any, targetFrame: MessageTarget, payload: any): void {\r\n    // Send message to frame\r\n    SecureLogger.info('Sending to frame:', targetFrame, payload);\r\n  }\r\n}\r\n\r\nexport default MessageBus;\r\nexport { validatePayload };"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7904e37ca861f212ae56918866b0d6d21fb72690"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1e8yjr3qu8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1e8yjr3qu8();
cov_1e8yjr3qu8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1e8yjr3qu8().s[1]++;
exports.MessageBus = void 0;
/* istanbul ignore next */
cov_1e8yjr3qu8().s[2]++;
exports.validatePayload = validatePayload;
const MessageBus_1 =
/* istanbul ignore next */
(cov_1e8yjr3qu8().s[3]++, require("../../shared/messaging/MessageBus"));
const uuid_1 =
/* istanbul ignore next */
(cov_1e8yjr3qu8().s[4]++, require("../../shared/utils/uuid"));
const serialization_1 =
/* istanbul ignore next */
(cov_1e8yjr3qu8().s[5]++, require("../../shared/utils/serialization"));
const secureLogger_1 =
/* istanbul ignore next */
(cov_1e8yjr3qu8().s[6]++, require("@shared/utils/secureLogger"));
function isOrganismState(obj) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[0]++;
  cov_1e8yjr3qu8().s[7]++;
  return /* istanbul ignore next */(cov_1e8yjr3qu8().b[0][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[0][1]++, typeof obj.id === 'string') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[0][2]++, typeof obj.generation === 'number') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[0][3]++, typeof obj.health === 'number') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[0][4]++, typeof obj.energy === 'number') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[0][5]++, obj.traits) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[0][6]++, typeof obj.traits === 'object');
}
function isOrganismMutation(obj) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[1]++;
  cov_1e8yjr3qu8().s[8]++;
  return /* istanbul ignore next */(cov_1e8yjr3qu8().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[1][1]++, typeof obj.type === 'string') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[1][2]++, typeof obj.trigger === 'string');
}
function isBehaviorData(obj) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[2]++;
  cov_1e8yjr3qu8().s[9]++;
  return /* istanbul ignore next */(cov_1e8yjr3qu8().b[2][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[2][1]++, typeof obj.url === 'string') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[2][2]++, typeof obj.visitCount === 'number');
}
function isMurmur(obj) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[3]++;
  cov_1e8yjr3qu8().s[10]++;
  return /* istanbul ignore next */(cov_1e8yjr3qu8().b[3][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[3][1]++, typeof obj.text === 'string') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[3][2]++, typeof obj.timestamp === 'number');
}
function isInvitationPayload(obj) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[4]++;
  cov_1e8yjr3qu8().s[11]++;
  return /* istanbul ignore next */(cov_1e8yjr3qu8().b[4][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[4][1]++, typeof obj.code === 'string');
}
function isInvitationResult(obj) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[5]++;
  cov_1e8yjr3qu8().s[12]++;
  return /* istanbul ignore next */(cov_1e8yjr3qu8().b[5][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[5][1]++, typeof obj.code === 'string') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[5][2]++, typeof obj.status === 'string');
}
function validatePayload(type, payload) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[6]++;
  cov_1e8yjr3qu8().s[13]++;
  switch (type) {
    case MessageBus_1.MessageType.ORGANISM_UPDATE:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][0]++;
      cov_1e8yjr3qu8().s[14]++;
      return isOrganismState(payload);
    case MessageBus_1.MessageType.ORGANISM_MUTATE:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][1]++;
      cov_1e8yjr3qu8().s[15]++;
      return isOrganismMutation(payload);
    case MessageBus_1.MessageType.PAGE_VISIT:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][2]++;
    case MessageBus_1.MessageType.SCROLL_EVENT:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][3]++;
      cov_1e8yjr3qu8().s[16]++;
      return isBehaviorData(payload);
    case MessageBus_1.MessageType.MURMUR:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][4]++;
      cov_1e8yjr3qu8().s[17]++;
      return isMurmur(payload);
    case MessageBus_1.MessageType.GENERATE_INVITATION:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][5]++;
    case MessageBus_1.MessageType.CONSUME_INVITATION:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][6]++;
    case MessageBus_1.MessageType.CHECK_INVITATION:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][7]++;
      cov_1e8yjr3qu8().s[18]++;
      return isInvitationPayload(payload);
    case MessageBus_1.MessageType.INVITATION_GENERATED:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][8]++;
      cov_1e8yjr3qu8().s[19]++;
      return /* istanbul ignore next */(cov_1e8yjr3qu8().b[7][0]++, typeof payload === 'string') ||
      /* istanbul ignore next */
      (cov_1e8yjr3qu8().b[7][1]++, isInvitationResult(payload));
    case MessageBus_1.MessageType.INVITATION_CONSUMED:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][9]++;
    case MessageBus_1.MessageType.INVITATION_CHECKED:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][10]++;
      cov_1e8yjr3qu8().s[20]++;
      return isInvitationResult(payload);
    case MessageBus_1.MessageType.SHARED_MUTATION_RESULT:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][11]++;
      cov_1e8yjr3qu8().s[21]++;
      // Accepte un string (chiffré) ou un objet (résultat de mutation)
      return /* istanbul ignore next */(cov_1e8yjr3qu8().b[8][0]++, typeof payload === 'string') ||
      /* istanbul ignore next */
      (cov_1e8yjr3qu8().b[8][1]++, payload) &&
      /* istanbul ignore next */
      (cov_1e8yjr3qu8().b[8][2]++, typeof payload === 'object');
    // Ajouter d'autres cas selon les besoins
    default:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][12]++;
      cov_1e8yjr3qu8().s[22]++;
      return true;
    // Par défaut, on accepte (à affiner selon les besoins)
  }
}
// Fonction pour nettoyer les messages avant sérialisation
function serializeMessage(message) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[7]++;
  cov_1e8yjr3qu8().s[23]++;
  try {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[24]++;
    // Test de sérialisation avec JSON.parse/stringify
    return JSON.parse(JSON.stringify(message));
  } catch (error) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[25]++;
    secureLogger_1.SecureLogger.warn('Message serialization issue, cleaning object:', error);
    // Nettoyage manuel pour les cas problématiques
    const cleanMessage =
    /* istanbul ignore next */
    (cov_1e8yjr3qu8().s[26]++, cleanObjectForSerialization(message));
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[27]++;
    return cleanMessage;
  }
}
function cleanObjectForSerialization(obj, seen =
/* istanbul ignore next */
(cov_1e8yjr3qu8().b[9][0]++, new WeakSet())) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[8]++;
  cov_1e8yjr3qu8().s[28]++;
  if (
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[11][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[11][1]++, obj === undefined)) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[10][0]++;
    cov_1e8yjr3qu8().s[29]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[10][1]++;
  }
  cov_1e8yjr3qu8().s[30]++;
  if (typeof obj === 'function') {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[12][0]++;
    cov_1e8yjr3qu8().s[31]++;
    return '[Function]'; // Remplace les fonctions par une string
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[12][1]++;
  }
  cov_1e8yjr3qu8().s[32]++;
  if (obj instanceof Date) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[13][0]++;
    cov_1e8yjr3qu8().s[33]++;
    return obj.toISOString(); // Convertit les dates en ISO string
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[13][1]++;
  }
  cov_1e8yjr3qu8().s[34]++;
  if (obj instanceof Error) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[14][0]++;
    cov_1e8yjr3qu8().s[35]++;
    return {
      name: obj.name,
      message: obj.message,
      stack: obj.stack
    };
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[14][1]++;
  }
  // Objets WebGL, DOM, React non-sérialisables
  cov_1e8yjr3qu8().s[36]++;
  if (
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][0]++, obj instanceof WebGLRenderingContext) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][1]++, obj instanceof WebGL2RenderingContext) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][2]++, obj instanceof HTMLElement) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][3]++, obj instanceof HTMLCanvasElement) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][4]++, obj instanceof CanvasRenderingContext2D) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][5]++, obj instanceof WebGLProgram) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][6]++, obj instanceof WebGLBuffer) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][7]++, obj instanceof WebGLTexture) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][8]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][9]++, obj.$$typeof) ||
  // React elements
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][10]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][11]++, obj.__reactFiber) ||
  // React fiber
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][12]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][13]++, obj._owner) ||
  // React internal
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][14]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][15]++, typeof obj === 'object') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][16]++, obj.constructor) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][17]++, obj.constructor.name) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][18]++, obj.constructor.name.includes('Fiber')) // React Fiber variants
  ) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[15][0]++;
    cov_1e8yjr3qu8().s[37]++;
    return '[Non-serializable Object]';
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[15][1]++;
  }
  cov_1e8yjr3qu8().s[38]++;
  if (typeof obj !== 'object') {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[17][0]++;
    cov_1e8yjr3qu8().s[39]++;
    return obj; // Primitives sont OK
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[17][1]++;
  }
  // Vérification des références circulaires AVANT la récursion
  cov_1e8yjr3qu8().s[40]++;
  if (seen.has(obj)) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[18][0]++;
    cov_1e8yjr3qu8().s[41]++;
    return '[Circular Reference]';
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[18][1]++;
  }
  cov_1e8yjr3qu8().s[42]++;
  seen.add(obj);
  /* istanbul ignore next */
  cov_1e8yjr3qu8().s[43]++;
  if (Array.isArray(obj)) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[19][0]++;
    cov_1e8yjr3qu8().s[44]++;
    return obj.map(item => {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().f[9]++;
      cov_1e8yjr3qu8().s[45]++;
      return cleanObjectForSerialization(item, seen);
    });
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[19][1]++;
  }
  // Pour les objets, on nettoie récursivement
  const cleaned =
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().s[46]++, {});
  /* istanbul ignore next */
  cov_1e8yjr3qu8().s[47]++;
  for (const key in obj) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[48]++;
    if (obj.hasOwnProperty(key)) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[20][0]++;
      cov_1e8yjr3qu8().s[49]++;
      try {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[50]++;
        cleaned[key] = cleanObjectForSerialization(obj[key], seen);
      } catch (error) {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[51]++;
        // Supprime les logs verbeux pour éviter le spam
        cleaned[key] = '[Non-serializable]';
      }
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[20][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1e8yjr3qu8().s[52]++;
  return cleaned;
}
class MessageBus {
  constructor(source) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[10]++;
    cov_1e8yjr3qu8().s[53]++;
    this.source = source;
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[54]++;
    this.handlers = new Map();
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[55]++;
    this.globalHandlers = new Set();
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[56]++;
    this.filters = [];
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[57]++;
    this.messageQueue = [];
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[58]++;
    this.processing = false;
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[59]++;
    this.setupListeners();
  }
  setupListeners() {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[11]++;
    cov_1e8yjr3qu8().s[60]++;
    // @ts-expect-error Paramètre réservé pour usage futur
    chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().f[12]++;
      cov_1e8yjr3qu8().s[61]++;
      if (this.shouldProcessMessage(message)) {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().b[21][0]++;
        cov_1e8yjr3qu8().s[62]++;
        this.enqueueMessage(message);
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[63]++;
        sendResponse({
          received: true
        });
      } else
      /* istanbul ignore next */
      {
        cov_1e8yjr3qu8().b[21][1]++;
      }
      cov_1e8yjr3qu8().s[64]++;
      return false;
    });
  }
  shouldProcessMessage(message) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[13]++;
    cov_1e8yjr3qu8().s[65]++;
    return this.filters.every(filter => {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().f[14]++;
      cov_1e8yjr3qu8().s[66]++;
      return filter(message);
    });
  }
  async enqueueMessage(message) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[15]++;
    cov_1e8yjr3qu8().s[67]++;
    this.messageQueue.push(message);
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[68]++;
    if (!this.processing) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[22][0]++;
      cov_1e8yjr3qu8().s[69]++;
      this.processing = true;
      /* istanbul ignore next */
      cov_1e8yjr3qu8().s[70]++;
      try {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[71]++;
        await this.processQueue();
      } finally {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[72]++;
        this.processing = false;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[22][1]++;
    }
  }
  async processQueue() {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[16]++;
    cov_1e8yjr3qu8().s[73]++;
    while (this.messageQueue.length > 0) {
      const message =
      /* istanbul ignore next */
      (cov_1e8yjr3qu8().s[74]++, this.messageQueue.shift());
      /* istanbul ignore next */
      cov_1e8yjr3qu8().s[75]++;
      await this.processMessage(message);
    }
  }
  async processMessage(message) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[17]++;
    cov_1e8yjr3qu8().s[76]++;
    // --- Validation stricte du payload ---
    if (!validatePayload(message.type, message.payload)) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[23][0]++;
      cov_1e8yjr3qu8().s[77]++;
      secureLogger_1.SecureLogger.warn(`[MessageBus] Payload non valide pour le type ${message.type}`, message.payload);
      /* istanbul ignore next */
      cov_1e8yjr3qu8().s[78]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[23][1]++;
    }
    // Global handlers
    cov_1e8yjr3qu8().s[79]++;
    for (const handler of this.globalHandlers) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().s[80]++;
      try {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[81]++;
        await handler(message);
      } catch (error) {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[82]++;
        secureLogger_1.SecureLogger.error(`Error in global handler:`, error);
      }
    }
    // Type-specific handlers
    const handlers =
    /* istanbul ignore next */
    (cov_1e8yjr3qu8().s[83]++, this.handlers.get(message.type));
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[84]++;
    if (handlers) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[24][0]++;
      cov_1e8yjr3qu8().s[85]++;
      for (const handler of handlers) {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[86]++;
        try {
          /* istanbul ignore next */
          cov_1e8yjr3qu8().s[87]++;
          await handler(message);
        } catch (error) {
          /* istanbul ignore next */
          cov_1e8yjr3qu8().s[88]++;
          secureLogger_1.SecureLogger.error(`Error in handler for ${message.type}:`, error);
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[24][1]++;
    }
  }
  on(type, handler) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[18]++;
    cov_1e8yjr3qu8().s[89]++;
    if (!this.handlers.has(type)) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[25][0]++;
      cov_1e8yjr3qu8().s[90]++;
      this.handlers.set(type, new Set());
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[25][1]++;
    }
    cov_1e8yjr3qu8().s[91]++;
    this.handlers.get(type).add(handler);
  }
  off(type, handler) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[19]++;
    const handlers =
    /* istanbul ignore next */
    (cov_1e8yjr3qu8().s[92]++, this.handlers.get(type));
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[93]++;
    if (handlers) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[26][0]++;
      cov_1e8yjr3qu8().s[94]++;
      handlers.delete(handler);
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[26][1]++;
    }
  }
  onAny(handler) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[20]++;
    cov_1e8yjr3qu8().s[95]++;
    this.globalHandlers.add(handler);
  }
  offAny(handler) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[21]++;
    cov_1e8yjr3qu8().s[96]++;
    this.globalHandlers.delete(handler);
  }
  addFilter(filter) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[22]++;
    cov_1e8yjr3qu8().s[97]++;
    this.filters.push(filter);
  }
  async send(message) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[23]++;
    const fullMessage =
    /* istanbul ignore next */
    (cov_1e8yjr3qu8().s[98]++, {
      ...message,
      source: this.source,
      timestamp: Date.now(),
      id: (0, uuid_1.generateUUID)()
    });
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[99]++;
    try {
      // Sanitize le message d'abord pour éviter les objets problématiques
      const sanitizedMessage =
      /* istanbul ignore next */
      (cov_1e8yjr3qu8().s[100]++, (0, serialization_1.sanitizeMessage)(fullMessage));
      // Nettoyer le message avant envoi pour éviter les erreurs de sérialisation
      const cleanMessage =
      /* istanbul ignore next */
      (cov_1e8yjr3qu8().s[101]++, serializeMessage(sanitizedMessage));
      /* istanbul ignore next */
      cov_1e8yjr3qu8().s[102]++;
      if (this.source === 'content') {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().b[27][0]++;
        cov_1e8yjr3qu8().s[103]++;
        await chrome.runtime.sendMessage(cleanMessage);
      } else {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().b[27][1]++;
        // Send to all tabs for content scripts
        const tabs =
        /* istanbul ignore next */
        (cov_1e8yjr3qu8().s[104]++, await chrome.tabs.query({}));
        // Routage intelligent : on ne cible que les tabs actifs ou pertinents
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[105]++;
        const isRelevantTab = tab => {
          /* istanbul ignore next */
          cov_1e8yjr3qu8().f[24]++;
          cov_1e8yjr3qu8().s[106]++;
          return /* istanbul ignore next */(cov_1e8yjr3qu8().b[28][0]++, tab.active) ||
          /* istanbul ignore next */
          (cov_1e8yjr3qu8().b[28][1]++, tab.url) &&
          /* istanbul ignore next */
          (cov_1e8yjr3qu8().b[28][2]++, tab.url.includes('symbiont'));
        };
        const activeTabs =
        /* istanbul ignore next */
        (cov_1e8yjr3qu8().s[107]++, tabs.filter(isRelevantTab));
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[108]++;
        for (const tab of activeTabs) {
          /* istanbul ignore next */
          cov_1e8yjr3qu8().s[109]++;
          if (tab.id) {
            /* istanbul ignore next */
            cov_1e8yjr3qu8().b[29][0]++;
            cov_1e8yjr3qu8().s[110]++;
            chrome.tabs.sendMessage(tab.id, cleanMessage).catch(() => {
              /* istanbul ignore next */
              cov_1e8yjr3qu8().f[25]++;
            } // Ignore errors for inactive tabs
            );
          } else
          /* istanbul ignore next */
          {
            cov_1e8yjr3qu8().b[29][1]++;
          }
        }
        // Also send to runtime for popup/background
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[111]++;
        chrome.runtime.sendMessage(cleanMessage).catch(() => {
          /* istanbul ignore next */
          cov_1e8yjr3qu8().f[26]++;
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().s[112]++;
      secureLogger_1.SecureLogger.error('Error sending message:', error);
    }
  }
  // Ajout pour compatibilité content script
  sendToBackground(message) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[27]++;
    cov_1e8yjr3qu8().s[113]++;
    this.send(message);
  }
  emit(type, payload) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[28]++;
    // Appel direct des handlers si besoin (mock minimal)
    const handlers =
    /* istanbul ignore next */
    (cov_1e8yjr3qu8().s[114]++, this.handlers.get(type));
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[115]++;
    if (handlers) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[30][0]++;
      cov_1e8yjr3qu8().s[116]++;
      handlers.forEach(handler => {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().f[29]++;
        cov_1e8yjr3qu8().s[117]++;
        return handler({
          type,
          payload
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[30][1]++;
    }
  }
  // @ts-expect-error Variables réservées pour usage futur
  handleMessage(message, targetFrame) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[30]++;
    cov_1e8yjr3qu8().s[118]++;
    // Handle cross-frame messages
    secureLogger_1.SecureLogger.info('Handling message:', message);
  }
  // @ts-expect-error Paramètre réservé pour usage futur
  onMessage(message, sender, sendResponse) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[31]++;
    cov_1e8yjr3qu8().s[119]++;
    // Handle incoming message
    secureLogger_1.SecureLogger.info('Received message:', message);
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[120]++;
    return true;
  }
  // @ts-expect-error Variables réservées pour usage futur
  sendToFrame(handleMessage, targetFrame, payload) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[32]++;
    cov_1e8yjr3qu8().s[121]++;
    // Send message to frame
    secureLogger_1.SecureLogger.info('Sending to frame:', targetFrame, payload);
  }
}
/* istanbul ignore next */
cov_1e8yjr3qu8().s[122]++;
exports.MessageBus = MessageBus;
/* istanbul ignore next */
cov_1e8yjr3qu8().s[123]++;
exports.default = MessageBus;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWU4eWpyM3F1OCIsImFjdHVhbENvdmVyYWdlIiwicyIsImV4cG9ydHMiLCJ2YWxpZGF0ZVBheWxvYWQiLCJNZXNzYWdlQnVzXzEiLCJyZXF1aXJlIiwidXVpZF8xIiwic2VyaWFsaXphdGlvbl8xIiwic2VjdXJlTG9nZ2VyXzEiLCJpc09yZ2FuaXNtU3RhdGUiLCJvYmoiLCJmIiwiYiIsImlkIiwiZ2VuZXJhdGlvbiIsImhlYWx0aCIsImVuZXJneSIsInRyYWl0cyIsImlzT3JnYW5pc21NdXRhdGlvbiIsInR5cGUiLCJ0cmlnZ2VyIiwiaXNCZWhhdmlvckRhdGEiLCJ1cmwiLCJ2aXNpdENvdW50IiwiaXNNdXJtdXIiLCJ0ZXh0IiwidGltZXN0YW1wIiwiaXNJbnZpdGF0aW9uUGF5bG9hZCIsImNvZGUiLCJpc0ludml0YXRpb25SZXN1bHQiLCJzdGF0dXMiLCJwYXlsb2FkIiwiTWVzc2FnZVR5cGUiLCJPUkdBTklTTV9VUERBVEUiLCJPUkdBTklTTV9NVVRBVEUiLCJQQUdFX1ZJU0lUIiwiU0NST0xMX0VWRU5UIiwiTVVSTVVSIiwiR0VORVJBVEVfSU5WSVRBVElPTiIsIkNPTlNVTUVfSU5WSVRBVElPTiIsIkNIRUNLX0lOVklUQVRJT04iLCJJTlZJVEFUSU9OX0dFTkVSQVRFRCIsIklOVklUQVRJT05fQ09OU1VNRUQiLCJJTlZJVEFUSU9OX0NIRUNLRUQiLCJTSEFSRURfTVVUQVRJT05fUkVTVUxUIiwic2VyaWFsaXplTWVzc2FnZSIsIm1lc3NhZ2UiLCJKU09OIiwicGFyc2UiLCJzdHJpbmdpZnkiLCJlcnJvciIsIlNlY3VyZUxvZ2dlciIsIndhcm4iLCJjbGVhbk1lc3NhZ2UiLCJjbGVhbk9iamVjdEZvclNlcmlhbGl6YXRpb24iLCJzZWVuIiwiV2Vha1NldCIsInVuZGVmaW5lZCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsIkVycm9yIiwibmFtZSIsInN0YWNrIiwiV2ViR0xSZW5kZXJpbmdDb250ZXh0IiwiV2ViR0wyUmVuZGVyaW5nQ29udGV4dCIsIkhUTUxFbGVtZW50IiwiSFRNTENhbnZhc0VsZW1lbnQiLCJDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQiLCJXZWJHTFByb2dyYW0iLCJXZWJHTEJ1ZmZlciIsIldlYkdMVGV4dHVyZSIsIiQkdHlwZW9mIiwiX19yZWFjdEZpYmVyIiwiX293bmVyIiwiY29uc3RydWN0b3IiLCJpbmNsdWRlcyIsImhhcyIsImFkZCIsIkFycmF5IiwiaXNBcnJheSIsIm1hcCIsIml0ZW0iLCJjbGVhbmVkIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJNZXNzYWdlQnVzIiwic291cmNlIiwiaGFuZGxlcnMiLCJNYXAiLCJnbG9iYWxIYW5kbGVycyIsIlNldCIsImZpbHRlcnMiLCJtZXNzYWdlUXVldWUiLCJwcm9jZXNzaW5nIiwic2V0dXBMaXN0ZW5lcnMiLCJjaHJvbWUiLCJydW50aW1lIiwib25NZXNzYWdlIiwiYWRkTGlzdGVuZXIiLCJzZW5kZXIiLCJzZW5kUmVzcG9uc2UiLCJzaG91bGRQcm9jZXNzTWVzc2FnZSIsImVucXVldWVNZXNzYWdlIiwicmVjZWl2ZWQiLCJldmVyeSIsImZpbHRlciIsInB1c2giLCJwcm9jZXNzUXVldWUiLCJsZW5ndGgiLCJzaGlmdCIsInByb2Nlc3NNZXNzYWdlIiwiaGFuZGxlciIsImdldCIsIm9uIiwic2V0Iiwib2ZmIiwiZGVsZXRlIiwib25BbnkiLCJvZmZBbnkiLCJhZGRGaWx0ZXIiLCJzZW5kIiwiZnVsbE1lc3NhZ2UiLCJub3ciLCJnZW5lcmF0ZVVVSUQiLCJzYW5pdGl6ZWRNZXNzYWdlIiwic2FuaXRpemVNZXNzYWdlIiwic2VuZE1lc3NhZ2UiLCJ0YWJzIiwicXVlcnkiLCJpc1JlbGV2YW50VGFiIiwidGFiIiwiYWN0aXZlIiwiYWN0aXZlVGFicyIsImNhdGNoIiwic2VuZFRvQmFja2dyb3VuZCIsImVtaXQiLCJmb3JFYWNoIiwiaGFuZGxlTWVzc2FnZSIsInRhcmdldEZyYW1lIiwiaW5mbyIsInNlbmRUb0ZyYW1lIiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi9tbnQvYy9Vc2Vycy9tX29saS9Qcm9qZXRzL1NZTUJJT05UL3NyYy9jb3JlL21lc3NhZ2luZy9NZXNzYWdlQnVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1lc3NhZ2UsIE1lc3NhZ2VUeXBlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL21lc3NhZ2luZy9NZXNzYWdlQnVzJztcclxuaW1wb3J0IHsgT3JnYW5pc21TdGF0ZSwgT3JnYW5pc21NdXRhdGlvbiB9IGZyb20gJy4uLy4uL3NoYXJlZC90eXBlcy9vcmdhbmlzbSc7XHJcbmltcG9ydCB7IEludml0YXRpb25QYXlsb2FkLCBJbnZpdGF0aW9uUmVzdWx0IH0gZnJvbSAnLi4vLi4vc2hhcmVkL3R5cGVzL2ludml0YXRpb24nO1xyXG5pbXBvcnQgeyBNdXJtdXIgfSBmcm9tICcuLi8uLi9zaGFyZWQvdHlwZXMvbXVybXVyJztcclxuaW1wb3J0IHsgZ2VuZXJhdGVVVUlEIH0gZnJvbSAnLi4vLi4vc2hhcmVkL3V0aWxzL3V1aWQnO1xyXG5pbXBvcnQgeyBzYW5pdGl6ZU1lc3NhZ2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvdXRpbHMvc2VyaWFsaXphdGlvbic7XHJcbmltcG9ydCB7IFNlY3VyZUxvZ2dlciB9IGZyb20gJ0BzaGFyZWQvdXRpbHMvc2VjdXJlTG9nZ2VyJztcblxyXG50eXBlIE1lc3NhZ2VIYW5kbGVyPFQgZXh0ZW5kcyBNZXNzYWdlID0gTWVzc2FnZT4gPSAobWVzc2FnZTogVCkgPT4gdm9pZCB8IFByb21pc2U8dm9pZD47XHJcbnR5cGUgTWVzc2FnZUZpbHRlciA9IChtZXNzYWdlOiBNZXNzYWdlKSA9PiBib29sZWFuO1xyXG5cclxuZnVuY3Rpb24gaXNPcmdhbmlzbVN0YXRlKG9iajogYW55KTogb2JqIGlzIE9yZ2FuaXNtU3RhdGUge1xyXG4gIHJldHVybiBvYmogJiZcclxuICAgIHR5cGVvZiBvYmouaWQgPT09ICdzdHJpbmcnICYmXHJcbiAgICB0eXBlb2Ygb2JqLmdlbmVyYXRpb24gPT09ICdudW1iZXInICYmXHJcbiAgICB0eXBlb2Ygb2JqLmhlYWx0aCA9PT0gJ251bWJlcicgJiZcclxuICAgIHR5cGVvZiBvYmouZW5lcmd5ID09PSAnbnVtYmVyJyAmJlxyXG4gICAgb2JqLnRyYWl0cyAmJiB0eXBlb2Ygb2JqLnRyYWl0cyA9PT0gJ29iamVjdCc7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGlzT3JnYW5pc21NdXRhdGlvbihvYmo6IGFueSk6IG9iaiBpcyBPcmdhbmlzbU11dGF0aW9uIHtcclxuICByZXR1cm4gb2JqICYmIHR5cGVvZiBvYmoudHlwZSA9PT0gJ3N0cmluZycgJiYgdHlwZW9mIG9iai50cmlnZ2VyID09PSAnc3RyaW5nJztcclxufVxyXG5cclxuZnVuY3Rpb24gaXNCZWhhdmlvckRhdGEob2JqOiBhbnkpOiBib29sZWFuIHtcclxuICByZXR1cm4gb2JqICYmIHR5cGVvZiBvYmoudXJsID09PSAnc3RyaW5nJyAmJiB0eXBlb2Ygb2JqLnZpc2l0Q291bnQgPT09ICdudW1iZXInO1xyXG59XHJcblxyXG5mdW5jdGlvbiBpc011cm11cihvYmo6IGFueSk6IG9iaiBpcyBNdXJtdXIge1xyXG4gIHJldHVybiBvYmogJiYgdHlwZW9mIG9iai50ZXh0ID09PSAnc3RyaW5nJyAmJiB0eXBlb2Ygb2JqLnRpbWVzdGFtcCA9PT0gJ251bWJlcic7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGlzSW52aXRhdGlvblBheWxvYWQob2JqOiBhbnkpOiBvYmogaXMgSW52aXRhdGlvblBheWxvYWQge1xyXG4gIHJldHVybiBvYmogJiYgdHlwZW9mIG9iai5jb2RlID09PSAnc3RyaW5nJztcclxufVxyXG5cclxuZnVuY3Rpb24gaXNJbnZpdGF0aW9uUmVzdWx0KG9iajogYW55KTogb2JqIGlzIEludml0YXRpb25SZXN1bHQge1xyXG4gIHJldHVybiBvYmogJiYgdHlwZW9mIG9iai5jb2RlID09PSAnc3RyaW5nJyAmJiB0eXBlb2Ygb2JqLnN0YXR1cyA9PT0gJ3N0cmluZyc7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHZhbGlkYXRlUGF5bG9hZCh0eXBlOiBNZXNzYWdlVHlwZSwgcGF5bG9hZDogYW55KTogYm9vbGVhbiB7XHJcbiAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICBjYXNlIE1lc3NhZ2VUeXBlLk9SR0FOSVNNX1VQREFURTpcclxuICAgICAgcmV0dXJuIGlzT3JnYW5pc21TdGF0ZShwYXlsb2FkKTtcclxuICAgIGNhc2UgTWVzc2FnZVR5cGUuT1JHQU5JU01fTVVUQVRFOlxyXG4gICAgICByZXR1cm4gaXNPcmdhbmlzbU11dGF0aW9uKHBheWxvYWQpO1xyXG4gICAgY2FzZSBNZXNzYWdlVHlwZS5QQUdFX1ZJU0lUOlxyXG4gICAgY2FzZSBNZXNzYWdlVHlwZS5TQ1JPTExfRVZFTlQ6XHJcbiAgICAgIHJldHVybiBpc0JlaGF2aW9yRGF0YShwYXlsb2FkKTtcclxuICAgIGNhc2UgTWVzc2FnZVR5cGUuTVVSTVVSOlxyXG4gICAgICByZXR1cm4gaXNNdXJtdXIocGF5bG9hZCk7XHJcbiAgICBjYXNlIE1lc3NhZ2VUeXBlLkdFTkVSQVRFX0lOVklUQVRJT046XHJcbiAgICBjYXNlIE1lc3NhZ2VUeXBlLkNPTlNVTUVfSU5WSVRBVElPTjpcclxuICAgIGNhc2UgTWVzc2FnZVR5cGUuQ0hFQ0tfSU5WSVRBVElPTjpcclxuICAgICAgcmV0dXJuIGlzSW52aXRhdGlvblBheWxvYWQocGF5bG9hZCk7XHJcbiAgICBjYXNlIE1lc3NhZ2VUeXBlLklOVklUQVRJT05fR0VORVJBVEVEOlxyXG4gICAgICByZXR1cm4gdHlwZW9mIHBheWxvYWQgPT09ICdzdHJpbmcnIHx8IGlzSW52aXRhdGlvblJlc3VsdChwYXlsb2FkKTtcclxuICAgIGNhc2UgTWVzc2FnZVR5cGUuSU5WSVRBVElPTl9DT05TVU1FRDpcclxuICAgIGNhc2UgTWVzc2FnZVR5cGUuSU5WSVRBVElPTl9DSEVDS0VEOlxyXG4gICAgICByZXR1cm4gaXNJbnZpdGF0aW9uUmVzdWx0KHBheWxvYWQpO1xyXG4gICAgY2FzZSBNZXNzYWdlVHlwZS5TSEFSRURfTVVUQVRJT05fUkVTVUxUOlxyXG4gICAgICAvLyBBY2NlcHRlIHVuIHN0cmluZyAoY2hpZmZyw6kpIG91IHVuIG9iamV0IChyw6lzdWx0YXQgZGUgbXV0YXRpb24pXHJcbiAgICAgIHJldHVybiB0eXBlb2YgcGF5bG9hZCA9PT0gJ3N0cmluZycgfHwgKHBheWxvYWQgJiYgdHlwZW9mIHBheWxvYWQgPT09ICdvYmplY3QnKTtcclxuICAgIC8vIEFqb3V0ZXIgZCdhdXRyZXMgY2FzIHNlbG9uIGxlcyBiZXNvaW5zXHJcbiAgICBkZWZhdWx0OlxyXG4gICAgICByZXR1cm4gdHJ1ZTsgLy8gUGFyIGTDqWZhdXQsIG9uIGFjY2VwdGUgKMOgIGFmZmluZXIgc2Vsb24gbGVzIGJlc29pbnMpXHJcbiAgfVxyXG59XHJcblxyXG4vLyBGb25jdGlvbiBwb3VyIG5ldHRveWVyIGxlcyBtZXNzYWdlcyBhdmFudCBzw6lyaWFsaXNhdGlvblxyXG5mdW5jdGlvbiBzZXJpYWxpemVNZXNzYWdlKG1lc3NhZ2U6IGFueSk6IGFueSB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIFRlc3QgZGUgc8OpcmlhbGlzYXRpb24gYXZlYyBKU09OLnBhcnNlL3N0cmluZ2lmeVxyXG4gICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkobWVzc2FnZSkpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBTZWN1cmVMb2dnZXIud2FybignTWVzc2FnZSBzZXJpYWxpemF0aW9uIGlzc3VlLCBjbGVhbmluZyBvYmplY3Q6JywgZXJyb3IpO1xyXG4gICAgXHJcbiAgICAvLyBOZXR0b3lhZ2UgbWFudWVsIHBvdXIgbGVzIGNhcyBwcm9ibMOpbWF0aXF1ZXNcclxuICAgIGNvbnN0IGNsZWFuTWVzc2FnZSA9IGNsZWFuT2JqZWN0Rm9yU2VyaWFsaXphdGlvbihtZXNzYWdlKTtcclxuICAgIHJldHVybiBjbGVhbk1lc3NhZ2U7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjbGVhbk9iamVjdEZvclNlcmlhbGl6YXRpb24ob2JqOiBhbnksIHNlZW4gPSBuZXcgV2Vha1NldCgpKTogYW55IHtcclxuICBpZiAob2JqID09PSBudWxsIHx8IG9iaiA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICByZXR1cm4gb2JqO1xyXG4gIH1cclxuICBcclxuICBpZiAodHlwZW9mIG9iaiA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgcmV0dXJuICdbRnVuY3Rpb25dJzsgLy8gUmVtcGxhY2UgbGVzIGZvbmN0aW9ucyBwYXIgdW5lIHN0cmluZ1xyXG4gIH1cclxuICBcclxuICBpZiAob2JqIGluc3RhbmNlb2YgRGF0ZSkge1xyXG4gICAgcmV0dXJuIG9iai50b0lTT1N0cmluZygpOyAvLyBDb252ZXJ0aXQgbGVzIGRhdGVzIGVuIElTTyBzdHJpbmdcclxuICB9XHJcbiAgXHJcbiAgaWYgKG9iaiBpbnN0YW5jZW9mIEVycm9yKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuYW1lOiBvYmoubmFtZSxcclxuICAgICAgbWVzc2FnZTogb2JqLm1lc3NhZ2UsXHJcbiAgICAgIHN0YWNrOiBvYmouc3RhY2tcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvLyBPYmpldHMgV2ViR0wsIERPTSwgUmVhY3Qgbm9uLXPDqXJpYWxpc2FibGVzXHJcbiAgaWYgKG9iaiBpbnN0YW5jZW9mIFdlYkdMUmVuZGVyaW5nQ29udGV4dCB8fCBcclxuICAgICAgb2JqIGluc3RhbmNlb2YgV2ViR0wyUmVuZGVyaW5nQ29udGV4dCB8fFxyXG4gICAgICBvYmogaW5zdGFuY2VvZiBIVE1MRWxlbWVudCB8fFxyXG4gICAgICBvYmogaW5zdGFuY2VvZiBIVE1MQ2FudmFzRWxlbWVudCB8fFxyXG4gICAgICBvYmogaW5zdGFuY2VvZiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQgfHxcclxuICAgICAgb2JqIGluc3RhbmNlb2YgV2ViR0xQcm9ncmFtIHx8XHJcbiAgICAgIG9iaiBpbnN0YW5jZW9mIFdlYkdMQnVmZmVyIHx8XHJcbiAgICAgIG9iaiBpbnN0YW5jZW9mIFdlYkdMVGV4dHVyZSB8fFxyXG4gICAgICAob2JqICYmIG9iai4kJHR5cGVvZikgfHwgLy8gUmVhY3QgZWxlbWVudHNcclxuICAgICAgKG9iaiAmJiBvYmouX19yZWFjdEZpYmVyKSB8fCAvLyBSZWFjdCBmaWJlclxyXG4gICAgICAob2JqICYmIG9iai5fb3duZXIpIHx8IC8vIFJlYWN0IGludGVybmFsXHJcbiAgICAgIChvYmogJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiYgb2JqLmNvbnN0cnVjdG9yICYmIG9iai5jb25zdHJ1Y3Rvci5uYW1lICYmIG9iai5jb25zdHJ1Y3Rvci5uYW1lLmluY2x1ZGVzKCdGaWJlcicpKSAvLyBSZWFjdCBGaWJlciB2YXJpYW50c1xyXG4gICkge1xyXG4gICAgcmV0dXJuICdbTm9uLXNlcmlhbGl6YWJsZSBPYmplY3RdJztcclxuICB9XHJcbiAgXHJcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB7XHJcbiAgICByZXR1cm4gb2JqOyAvLyBQcmltaXRpdmVzIHNvbnQgT0tcclxuICB9XHJcbiAgXHJcbiAgLy8gVsOpcmlmaWNhdGlvbiBkZXMgcsOpZsOpcmVuY2VzIGNpcmN1bGFpcmVzIEFWQU5UIGxhIHLDqWN1cnNpb25cclxuICBpZiAoc2Vlbi5oYXMob2JqKSkge1xyXG4gICAgcmV0dXJuICdbQ2lyY3VsYXIgUmVmZXJlbmNlXSc7XHJcbiAgfVxyXG4gIHNlZW4uYWRkKG9iaik7XHJcbiAgXHJcbiAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSkge1xyXG4gICAgcmV0dXJuIG9iai5tYXAoaXRlbSA9PiBjbGVhbk9iamVjdEZvclNlcmlhbGl6YXRpb24oaXRlbSwgc2VlbikpO1xyXG4gIH1cclxuICBcclxuICAvLyBQb3VyIGxlcyBvYmpldHMsIG9uIG5ldHRvaWUgcsOpY3Vyc2l2ZW1lbnRcclxuICBjb25zdCBjbGVhbmVkOiBhbnkgPSB7fTtcclxuICBcclxuICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcclxuICAgIGlmIChvYmouaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNsZWFuZWRba2V5XSA9IGNsZWFuT2JqZWN0Rm9yU2VyaWFsaXphdGlvbihvYmpba2V5XSwgc2Vlbik7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgLy8gU3VwcHJpbWUgbGVzIGxvZ3MgdmVyYmV1eCBwb3VyIMOpdml0ZXIgbGUgc3BhbVxyXG4gICAgICAgIGNsZWFuZWRba2V5XSA9ICdbTm9uLXNlcmlhbGl6YWJsZV0nO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIHJldHVybiBjbGVhbmVkO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgTWVzc2FnZUJ1cyB7XHJcbiAgcHJpdmF0ZSBoYW5kbGVyczogTWFwPE1lc3NhZ2VUeXBlLCBTZXQ8TWVzc2FnZUhhbmRsZXI+PiA9IG5ldyBNYXAoKTtcclxuICBwcml2YXRlIGdsb2JhbEhhbmRsZXJzOiBTZXQ8TWVzc2FnZUhhbmRsZXI+ID0gbmV3IFNldCgpO1xyXG4gIHByaXZhdGUgZmlsdGVyczogTWVzc2FnZUZpbHRlcltdID0gW107XHJcbiAgcHJpdmF0ZSBtZXNzYWdlUXVldWU6IE1lc3NhZ2VbXSA9IFtdO1xyXG4gIHByaXZhdGUgcHJvY2Vzc2luZyA9IGZhbHNlO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IHNvdXJjZTogJ2JhY2tncm91bmQnIHwgJ2NvbnRlbnQnIHwgJ3BvcHVwJykge1xyXG4gICAgdGhpcy5zZXR1cExpc3RlbmVycygpO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBzZXR1cExpc3RlbmVycygpOiB2b2lkIHtcclxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgUGFyYW3DqHRyZSByw6lzZXJ2w6kgcG91ciB1c2FnZSBmdXR1clxyXG4gICAgY2hyb21lLnJ1bnRpbWUub25NZXNzYWdlLmFkZExpc3RlbmVyKChtZXNzYWdlOiBNZXNzYWdlLCBzZW5kZXIsIHNlbmRSZXNwb25zZSkgPT4ge1xyXG4gICAgICBpZiAodGhpcy5zaG91bGRQcm9jZXNzTWVzc2FnZShtZXNzYWdlKSkge1xyXG4gICAgICAgIHRoaXMuZW5xdWV1ZU1lc3NhZ2UobWVzc2FnZSk7XHJcbiAgICAgICAgc2VuZFJlc3BvbnNlKHsgcmVjZWl2ZWQ6IHRydWUgfSk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIHNob3VsZFByb2Nlc3NNZXNzYWdlKG1lc3NhZ2U6IE1lc3NhZ2UpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLmZpbHRlcnMuZXZlcnkoZmlsdGVyID0+IGZpbHRlcihtZXNzYWdlKSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGFzeW5jIGVucXVldWVNZXNzYWdlKG1lc3NhZ2U6IE1lc3NhZ2UpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHRoaXMubWVzc2FnZVF1ZXVlLnB1c2gobWVzc2FnZSk7XHJcbiAgICBpZiAoIXRoaXMucHJvY2Vzc2luZykge1xyXG4gICAgICB0aGlzLnByb2Nlc3NpbmcgPSB0cnVlO1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGF3YWl0IHRoaXMucHJvY2Vzc1F1ZXVlKCk7XHJcbiAgICAgIH0gZmluYWxseSB7XHJcbiAgICAgICAgdGhpcy5wcm9jZXNzaW5nID0gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgcHJvY2Vzc1F1ZXVlKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgd2hpbGUgKHRoaXMubWVzc2FnZVF1ZXVlLmxlbmd0aCA+IDApIHtcclxuICAgICAgY29uc3QgbWVzc2FnZSA9IHRoaXMubWVzc2FnZVF1ZXVlLnNoaWZ0KCkhO1xyXG4gICAgICBhd2FpdCB0aGlzLnByb2Nlc3NNZXNzYWdlKG1lc3NhZ2UpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhc3luYyBwcm9jZXNzTWVzc2FnZShtZXNzYWdlOiBNZXNzYWdlKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICAvLyAtLS0gVmFsaWRhdGlvbiBzdHJpY3RlIGR1IHBheWxvYWQgLS0tXHJcbiAgICBpZiAoIXZhbGlkYXRlUGF5bG9hZChtZXNzYWdlLnR5cGUsIG1lc3NhZ2UucGF5bG9hZCkpIHtcclxuICAgICAgU2VjdXJlTG9nZ2VyLndhcm4oYFtNZXNzYWdlQnVzXSBQYXlsb2FkIG5vbiB2YWxpZGUgcG91ciBsZSB0eXBlICR7bWVzc2FnZS50eXBlfWAsIG1lc3NhZ2UucGF5bG9hZCk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBHbG9iYWwgaGFuZGxlcnNcclxuICAgIGZvciAoY29uc3QgaGFuZGxlciBvZiB0aGlzLmdsb2JhbEhhbmRsZXJzKSB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgYXdhaXQgaGFuZGxlcihtZXNzYWdlKTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBTZWN1cmVMb2dnZXIuZXJyb3IoYEVycm9yIGluIGdsb2JhbCBoYW5kbGVyOmAsIGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIFR5cGUtc3BlY2lmaWMgaGFuZGxlcnNcclxuICAgIGNvbnN0IGhhbmRsZXJzID0gdGhpcy5oYW5kbGVycy5nZXQobWVzc2FnZS50eXBlKTtcclxuICAgIGlmIChoYW5kbGVycykge1xyXG4gICAgICBmb3IgKGNvbnN0IGhhbmRsZXIgb2YgaGFuZGxlcnMpIHtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgYXdhaXQgaGFuZGxlcihtZXNzYWdlKTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgU2VjdXJlTG9nZ2VyLmVycm9yKGBFcnJvciBpbiBoYW5kbGVyIGZvciAke21lc3NhZ2UudHlwZX06YCwgZXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIG9uPFQgZXh0ZW5kcyBNZXNzYWdlPih0eXBlOiBUWyd0eXBlJ10sIGhhbmRsZXI6IE1lc3NhZ2VIYW5kbGVyPFQ+KTogdm9pZCB7XHJcbiAgICBpZiAoIXRoaXMuaGFuZGxlcnMuaGFzKHR5cGUpKSB7XHJcbiAgICAgIHRoaXMuaGFuZGxlcnMuc2V0KHR5cGUsIG5ldyBTZXQoKSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmhhbmRsZXJzLmdldCh0eXBlKSEuYWRkKGhhbmRsZXIgYXMgTWVzc2FnZUhhbmRsZXIpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG9mZjxUIGV4dGVuZHMgTWVzc2FnZT4odHlwZTogVFsndHlwZSddLCBoYW5kbGVyOiBNZXNzYWdlSGFuZGxlcjxUPik6IHZvaWQge1xyXG4gICAgY29uc3QgaGFuZGxlcnMgPSB0aGlzLmhhbmRsZXJzLmdldCh0eXBlKTtcclxuICAgIGlmIChoYW5kbGVycykge1xyXG4gICAgICBoYW5kbGVycy5kZWxldGUoaGFuZGxlciBhcyBNZXNzYWdlSGFuZGxlcik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgb25BbnkoaGFuZGxlcjogTWVzc2FnZUhhbmRsZXIpOiB2b2lkIHtcclxuICAgIHRoaXMuZ2xvYmFsSGFuZGxlcnMuYWRkKGhhbmRsZXIpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIG9mZkFueShoYW5kbGVyOiBNZXNzYWdlSGFuZGxlcik6IHZvaWQge1xyXG4gICAgdGhpcy5nbG9iYWxIYW5kbGVycy5kZWxldGUoaGFuZGxlcik7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkRmlsdGVyKGZpbHRlcjogTWVzc2FnZUZpbHRlcik6IHZvaWQge1xyXG4gICAgdGhpcy5maWx0ZXJzLnB1c2goZmlsdGVyKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBhc3luYyBzZW5kKG1lc3NhZ2U6IE9taXQ8TWVzc2FnZSwgJ3NvdXJjZScgfCAndGltZXN0YW1wJyB8ICdpZCc+KTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBjb25zdCBmdWxsTWVzc2FnZTogTWVzc2FnZSA9IHtcclxuICAgICAgLi4ubWVzc2FnZSxcclxuICAgICAgc291cmNlOiB0aGlzLnNvdXJjZSxcclxuICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpLFxyXG4gICAgICBpZDogZ2VuZXJhdGVVVUlEKCksXHJcbiAgICB9IGFzIE1lc3NhZ2U7XHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgLy8gU2FuaXRpemUgbGUgbWVzc2FnZSBkJ2Fib3JkIHBvdXIgw6l2aXRlciBsZXMgb2JqZXRzIHByb2Jsw6ltYXRpcXVlc1xyXG4gICAgICBjb25zdCBzYW5pdGl6ZWRNZXNzYWdlID0gc2FuaXRpemVNZXNzYWdlKGZ1bGxNZXNzYWdlKTtcclxuICAgICAgLy8gTmV0dG95ZXIgbGUgbWVzc2FnZSBhdmFudCBlbnZvaSBwb3VyIMOpdml0ZXIgbGVzIGVycmV1cnMgZGUgc8OpcmlhbGlzYXRpb25cclxuICAgICAgY29uc3QgY2xlYW5NZXNzYWdlID0gc2VyaWFsaXplTWVzc2FnZShzYW5pdGl6ZWRNZXNzYWdlKTtcclxuICAgICAgXHJcbiAgICAgIGlmICh0aGlzLnNvdXJjZSA9PT0gJ2NvbnRlbnQnKSB7XHJcbiAgICAgICAgYXdhaXQgY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2UoY2xlYW5NZXNzYWdlKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBTZW5kIHRvIGFsbCB0YWJzIGZvciBjb250ZW50IHNjcmlwdHNcclxuICAgICAgICBjb25zdCB0YWJzID0gYXdhaXQgY2hyb21lLnRhYnMucXVlcnkoe30pO1xyXG4gICAgICAgIC8vIFJvdXRhZ2UgaW50ZWxsaWdlbnQgOiBvbiBuZSBjaWJsZSBxdWUgbGVzIHRhYnMgYWN0aWZzIG91IHBlcnRpbmVudHNcclxuICAgICAgICBjb25zdCBpc1JlbGV2YW50VGFiID0gKHRhYjogYW55KSA9PiB0YWIuYWN0aXZlIHx8ICh0YWIudXJsICYmIHRhYi51cmwuaW5jbHVkZXMoJ3N5bWJpb250JykpO1xyXG4gICAgICAgIGNvbnN0IGFjdGl2ZVRhYnMgPSB0YWJzLmZpbHRlcihpc1JlbGV2YW50VGFiKTtcclxuICAgICAgICBmb3IgKGNvbnN0IHRhYiBvZiBhY3RpdmVUYWJzKSB7XHJcbiAgICAgICAgICBpZiAodGFiLmlkKSB7XHJcbiAgICAgICAgICAgIGNocm9tZS50YWJzLnNlbmRNZXNzYWdlKHRhYi5pZCwgY2xlYW5NZXNzYWdlKS5jYXRjaCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgLy8gSWdub3JlIGVycm9ycyBmb3IgaW5hY3RpdmUgdGFic1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gQWxzbyBzZW5kIHRvIHJ1bnRpbWUgZm9yIHBvcHVwL2JhY2tncm91bmRcclxuICAgICAgICBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZShjbGVhbk1lc3NhZ2UpLmNhdGNoKCgpID0+IHt9KTtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgU2VjdXJlTG9nZ2VyLmVycm9yKCdFcnJvciBzZW5kaW5nIG1lc3NhZ2U6JywgZXJyb3IpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gQWpvdXQgcG91ciBjb21wYXRpYmlsaXTDqSBjb250ZW50IHNjcmlwdFxyXG4gIHB1YmxpYyBzZW5kVG9CYWNrZ3JvdW5kKG1lc3NhZ2U6IGFueSk6IHZvaWQge1xyXG4gICAgdGhpcy5zZW5kKG1lc3NhZ2UpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGVtaXQodHlwZTogYW55LCBwYXlsb2FkOiBhbnkpOiB2b2lkIHtcclxuICAgIC8vIEFwcGVsIGRpcmVjdCBkZXMgaGFuZGxlcnMgc2kgYmVzb2luIChtb2NrIG1pbmltYWwpXHJcbiAgICBjb25zdCBoYW5kbGVycyA9IHRoaXMuaGFuZGxlcnMuZ2V0KHR5cGUgYXMgTWVzc2FnZVR5cGUpO1xyXG4gICAgaWYgKGhhbmRsZXJzKSB7XHJcbiAgICAgIGhhbmRsZXJzLmZvckVhY2goaGFuZGxlciA9PiBoYW5kbGVyKHsgdHlwZSwgcGF5bG9hZCB9KSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBAdHMtZXhwZWN0LWVycm9yIFZhcmlhYmxlcyByw6lzZXJ2w6llcyBwb3VyIHVzYWdlIGZ1dHVyXHJcbiAgcHJpdmF0ZSBoYW5kbGVNZXNzYWdlKG1lc3NhZ2U6IGFueSwgdGFyZ2V0RnJhbWU6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgLy8gSGFuZGxlIGNyb3NzLWZyYW1lIG1lc3NhZ2VzXHJcbiAgICBTZWN1cmVMb2dnZXIuaW5mbygnSGFuZGxpbmcgbWVzc2FnZTonLCBtZXNzYWdlKTtcclxuICB9XHJcblxyXG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgUGFyYW3DqHRyZSByw6lzZXJ2w6kgcG91ciB1c2FnZSBmdXR1clxyXG4gIHByaXZhdGUgb25NZXNzYWdlKG1lc3NhZ2U6IGFueSwgc2VuZGVyOiBjaHJvbWUucnVudGltZS5NZXNzYWdlU2VuZGVyLCBzZW5kUmVzcG9uc2U6IChyZXNwb25zZT86IGFueSkgPT4gdm9pZCk6IGJvb2xlYW4ge1xyXG4gICAgLy8gSGFuZGxlIGluY29taW5nIG1lc3NhZ2VcclxuICAgIFNlY3VyZUxvZ2dlci5pbmZvKCdSZWNlaXZlZCBtZXNzYWdlOicsIG1lc3NhZ2UpO1xyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG5cclxuICAvLyBAdHMtZXhwZWN0LWVycm9yIFZhcmlhYmxlcyByw6lzZXJ2w6llcyBwb3VyIHVzYWdlIGZ1dHVyXHJcbiAgcHJpdmF0ZSBzZW5kVG9GcmFtZShoYW5kbGVNZXNzYWdlOiAobXNnOiBhbnkpID0+IGFueSwgdGFyZ2V0RnJhbWU6IE1lc3NhZ2VUYXJnZXQsIHBheWxvYWQ6IGFueSk6IHZvaWQge1xyXG4gICAgLy8gU2VuZCBtZXNzYWdlIHRvIGZyYW1lXHJcbiAgICBTZWN1cmVMb2dnZXIuaW5mbygnU2VuZGluZyB0byBmcmFtZTonLCB0YXJnZXRGcmFtZSwgcGF5bG9hZCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNZXNzYWdlQnVzO1xyXG5leHBvcnQgeyB2YWxpZGF0ZVBheWxvYWQgfTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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