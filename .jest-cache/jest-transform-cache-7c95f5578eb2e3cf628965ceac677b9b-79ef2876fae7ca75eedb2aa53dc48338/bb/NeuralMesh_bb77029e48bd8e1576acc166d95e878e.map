{"version":3,"names":["cov_8kizk2ni2","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","NeuralMesh","constructor","nodes","Map","connections","addNode","id","bias","has","Error","set","activation","addConnection","from","to","weight","plasticity","push","stimulate","value","node","get","propagate","nextActivations","values","sum","conn","filter","c","fromNode","sigmoid","act","entries","adapt","learningRate","delta","mutate","rate","Math","random","reset","getActivation","x","exp","toJSON","Array","forEachConnection","fn","removeConnections","predicate","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/neural/NeuralMesh.ts"],"sourcesContent":["/**\r\n * NeuralMesh - Graphe neuronal orienté pour organisme artificiel\r\n * - Nœuds (neurones) avec activation\r\n * - Connexions pondérées (synapses)\r\n * - Propagation, stimulation, plasticité, mutation\r\n */\r\n\r\nexport type NodeId = string;\r\n\r\ninterface Node {\r\n  id: NodeId;\r\n  activation: number;\r\n  bias: number;\r\n  type: 'input' | 'hidden' | 'output';\r\n}\r\n\r\ninterface Connection {\r\n  from: NodeId;\r\n  to: NodeId;\r\n  weight: number;\r\n  plasticity: number; // taux d'adaptation\r\n}\r\n\r\nexport class NeuralMesh {\r\n  private nodes: Map<NodeId, Node> = new Map();\r\n  private connections: Connection[] = [];\r\n\r\n  /**\r\n   * Ajoute un nœud au réseau\r\n   */\r\n  public addNode(id: NodeId, type: 'input' | 'hidden' | 'output', bias = 0): void {\r\n    if (this.nodes.has(id)) throw new Error(`Node ${id} already exists`);\r\n    this.nodes.set(id, { id, activation: 0, bias, type });\r\n  }\r\n\r\n  /**\r\n   * Ajoute une connexion pondérée\r\n   */\r\n  public addConnection(from: NodeId, to: NodeId, weight = 1, plasticity = 0.01): void {\r\n    if (!this.nodes.has(from) || !this.nodes.has(to)) throw new Error('Invalid node id');\r\n    this.connections.push({ from, to, weight, plasticity });\r\n  }\r\n\r\n  /**\r\n   * Stimule un nœud d'entrée\r\n   */\r\n  public stimulate(id: NodeId, value: number): void {\r\n    const node = this.nodes.get(id);\r\n    if (!node || node.type !== 'input') throw new Error('Can only stimulate input nodes');\r\n    node.activation = value;\r\n  }\r\n\r\n  /**\r\n   * Propage l'activation dans le réseau (1 tick)\r\n   */\r\n  public propagate(): void {\r\n    // Calcul des activations pour chaque nœud (hors input)\r\n    const nextActivations: Map<NodeId, number> = new Map();\r\n    for (const node of this.nodes.values()) {\r\n      if (node.type === 'input') continue;\r\n      let sum = node.bias;\r\n      for (const conn of this.connections.filter(c => c.to === node.id)) {\r\n        const fromNode = this.nodes.get(conn.from);\r\n        if (fromNode) sum += fromNode.activation * conn.weight;\r\n      }\r\n      nextActivations.set(node.id, this.sigmoid(sum));\r\n    }\r\n    // Mise à jour des activations\r\n    for (const [id, act] of nextActivations.entries()) {\r\n      const node = this.nodes.get(id);\r\n      if (node) node.activation = act;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Applique la plasticité (ajustement des poids)\r\n   */\r\n  public adapt(learningRate = 0.01): void {\r\n    for (const conn of this.connections) {\r\n      // Règle de Hebb simplifiée : Δw = η * pre * post\r\n      const from = this.nodes.get(conn.from);\r\n      const to = this.nodes.get(conn.to);\r\n      if (from && to) {\r\n        const delta = learningRate * from.activation * to.activation;\r\n        conn.weight += delta * conn.plasticity;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Applique une mutation aléatoire (structurelle ou pondérale)\r\n   */\r\n  public mutate(rate = 0.05): void {\r\n    for (const conn of this.connections) {\r\n      if (Math.random() < rate) {\r\n        conn.weight += (Math.random() - 0.5) * 0.2;\r\n      }\r\n    }\r\n    for (const node of this.nodes.values()) {\r\n      if (Math.random() < rate) {\r\n        node.bias += (Math.random() - 0.5) * 0.1;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Réinitialise toutes les activations\r\n   */\r\n  public reset(): void {\r\n    for (const node of this.nodes.values()) {\r\n      node.activation = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Récupère l'activation d'un nœud\r\n   */\r\n  public getActivation(id: NodeId): number {\r\n    const node = this.nodes.get(id);\r\n    if (!node) throw new Error('Node not found');\r\n    return node.activation;\r\n  }\r\n\r\n  /**\r\n   * Fonction d'activation (sigmoïde)\r\n   */\r\n  private sigmoid(x: number): number {\r\n    return 1 / (1 + Math.exp(-x));\r\n  }\r\n\r\n  /**\r\n   * Export JSON pour debug/visualisation\r\n   */\r\n  public toJSON() {\r\n    return {\r\n      nodes: Array.from(this.nodes.values()),\r\n      connections: this.connections\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Itère sur chaque connexion du réseau\r\n   */\r\n  public forEachConnection(fn: (conn: Connection) => void): void {\r\n    for (const conn of this.connections) {\r\n      fn(conn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Supprime les connexions qui vérifient un prédicat\r\n   */\r\n  public removeConnections(predicate: (conn: Connection) => boolean): void {\r\n    this.connections = this.connections.filter(conn => !predicate(conn));\r\n  }\r\n}"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAA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","ignoreList":[]}