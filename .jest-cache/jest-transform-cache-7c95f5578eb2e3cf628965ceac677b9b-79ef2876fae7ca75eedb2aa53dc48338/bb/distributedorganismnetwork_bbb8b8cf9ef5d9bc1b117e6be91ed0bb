5fb8f7be7e1fae8512579b782b4a347d
"use strict";

/* istanbul ignore next */
function cov_2p5vbppycy() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/social/distributed-organism-network.ts";
  var hash = "a812b7d4da331a8c74591b3d55fd7e5d030b3b86";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/social/distributed-organism-network.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 44
        }
      },
      "2": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "3": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "4": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "5": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 95
        }
      },
      "6": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 64
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 75
        }
      },
      "8": {
        start: {
          line: 14,
          column: 44
        },
        end: {
          line: 14,
          column: 74
        }
      },
      "9": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 76
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 72
        }
      },
      "13": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 58
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 34
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 73
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 84
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 79
        }
      },
      "19": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 73
        }
      },
      "20": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 79
        }
      },
      "21": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 60
        }
      },
      "22": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 45,
          column: 19
        }
      },
      "23": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 19
        }
      },
      "24": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "25": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 43
        }
      },
      "26": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 22
        }
      },
      "27": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 43
        }
      },
      "28": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 22
        }
      },
      "29": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 46
        }
      },
      "30": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 22
        }
      },
      "31": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 61
        }
      },
      "32": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 22
        }
      },
      "33": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 79
        }
      },
      "34": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 22
        }
      },
      "35": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 33
          },
          end: {
            line: 14,
            column: 34
          }
        },
        loc: {
          start: {
            line: 14,
            column: 44
          },
          end: {
            line: 14,
            column: 74
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 25
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 32
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 40
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 35
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 34
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 39
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 43
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 45,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 45,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 49,
            column: 22
          }
        }, {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 52,
            column: 22
          }
        }, {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 55,
            column: 22
          }
        }, {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 22
          }
        }, {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 62,
            column: 22
          }
        }],
        line: 46
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/social/distributed-organism-network.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/social/distributed-organism-network.ts"],
      sourcesContent: ["// social/distributed-organism-network.ts\r\n// R\xE9seau distribu\xE9 d'organismes (Phase 3)\r\nimport { SecureRandom } from '../shared/utils/secureRandom';\n\r\nexport class DistributedOrganismNetwork {\r\n  private peers: Set<string> = new Set()\r\n  // @ts-expect-error \xC9tat d'organisme r\xE9serv\xE9 pour usage futur\r\n  private organismState: any = null\r\n  private channel: BroadcastChannel\r\n  private peerId: string\r\n\r\n  constructor() {\r\n    this.peerId = 'peer_' + SecureRandom.random().toString(36).substr(2, 8)\r\n    this.channel = new BroadcastChannel('symbiont_network')\r\n    this.channel.onmessage = (event) => this.handleMessage(event.data)\r\n    // S'annonce \xE0 la cr\xE9ation\r\n    this.announce()\r\n  }\r\n\r\n  private announce() {\r\n    this.channel.postMessage({ type: 'announce', peerId: this.peerId })\r\n  }\r\n\r\n  joinNetwork(peerId: string) {\r\n    this.peers.add(peerId)\r\n    this.channel.postMessage({ type: 'join', peerId: this.peerId })\r\n    console.log(`[Network] Pair rejoint : ${peerId}`)\r\n  }\r\n\r\n  leaveNetwork(peerId: string) {\r\n    this.peers.delete(peerId)\r\n    this.channel.postMessage({ type: 'leave', peerId: this.peerId })\r\n    console.log(`[Network] Pair quitt\xE9 : ${peerId}`)\r\n  }\r\n\r\n  broadcastMutation(mutation: any) {\r\n    this.channel.postMessage({ type: 'mutation', from: this.peerId, mutation })\r\n    console.log(`[Network] Diffusion mutation \xE0 ${this.peers.size} pairs`)\r\n  }\r\n\r\n  receiveMutation(mutation: any, fromPeer: string) {\r\n    // Appliquer la mutation re\xE7ue (log pour l'instant)\r\n    console.log(`[Network] Mutation re\xE7ue de ${fromPeer}`, mutation)\r\n  }\r\n\r\n  performCommunityBackup(state: any) {\r\n    this.channel.postMessage({ type: 'backup', from: this.peerId, state })\r\n    console.log(`[Network] Backup communautaire lanc\xE9`)\r\n  }\r\n\r\n  private handleMessage(msg: any) {\r\n    if (msg.peerId === this.peerId) return // Ignore self\r\n    switch (msg.type) {\r\n      case 'announce':\r\n        this.peers.add(msg.peerId)\r\n        break\r\n      case 'join':\r\n        this.peers.add(msg.peerId)\r\n        break\r\n      case 'leave':\r\n        this.peers.delete(msg.peerId)\r\n        break\r\n      case 'mutation':\r\n        this.receiveMutation(msg.mutation, msg.from)\r\n        break\r\n      case 'backup':\r\n        // Pour l'instant, log seulement\r\n        console.log(`[Network] Backup re\xE7u de ${msg.from}`, msg.state)\r\n        break\r\n    }\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a812b7d4da331a8c74591b3d55fd7e5d030b3b86"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2p5vbppycy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2p5vbppycy();
cov_2p5vbppycy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2p5vbppycy().s[1]++;
exports.DistributedOrganismNetwork = void 0;
// social/distributed-organism-network.ts
// Réseau distribué d'organismes (Phase 3)
const secureRandom_1 =
/* istanbul ignore next */
(cov_2p5vbppycy().s[2]++, require("../shared/utils/secureRandom"));
class DistributedOrganismNetwork {
  constructor() {
    /* istanbul ignore next */
    cov_2p5vbppycy().f[0]++;
    cov_2p5vbppycy().s[3]++;
    this.peers = new Set();
    // @ts-expect-error État d'organisme réservé pour usage futur
    /* istanbul ignore next */
    cov_2p5vbppycy().s[4]++;
    this.organismState = null;
    /* istanbul ignore next */
    cov_2p5vbppycy().s[5]++;
    this.peerId = 'peer_' + secureRandom_1.SecureRandom.random().toString(36).substr(2, 8);
    /* istanbul ignore next */
    cov_2p5vbppycy().s[6]++;
    this.channel = new BroadcastChannel('symbiont_network');
    /* istanbul ignore next */
    cov_2p5vbppycy().s[7]++;
    this.channel.onmessage = event => {
      /* istanbul ignore next */
      cov_2p5vbppycy().f[1]++;
      cov_2p5vbppycy().s[8]++;
      return this.handleMessage(event.data);
    };
    // S'annonce à la création
    /* istanbul ignore next */
    cov_2p5vbppycy().s[9]++;
    this.announce();
  }
  announce() {
    /* istanbul ignore next */
    cov_2p5vbppycy().f[2]++;
    cov_2p5vbppycy().s[10]++;
    this.channel.postMessage({
      type: 'announce',
      peerId: this.peerId
    });
  }
  joinNetwork(peerId) {
    /* istanbul ignore next */
    cov_2p5vbppycy().f[3]++;
    cov_2p5vbppycy().s[11]++;
    this.peers.add(peerId);
    /* istanbul ignore next */
    cov_2p5vbppycy().s[12]++;
    this.channel.postMessage({
      type: 'join',
      peerId: this.peerId
    });
    /* istanbul ignore next */
    cov_2p5vbppycy().s[13]++;
    console.log(`[Network] Pair rejoint : ${peerId}`);
  }
  leaveNetwork(peerId) {
    /* istanbul ignore next */
    cov_2p5vbppycy().f[4]++;
    cov_2p5vbppycy().s[14]++;
    this.peers.delete(peerId);
    /* istanbul ignore next */
    cov_2p5vbppycy().s[15]++;
    this.channel.postMessage({
      type: 'leave',
      peerId: this.peerId
    });
    /* istanbul ignore next */
    cov_2p5vbppycy().s[16]++;
    console.log(`[Network] Pair quitté : ${peerId}`);
  }
  broadcastMutation(mutation) {
    /* istanbul ignore next */
    cov_2p5vbppycy().f[5]++;
    cov_2p5vbppycy().s[17]++;
    this.channel.postMessage({
      type: 'mutation',
      from: this.peerId,
      mutation
    });
    /* istanbul ignore next */
    cov_2p5vbppycy().s[18]++;
    console.log(`[Network] Diffusion mutation à ${this.peers.size} pairs`);
  }
  receiveMutation(mutation, fromPeer) {
    /* istanbul ignore next */
    cov_2p5vbppycy().f[6]++;
    cov_2p5vbppycy().s[19]++;
    // Appliquer la mutation reçue (log pour l'instant)
    console.log(`[Network] Mutation reçue de ${fromPeer}`, mutation);
  }
  performCommunityBackup(state) {
    /* istanbul ignore next */
    cov_2p5vbppycy().f[7]++;
    cov_2p5vbppycy().s[20]++;
    this.channel.postMessage({
      type: 'backup',
      from: this.peerId,
      state
    });
    /* istanbul ignore next */
    cov_2p5vbppycy().s[21]++;
    console.log(`[Network] Backup communautaire lancé`);
  }
  handleMessage(msg) {
    /* istanbul ignore next */
    cov_2p5vbppycy().f[8]++;
    cov_2p5vbppycy().s[22]++;
    if (msg.peerId === this.peerId) {
      /* istanbul ignore next */
      cov_2p5vbppycy().b[0][0]++;
      cov_2p5vbppycy().s[23]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2p5vbppycy().b[0][1]++;
    } // Ignore self
    cov_2p5vbppycy().s[24]++;
    switch (msg.type) {
      case 'announce':
        /* istanbul ignore next */
        cov_2p5vbppycy().b[1][0]++;
        cov_2p5vbppycy().s[25]++;
        this.peers.add(msg.peerId);
        /* istanbul ignore next */
        cov_2p5vbppycy().s[26]++;
        break;
      case 'join':
        /* istanbul ignore next */
        cov_2p5vbppycy().b[1][1]++;
        cov_2p5vbppycy().s[27]++;
        this.peers.add(msg.peerId);
        /* istanbul ignore next */
        cov_2p5vbppycy().s[28]++;
        break;
      case 'leave':
        /* istanbul ignore next */
        cov_2p5vbppycy().b[1][2]++;
        cov_2p5vbppycy().s[29]++;
        this.peers.delete(msg.peerId);
        /* istanbul ignore next */
        cov_2p5vbppycy().s[30]++;
        break;
      case 'mutation':
        /* istanbul ignore next */
        cov_2p5vbppycy().b[1][3]++;
        cov_2p5vbppycy().s[31]++;
        this.receiveMutation(msg.mutation, msg.from);
        /* istanbul ignore next */
        cov_2p5vbppycy().s[32]++;
        break;
      case 'backup':
        /* istanbul ignore next */
        cov_2p5vbppycy().b[1][4]++;
        cov_2p5vbppycy().s[33]++;
        // Pour l'instant, log seulement
        console.log(`[Network] Backup reçu de ${msg.from}`, msg.state);
        /* istanbul ignore next */
        cov_2p5vbppycy().s[34]++;
        break;
    }
  }
}
/* istanbul ignore next */
cov_2p5vbppycy().s[35]++;
exports.DistributedOrganismNetwork = DistributedOrganismNetwork;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,