f88cf6eb53dea745c27ed9de1d936bf1
"use strict";

// Système de batching et debouncing pour optimiser les mutations
// Évite les mutations trop fréquentes qui peuvent dégrader les performances
/* istanbul ignore next */
function cov_13hfzteg62() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/utils/MutationBatcher.ts";
  var hash = "cfabae8632a2d733f9d0d08bbf3cb5342ccd3f18";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/utils/MutationBatcher.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 62
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 33
        }
      },
      "2": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 48
        }
      },
      "3": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 65
        }
      },
      "4": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 42
        }
      },
      "5": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "6": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "8": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "9": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 31
        }
      },
      "10": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "11": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "12": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 117
        }
      },
      "13": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 55
        }
      },
      "15": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 29
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 39
        }
      },
      "17": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 26
        }
      },
      "18": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 56
        }
      },
      "19": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "20": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 45
        }
      },
      "21": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 38
        }
      },
      "22": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 45
        }
      },
      "23": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "24": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 45
        }
      },
      "25": {
        start: {
          line: 68,
          column: 41
        },
        end: {
          line: 70,
          column: 51
        }
      },
      "26": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "27": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 74,
          column: 15
        }
      },
      "28": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 112
        }
      },
      "29": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "30": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 82,
          column: 35
        }
      },
      "31": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 81,
          column: 15
        }
      },
      "32": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 102
        }
      },
      "33": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 91
        }
      },
      "34": {
        start: {
          line: 88,
          column: 68
        },
        end: {
          line: 88,
          column: 89
        }
      },
      "35": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 94,
          column: 30
        }
      },
      "36": {
        start: {
          line: 95,
          column: 31
        },
        end: {
          line: 96,
          column: 97
        }
      },
      "37": {
        start: {
          line: 96,
          column: 41
        },
        end: {
          line: 96,
          column: 96
        }
      },
      "38": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 94
        }
      },
      "39": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "40": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 19
        }
      },
      "41": {
        start: {
          line: 106,
          column: 26
        },
        end: {
          line: 106,
          column: 68
        }
      },
      "42": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 38
        }
      },
      "43": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "44": {
        start: {
          line: 109,
          column: 36
        },
        end: {
          line: 109,
          column: 68
        }
      },
      "45": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 53
        }
      },
      "46": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 52
        }
      },
      "47": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 44
        }
      },
      "48": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 108
        }
      },
      "49": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 119,
          column: 15
        }
      },
      "50": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 65
        }
      },
      "51": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "52": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 68
        }
      },
      "53": {
        start: {
          line: 129,
          column: 22
        },
        end: {
          line: 129,
          column: 48
        }
      },
      "54": {
        start: {
          line: 129,
          column: 41
        },
        end: {
          line: 129,
          column: 47
        }
      },
      "55": {
        start: {
          line: 130,
          column: 27
        },
        end: {
          line: 130,
          column: 57
        }
      },
      "56": {
        start: {
          line: 130,
          column: 46
        },
        end: {
          line: 130,
          column: 56
        }
      },
      "57": {
        start: {
          line: 131,
          column: 27
        },
        end: {
          line: 131,
          column: 58
        }
      },
      "58": {
        start: {
          line: 131,
          column: 46
        },
        end: {
          line: 131,
          column: 57
        }
      },
      "59": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "60": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 89
        }
      },
      "61": {
        start: {
          line: 135,
          column: 59
        },
        end: {
          line: 135,
          column: 69
        }
      },
      "62": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 22
        }
      },
      "63": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 50
        }
      },
      "64": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 22
        }
      },
      "65": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 87
        }
      },
      "66": {
        start: {
          line: 141,
          column: 71
        },
        end: {
          line: 141,
          column: 81
        }
      },
      "67": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 22
        }
      },
      "68": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 69
        }
      },
      "69": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 22
        }
      },
      "70": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 89
        }
      },
      "71": {
        start: {
          line: 147,
          column: 59
        },
        end: {
          line: 147,
          column: 69
        }
      },
      "72": {
        start: {
          line: 150,
          column: 28
        },
        end: {
          line: 150,
          column: 55
        }
      },
      "73": {
        start: {
          line: 151,
          column: 26
        },
        end: {
          line: 151,
          column: 55
        }
      },
      "74": {
        start: {
          line: 152,
          column: 32
        },
        end: {
          line: 152,
          column: 83
        }
      },
      "75": {
        start: {
          line: 153,
          column: 25
        },
        end: {
          line: 153,
          column: 74
        }
      },
      "76": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 159,
          column: 10
        }
      },
      "77": {
        start: {
          line: 165,
          column: 26
        },
        end: {
          line: 165,
          column: 27
        }
      },
      "78": {
        start: {
          line: 166,
          column: 26
        },
        end: {
          line: 166,
          column: 27
        }
      },
      "79": {
        start: {
          line: 167,
          column: 20
        },
        end: {
          line: 167,
          column: 30
        }
      },
      "80": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 188,
          column: 11
        }
      },
      "81": {
        start: {
          line: 170,
          column: 33
        },
        end: {
          line: 170,
          column: 34
        }
      },
      "82": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "83": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 173,
          column: 39
        }
      },
      "84": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 174,
          column: 26
        }
      },
      "85": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 39
        }
      },
      "86": {
        start: {
          line: 177,
          column: 20
        },
        end: {
          line: 177,
          column: 26
        }
      },
      "87": {
        start: {
          line: 179,
          column: 20
        },
        end: {
          line: 179,
          column: 39
        }
      },
      "88": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 26
        }
      },
      "89": {
        start: {
          line: 183,
          column: 24
        },
        end: {
          line: 183,
          column: 48
        }
      },
      "90": {
        start: {
          line: 184,
          column: 34
        },
        end: {
          line: 184,
          column: 55
        }
      },
      "91": {
        start: {
          line: 185,
          column: 40
        },
        end: {
          line: 185,
          column: 70
        }
      },
      "92": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 63
        }
      },
      "93": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 47
        }
      },
      "94": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 63
        }
      },
      "95": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 28
        }
      },
      "96": {
        start: {
          line: 197,
          column: 22
        },
        end: {
          line: 197,
          column: 25
        }
      },
      "97": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 88
        }
      },
      "98": {
        start: {
          line: 204,
          column: 33
        },
        end: {
          line: 204,
          column: 99
        }
      },
      "99": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 213,
          column: 10
        }
      },
      "100": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 55
        }
      },
      "101": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "102": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 45
        }
      },
      "103": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 38
        }
      },
      "104": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 38
        }
      },
      "105": {
        start: {
          line: 232,
          column: 0
        },
        end: {
          line: 232,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 43
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 43
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 31
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 46
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 23
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 52
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 62
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 72,
            column: 49
          },
          end: {
            line: 72,
            column: 50
          }
        },
        loc: {
          start: {
            line: 72,
            column: 58
          },
          end: {
            line: 74,
            column: 13
          }
        },
        line: 72
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 78,
            column: 40
          },
          end: {
            line: 78,
            column: 41
          }
        },
        loc: {
          start: {
            line: 78,
            column: 46
          },
          end: {
            line: 82,
            column: 9
          }
        },
        line: 78
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 79,
            column: 49
          },
          end: {
            line: 79,
            column: 50
          }
        },
        loc: {
          start: {
            line: 79,
            column: 58
          },
          end: {
            line: 81,
            column: 13
          }
        },
        line: 79
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 30
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 87
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 88,
            column: 63
          },
          end: {
            line: 88,
            column: 64
          }
        },
        loc: {
          start: {
            line: 88,
            column: 68
          },
          end: {
            line: 88,
            column: 89
          }
        },
        line: 88
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        loc: {
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 93
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 96,
            column: 20
          },
          end: {
            line: 96,
            column: 21
          }
        },
        loc: {
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 96,
            column: 96
          }
        },
        line: 96
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 36
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 102
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 117,
            column: 30
          },
          end: {
            line: 117,
            column: 31
          }
        },
        loc: {
          start: {
            line: 117,
            column: 42
          },
          end: {
            line: 119,
            column: 13
          }
        },
        line: 117
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 32
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 125
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 129,
            column: 36
          },
          end: {
            line: 129,
            column: 37
          }
        },
        loc: {
          start: {
            line: 129,
            column: 41
          },
          end: {
            line: 129,
            column: 47
          }
        },
        line: 129
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 130,
            column: 41
          },
          end: {
            line: 130,
            column: 42
          }
        },
        loc: {
          start: {
            line: 130,
            column: 46
          },
          end: {
            line: 130,
            column: 56
          }
        },
        line: 130
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 131,
            column: 41
          },
          end: {
            line: 131,
            column: 42
          }
        },
        loc: {
          start: {
            line: 131,
            column: 46
          },
          end: {
            line: 131,
            column: 57
          }
        },
        line: 131
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 135,
            column: 44
          },
          end: {
            line: 135,
            column: 45
          }
        },
        loc: {
          start: {
            line: 135,
            column: 59
          },
          end: {
            line: 135,
            column: 69
          }
        },
        line: 135
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 141,
            column: 56
          },
          end: {
            line: 141,
            column: 57
          }
        },
        loc: {
          start: {
            line: 141,
            column: 71
          },
          end: {
            line: 141,
            column: 81
          }
        },
        line: 141
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 147,
            column: 44
          },
          end: {
            line: 147,
            column: 45
          }
        },
        loc: {
          start: {
            line: 147,
            column: 59
          },
          end: {
            line: 147,
            column: 69
          }
        },
        line: 147
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        loc: {
          start: {
            line: 164,
            column: 37
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 164
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 168,
            column: 26
          },
          end: {
            line: 168,
            column: 27
          }
        },
        loc: {
          start: {
            line: 168,
            column: 38
          },
          end: {
            line: 188,
            column: 9
          }
        },
        line: 168
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        loc: {
          start: {
            line: 194,
            column: 32
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 194
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 20
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 203
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 28
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 218
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 14
          },
          end: {
            line: 230,
            column: 5
          }
        },
        line: 224
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 9,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 9,
            column: 41
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 22
          },
          end: {
            line: 29,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 29,
            column: 41
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "3": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 41
          },
          end: {
            line: 70,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 41
          },
          end: {
            line: 68,
            column: 95
          }
        }, {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 69,
            column: 42
          }
        }, {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 51
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "6": {
        loc: {
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 96,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 80
          },
          end: {
            line: 96,
            column: 87
          }
        }, {
          start: {
            line: 96,
            column: 90
          },
          end: {
            line: 96,
            column: 96
          }
        }],
        line: 96
      },
      "7": {
        loc: {
          start: {
            line: 97,
            column: 15
          },
          end: {
            line: 97,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 15
          },
          end: {
            line: 97,
            column: 29
          }
        }, {
          start: {
            line: 97,
            column: 33
          },
          end: {
            line: 97,
            column: 93
          }
        }],
        line: 97
      },
      "8": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "9": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "10": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 22
          }
        }, {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 139,
            column: 22
          }
        }, {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 142,
            column: 22
          }
        }, {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 145,
            column: 22
          }
        }, {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 147,
            column: 89
          }
        }],
        line: 133
      },
      "11": {
        loc: {
          start: {
            line: 152,
            column: 32
          },
          end: {
            line: 152,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 46
          },
          end: {
            line: 152,
            column: 52
          }
        }, {
          start: {
            line: 152,
            column: 55
          },
          end: {
            line: 152,
            column: 83
          }
        }],
        line: 152
      },
      "12": {
        loc: {
          start: {
            line: 152,
            column: 55
          },
          end: {
            line: 152,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 67
          },
          end: {
            line: 152,
            column: 75
          }
        }, {
          start: {
            line: 152,
            column: 78
          },
          end: {
            line: 152,
            column: 83
          }
        }],
        line: 152
      },
      "13": {
        loc: {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 174,
            column: 26
          }
        }, {
          start: {
            line: 175,
            column: 16
          },
          end: {
            line: 177,
            column: 26
          }
        }, {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 180,
            column: 26
          }
        }],
        line: 171
      },
      "14": {
        loc: {
          start: {
            line: 189,
            column: 15
          },
          end: {
            line: 189,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 189,
            column: 33
          },
          end: {
            line: 189,
            column: 58
          }
        }, {
          start: {
            line: 189,
            column: 61
          },
          end: {
            line: 189,
            column: 62
          }
        }],
        line: 189
      },
      "15": {
        loc: {
          start: {
            line: 204,
            column: 33
          },
          end: {
            line: 204,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 57
          },
          end: {
            line: 204,
            column: 95
          }
        }, {
          start: {
            line: 204,
            column: 98
          },
          end: {
            line: 204,
            column: 99
          }
        }],
        line: 204
      },
      "16": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/utils/MutationBatcher.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/utils/MutationBatcher.ts"],
      sourcesContent: ["// Syst\xE8me de batching et debouncing pour optimiser les mutations\r\n// \xC9vite les mutations trop fr\xE9quentes qui peuvent d\xE9grader les performances\r\n\r\nimport { errorHandler } from './ErrorHandler';\r\nimport { SecureRandom } from '../../shared/utils/secureRandom';\n\r\nexport interface MutationRequest {\r\n  id: string;\r\n  rate: number;\r\n  timestamp: number;\r\n  priority: 'low' | 'normal' | 'high';\r\n}\r\n\r\nexport interface BatchedMutation {\r\n  combinedRate: number;\r\n  requestCount: number;\r\n  timespan: number;\r\n  priority: 'low' | 'normal' | 'high';\r\n}\r\n\r\nexport interface MutationBatcherConfig {\r\n  debounceMs: number;\r\n  maxBatchSize: number;\r\n  maxWaitTimeMs: number;\r\n  combinationStrategy: 'average' | 'max' | 'sum' | 'weighted';\r\n}\r\n\r\nexport class MutationBatcher {\r\n  private pendingMutations: Map<string, MutationRequest> = new Map();\r\n  private debounceTimer: NodeJS.Timeout | null = null;\r\n  private config: MutationBatcherConfig;\r\n  private onBatchReady: (batch: BatchedMutation) => Promise<void>;\r\n  \r\n  // Statistics\r\n  private totalRequests = 0;\r\n  private totalBatches = 0;\r\n  private averageBatchSize = 0;\r\n  private lastBatchTime = 0;\r\n\r\n  constructor(\r\n    onBatchReady: (batch: BatchedMutation) => Promise<void>,\r\n    config: Partial<MutationBatcherConfig> = {}\r\n  ) {\r\n    this.onBatchReady = onBatchReady;\r\n    this.config = {\r\n      debounceMs: 50, // 50ms debounce by default\r\n      maxBatchSize: 10,\r\n      maxWaitTimeMs: 200, // Max 200ms wait\r\n      combinationStrategy: 'weighted',\r\n      ...config\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Ajoute une requ\xEAte de mutation au batch\r\n   */\r\n  public addMutation(rate: number, priority: 'low' | 'normal' | 'high' = 'normal'): string {\r\n    const mutationId = `mutation_${Date.now()}_${SecureRandom.random().toString(36).substr(2, 9)}`;\r\n    \r\n    const request: MutationRequest = {\r\n      id: mutationId,\r\n      rate: Math.max(0, Math.min(1, rate)), // Clamp to 0-1\r\n      timestamp: Date.now(),\r\n      priority\r\n    };\r\n\r\n    this.pendingMutations.set(mutationId, request);\r\n    this.totalRequests++;\r\n\r\n    // Schedule batch processing\r\n    this.scheduleBatchProcessing();\r\n\r\n    return mutationId;\r\n  }\r\n\r\n  /**\r\n   * Annule une mutation en attente\r\n   */\r\n  public cancelMutation(mutationId: string): boolean {\r\n    return this.pendingMutations.delete(mutationId);\r\n  }\r\n\r\n  /**\r\n   * Force le traitement imm\xE9diat du batch\r\n   */\r\n  public async flushBatch(): Promise<void> {\r\n    if (this.debounceTimer) {\r\n      clearTimeout(this.debounceTimer);\r\n      this.debounceTimer = null;\r\n    }\r\n\r\n    await this.processPendingMutations();\r\n  }\r\n\r\n  /**\r\n   * Planifie le traitement du batch avec debouncing\r\n   */\r\n  private scheduleBatchProcessing(): void {\r\n    // Clear existing timer\r\n    if (this.debounceTimer) {\r\n      clearTimeout(this.debounceTimer);\r\n    }\r\n\r\n    // Check if we should process immediately\r\n    const shouldProcessImmediately = \r\n      this.pendingMutations.size >= this.config.maxBatchSize ||\r\n      this.hasHighPriorityMutation() ||\r\n      this.hasOldestMutationExceededMaxWait();\r\n\r\n    if (shouldProcessImmediately) {\r\n      this.processPendingMutations().catch(error => {\r\n        errorHandler.logSimpleError('MutationBatcher', 'scheduleBatchProcessing', error);\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Schedule debounced processing\r\n    this.debounceTimer = setTimeout(() => {\r\n      this.processPendingMutations().catch(error => {\r\n        errorHandler.logSimpleError('MutationBatcher', 'debounceTimer', error);\r\n      });\r\n    }, this.config.debounceMs);\r\n  }\r\n\r\n  /**\r\n   * V\xE9rifie s'il y a des mutations haute priorit\xE9\r\n   */\r\n  private hasHighPriorityMutation(): boolean {\r\n    return Array.from(this.pendingMutations.values()).some(m => m.priority === 'high');\r\n  }\r\n\r\n  /**\r\n   * V\xE9rifie si la mutation la plus ancienne d\xE9passe le temps d'attente max\r\n   */\r\n  private hasOldestMutationExceededMaxWait(): boolean {\r\n    const now = Date.now();\r\n    const oldestMutation = Array.from(this.pendingMutations.values())\r\n      .reduce((oldest, current) => \r\n        current.timestamp < oldest.timestamp ? current : oldest\r\n      );\r\n\r\n    return oldestMutation && (now - oldestMutation.timestamp) > this.config.maxWaitTimeMs;\r\n  }\r\n\r\n  /**\r\n   * Traite toutes les mutations en attente\r\n   */\r\n  private async processPendingMutations(): Promise<void> {\r\n    if (this.pendingMutations.size === 0) {\r\n      return;\r\n    }\r\n\r\n    const mutations = Array.from(this.pendingMutations.values());\r\n    this.pendingMutations.clear();\r\n\r\n    try {\r\n      const batchedMutation = this.combineMutations(mutations);\r\n      await this.onBatchReady(batchedMutation);\r\n      \r\n      this.updateStatistics(mutations.length);\r\n      this.lastBatchTime = Date.now();\r\n\r\n    } catch (error) {\r\n      errorHandler.logSimpleError('MutationBatcher', 'processPendingMutations', error);\r\n      \r\n      // Re-add mutations if processing failed\r\n      mutations.forEach(mutation => {\r\n        this.pendingMutations.set(mutation.id, mutation);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Combine plusieurs mutations en une seule selon la strat\xE9gie configur\xE9e\r\n   */\r\n  private combineMutations(mutations: MutationRequest[]): BatchedMutation {\r\n    if (mutations.length === 0) {\r\n      throw new Error('Cannot combine empty mutations array');\r\n    }\r\n\r\n    const rates = mutations.map(m => m.rate);\r\n    const priorities = mutations.map(m => m.priority);\r\n    const timestamps = mutations.map(m => m.timestamp);\r\n    \r\n    let combinedRate: number;\r\n\r\n    switch (this.config.combinationStrategy) {\r\n      case 'average':\r\n        combinedRate = rates.reduce((sum, rate) => sum + rate, 0) / rates.length;\r\n        break;\r\n\r\n      case 'max':\r\n        combinedRate = Math.max(...rates);\r\n        break;\r\n\r\n      case 'sum':\r\n        combinedRate = Math.min(1, rates.reduce((sum, rate) => sum + rate, 0));\r\n        break;\r\n\r\n      case 'weighted':\r\n        combinedRate = this.calculateWeightedRate(mutations);\r\n        break;\r\n\r\n      default:\r\n        combinedRate = rates.reduce((sum, rate) => sum + rate, 0) / rates.length;\r\n    }\r\n\r\n    // Determine overall priority\r\n    const hasCritical = priorities.includes('high');\r\n    const hasNormal = priorities.includes('normal');\r\n    const overallPriority = hasCritical ? 'high' : hasNormal ? 'normal' : 'low';\r\n\r\n    const timespan = Math.max(...timestamps) - Math.min(...timestamps);\r\n\r\n    return {\r\n      combinedRate: Math.max(0, Math.min(1, combinedRate)),\r\n      requestCount: mutations.length,\r\n      timespan,\r\n      priority: overallPriority\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calcule un taux pond\xE9r\xE9 bas\xE9 sur la priorit\xE9 et le timing\r\n   */\r\n  private calculateWeightedRate(mutations: MutationRequest[]): number {\r\n    let totalWeight = 0;\r\n    let weightedSum = 0;\r\n    const now = Date.now();\r\n\r\n    mutations.forEach(mutation => {\r\n      // Weight based on priority\r\n      let priorityWeight = 1;\r\n      switch (mutation.priority) {\r\n        case 'high': priorityWeight = 3; break;\r\n        case 'normal': priorityWeight = 2; break;\r\n        case 'low': priorityWeight = 1; break;\r\n      }\r\n\r\n      // Weight based on recency (more recent = higher weight)\r\n      const age = now - mutation.timestamp;\r\n      const recencyWeight = Math.exp(-age / 1000); // Exponential decay\r\n\r\n      const totalMutationWeight = priorityWeight * recencyWeight;\r\n      \r\n      weightedSum += mutation.rate * totalMutationWeight;\r\n      totalWeight += totalMutationWeight;\r\n    });\r\n\r\n    return totalWeight > 0 ? weightedSum / totalWeight : 0;\r\n  }\r\n\r\n  /**\r\n   * Met \xE0 jour les statistiques\r\n   */\r\n  private updateStatistics(batchSize: number): void {\r\n    this.totalBatches++;\r\n    \r\n    // Moving average for batch size\r\n    const alpha = 0.1;\r\n    this.averageBatchSize = this.averageBatchSize * (1 - alpha) + batchSize * alpha;\r\n  }\r\n\r\n  /**\r\n   * R\xE9cup\xE8re les statistiques de performance\r\n   */\r\n  public getStatistics(): {\r\n    totalRequests: number;\r\n    totalBatches: number;\r\n    averageBatchSize: number;\r\n    compressionRatio: number;\r\n    pendingMutations: number;\r\n    lastBatchTime: number;\r\n    config: MutationBatcherConfig;\r\n  } {\r\n    const compressionRatio = this.totalBatches > 0 ? this.totalRequests / this.totalBatches : 1;\r\n\r\n    return {\r\n      totalRequests: this.totalRequests,\r\n      totalBatches: this.totalBatches,\r\n      averageBatchSize: this.averageBatchSize,\r\n      compressionRatio,\r\n      pendingMutations: this.pendingMutations.size,\r\n      lastBatchTime: this.lastBatchTime,\r\n      config: { ...this.config }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Met \xE0 jour la configuration\r\n   */\r\n  public updateConfig(newConfig: Partial<MutationBatcherConfig>): void {\r\n    this.config = { ...this.config, ...newConfig };\r\n  }\r\n\r\n  /**\r\n   * Nettoie les ressources\r\n   */\r\n  public dispose(): void {\r\n    if (this.debounceTimer) {\r\n      clearTimeout(this.debounceTimer);\r\n      this.debounceTimer = null;\r\n    }\r\n    this.pendingMutations.clear();\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cfabae8632a2d733f9d0d08bbf3cb5342ccd3f18"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_13hfzteg62 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13hfzteg62();
cov_13hfzteg62().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_13hfzteg62().s[1]++;
exports.MutationBatcher = void 0;
const ErrorHandler_1 =
/* istanbul ignore next */
(cov_13hfzteg62().s[2]++, require("./ErrorHandler"));
const secureRandom_1 =
/* istanbul ignore next */
(cov_13hfzteg62().s[3]++, require("../../shared/utils/secureRandom"));
class MutationBatcher {
  constructor(onBatchReady, config =
  /* istanbul ignore next */
  (cov_13hfzteg62().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_13hfzteg62().f[0]++;
    cov_13hfzteg62().s[4]++;
    this.pendingMutations = new Map();
    /* istanbul ignore next */
    cov_13hfzteg62().s[5]++;
    this.debounceTimer = null;
    // Statistics
    /* istanbul ignore next */
    cov_13hfzteg62().s[6]++;
    this.totalRequests = 0;
    /* istanbul ignore next */
    cov_13hfzteg62().s[7]++;
    this.totalBatches = 0;
    /* istanbul ignore next */
    cov_13hfzteg62().s[8]++;
    this.averageBatchSize = 0;
    /* istanbul ignore next */
    cov_13hfzteg62().s[9]++;
    this.lastBatchTime = 0;
    /* istanbul ignore next */
    cov_13hfzteg62().s[10]++;
    this.onBatchReady = onBatchReady;
    /* istanbul ignore next */
    cov_13hfzteg62().s[11]++;
    this.config = {
      debounceMs: 50,
      // 50ms debounce by default
      maxBatchSize: 10,
      maxWaitTimeMs: 200,
      // Max 200ms wait
      combinationStrategy: 'weighted',
      ...config
    };
  }
  /**
   * Ajoute une requête de mutation au batch
   */
  addMutation(rate, priority =
  /* istanbul ignore next */
  (cov_13hfzteg62().b[1][0]++, 'normal')) {
    /* istanbul ignore next */
    cov_13hfzteg62().f[1]++;
    const mutationId =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[12]++, `mutation_${Date.now()}_${secureRandom_1.SecureRandom.random().toString(36).substr(2, 9)}`);
    const request =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[13]++, {
      id: mutationId,
      rate: Math.max(0, Math.min(1, rate)),
      // Clamp to 0-1
      timestamp: Date.now(),
      priority
    });
    /* istanbul ignore next */
    cov_13hfzteg62().s[14]++;
    this.pendingMutations.set(mutationId, request);
    /* istanbul ignore next */
    cov_13hfzteg62().s[15]++;
    this.totalRequests++;
    // Schedule batch processing
    /* istanbul ignore next */
    cov_13hfzteg62().s[16]++;
    this.scheduleBatchProcessing();
    /* istanbul ignore next */
    cov_13hfzteg62().s[17]++;
    return mutationId;
  }
  /**
   * Annule une mutation en attente
   */
  cancelMutation(mutationId) {
    /* istanbul ignore next */
    cov_13hfzteg62().f[2]++;
    cov_13hfzteg62().s[18]++;
    return this.pendingMutations.delete(mutationId);
  }
  /**
   * Force le traitement immédiat du batch
   */
  async flushBatch() {
    /* istanbul ignore next */
    cov_13hfzteg62().f[3]++;
    cov_13hfzteg62().s[19]++;
    if (this.debounceTimer) {
      /* istanbul ignore next */
      cov_13hfzteg62().b[2][0]++;
      cov_13hfzteg62().s[20]++;
      clearTimeout(this.debounceTimer);
      /* istanbul ignore next */
      cov_13hfzteg62().s[21]++;
      this.debounceTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_13hfzteg62().b[2][1]++;
    }
    cov_13hfzteg62().s[22]++;
    await this.processPendingMutations();
  }
  /**
   * Planifie le traitement du batch avec debouncing
   */
  scheduleBatchProcessing() {
    /* istanbul ignore next */
    cov_13hfzteg62().f[4]++;
    cov_13hfzteg62().s[23]++;
    // Clear existing timer
    if (this.debounceTimer) {
      /* istanbul ignore next */
      cov_13hfzteg62().b[3][0]++;
      cov_13hfzteg62().s[24]++;
      clearTimeout(this.debounceTimer);
    } else
    /* istanbul ignore next */
    {
      cov_13hfzteg62().b[3][1]++;
    }
    // Check if we should process immediately
    const shouldProcessImmediately =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[25]++,
    /* istanbul ignore next */
    (cov_13hfzteg62().b[4][0]++, this.pendingMutations.size >= this.config.maxBatchSize) ||
    /* istanbul ignore next */
    (cov_13hfzteg62().b[4][1]++, this.hasHighPriorityMutation()) ||
    /* istanbul ignore next */
    (cov_13hfzteg62().b[4][2]++, this.hasOldestMutationExceededMaxWait()));
    /* istanbul ignore next */
    cov_13hfzteg62().s[26]++;
    if (shouldProcessImmediately) {
      /* istanbul ignore next */
      cov_13hfzteg62().b[5][0]++;
      cov_13hfzteg62().s[27]++;
      this.processPendingMutations().catch(error => {
        /* istanbul ignore next */
        cov_13hfzteg62().f[5]++;
        cov_13hfzteg62().s[28]++;
        ErrorHandler_1.errorHandler.logSimpleError('MutationBatcher', 'scheduleBatchProcessing', error);
      });
      /* istanbul ignore next */
      cov_13hfzteg62().s[29]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_13hfzteg62().b[5][1]++;
    }
    // Schedule debounced processing
    cov_13hfzteg62().s[30]++;
    this.debounceTimer = setTimeout(() => {
      /* istanbul ignore next */
      cov_13hfzteg62().f[6]++;
      cov_13hfzteg62().s[31]++;
      this.processPendingMutations().catch(error => {
        /* istanbul ignore next */
        cov_13hfzteg62().f[7]++;
        cov_13hfzteg62().s[32]++;
        ErrorHandler_1.errorHandler.logSimpleError('MutationBatcher', 'debounceTimer', error);
      });
    }, this.config.debounceMs);
  }
  /**
   * Vérifie s'il y a des mutations haute priorité
   */
  hasHighPriorityMutation() {
    /* istanbul ignore next */
    cov_13hfzteg62().f[8]++;
    cov_13hfzteg62().s[33]++;
    return Array.from(this.pendingMutations.values()).some(m => {
      /* istanbul ignore next */
      cov_13hfzteg62().f[9]++;
      cov_13hfzteg62().s[34]++;
      return m.priority === 'high';
    });
  }
  /**
   * Vérifie si la mutation la plus ancienne dépasse le temps d'attente max
   */
  hasOldestMutationExceededMaxWait() {
    /* istanbul ignore next */
    cov_13hfzteg62().f[10]++;
    const now =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[35]++, Date.now());
    const oldestMutation =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[36]++, Array.from(this.pendingMutations.values()).reduce((oldest, current) => {
      /* istanbul ignore next */
      cov_13hfzteg62().f[11]++;
      cov_13hfzteg62().s[37]++;
      return current.timestamp < oldest.timestamp ?
      /* istanbul ignore next */
      (cov_13hfzteg62().b[6][0]++, current) :
      /* istanbul ignore next */
      (cov_13hfzteg62().b[6][1]++, oldest);
    }));
    /* istanbul ignore next */
    cov_13hfzteg62().s[38]++;
    return /* istanbul ignore next */(cov_13hfzteg62().b[7][0]++, oldestMutation) &&
    /* istanbul ignore next */
    (cov_13hfzteg62().b[7][1]++, now - oldestMutation.timestamp > this.config.maxWaitTimeMs);
  }
  /**
   * Traite toutes les mutations en attente
   */
  async processPendingMutations() {
    /* istanbul ignore next */
    cov_13hfzteg62().f[12]++;
    cov_13hfzteg62().s[39]++;
    if (this.pendingMutations.size === 0) {
      /* istanbul ignore next */
      cov_13hfzteg62().b[8][0]++;
      cov_13hfzteg62().s[40]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_13hfzteg62().b[8][1]++;
    }
    const mutations =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[41]++, Array.from(this.pendingMutations.values()));
    /* istanbul ignore next */
    cov_13hfzteg62().s[42]++;
    this.pendingMutations.clear();
    /* istanbul ignore next */
    cov_13hfzteg62().s[43]++;
    try {
      const batchedMutation =
      /* istanbul ignore next */
      (cov_13hfzteg62().s[44]++, this.combineMutations(mutations));
      /* istanbul ignore next */
      cov_13hfzteg62().s[45]++;
      await this.onBatchReady(batchedMutation);
      /* istanbul ignore next */
      cov_13hfzteg62().s[46]++;
      this.updateStatistics(mutations.length);
      /* istanbul ignore next */
      cov_13hfzteg62().s[47]++;
      this.lastBatchTime = Date.now();
    } catch (error) {
      /* istanbul ignore next */
      cov_13hfzteg62().s[48]++;
      ErrorHandler_1.errorHandler.logSimpleError('MutationBatcher', 'processPendingMutations', error);
      // Re-add mutations if processing failed
      /* istanbul ignore next */
      cov_13hfzteg62().s[49]++;
      mutations.forEach(mutation => {
        /* istanbul ignore next */
        cov_13hfzteg62().f[13]++;
        cov_13hfzteg62().s[50]++;
        this.pendingMutations.set(mutation.id, mutation);
      });
    }
  }
  /**
   * Combine plusieurs mutations en une seule selon la stratégie configurée
   */
  combineMutations(mutations) {
    /* istanbul ignore next */
    cov_13hfzteg62().f[14]++;
    cov_13hfzteg62().s[51]++;
    if (mutations.length === 0) {
      /* istanbul ignore next */
      cov_13hfzteg62().b[9][0]++;
      cov_13hfzteg62().s[52]++;
      throw new Error('Cannot combine empty mutations array');
    } else
    /* istanbul ignore next */
    {
      cov_13hfzteg62().b[9][1]++;
    }
    const rates =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[53]++, mutations.map(m => {
      /* istanbul ignore next */
      cov_13hfzteg62().f[15]++;
      cov_13hfzteg62().s[54]++;
      return m.rate;
    }));
    const priorities =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[55]++, mutations.map(m => {
      /* istanbul ignore next */
      cov_13hfzteg62().f[16]++;
      cov_13hfzteg62().s[56]++;
      return m.priority;
    }));
    const timestamps =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[57]++, mutations.map(m => {
      /* istanbul ignore next */
      cov_13hfzteg62().f[17]++;
      cov_13hfzteg62().s[58]++;
      return m.timestamp;
    }));
    let combinedRate;
    /* istanbul ignore next */
    cov_13hfzteg62().s[59]++;
    switch (this.config.combinationStrategy) {
      case 'average':
        /* istanbul ignore next */
        cov_13hfzteg62().b[10][0]++;
        cov_13hfzteg62().s[60]++;
        combinedRate = rates.reduce((sum, rate) => {
          /* istanbul ignore next */
          cov_13hfzteg62().f[18]++;
          cov_13hfzteg62().s[61]++;
          return sum + rate;
        }, 0) / rates.length;
        /* istanbul ignore next */
        cov_13hfzteg62().s[62]++;
        break;
      case 'max':
        /* istanbul ignore next */
        cov_13hfzteg62().b[10][1]++;
        cov_13hfzteg62().s[63]++;
        combinedRate = Math.max(...rates);
        /* istanbul ignore next */
        cov_13hfzteg62().s[64]++;
        break;
      case 'sum':
        /* istanbul ignore next */
        cov_13hfzteg62().b[10][2]++;
        cov_13hfzteg62().s[65]++;
        combinedRate = Math.min(1, rates.reduce((sum, rate) => {
          /* istanbul ignore next */
          cov_13hfzteg62().f[19]++;
          cov_13hfzteg62().s[66]++;
          return sum + rate;
        }, 0));
        /* istanbul ignore next */
        cov_13hfzteg62().s[67]++;
        break;
      case 'weighted':
        /* istanbul ignore next */
        cov_13hfzteg62().b[10][3]++;
        cov_13hfzteg62().s[68]++;
        combinedRate = this.calculateWeightedRate(mutations);
        /* istanbul ignore next */
        cov_13hfzteg62().s[69]++;
        break;
      default:
        /* istanbul ignore next */
        cov_13hfzteg62().b[10][4]++;
        cov_13hfzteg62().s[70]++;
        combinedRate = rates.reduce((sum, rate) => {
          /* istanbul ignore next */
          cov_13hfzteg62().f[20]++;
          cov_13hfzteg62().s[71]++;
          return sum + rate;
        }, 0) / rates.length;
    }
    // Determine overall priority
    const hasCritical =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[72]++, priorities.includes('high'));
    const hasNormal =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[73]++, priorities.includes('normal'));
    const overallPriority =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[74]++, hasCritical ?
    /* istanbul ignore next */
    (cov_13hfzteg62().b[11][0]++, 'high') :
    /* istanbul ignore next */
    (cov_13hfzteg62().b[11][1]++, hasNormal ?
    /* istanbul ignore next */
    (cov_13hfzteg62().b[12][0]++, 'normal') :
    /* istanbul ignore next */
    (cov_13hfzteg62().b[12][1]++, 'low')));
    const timespan =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[75]++, Math.max(...timestamps) - Math.min(...timestamps));
    /* istanbul ignore next */
    cov_13hfzteg62().s[76]++;
    return {
      combinedRate: Math.max(0, Math.min(1, combinedRate)),
      requestCount: mutations.length,
      timespan,
      priority: overallPriority
    };
  }
  /**
   * Calcule un taux pondéré basé sur la priorité et le timing
   */
  calculateWeightedRate(mutations) {
    /* istanbul ignore next */
    cov_13hfzteg62().f[21]++;
    let totalWeight =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[77]++, 0);
    let weightedSum =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[78]++, 0);
    const now =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[79]++, Date.now());
    /* istanbul ignore next */
    cov_13hfzteg62().s[80]++;
    mutations.forEach(mutation => {
      /* istanbul ignore next */
      cov_13hfzteg62().f[22]++;
      // Weight based on priority
      let priorityWeight =
      /* istanbul ignore next */
      (cov_13hfzteg62().s[81]++, 1);
      /* istanbul ignore next */
      cov_13hfzteg62().s[82]++;
      switch (mutation.priority) {
        case 'high':
          /* istanbul ignore next */
          cov_13hfzteg62().b[13][0]++;
          cov_13hfzteg62().s[83]++;
          priorityWeight = 3;
          /* istanbul ignore next */
          cov_13hfzteg62().s[84]++;
          break;
        case 'normal':
          /* istanbul ignore next */
          cov_13hfzteg62().b[13][1]++;
          cov_13hfzteg62().s[85]++;
          priorityWeight = 2;
          /* istanbul ignore next */
          cov_13hfzteg62().s[86]++;
          break;
        case 'low':
          /* istanbul ignore next */
          cov_13hfzteg62().b[13][2]++;
          cov_13hfzteg62().s[87]++;
          priorityWeight = 1;
          /* istanbul ignore next */
          cov_13hfzteg62().s[88]++;
          break;
      }
      // Weight based on recency (more recent = higher weight)
      const age =
      /* istanbul ignore next */
      (cov_13hfzteg62().s[89]++, now - mutation.timestamp);
      const recencyWeight =
      /* istanbul ignore next */
      (cov_13hfzteg62().s[90]++, Math.exp(-age / 1000)); // Exponential decay
      const totalMutationWeight =
      /* istanbul ignore next */
      (cov_13hfzteg62().s[91]++, priorityWeight * recencyWeight);
      /* istanbul ignore next */
      cov_13hfzteg62().s[92]++;
      weightedSum += mutation.rate * totalMutationWeight;
      /* istanbul ignore next */
      cov_13hfzteg62().s[93]++;
      totalWeight += totalMutationWeight;
    });
    /* istanbul ignore next */
    cov_13hfzteg62().s[94]++;
    return totalWeight > 0 ?
    /* istanbul ignore next */
    (cov_13hfzteg62().b[14][0]++, weightedSum / totalWeight) :
    /* istanbul ignore next */
    (cov_13hfzteg62().b[14][1]++, 0);
  }
  /**
   * Met à jour les statistiques
   */
  updateStatistics(batchSize) {
    /* istanbul ignore next */
    cov_13hfzteg62().f[23]++;
    cov_13hfzteg62().s[95]++;
    this.totalBatches++;
    // Moving average for batch size
    const alpha =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[96]++, 0.1);
    /* istanbul ignore next */
    cov_13hfzteg62().s[97]++;
    this.averageBatchSize = this.averageBatchSize * (1 - alpha) + batchSize * alpha;
  }
  /**
   * Récupère les statistiques de performance
   */
  getStatistics() {
    /* istanbul ignore next */
    cov_13hfzteg62().f[24]++;
    const compressionRatio =
    /* istanbul ignore next */
    (cov_13hfzteg62().s[98]++, this.totalBatches > 0 ?
    /* istanbul ignore next */
    (cov_13hfzteg62().b[15][0]++, this.totalRequests / this.totalBatches) :
    /* istanbul ignore next */
    (cov_13hfzteg62().b[15][1]++, 1));
    /* istanbul ignore next */
    cov_13hfzteg62().s[99]++;
    return {
      totalRequests: this.totalRequests,
      totalBatches: this.totalBatches,
      averageBatchSize: this.averageBatchSize,
      compressionRatio,
      pendingMutations: this.pendingMutations.size,
      lastBatchTime: this.lastBatchTime,
      config: {
        ...this.config
      }
    };
  }
  /**
   * Met à jour la configuration
   */
  updateConfig(newConfig) {
    /* istanbul ignore next */
    cov_13hfzteg62().f[25]++;
    cov_13hfzteg62().s[100]++;
    this.config = {
      ...this.config,
      ...newConfig
    };
  }
  /**
   * Nettoie les ressources
   */
  dispose() {
    /* istanbul ignore next */
    cov_13hfzteg62().f[26]++;
    cov_13hfzteg62().s[101]++;
    if (this.debounceTimer) {
      /* istanbul ignore next */
      cov_13hfzteg62().b[16][0]++;
      cov_13hfzteg62().s[102]++;
      clearTimeout(this.debounceTimer);
      /* istanbul ignore next */
      cov_13hfzteg62().s[103]++;
      this.debounceTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_13hfzteg62().b[16][1]++;
    }
    cov_13hfzteg62().s[104]++;
    this.pendingMutations.clear();
  }
}
/* istanbul ignore next */
cov_13hfzteg62().s[105]++;
exports.MutationBatcher = MutationBatcher;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,