9ca8df4f98c1f3adb1f06bd7f609b9b0
"use strict";

// ml/behavioral-predictor.ts
// PrÃ©diction comportementale par apprentissage automatique (Phase 4)
/* istanbul ignore next */
function cov_fw2m078ty() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ml/behavioral-predictor.ts";
  var hash = "bd2c85879acebab84dddf1634f208baf8e75b9bc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ml/behavioral-predictor.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 62
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 37
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 26
        }
      },
      "3": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 26
        }
      },
      "4": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 47
        }
      },
      "5": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 39
        }
      },
      "6": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 63
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 19,
          column: 24
        }
      },
      "8": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 24
        }
      },
      "9": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 44
        }
      },
      "10": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "11": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 66
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 20
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 29,
          column: 21
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 21
        }
      },
      "15": {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 30,
          column: 23
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "17": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 51
        }
      },
      "18": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 34,
          column: 26
        }
      },
      "19": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 26
        }
      },
      "20": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 36,
          column: 61
        }
      },
      "21": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 82
        }
      },
      "22": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 24
        }
      },
      "23": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 25
        }
      },
      "24": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "25": {
        start: {
          line: 44,
          column: 24
        },
        end: {
          line: 44,
          column: 51
        }
      },
      "26": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 46,
          column: 33
        }
      },
      "27": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 33
        }
      },
      "28": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 69
        }
      },
      "29": {
        start: {
          line: 49,
          column: 22
        },
        end: {
          line: 49,
          column: 24
        }
      },
      "30": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "31": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 87
        }
      },
      "32": {
        start: {
          line: 51,
          column: 68
        },
        end: {
          line: 51,
          column: 79
        }
      },
      "33": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 21
        }
      },
      "34": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 56,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 27
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 22
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 40
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 51,
            column: 58
          },
          end: {
            line: 51,
            column: 59
          }
        },
        loc: {
          start: {
            line: 51,
            column: 68
          },
          end: {
            line: 51,
            column: 79
          }
        },
        line: 51
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 19,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 19,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 36
          }
        }, {
          start: {
            line: 22,
            column: 40
          },
          end: {
            line: 22,
            column: 44
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 29,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 29,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 34,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 34,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 36
          },
          end: {
            line: 36,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 36
          },
          end: {
            line: 36,
            column: 55
          }
        }, {
          start: {
            line: 36,
            column: 59
          },
          end: {
            line: 36,
            column: 60
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 46,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 46,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "6": {
        loc: {
          start: {
            line: 47,
            column: 37
          },
          end: {
            line: 47,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 37
          },
          end: {
            line: 47,
            column: 58
          }
        }, {
          start: {
            line: 47,
            column: 62
          },
          end: {
            line: 47,
            column: 63
          }
        }],
        line: 47
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ml/behavioral-predictor.ts",
      mappings: ";AAAA,6BAA6B;AAC7B,qEAAqE;;;AAErE,MAAa,mBAAmB;IAAhC;QACU,YAAO,GAAoC,EAAE,CAAA;QAC7C,UAAK,GAAQ,IAAI,CAAA,CAAC,4BAA4B;IA6CxD,CAAC;IA3CC,KAAK,CAAC,QAAa,EAAE,KAAU;QAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAA;QACtC,yEAAyE;QACzE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAA;QAC9B,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAA;IACxD,CAAC;IAED,OAAO,CAAC,QAAa;QACnB,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO,IAAI,CAAA;QAC5B,qFAAqF;QACrF,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAA;QACpC,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;QACzD,OAAO,IAAI,CAAA;IACb,CAAC;IAED,QAAQ;QACN,mEAAmE;QACnE,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO,CAAC,CAAA;QACzB,IAAI,OAAO,GAAG,CAAC,CAAA;QACf,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAA;YACvC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,KAAK;gBAAE,OAAO,EAAE,CAAA;QAC7C,CAAC;QACD,MAAM,QAAQ,GAAG,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA;QACrD,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;QACzE,OAAO,QAAQ,CAAA;IACjB,CAAC;IAEO,UAAU;QAChB,4DAA4D;QAC5D,MAAM,MAAM,GAA2C,EAAE,CAAA;QACzD,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAA;YACvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;YAClC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;QAC1D,CAAC;QACD,MAAM,KAAK,GAA2B,EAAE,CAAA;QACxC,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;YACzB,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC5E,CAAC;QACD,OAAO,KAAK,CAAA;IACd,CAAC;CACF;AA/CD,kDA+CC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ml/behavioral-predictor.ts"],
      sourcesContent: ["// ml/behavioral-predictor.ts\r\n// Pr\xE9diction comportementale par apprentissage automatique (Phase 4)\r\n\r\nexport class BehavioralPredictor {\r\n  private history: { features: any, label: any }[] = []\r\n  private model: any = null // Simulation d'un mod\xE8le ML\r\n\r\n  train(features: any, label: any) {\r\n    this.history.push({ features, label })\r\n    // Simulation : le \"mod\xE8le\" est la moyenne des labels pour chaque feature\r\n    this.model = this.buildModel()\r\n    console.log('[ML] Entra\xEEnement sur un nouvel exemple')\r\n  }\r\n\r\n  predict(features: any): any {\r\n    if (!this.model) return null\r\n    // Simulation : retourne la pr\xE9diction la plus fr\xE9quente pour des features similaires\r\n    const key = JSON.stringify(features)\r\n    const pred = this.model[key] || null\r\n    console.log('[ML] Pr\xE9diction pour', features, '=>', pred)\r\n    return pred\r\n  }\r\n\r\n  evaluate(): number {\r\n    // Simulation : pr\xE9cision = % de labels retrouv\xE9s dans l'historique\r\n    if (!this.model) return 0\r\n    let correct = 0\r\n    for (const ex of this.history) {\r\n      const key = JSON.stringify(ex.features)\r\n      if (this.model[key] === ex.label) correct++\r\n    }\r\n    const accuracy = correct / (this.history.length || 1)\r\n    console.log(`[ML] Pr\xE9cision du mod\xE8le : ${(accuracy * 100).toFixed(1)}%`)\r\n    return accuracy\r\n  }\r\n\r\n  private buildModel() {\r\n    // Simulation : dictionnaire feature->label le plus fr\xE9quent\r\n    const counts: Record<string, Record<string, number>> = {}\r\n    for (const ex of this.history) {\r\n      const key = JSON.stringify(ex.features)\r\n      if (!counts[key]) counts[key] = {}\r\n      counts[key][ex.label] = (counts[key][ex.label] || 0) + 1\r\n    }\r\n    const model: Record<string, string> = {}\r\n    for (const key in counts) {\r\n      model[key] = Object.entries(counts[key]).sort((a, b) => b[1] - a[1])[0][0]\r\n    }\r\n    return model\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bd2c85879acebab84dddf1634f208baf8e75b9bc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_fw2m078ty = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fw2m078ty();
cov_fw2m078ty().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_fw2m078ty().s[1]++;
exports.BehavioralPredictor = void 0;
class BehavioralPredictor {
  constructor() {
    /* istanbul ignore next */
    cov_fw2m078ty().f[0]++;
    cov_fw2m078ty().s[2]++;
    this.history = [];
    /* istanbul ignore next */
    cov_fw2m078ty().s[3]++;
    this.model = null; // Simulation d'un modÃ¨le ML
  }
  train(features, label) {
    /* istanbul ignore next */
    cov_fw2m078ty().f[1]++;
    cov_fw2m078ty().s[4]++;
    this.history.push({
      features,
      label
    });
    // Simulation : le "modÃ¨le" est la moyenne des labels pour chaque feature
    /* istanbul ignore next */
    cov_fw2m078ty().s[5]++;
    this.model = this.buildModel();
    /* istanbul ignore next */
    cov_fw2m078ty().s[6]++;
    console.log('[ML] EntraÃ®nement sur un nouvel exemple');
  }
  predict(features) {
    /* istanbul ignore next */
    cov_fw2m078ty().f[2]++;
    cov_fw2m078ty().s[7]++;
    if (!this.model) {
      /* istanbul ignore next */
      cov_fw2m078ty().b[0][0]++;
      cov_fw2m078ty().s[8]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_fw2m078ty().b[0][1]++;
    }
    // Simulation : retourne la prÃ©diction la plus frÃ©quente pour des features similaires
    const key =
    /* istanbul ignore next */
    (cov_fw2m078ty().s[9]++, JSON.stringify(features));
    const pred =
    /* istanbul ignore next */
    (cov_fw2m078ty().s[10]++,
    /* istanbul ignore next */
    (cov_fw2m078ty().b[1][0]++, this.model[key]) ||
    /* istanbul ignore next */
    (cov_fw2m078ty().b[1][1]++, null));
    /* istanbul ignore next */
    cov_fw2m078ty().s[11]++;
    console.log('[ML] PrÃ©diction pour', features, '=>', pred);
    /* istanbul ignore next */
    cov_fw2m078ty().s[12]++;
    return pred;
  }
  evaluate() {
    /* istanbul ignore next */
    cov_fw2m078ty().f[3]++;
    cov_fw2m078ty().s[13]++;
    // Simulation : prÃ©cision = % de labels retrouvÃ©s dans l'historique
    if (!this.model) {
      /* istanbul ignore next */
      cov_fw2m078ty().b[2][0]++;
      cov_fw2m078ty().s[14]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_fw2m078ty().b[2][1]++;
    }
    let correct =
    /* istanbul ignore next */
    (cov_fw2m078ty().s[15]++, 0);
    /* istanbul ignore next */
    cov_fw2m078ty().s[16]++;
    for (const ex of this.history) {
      const key =
      /* istanbul ignore next */
      (cov_fw2m078ty().s[17]++, JSON.stringify(ex.features));
      /* istanbul ignore next */
      cov_fw2m078ty().s[18]++;
      if (this.model[key] === ex.label) {
        /* istanbul ignore next */
        cov_fw2m078ty().b[3][0]++;
        cov_fw2m078ty().s[19]++;
        correct++;
      } else
      /* istanbul ignore next */
      {
        cov_fw2m078ty().b[3][1]++;
      }
    }
    const accuracy =
    /* istanbul ignore next */
    (cov_fw2m078ty().s[20]++, correct / (
    /* istanbul ignore next */
    (cov_fw2m078ty().b[4][0]++, this.history.length) ||
    /* istanbul ignore next */
    (cov_fw2m078ty().b[4][1]++, 1)));
    /* istanbul ignore next */
    cov_fw2m078ty().s[21]++;
    console.log(`[ML] PrÃ©cision du modÃ¨le : ${(accuracy * 100).toFixed(1)}%`);
    /* istanbul ignore next */
    cov_fw2m078ty().s[22]++;
    return accuracy;
  }
  buildModel() {
    /* istanbul ignore next */
    cov_fw2m078ty().f[4]++;
    // Simulation : dictionnaire feature->label le plus frÃ©quent
    const counts =
    /* istanbul ignore next */
    (cov_fw2m078ty().s[23]++, {});
    /* istanbul ignore next */
    cov_fw2m078ty().s[24]++;
    for (const ex of this.history) {
      const key =
      /* istanbul ignore next */
      (cov_fw2m078ty().s[25]++, JSON.stringify(ex.features));
      /* istanbul ignore next */
      cov_fw2m078ty().s[26]++;
      if (!counts[key]) {
        /* istanbul ignore next */
        cov_fw2m078ty().b[5][0]++;
        cov_fw2m078ty().s[27]++;
        counts[key] = {};
      } else
      /* istanbul ignore next */
      {
        cov_fw2m078ty().b[5][1]++;
      }
      cov_fw2m078ty().s[28]++;
      counts[key][ex.label] = (
      /* istanbul ignore next */
      (cov_fw2m078ty().b[6][0]++, counts[key][ex.label]) ||
      /* istanbul ignore next */
      (cov_fw2m078ty().b[6][1]++, 0)) + 1;
    }
    const model =
    /* istanbul ignore next */
    (cov_fw2m078ty().s[29]++, {});
    /* istanbul ignore next */
    cov_fw2m078ty().s[30]++;
    for (const key in counts) {
      /* istanbul ignore next */
      cov_fw2m078ty().s[31]++;
      model[key] = Object.entries(counts[key]).sort((a, b) => {
        /* istanbul ignore next */
        cov_fw2m078ty().f[5]++;
        cov_fw2m078ty().s[32]++;
        return b[1] - a[1];
      })[0][0];
    }
    /* istanbul ignore next */
    cov_fw2m078ty().s[33]++;
    return model;
  }
}
/* istanbul ignore next */
cov_fw2m078ty().s[34]++;
exports.BehavioralPredictor = BehavioralPredictor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,