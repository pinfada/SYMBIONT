{"version":3,"names":[],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/types/organism.ts"],"sourcesContent":["// Squelette minimal pour lever les erreurs d'import\r\nexport interface OrganismTraits {\r\n    curiosity: number;\r\n    focus: number;\r\n    rhythm: number;\r\n    empathy: number;\r\n    creativity: number;\r\n    [key: string]: number;\r\n}\r\n\r\nexport interface OrganismState {\r\n    /** Identifiant unique de l'organisme */\r\n    id: string;\r\n    /** Génération (lignée) */\r\n    generation: number;\r\n    /** ADN complet (pour héritage) */\r\n    dna: string;\r\n    /** Traits principaux */\r\n    traits: OrganismTraits;\r\n    /** Date de création */\r\n    birthTime: number;\r\n    /** Timestamp de la dernière mutation */\r\n    lastMutation: number | null;\r\n    /** Historique des mutations */\r\n    mutations: any[];\r\n    /** Connexions sociales */\r\n    socialConnections: string[];\r\n    /** Fragments de mémoire */\r\n    memoryFragments: any[];\r\n    // Ajouts pour compatibilité\r\n    health?: number;\r\n    energy?: number;\r\n    consciousness?: number;\r\n    createdAt?: number;\r\n    visualDNA?: string;\r\n}\r\n\r\nexport interface OrganismMutation {\r\n    type: 'visual' | 'behavioral' | 'cognitive';\r\n    trigger: string;\r\n    magnitude: number;\r\n    // Ajoutez d'autres propriétés si besoin\r\n}\r\n\r\nexport interface MutationState {\r\n    colorShift: number;\r\n    patternIntensity: number;\r\n    sizeMultiplier: number;\r\n    opacity: number;\r\n}\r\n\r\nexport interface BehaviorPattern {\r\n    url: string;\r\n    interactions: number;\r\n    timeSpent: number;\r\n    scrollDepth: number;\r\n    timestamp: number;\r\n}\r\n\r\nexport interface Mutation {\r\n    trait: string;\r\n    delta: number;\r\n    reason: string;\r\n}\r\n\r\nexport interface PageContext {\r\n    url: string;\r\n    time: number;\r\n    userAgent: string;\r\n}\r\n\r\nexport interface ActionPrediction {\r\n    action: string;\r\n    confidence: number;\r\n    alternatives?: string[];\r\n    reasoning?: string;\r\n}\r\n\r\nexport interface Message {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\nexport type MessageType = string;\r\n\r\nexport interface RoutingResult {\r\n    success: boolean;\r\n    route?: string;\r\n}\r\n\r\nexport interface PerformanceMetrics {\r\n    cpu: number;\r\n    memory: number;\r\n    latency: number;\r\n}\r\n\r\nexport interface OrganismHistory {\r\n    states: OrganismState[];\r\n    mutations: Mutation[];\r\n}\r\n\r\nexport interface TimeSpan {\r\n    start: number;\r\n    end: number;\r\n}\r\n\r\nexport interface ConsolidationResult {\r\n    consolidated: boolean;\r\n    details?: string;\r\n}\r\n\r\nexport interface RenderQueue extends Array<any> {}\r\nexport interface WebGLContext {}\r\nexport interface VisualMutation {}"],"mappings":"","ignoreList":[]}