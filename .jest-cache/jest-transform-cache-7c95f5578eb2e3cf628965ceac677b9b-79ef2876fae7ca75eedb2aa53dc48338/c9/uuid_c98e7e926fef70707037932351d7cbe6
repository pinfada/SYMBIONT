f8f793432d290e4da608e7873ca0cb13
"use strict";

/* istanbul ignore next */
function cov_14aqfnksqn() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/uuid.ts";
  var hash = "d141bf67c03b8980c4198b0628e8dc8942900a0e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/uuid.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 54
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 48
        }
      },
      "4": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 48
        }
      },
      "5": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 48
        }
      },
      "6": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "8": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "9": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 94
        }
      },
      "10": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 46
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 29,
          column: 48
        }
      },
      "12": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "13": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 35
        }
      },
      "14": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "generateUUID",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 21
          }
        },
        loc: {
          start: {
            line: 11,
            column: 24
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "isCryptoUUIDAvailable",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 30
          }
        },
        loc: {
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 27
      },
      "2": {
        name: "generateSecureUUID",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 27
          }
        },
        loc: {
          start: {
            line: 35,
            column: 30
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 35
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 13,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 13,
            column: 37
          }
        }, {
          start: {
            line: 13,
            column: 41
          },
          end: {
            line: 13,
            column: 58
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 29,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 40
          }
        }, {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 47
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/uuid.ts",
      mappings: ";;AAMA,oCAYC;AAKD,sDAGC;AAMD,gDAOC;AAvCD,iDAA8C;AAC9C,iDAAwC;AAExC;;GAEG;AACH,SAAgB,YAAY;IAC1B,kDAAkD;IAClD,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;QACvD,IAAI,CAAC;YACH,OAAO,MAAM,CAAC,UAAU,EAAE,CAAC;QAC7B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,qBAAM,CAAC,IAAI,CAAC,0CAA0C,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAED,6DAA6D;IAC7D,OAAO,2BAAY,CAAC,IAAI,EAAE,CAAC;AAC7B,CAAC;AAED;;GAEG;AACH,SAAgB,qBAAqB;IACnC,OAAO,OAAO,MAAM,KAAK,WAAW;QAC7B,OAAO,MAAM,CAAC,UAAU,KAAK,UAAU,CAAC;AACjD,CAAC;AAED;;;GAGG;AACH,SAAgB,kBAAkB;IAChC,IAAI,qBAAqB,EAAE,EAAE,CAAC;QAC5B,OAAO,MAAM,CAAC,UAAU,EAAE,CAAC;IAC7B,CAAC;IAED,oCAAoC;IACpC,OAAO,2BAAY,CAAC,IAAI,EAAE,CAAC;AAC7B,CAAC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/uuid.ts"],
      sourcesContent: ["import { SecureRandom } from './secureRandom';\r\nimport { logger } from './secureLogger';\r\n\r\n/**\r\n * G\xE9n\xE8re un UUID v4 avec fallback pour les environnements sans crypto.randomUUID\r\n */\r\nexport function generateUUID(): string {\r\n  // Essayer d'abord crypto.randomUUID si disponible\r\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\r\n    try {\r\n      return crypto.randomUUID();\r\n    } catch (error) {\r\n      logger.warn('crypto.randomUUID failed, using fallback', { error });\r\n    }\r\n  }\r\n\r\n  // Utilise notre g\xE9n\xE9rateur s\xE9curis\xE9 au lieu de Math.random()\r\n  return SecureRandom.uuid();\r\n}\r\n\r\n/**\r\n * V\xE9rifie si crypto.randomUUID est disponible dans l'environnement actuel\r\n */\r\nexport function isCryptoUUIDAvailable(): boolean {\r\n  return typeof crypto !== 'undefined' && \r\n         typeof crypto.randomUUID === 'function';\r\n}\r\n\r\n/**\r\n * G\xE9n\xE8re un UUID v4 cryptographiquement s\xE9curis\xE9 si possible\r\n * Utilise le syst\xE8me SecureRandom comme fallback s\xE9curis\xE9\r\n */\r\nexport function generateSecureUUID(): string {\r\n  if (isCryptoUUIDAvailable()) {\r\n    return crypto.randomUUID();\r\n  }\r\n\r\n  // Utilise notre g\xE9n\xE9rateur s\xE9curis\xE9\r\n  return SecureRandom.uuid();\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d141bf67c03b8980c4198b0628e8dc8942900a0e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14aqfnksqn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14aqfnksqn();
cov_14aqfnksqn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_14aqfnksqn().s[1]++;
exports.generateUUID = generateUUID;
/* istanbul ignore next */
cov_14aqfnksqn().s[2]++;
exports.isCryptoUUIDAvailable = isCryptoUUIDAvailable;
/* istanbul ignore next */
cov_14aqfnksqn().s[3]++;
exports.generateSecureUUID = generateSecureUUID;
const secureRandom_1 =
/* istanbul ignore next */
(cov_14aqfnksqn().s[4]++, require("./secureRandom"));
const secureLogger_1 =
/* istanbul ignore next */
(cov_14aqfnksqn().s[5]++, require("./secureLogger"));
/**
 * Génère un UUID v4 avec fallback pour les environnements sans crypto.randomUUID
 */
function generateUUID() {
  /* istanbul ignore next */
  cov_14aqfnksqn().f[0]++;
  cov_14aqfnksqn().s[6]++;
  // Essayer d'abord crypto.randomUUID si disponible
  if (
  /* istanbul ignore next */
  (cov_14aqfnksqn().b[1][0]++, typeof crypto !== 'undefined') &&
  /* istanbul ignore next */
  (cov_14aqfnksqn().b[1][1]++, crypto.randomUUID)) {
    /* istanbul ignore next */
    cov_14aqfnksqn().b[0][0]++;
    cov_14aqfnksqn().s[7]++;
    try {
      /* istanbul ignore next */
      cov_14aqfnksqn().s[8]++;
      return crypto.randomUUID();
    } catch (error) {
      /* istanbul ignore next */
      cov_14aqfnksqn().s[9]++;
      secureLogger_1.logger.warn('crypto.randomUUID failed, using fallback', {
        error
      });
    }
  } else
  /* istanbul ignore next */
  {
    cov_14aqfnksqn().b[0][1]++;
  }
  // Utilise notre générateur sécurisé au lieu de Math.random()
  cov_14aqfnksqn().s[10]++;
  return secureRandom_1.SecureRandom.uuid();
}
/**
 * Vérifie si crypto.randomUUID est disponible dans l'environnement actuel
 */
function isCryptoUUIDAvailable() {
  /* istanbul ignore next */
  cov_14aqfnksqn().f[1]++;
  cov_14aqfnksqn().s[11]++;
  return /* istanbul ignore next */(cov_14aqfnksqn().b[2][0]++, typeof crypto !== 'undefined') &&
  /* istanbul ignore next */
  (cov_14aqfnksqn().b[2][1]++, typeof crypto.randomUUID === 'function');
}
/**
 * Génère un UUID v4 cryptographiquement sécurisé si possible
 * Utilise le système SecureRandom comme fallback sécurisé
 */
function generateSecureUUID() {
  /* istanbul ignore next */
  cov_14aqfnksqn().f[2]++;
  cov_14aqfnksqn().s[12]++;
  if (isCryptoUUIDAvailable()) {
    /* istanbul ignore next */
    cov_14aqfnksqn().b[3][0]++;
    cov_14aqfnksqn().s[13]++;
    return crypto.randomUUID();
  } else
  /* istanbul ignore next */
  {
    cov_14aqfnksqn().b[3][1]++;
  }
  // Utilise notre générateur sécurisé
  cov_14aqfnksqn().s[14]++;
  return secureRandom_1.SecureRandom.uuid();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMTRhcWZua3NxbiIsImFjdHVhbENvdmVyYWdlIiwicyIsImV4cG9ydHMiLCJnZW5lcmF0ZVVVSUQiLCJpc0NyeXB0b1VVSURBdmFpbGFibGUiLCJnZW5lcmF0ZVNlY3VyZVVVSUQiLCJzZWN1cmVSYW5kb21fMSIsInJlcXVpcmUiLCJzZWN1cmVMb2dnZXJfMSIsImYiLCJiIiwiY3J5cHRvIiwicmFuZG9tVVVJRCIsImVycm9yIiwibG9nZ2VyIiwid2FybiIsIlNlY3VyZVJhbmRvbSIsInV1aWQiXSwic291cmNlcyI6WyIvbW50L2MvVXNlcnMvbV9vbGkvUHJvamV0cy9TWU1CSU9OVC9zcmMvc2hhcmVkL3V0aWxzL3V1aWQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2VjdXJlUmFuZG9tIH0gZnJvbSAnLi9zZWN1cmVSYW5kb20nO1xyXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICcuL3NlY3VyZUxvZ2dlcic7XHJcblxyXG4vKipcclxuICogR8OpbsOocmUgdW4gVVVJRCB2NCBhdmVjIGZhbGxiYWNrIHBvdXIgbGVzIGVudmlyb25uZW1lbnRzIHNhbnMgY3J5cHRvLnJhbmRvbVVVSURcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVVVSUQoKTogc3RyaW5nIHtcclxuICAvLyBFc3NheWVyIGQnYWJvcmQgY3J5cHRvLnJhbmRvbVVVSUQgc2kgZGlzcG9uaWJsZVxyXG4gIGlmICh0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiBjcnlwdG8ucmFuZG9tVVVJRCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGNyeXB0by5yYW5kb21VVUlEKCk7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBsb2dnZXIud2FybignY3J5cHRvLnJhbmRvbVVVSUQgZmFpbGVkLCB1c2luZyBmYWxsYmFjaycsIHsgZXJyb3IgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBVdGlsaXNlIG5vdHJlIGfDqW7DqXJhdGV1ciBzw6ljdXJpc8OpIGF1IGxpZXUgZGUgTWF0aC5yYW5kb20oKVxyXG4gIHJldHVybiBTZWN1cmVSYW5kb20udXVpZCgpO1xyXG59XHJcblxyXG4vKipcclxuICogVsOpcmlmaWUgc2kgY3J5cHRvLnJhbmRvbVVVSUQgZXN0IGRpc3BvbmlibGUgZGFucyBsJ2Vudmlyb25uZW1lbnQgYWN0dWVsXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNDcnlwdG9VVUlEQXZhaWxhYmxlKCk6IGJvb2xlYW4ge1xyXG4gIHJldHVybiB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiBcclxuICAgICAgICAgdHlwZW9mIGNyeXB0by5yYW5kb21VVUlEID09PSAnZnVuY3Rpb24nO1xyXG59XHJcblxyXG4vKipcclxuICogR8OpbsOocmUgdW4gVVVJRCB2NCBjcnlwdG9ncmFwaGlxdWVtZW50IHPDqWN1cmlzw6kgc2kgcG9zc2libGVcclxuICogVXRpbGlzZSBsZSBzeXN0w6htZSBTZWN1cmVSYW5kb20gY29tbWUgZmFsbGJhY2sgc8OpY3VyaXPDqVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlU2VjdXJlVVVJRCgpOiBzdHJpbmcge1xyXG4gIGlmIChpc0NyeXB0b1VVSURBdmFpbGFibGUoKSkge1xyXG4gICAgcmV0dXJuIGNyeXB0by5yYW5kb21VVUlEKCk7XHJcbiAgfVxyXG5cclxuICAvLyBVdGlsaXNlIG5vdHJlIGfDqW7DqXJhdGV1ciBzw6ljdXJpc8OpXHJcbiAgcmV0dXJuIFNlY3VyZVJhbmRvbS51dWlkKCk7XHJcbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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