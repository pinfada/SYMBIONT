e3d6c4d13261fd98749f50f37435ef62
"use strict";

/* istanbul ignore next */
function cov_x9hf5l2xm() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/secureLogger.ts";
  var hash = "123b41fbc1d40c8b8ce3aaa155f01dd92838a4ea";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/secureLogger.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 151
        }
      },
      "2": {
        start: {
          line: 4,
          column: 23
        },
        end: {
          line: 4,
          column: 60
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "4": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 46
        }
      },
      "5": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "6": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 44
        }
      },
      "7": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "8": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "9": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 46
        }
      },
      "10": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "11": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 29,
          column: 10
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "13": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 91
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 52
        }
      },
      "15": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 39,
          column: 97
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "17": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 45
        }
      },
      "18": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "19": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "20": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 65
        }
      },
      "21": {
        start: {
          line: 50,
          column: 40
        },
        end: {
          line: 50,
          column: 63
        }
      },
      "22": {
        start: {
          line: 52,
          column: 30
        },
        end: {
          line: 52,
          column: 32
        }
      },
      "23": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "24": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 59,
          column: 17
        }
      },
      "25": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 55,
          column: 50
        }
      },
      "26": {
        start: {
          line: 58,
          column: 20
        },
        end: {
          line: 58,
          column: 62
        }
      },
      "27": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 29
        }
      },
      "28": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 20
        }
      },
      "29": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 66,
          column: 27
        }
      },
      "30": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "31": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 65
        }
      },
      "32": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "33": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 112
        }
      },
      "34": {
        start: {
          line: 73,
          column: 57
        },
        end: {
          line: 73,
          column: 110
        }
      },
      "35": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 76,
          column: 50
        }
      },
      "36": {
        start: {
          line: 77,
          column: 26
        },
        end: {
          line: 77,
          column: 41
        }
      },
      "37": {
        start: {
          line: 78,
          column: 27
        },
        end: {
          line: 78,
          column: 57
        }
      },
      "38": {
        start: {
          line: 79,
          column: 24
        },
        end: {
          line: 79,
          column: 71
        }
      },
      "39": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 80
        }
      },
      "40": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 42
        }
      },
      "41": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "42": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 19
        }
      },
      "43": {
        start: {
          line: 89,
          column: 30
        },
        end: {
          line: 89,
          column: 72
        }
      },
      "44": {
        start: {
          line: 90,
          column: 33
        },
        end: {
          line: 90,
          column: 61
        }
      },
      "45": {
        start: {
          line: 91,
          column: 25
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "46": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "47": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 43
        }
      },
      "48": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "49": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 88
        }
      },
      "50": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "51": {
        start: {
          line: 109,
          column: 37
        },
        end: {
          line: 109,
          column: 104
        }
      },
      "52": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "53": {
        start: {
          line: 113,
          column: 20
        },
        end: {
          line: 113,
          column: 72
        }
      },
      "54": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 26
        }
      },
      "55": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 116,
          column: 51
        }
      },
      "56": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 26
        }
      },
      "57": {
        start: {
          line: 119,
          column: 20
        },
        end: {
          line: 119,
          column: 51
        }
      },
      "58": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 26
        }
      },
      "59": {
        start: {
          line: 123,
          column: 20
        },
        end: {
          line: 123,
          column: 52
        }
      },
      "60": {
        start: {
          line: 124,
          column: 20
        },
        end: {
          line: 124,
          column: 26
        }
      },
      "61": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 57
        }
      },
      "62": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 57
        }
      },
      "63": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 56
        }
      },
      "64": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 56
        }
      },
      "65": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 57
        }
      },
      "66": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 57
        }
      },
      "67": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 34
        }
      },
      "68": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 43
        }
      },
      "69": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "70": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 73
        }
      },
      "71": {
        start: {
          line: 156,
          column: 51
        },
        end: {
          line: 156,
          column: 71
        }
      },
      "72": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 36
        }
      },
      "73": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 29
        }
      },
      "74": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 56
        }
      },
      "75": {
        start: {
          line: 167,
          column: 0
        },
        end: {
          line: 167,
          column: 36
        }
      },
      "76": {
        start: {
          line: 169,
          column: 0
        },
        end: {
          line: 188,
          column: 2
        }
      },
      "77": {
        start: {
          line: 190,
          column: 0
        },
        end: {
          line: 190,
          column: 59
        }
      },
      "78": {
        start: {
          line: 192,
          column: 0
        },
        end: {
          line: 192,
          column: 61
        }
      },
      "79": {
        start: {
          line: 193,
          column: 0
        },
        end: {
          line: 193,
          column: 62
        }
      },
      "80": {
        start: {
          line: 194,
          column: 0
        },
        end: {
          line: 194,
          column: 64
        }
      },
      "81": {
        start: {
          line: 195,
          column: 0
        },
        end: {
          line: 195,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 1
          },
          end: {
            line: 10,
            column: 2
          }
        },
        loc: {
          start: {
            line: 10,
            column: 21
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 31
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 19
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 44
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 33
          }
        },
        loc: {
          start: {
            line: 50,
            column: 40
          },
          end: {
            line: 50,
            column: 63
          }
        },
        line: 50
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 32
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 72
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 73,
            column: 48
          },
          end: {
            line: 73,
            column: 49
          }
        },
        loc: {
          start: {
            line: 73,
            column: 57
          },
          end: {
            line: 73,
            column: 110
          }
        },
        line: 73
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 49
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 75
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 21
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 82
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 39
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 85
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 34
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 129
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 34
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 132
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        loc: {
          start: {
            line: 135,
            column: 33
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 135
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 138,
            column: 5
          }
        },
        loc: {
          start: {
            line: 138,
            column: 33
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 138
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        loc: {
          start: {
            line: 141,
            column: 34
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 141
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 34
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 144
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        loc: {
          start: {
            line: 148,
            column: 20
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 148
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        loc: {
          start: {
            line: 151,
            column: 26
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 151
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 19
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 154
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 156,
            column: 42
          },
          end: {
            line: 156,
            column: 43
          }
        },
        loc: {
          start: {
            line: 156,
            column: 51
          },
          end: {
            line: 156,
            column: 71
          }
        },
        line: 156
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 160,
            column: 4
          },
          end: {
            line: 160,
            column: 5
          }
        },
        loc: {
          start: {
            line: 160,
            column: 16
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 160
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 163,
            column: 5
          }
        },
        loc: {
          start: {
            line: 163,
            column: 17
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 163
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 3
          },
          end: {
            line: 17,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 3
          },
          end: {
            line: 17,
            column: 11
          }
        }, {
          start: {
            line: 17,
            column: 16
          },
          end: {
            line: 17,
            column: 48
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 19,
            column: 25
          },
          end: {
            line: 19,
            column: 27
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 39,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 38,
            column: 52
          }
        }, {
          start: {
            line: 39,
            column: 13
          },
          end: {
            line: 39,
            column: 42
          }
        }, {
          start: {
            line: 39,
            column: 46
          },
          end: {
            line: 39,
            column: 95
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 36
          }
        }, {
          start: {
            line: 48,
            column: 40
          },
          end: {
            line: 48,
            column: 53
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "8": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 59,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 59,
            column: 17
          }
        }, {
          start: {
            line: 57,
            column: 21
          },
          end: {
            line: 59,
            column: 17
          }
        }],
        line: 54
      },
      "9": {
        loc: {
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 78,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 37
          },
          end: {
            line: 78,
            column: 52
          }
        }, {
          start: {
            line: 78,
            column: 55
          },
          end: {
            line: 78,
            column: 57
          }
        }],
        line: 78
      },
      "10": {
        loc: {
          start: {
            line: 79,
            column: 24
          },
          end: {
            line: 79,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 79,
            column: 31
          },
          end: {
            line: 79,
            column: 66
          }
        }, {
          start: {
            line: 79,
            column: 69
          },
          end: {
            line: 79,
            column: 71
          }
        }],
        line: 79
      },
      "11": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "12": {
        loc: {
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 89,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 37
          },
          end: {
            line: 89,
            column: 60
          }
        }, {
          start: {
            line: 89,
            column: 63
          },
          end: {
            line: 89,
            column: 72
          }
        }],
        line: 89
      },
      "13": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "14": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "15": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "16": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 125,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 111,
            column: 36
          }
        }, {
          start: {
            line: 112,
            column: 16
          },
          end: {
            line: 114,
            column: 26
          }
        }, {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 117,
            column: 26
          }
        }, {
          start: {
            line: 118,
            column: 16
          },
          end: {
            line: 120,
            column: 26
          }
        }, {
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 36
          }
        }, {
          start: {
            line: 122,
            column: 16
          },
          end: {
            line: 124,
            column: 26
          }
        }],
        line: 110
      },
      "17": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/secureLogger.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/secureLogger.ts"],
      sourcesContent: ["import { SecureLogger } from '@shared/utils/secureLogger';\n/**\n * Syst\xE8me de logging s\xE9curis\xE9\n * Remplace console.log avec protection des donn\xE9es sensibles et gestion des niveaux\n */\n\nexport enum LogLevel {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  FATAL = 5\n}\n\ninterface LogConfig {\n  level: LogLevel;\n  enableConsole: boolean;\n  enableStorage: boolean;\n  maxStorageEntries: number;\n  sensitiveFields: string[];\n  productionMode: boolean;\n}\n\ninterface LogEntry {\n  timestamp: number;\n  level: LogLevel;\n  message: string;\n  data?: any;\n  context?: string | undefined;\n  sanitized: boolean;\n}\n\nexport class SecureLogger {\n  private static instance: SecureLogger;\n  private config: LogConfig;\n  private logEntries: LogEntry[] = [];\n  \n  // Patterns pour d\xE9tecter les donn\xE9es sensibles\n  private static readonly SENSITIVE_PATTERNS = [\n    /password/i,\n    /token/i,\n    /key/i,\n    /secret/i,\n    /auth/i,\n    /credential/i,\n    /session/i,\n    /cookie/i,\n    /jwt/i,\n    /bearer/i,\n    /api[_-]?key/i,\n    /access[_-]?token/i,\n    /refresh[_-]?token/i,\n    /private[_-]?key/i,\n    /\\b[A-Za-z0-9+/]{32,}={0,2}\\b/, // Base64\n    /\\b[0-9a-f]{32,}\\b/i, // Hex strings\n    /\\b[0-9]{4}[_-]?[0-9]{4}[_-]?[0-9]{4}[_-]?[0-9]{4}\\b/, // Credit card pattern\n    /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/ // Email\n  ];\n\n  private constructor(config: Partial<LogConfig> = {}) {\n    this.config = {\n      level: LogLevel.INFO,\n      enableConsole: !this.isProduction(),\n      enableStorage: true,\n      maxStorageEntries: 1000,\n      sensitiveFields: ['password', 'token', 'key', 'secret', 'auth'],\n      productionMode: this.isProduction(),\n      ...config\n    };\n  }\n\n  static getInstance(config?: Partial<LogConfig>): SecureLogger {\n    if (!SecureLogger.instance) {\n      SecureLogger.instance = new SecureLogger(config);\n    }\n    return SecureLogger.instance;\n  }\n\n  private isProduction(): boolean {\n    return process.env.NODE_ENV === 'production' || \n           (typeof chrome !== 'undefined' && typeof chrome.runtime?.getManifest === 'function');\n  }\n\n  /**\n   * Sanitise les donn\xE9es pour supprimer les informations sensibles\n   */\n  private sanitizeData(data: any): any {\n    if (typeof data === 'string') {\n      return this.sanitizeString(data);\n    }\n\n    if (typeof data === 'object' && data !== null) {\n      if (Array.isArray(data)) {\n        return data.map(item => this.sanitizeData(item));\n      }\n\n      const sanitized: any = {};\n      for (const [key, value] of Object.entries(data)) {\n        if (this.isSensitiveField(key)) {\n          sanitized[key] = '[REDACTED]';\n        } else {\n          sanitized[key] = this.sanitizeData(value);\n        }\n      }\n      return sanitized;\n    }\n\n    return data;\n  }\n\n  private sanitizeString(str: string): string {\n    let sanitized = str;\n    \n    for (const pattern of SecureLogger.SENSITIVE_PATTERNS) {\n      sanitized = sanitized.replace(pattern, '[REDACTED]');\n    }\n    \n    return sanitized;\n  }\n\n  private isSensitiveField(fieldName: string): boolean {\n    return this.config.sensitiveFields.some(field => \n      fieldName.toLowerCase().includes(field.toLowerCase())\n    );\n  }\n\n  private formatMessage(level: LogLevel, message: string, data?: any, context?: string): string {\n    const timestamp = new Date().toISOString();\n    const levelName = LogLevel[level];\n    const contextStr = context ? ` [${context}]` : '';\n    const dataStr = data ? ` ${JSON.stringify(data, null, 2)}` : '';\n    \n    return `[${timestamp}] ${levelName}${contextStr}: ${message}${dataStr}`;\n  }\n\n  private shouldLog(level: LogLevel): boolean {\n    return level >= this.config.level;\n  }\n\n  private log(level: LogLevel, message: string, data?: any, context?: string): void {\n    if (!this.shouldLog(level)) {\n      return;\n    }\n\n    const sanitizedData = data ? this.sanitizeData(data) : undefined;\n    const sanitizedMessage = this.sanitizeString(message);\n\n    const logEntry: LogEntry = {\n      timestamp: Date.now(),\n      level,\n      message: sanitizedMessage,\n      data: sanitizedData,\n      context,\n      sanitized: true\n    };\n\n    // Stockage des logs\n    if (this.config.enableStorage) {\n      this.logEntries.push(logEntry);\n      \n      // Limiter le nombre d'entr\xE9es en m\xE9moire\n      if (this.logEntries.length > this.config.maxStorageEntries) {\n        this.logEntries = this.logEntries.slice(-this.config.maxStorageEntries);\n      }\n    }\n\n    // Affichage console (seulement en d\xE9veloppement par d\xE9faut)\n    if (this.config.enableConsole) {\n      const formattedMessage = this.formatMessage(level, sanitizedMessage, sanitizedData, context);\n      \n      switch (level) {\n        case LogLevel.TRACE:\n        case LogLevel.DEBUG:\n          SecureLogger.debug(formattedMessage);\n          break;\n        case LogLevel.INFO:\n          console.info(formattedMessage);\n          break;\n        case LogLevel.WARN:\n          console.warn(formattedMessage);\n          break;\n        case LogLevel.ERROR:\n        case LogLevel.FATAL:\n          console.error(formattedMessage);\n          break;\n      }\n    }\n  }\n\n  // M\xE9thodes publiques de logging\n  trace(message: string, data?: any, context?: string): void {\n    this.log(LogLevel.TRACE, message, data, context);\n  }\n\n  debug(message: string, data?: any, context?: string): void {\n    this.log(LogLevel.DEBUG, message, data, context);\n  }\n\n  info(message: string, data?: any, context?: string): void {\n    this.log(LogLevel.INFO, message, data, context);\n  }\n\n  warn(message: string, data?: any, context?: string): void {\n    this.log(LogLevel.WARN, message, data, context);\n  }\n\n  error(message: string, data?: any, context?: string): void {\n    this.log(LogLevel.ERROR, message, data, context);\n  }\n\n  fatal(message: string, data?: any, context?: string): void {\n    this.log(LogLevel.FATAL, message, data, context);\n  }\n\n  // M\xE9thodes utilitaires\n  setLevel(level: LogLevel): void {\n    this.config.level = level;\n  }\n\n  enableConsole(enable: boolean): void {\n    this.config.enableConsole = enable;\n  }\n\n  getLogs(level?: LogLevel): LogEntry[] {\n    if (level !== undefined) {\n      return this.logEntries.filter(entry => entry.level >= level);\n    }\n    return [...this.logEntries];\n  }\n\n  clearLogs(): void {\n    this.logEntries = [];\n  }\n\n  exportLogs(): string {\n    return JSON.stringify(this.logEntries, null, 2);\n  }\n}\n\n// Instance globale pour un usage facile\nexport const logger = SecureLogger.getInstance();\n\n// Aliases pour migration facile depuis console.log\nexport const secureLog = logger.info.bind(logger);\nexport const secureWarn = logger.warn.bind(logger);\nexport const secureError = logger.error.bind(logger);\nexport const secureDebug = logger.debug.bind(logger);"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "123b41fbc1d40c8b8ce3aaa155f01dd92838a4ea"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_x9hf5l2xm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_x9hf5l2xm();
cov_x9hf5l2xm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_x9hf5l2xm().s[1]++;
exports.secureDebug = exports.secureError = exports.secureWarn = exports.secureLog = exports.logger = exports.SecureLogger = exports.LogLevel = void 0;
const secureLogger_1 =
/* istanbul ignore next */
(cov_x9hf5l2xm().s[2]++, require("@shared/utils/secureLogger"));
/**
 * Système de logging sécurisé
 * Remplace console.log avec protection des données sensibles et gestion des niveaux
 */
var LogLevel;
/* istanbul ignore next */
cov_x9hf5l2xm().s[3]++;
(function (LogLevel) {
  /* istanbul ignore next */
  cov_x9hf5l2xm().f[0]++;
  cov_x9hf5l2xm().s[4]++;
  LogLevel[LogLevel["TRACE"] = 0] = "TRACE";
  /* istanbul ignore next */
  cov_x9hf5l2xm().s[5]++;
  LogLevel[LogLevel["DEBUG"] = 1] = "DEBUG";
  /* istanbul ignore next */
  cov_x9hf5l2xm().s[6]++;
  LogLevel[LogLevel["INFO"] = 2] = "INFO";
  /* istanbul ignore next */
  cov_x9hf5l2xm().s[7]++;
  LogLevel[LogLevel["WARN"] = 3] = "WARN";
  /* istanbul ignore next */
  cov_x9hf5l2xm().s[8]++;
  LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
  /* istanbul ignore next */
  cov_x9hf5l2xm().s[9]++;
  LogLevel[LogLevel["FATAL"] = 5] = "FATAL";
})(
/* istanbul ignore next */
(cov_x9hf5l2xm().b[0][0]++, LogLevel) ||
/* istanbul ignore next */
(cov_x9hf5l2xm().b[0][1]++, exports.LogLevel = LogLevel = {}));
class SecureLogger {
  constructor(config =
  /* istanbul ignore next */
  (cov_x9hf5l2xm().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[1]++;
    cov_x9hf5l2xm().s[10]++;
    this.logEntries = [];
    /* istanbul ignore next */
    cov_x9hf5l2xm().s[11]++;
    this.config = {
      level: LogLevel.INFO,
      enableConsole: !this.isProduction(),
      enableStorage: true,
      maxStorageEntries: 1000,
      sensitiveFields: ['password', 'token', 'key', 'secret', 'auth'],
      productionMode: this.isProduction(),
      ...config
    };
  }
  static getInstance(config) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[2]++;
    cov_x9hf5l2xm().s[12]++;
    if (!secureLogger_1.SecureLogger.instance) {
      /* istanbul ignore next */
      cov_x9hf5l2xm().b[2][0]++;
      cov_x9hf5l2xm().s[13]++;
      secureLogger_1.SecureLogger.instance = new secureLogger_1.SecureLogger(config);
    } else
    /* istanbul ignore next */
    {
      cov_x9hf5l2xm().b[2][1]++;
    }
    cov_x9hf5l2xm().s[14]++;
    return secureLogger_1.SecureLogger.instance;
  }
  isProduction() {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[3]++;
    cov_x9hf5l2xm().s[15]++;
    return /* istanbul ignore next */(cov_x9hf5l2xm().b[3][0]++, process.env.NODE_ENV === 'production') ||
    /* istanbul ignore next */
    (cov_x9hf5l2xm().b[3][1]++, typeof chrome !== 'undefined') &&
    /* istanbul ignore next */
    (cov_x9hf5l2xm().b[3][2]++, typeof chrome.runtime?.getManifest === 'function');
  }
  /**
   * Sanitise les données pour supprimer les informations sensibles
   */
  sanitizeData(data) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[4]++;
    cov_x9hf5l2xm().s[16]++;
    if (typeof data === 'string') {
      /* istanbul ignore next */
      cov_x9hf5l2xm().b[4][0]++;
      cov_x9hf5l2xm().s[17]++;
      return this.sanitizeString(data);
    } else
    /* istanbul ignore next */
    {
      cov_x9hf5l2xm().b[4][1]++;
    }
    cov_x9hf5l2xm().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_x9hf5l2xm().b[6][0]++, typeof data === 'object') &&
    /* istanbul ignore next */
    (cov_x9hf5l2xm().b[6][1]++, data !== null)) {
      /* istanbul ignore next */
      cov_x9hf5l2xm().b[5][0]++;
      cov_x9hf5l2xm().s[19]++;
      if (Array.isArray(data)) {
        /* istanbul ignore next */
        cov_x9hf5l2xm().b[7][0]++;
        cov_x9hf5l2xm().s[20]++;
        return data.map(item => {
          /* istanbul ignore next */
          cov_x9hf5l2xm().f[5]++;
          cov_x9hf5l2xm().s[21]++;
          return this.sanitizeData(item);
        });
      } else
      /* istanbul ignore next */
      {
        cov_x9hf5l2xm().b[7][1]++;
      }
      const sanitized =
      /* istanbul ignore next */
      (cov_x9hf5l2xm().s[22]++, {});
      /* istanbul ignore next */
      cov_x9hf5l2xm().s[23]++;
      for (const [key, value] of Object.entries(data)) {
        /* istanbul ignore next */
        cov_x9hf5l2xm().s[24]++;
        if (this.isSensitiveField(key)) {
          /* istanbul ignore next */
          cov_x9hf5l2xm().b[8][0]++;
          cov_x9hf5l2xm().s[25]++;
          sanitized[key] = '[REDACTED]';
        } else {
          /* istanbul ignore next */
          cov_x9hf5l2xm().b[8][1]++;
          cov_x9hf5l2xm().s[26]++;
          sanitized[key] = this.sanitizeData(value);
        }
      }
      /* istanbul ignore next */
      cov_x9hf5l2xm().s[27]++;
      return sanitized;
    } else
    /* istanbul ignore next */
    {
      cov_x9hf5l2xm().b[5][1]++;
    }
    cov_x9hf5l2xm().s[28]++;
    return data;
  }
  sanitizeString(str) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[6]++;
    let sanitized =
    /* istanbul ignore next */
    (cov_x9hf5l2xm().s[29]++, str);
    /* istanbul ignore next */
    cov_x9hf5l2xm().s[30]++;
    for (const pattern of secureLogger_1.SecureLogger.SENSITIVE_PATTERNS) {
      /* istanbul ignore next */
      cov_x9hf5l2xm().s[31]++;
      sanitized = sanitized.replace(pattern, '[REDACTED]');
    }
    /* istanbul ignore next */
    cov_x9hf5l2xm().s[32]++;
    return sanitized;
  }
  isSensitiveField(fieldName) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[7]++;
    cov_x9hf5l2xm().s[33]++;
    return this.config.sensitiveFields.some(field => {
      /* istanbul ignore next */
      cov_x9hf5l2xm().f[8]++;
      cov_x9hf5l2xm().s[34]++;
      return fieldName.toLowerCase().includes(field.toLowerCase());
    });
  }
  formatMessage(level, message, data, context) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[9]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_x9hf5l2xm().s[35]++, new Date().toISOString());
    const levelName =
    /* istanbul ignore next */
    (cov_x9hf5l2xm().s[36]++, LogLevel[level]);
    const contextStr =
    /* istanbul ignore next */
    (cov_x9hf5l2xm().s[37]++, context ?
    /* istanbul ignore next */
    (cov_x9hf5l2xm().b[9][0]++, ` [${context}]`) :
    /* istanbul ignore next */
    (cov_x9hf5l2xm().b[9][1]++, ''));
    const dataStr =
    /* istanbul ignore next */
    (cov_x9hf5l2xm().s[38]++, data ?
    /* istanbul ignore next */
    (cov_x9hf5l2xm().b[10][0]++, ` ${JSON.stringify(data, null, 2)}`) :
    /* istanbul ignore next */
    (cov_x9hf5l2xm().b[10][1]++, ''));
    /* istanbul ignore next */
    cov_x9hf5l2xm().s[39]++;
    return `[${timestamp}] ${levelName}${contextStr}: ${message}${dataStr}`;
  }
  shouldLog(level) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[10]++;
    cov_x9hf5l2xm().s[40]++;
    return level >= this.config.level;
  }
  log(level, message, data, context) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[11]++;
    cov_x9hf5l2xm().s[41]++;
    if (!this.shouldLog(level)) {
      /* istanbul ignore next */
      cov_x9hf5l2xm().b[11][0]++;
      cov_x9hf5l2xm().s[42]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_x9hf5l2xm().b[11][1]++;
    }
    const sanitizedData =
    /* istanbul ignore next */
    (cov_x9hf5l2xm().s[43]++, data ?
    /* istanbul ignore next */
    (cov_x9hf5l2xm().b[12][0]++, this.sanitizeData(data)) :
    /* istanbul ignore next */
    (cov_x9hf5l2xm().b[12][1]++, undefined));
    const sanitizedMessage =
    /* istanbul ignore next */
    (cov_x9hf5l2xm().s[44]++, this.sanitizeString(message));
    const logEntry =
    /* istanbul ignore next */
    (cov_x9hf5l2xm().s[45]++, {
      timestamp: Date.now(),
      level,
      message: sanitizedMessage,
      data: sanitizedData,
      context,
      sanitized: true
    });
    // Stockage des logs
    /* istanbul ignore next */
    cov_x9hf5l2xm().s[46]++;
    if (this.config.enableStorage) {
      /* istanbul ignore next */
      cov_x9hf5l2xm().b[13][0]++;
      cov_x9hf5l2xm().s[47]++;
      this.logEntries.push(logEntry);
      // Limiter le nombre d'entrées en mémoire
      /* istanbul ignore next */
      cov_x9hf5l2xm().s[48]++;
      if (this.logEntries.length > this.config.maxStorageEntries) {
        /* istanbul ignore next */
        cov_x9hf5l2xm().b[14][0]++;
        cov_x9hf5l2xm().s[49]++;
        this.logEntries = this.logEntries.slice(-this.config.maxStorageEntries);
      } else
      /* istanbul ignore next */
      {
        cov_x9hf5l2xm().b[14][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_x9hf5l2xm().b[13][1]++;
    }
    // Affichage console (seulement en développement par défaut)
    cov_x9hf5l2xm().s[50]++;
    if (this.config.enableConsole) {
      /* istanbul ignore next */
      cov_x9hf5l2xm().b[15][0]++;
      const formattedMessage =
      /* istanbul ignore next */
      (cov_x9hf5l2xm().s[51]++, this.formatMessage(level, sanitizedMessage, sanitizedData, context));
      /* istanbul ignore next */
      cov_x9hf5l2xm().s[52]++;
      switch (level) {
        case LogLevel.TRACE:
          /* istanbul ignore next */
          cov_x9hf5l2xm().b[16][0]++;
        case LogLevel.DEBUG:
          /* istanbul ignore next */
          cov_x9hf5l2xm().b[16][1]++;
          cov_x9hf5l2xm().s[53]++;
          secureLogger_1.SecureLogger.debug(formattedMessage);
          /* istanbul ignore next */
          cov_x9hf5l2xm().s[54]++;
          break;
        case LogLevel.INFO:
          /* istanbul ignore next */
          cov_x9hf5l2xm().b[16][2]++;
          cov_x9hf5l2xm().s[55]++;
          console.info(formattedMessage);
          /* istanbul ignore next */
          cov_x9hf5l2xm().s[56]++;
          break;
        case LogLevel.WARN:
          /* istanbul ignore next */
          cov_x9hf5l2xm().b[16][3]++;
          cov_x9hf5l2xm().s[57]++;
          console.warn(formattedMessage);
          /* istanbul ignore next */
          cov_x9hf5l2xm().s[58]++;
          break;
        case LogLevel.ERROR:
          /* istanbul ignore next */
          cov_x9hf5l2xm().b[16][4]++;
        case LogLevel.FATAL:
          /* istanbul ignore next */
          cov_x9hf5l2xm().b[16][5]++;
          cov_x9hf5l2xm().s[59]++;
          console.error(formattedMessage);
          /* istanbul ignore next */
          cov_x9hf5l2xm().s[60]++;
          break;
      }
    } else
    /* istanbul ignore next */
    {
      cov_x9hf5l2xm().b[15][1]++;
    }
  }
  // Méthodes publiques de logging
  trace(message, data, context) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[12]++;
    cov_x9hf5l2xm().s[61]++;
    this.log(LogLevel.TRACE, message, data, context);
  }
  debug(message, data, context) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[13]++;
    cov_x9hf5l2xm().s[62]++;
    this.log(LogLevel.DEBUG, message, data, context);
  }
  info(message, data, context) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[14]++;
    cov_x9hf5l2xm().s[63]++;
    this.log(LogLevel.INFO, message, data, context);
  }
  warn(message, data, context) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[15]++;
    cov_x9hf5l2xm().s[64]++;
    this.log(LogLevel.WARN, message, data, context);
  }
  error(message, data, context) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[16]++;
    cov_x9hf5l2xm().s[65]++;
    this.log(LogLevel.ERROR, message, data, context);
  }
  fatal(message, data, context) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[17]++;
    cov_x9hf5l2xm().s[66]++;
    this.log(LogLevel.FATAL, message, data, context);
  }
  // Méthodes utilitaires
  setLevel(level) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[18]++;
    cov_x9hf5l2xm().s[67]++;
    this.config.level = level;
  }
  enableConsole(enable) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[19]++;
    cov_x9hf5l2xm().s[68]++;
    this.config.enableConsole = enable;
  }
  getLogs(level) {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[20]++;
    cov_x9hf5l2xm().s[69]++;
    if (level !== undefined) {
      /* istanbul ignore next */
      cov_x9hf5l2xm().b[17][0]++;
      cov_x9hf5l2xm().s[70]++;
      return this.logEntries.filter(entry => {
        /* istanbul ignore next */
        cov_x9hf5l2xm().f[21]++;
        cov_x9hf5l2xm().s[71]++;
        return entry.level >= level;
      });
    } else
    /* istanbul ignore next */
    {
      cov_x9hf5l2xm().b[17][1]++;
    }
    cov_x9hf5l2xm().s[72]++;
    return [...this.logEntries];
  }
  clearLogs() {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[22]++;
    cov_x9hf5l2xm().s[73]++;
    this.logEntries = [];
  }
  exportLogs() {
    /* istanbul ignore next */
    cov_x9hf5l2xm().f[23]++;
    cov_x9hf5l2xm().s[74]++;
    return JSON.stringify(this.logEntries, null, 2);
  }
}
/* istanbul ignore next */
cov_x9hf5l2xm().s[75]++;
exports.SecureLogger = SecureLogger;
// Patterns pour détecter les données sensibles
/* istanbul ignore next */
cov_x9hf5l2xm().s[76]++;
SecureLogger.SENSITIVE_PATTERNS = [/password/i, /token/i, /key/i, /secret/i, /auth/i, /credential/i, /session/i, /cookie/i, /jwt/i, /bearer/i, /api[_-]?key/i, /access[_-]?token/i, /refresh[_-]?token/i, /private[_-]?key/i, /\b[A-Za-z0-9+/]{32,}={0,2}\b/,
// Base64
/\b[0-9a-f]{32,}\b/i,
// Hex strings
/\b[0-9]{4}[_-]?[0-9]{4}[_-]?[0-9]{4}[_-]?[0-9]{4}\b/,
// Credit card pattern
/\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b/ // Email
];
// Instance globale pour un usage facile
/* istanbul ignore next */
cov_x9hf5l2xm().s[77]++;
exports.logger = secureLogger_1.SecureLogger.getInstance();
// Aliases pour migration facile depuis console.log
/* istanbul ignore next */
cov_x9hf5l2xm().s[78]++;
exports.secureLog = exports.logger.info.bind(exports.logger);
/* istanbul ignore next */
cov_x9hf5l2xm().s[79]++;
exports.secureWarn = exports.logger.warn.bind(exports.logger);
/* istanbul ignore next */
cov_x9hf5l2xm().s[80]++;
exports.secureError = exports.logger.error.bind(exports.logger);
/* istanbul ignore next */
cov_x9hf5l2xm().s[81]++;
exports.secureDebug = exports.logger.debug.bind(exports.logger);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,