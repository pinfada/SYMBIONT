{"version":3,"names":["cov_x9hf5l2xm","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","LogLevel","exports","SecureLogger","constructor","config","logEntries","level","INFO","enableConsole","isProduction","enableStorage","maxStorageEntries","sensitiveFields","productionMode","getInstance","instance","process","env","NODE_ENV","chrome","runtime","getManifest","sanitizeData","data","sanitizeString","Array","isArray","map","item","sanitized","key","value","Object","entries","isSensitiveField","str","pattern","SENSITIVE_PATTERNS","replace","fieldName","some","field","toLowerCase","includes","formatMessage","message","context","timestamp","Date","toISOString","levelName","contextStr","dataStr","JSON","stringify","shouldLog","log","sanitizedData","sanitizedMessage","logEntry","now","push","length","slice","formattedMessage","TRACE","DEBUG","console","debug","info","WARN","warn","ERROR","FATAL","error","trace","fatal","setLevel","enable","getLogs","filter","entry","clearLogs","exportLogs","logger","secureLog","bind","secureWarn","secureError","secureDebug"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/secureLogger.ts"],"sourcesContent":["/**\n * Système de logging sécurisé\n * Remplace console.log avec protection des données sensibles et gestion des niveaux\n */\n\nexport enum LogLevel {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  FATAL = 5\n}\n\ninterface LogConfig {\n  level: LogLevel;\n  enableConsole: boolean;\n  enableStorage: boolean;\n  maxStorageEntries: number;\n  sensitiveFields: string[];\n  productionMode: boolean;\n}\n\ninterface LogEntry {\n  timestamp: number;\n  level: LogLevel;\n  message: string;\n  data?: unknown;\n  context?: string | undefined;\n  sanitized: boolean;\n}\n\nexport class SecureLogger {\n  private static instance: SecureLogger;\n  private config: LogConfig;\n  private logEntries: LogEntry[] = [];\n  \n  // Patterns pour détecter les données sensibles\n  private static readonly SENSITIVE_PATTERNS = [\n    /password/i,\n    /token/i,\n    /key/i,\n    /secret/i,\n    /auth/i,\n    /credential/i,\n    /session/i,\n    /cookie/i,\n    /jwt/i,\n    /bearer/i,\n    /api[_-]?key/i,\n    /access[_-]?token/i,\n    /refresh[_-]?token/i,\n    /private[_-]?key/i,\n    /\\b[A-Za-z0-9+/]{32,}={0,2}\\b/, // Base64\n    /\\b[0-9a-f]{32,}\\b/i, // Hex strings\n    /\\b[0-9]{4}[_-]?[0-9]{4}[_-]?[0-9]{4}[_-]?[0-9]{4}\\b/, // Credit card pattern\n    /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/ // Email\n  ];\n\n  private constructor(config: Partial<LogConfig> = {}) {\n    this.config = {\n      level: LogLevel.INFO,\n      enableConsole: !this.isProduction(),\n      enableStorage: true,\n      maxStorageEntries: 1000,\n      sensitiveFields: ['password', 'token', 'key', 'secret', 'auth'],\n      productionMode: this.isProduction(),\n      ...config\n    };\n  }\n\n  static getInstance(config?: Partial<LogConfig>): SecureLogger {\n    if (!SecureLogger.instance) {\n      SecureLogger.instance = new SecureLogger(config);\n    }\n    return SecureLogger.instance;\n  }\n\n  private isProduction(): boolean {\n    return process.env.NODE_ENV === 'production' || \n           (typeof chrome !== 'undefined' && typeof chrome.runtime?.getManifest === 'function');\n  }\n\n  /**\n   * Sanitise les données pour supprimer les informations sensibles\n   */\n  private sanitizeData(data: unknown): any {\n    if (typeof data === 'string') {\n      return this.sanitizeString(data);\n    }\n\n    if (typeof data === 'object' && data !== null) {\n      if (Array.isArray(data)) {\n        return data.map(item => this.sanitizeData(item));\n      }\n\n      const sanitized: Record<string, unknown> = {};\n      for (const [key, value] of Object.entries(data)) {\n        if (this.isSensitiveField(key)) {\n          sanitized[key] = '[REDACTED]';\n        } else {\n          sanitized[key] = this.sanitizeData(value);\n        }\n      }\n      return sanitized;\n    }\n\n    return data;\n  }\n\n  private sanitizeString(str: string): string {\n    let sanitized = str;\n    \n    for (const pattern of SecureLogger.SENSITIVE_PATTERNS) {\n      sanitized = sanitized.replace(pattern, '[REDACTED]');\n    }\n    \n    return sanitized;\n  }\n\n  private isSensitiveField(fieldName: string): boolean {\n    return this.config.sensitiveFields.some(field => \n      fieldName.toLowerCase().includes(field.toLowerCase())\n    );\n  }\n\n  private formatMessage(level: LogLevel, message: string, data?: any, context?: string): string {\n    const timestamp = new Date().toISOString();\n    const levelName = LogLevel[level];\n    const contextStr = context ? ` [${context}]` : '';\n    const dataStr = data ? ` ${JSON.stringify(data, null, 2)}` : '';\n    \n    return `[${timestamp}] ${levelName}${contextStr}: ${message}${dataStr}`;\n  }\n\n  private shouldLog(level: LogLevel): boolean {\n    return level >= this.config.level;\n  }\n\n  private log(level: LogLevel, message: string, data?: any, context?: string): void {\n    if (!this.shouldLog(level)) {\n      return;\n    }\n\n    const sanitizedData = data ? this.sanitizeData(data) : undefined;\n    const sanitizedMessage = this.sanitizeString(message);\n\n    const logEntry: LogEntry = {\n      timestamp: Date.now(),\n      level,\n      message: sanitizedMessage,\n      data: sanitizedData,\n      context,\n      sanitized: true\n    };\n\n    // Stockage des logs\n    if (this.config.enableStorage) {\n      this.logEntries.push(logEntry);\n      \n      // Limiter le nombre d'entrées en mémoire\n      if (this.logEntries.length > this.config.maxStorageEntries) {\n        this.logEntries = this.logEntries.slice(-this.config.maxStorageEntries);\n      }\n    }\n\n    // Affichage console (seulement en développement par défaut)\n    if (this.config.enableConsole) {\n      const formattedMessage = this.formatMessage(level, sanitizedMessage, sanitizedData, context);\n      \n      switch (level) {\n        case LogLevel.TRACE:\n        case LogLevel.DEBUG:\n          console.debug(formattedMessage);\n          break;\n        case LogLevel.INFO:\n          console.info(formattedMessage);\n          break;\n        case LogLevel.WARN:\n          console.warn(formattedMessage);\n          break;\n        case LogLevel.ERROR:\n        case LogLevel.FATAL:\n          console.error(formattedMessage);\n          break;\n      }\n    }\n  }\n\n  // Méthodes publiques de logging\n  trace(message: string, data?: any, context?: string): void {\n    this.log(LogLevel.TRACE, message, data, context);\n  }\n\n  debug(message: string, data?: any, context?: string): void {\n    this.log(LogLevel.DEBUG, message, data, context);\n  }\n\n  info(message: string, data?: any, context?: string): void {\n    this.log(LogLevel.INFO, message, data, context);\n  }\n\n  warn(message: string, data?: any, context?: string): void {\n    this.log(LogLevel.WARN, message, data, context);\n  }\n\n  error(message: string, data?: any, context?: string): void {\n    this.log(LogLevel.ERROR, message, data, context);\n  }\n\n  fatal(message: string, data?: any, context?: string): void {\n    this.log(LogLevel.FATAL, message, data, context);\n  }\n\n  // Méthodes utilitaires\n  setLevel(level: LogLevel): void {\n    this.config.level = level;\n  }\n\n  enableConsole(enable: boolean): void {\n    this.config.enableConsole = enable;\n  }\n\n  getLogs(level?: LogLevel): LogEntry[] {\n    if (level !== undefined) {\n      return this.logEntries.filter(entry => entry.level >= level);\n    }\n    return [...this.logEntries];\n  }\n\n  clearLogs(): void {\n    this.logEntries = [];\n  }\n\n  exportLogs(): string {\n    return JSON.stringify(this.logEntries, null, 2);\n  }\n}\n\n// Instance globale pour un usage facile\nexport const logger = SecureLogger.getInstance();\n\n// Aliases pour migration facile depuis console.log\nexport const secureLog = logger.info.bind(logger);\nexport const secureWarn = logger.warn.bind(logger);\nexport const secureError = logger.error.bind(logger);\nexport const secureDebug = logger.debug.bind(logger);"],"mappings":"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","ignoreList":[]}