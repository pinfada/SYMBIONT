f3e623be243b2a8ecf3d218457f601b1
"use strict";

/* istanbul ignore next */
function cov_woftp9xug() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/neural/NeuralMesh.ts";
  var hash = "78e19005820da4bdbda8d7149343c8d41611ab7e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/neural/NeuralMesh.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 26
        }
      },
      "3": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 8,
          column: 42
        }
      },
      "4": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 9,
          column: 52
        }
      },
      "5": {
        start: {
          line: 10,
          column: 25
        },
        end: {
          line: 10,
          column: 55
        }
      },
      "6": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 7,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 8,
            column: 44
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 22
          },
          end: {
            line: 9,
            column: 54
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 10,
            column: 57
          }
        },
        line: 10
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 32
          },
          end: {
            line: 10,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 32
          },
          end: {
            line: 10,
            column: 48
          }
        }, {
          start: {
            line: 10,
            column: 52
          },
          end: {
            line: 10,
            column: 54
          }
        }],
        line: 10
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/neural/NeuralMesh.ts",
      mappings: ";;;AAAA,MAAa,UAAU;IAAvB;QACU,YAAO,GAA6B,EAAE,CAAC;IAIjD,CAAC;IAHC,SAAS,CAAC,EAAU,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAChD,OAAO,CAAC,IAAY,EAAE,EAAU,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,cAAc,CAAC,EAAU,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;CAC9D;AALD,gCAKC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/neural/NeuralMesh.ts"],
      sourcesContent: ["export class NeuralMesh {\r\n  private neurons: Record<string, string[]> = {};\r\n  addNeuron(id: string) { this.neurons[id] = []; }\r\n  connect(from: string, to: string) { this.neurons[from].push(to); }\r\n  getConnections(id: string) { return this.neurons[id] || []; }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "78e19005820da4bdbda8d7149343c8d41611ab7e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_woftp9xug = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_woftp9xug();
cov_woftp9xug().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_woftp9xug().s[1]++;
exports.NeuralMesh = void 0;
class NeuralMesh {
  constructor() {
    /* istanbul ignore next */
    cov_woftp9xug().f[0]++;
    cov_woftp9xug().s[2]++;
    this.neurons = {};
  }
  addNeuron(id) {
    /* istanbul ignore next */
    cov_woftp9xug().f[1]++;
    cov_woftp9xug().s[3]++;
    this.neurons[id] = [];
  }
  connect(from, to) {
    /* istanbul ignore next */
    cov_woftp9xug().f[2]++;
    cov_woftp9xug().s[4]++;
    this.neurons[from].push(to);
  }
  getConnections(id) {
    /* istanbul ignore next */
    cov_woftp9xug().f[3]++;
    cov_woftp9xug().s[5]++;
    return /* istanbul ignore next */(cov_woftp9xug().b[0][0]++, this.neurons[id]) ||
    /* istanbul ignore next */
    (cov_woftp9xug().b[0][1]++, []);
  }
}
/* istanbul ignore next */
cov_woftp9xug().s[6]++;
exports.NeuralMesh = NeuralMesh;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOZXVyYWxNZXNoIiwiY29uc3RydWN0b3IiLCJjb3Zfd29mdHA5eHVnIiwiZiIsInMiLCJuZXVyb25zIiwiYWRkTmV1cm9uIiwiaWQiLCJjb25uZWN0IiwiZnJvbSIsInRvIiwicHVzaCIsImdldENvbm5lY3Rpb25zIiwiYiIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvbW50L2MvVXNlcnMvbV9vbGkvUHJvamV0cy9TWU1CSU9OVC9zcmMvbmV1cmFsL05ldXJhbE1lc2gudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIE5ldXJhbE1lc2gge1xyXG4gIHByaXZhdGUgbmV1cm9uczogUmVjb3JkPHN0cmluZywgc3RyaW5nW10+ID0ge307XHJcbiAgYWRkTmV1cm9uKGlkOiBzdHJpbmcpIHsgdGhpcy5uZXVyb25zW2lkXSA9IFtdOyB9XHJcbiAgY29ubmVjdChmcm9tOiBzdHJpbmcsIHRvOiBzdHJpbmcpIHsgdGhpcy5uZXVyb25zW2Zyb21dLnB1c2godG8pOyB9XHJcbiAgZ2V0Q29ubmVjdGlvbnMoaWQ6IHN0cmluZykgeyByZXR1cm4gdGhpcy5uZXVyb25zW2lkXSB8fCBbXTsgfVxyXG59ICJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE1BQWFBLFVBQVU7RUFBdkJDLFlBQUE7SUFBQTtJQUFBQyxhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO0lBQ1UsS0FBQUMsT0FBTyxHQUE2QixFQUFFO0VBSWhEO0VBSEVDLFNBQVNBLENBQUNDLEVBQVU7SUFBQTtJQUFBTCxhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO0lBQUksSUFBSSxDQUFDQyxPQUFPLENBQUNFLEVBQUUsQ0FBQyxHQUFHLEVBQUU7RUFBRTtFQUMvQ0MsT0FBT0EsQ0FBQ0MsSUFBWSxFQUFFQyxFQUFVO0lBQUE7SUFBQVIsYUFBQSxHQUFBQyxDQUFBO0lBQUFELGFBQUEsR0FBQUUsQ0FBQTtJQUFJLElBQUksQ0FBQ0MsT0FBTyxDQUFDSSxJQUFJLENBQUMsQ0FBQ0UsSUFBSSxDQUFDRCxFQUFFLENBQUM7RUFBRTtFQUNqRUUsY0FBY0EsQ0FBQ0wsRUFBVTtJQUFBO0lBQUFMLGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7SUFBSSxPQUFPLDJCQUFBRixhQUFBLEdBQUFXLENBQUEsY0FBSSxDQUFDUixPQUFPLENBQUNFLEVBQUUsQ0FBQztJQUFBO0lBQUEsQ0FBQUwsYUFBQSxHQUFBVyxDQUFBLFVBQUksRUFBRTtFQUFFOztBQUM3RDtBQUFBWCxhQUFBLEdBQUFFLENBQUE7QUFMRFUsT0FBQSxDQUFBZCxVQUFBLEdBQUFBLFVBQUEiLCJpZ25vcmVMaXN0IjpbXX0=