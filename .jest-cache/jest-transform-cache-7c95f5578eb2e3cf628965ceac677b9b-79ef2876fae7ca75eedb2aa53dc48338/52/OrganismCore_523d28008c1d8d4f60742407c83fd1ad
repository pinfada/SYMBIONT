e5e18eb68143a0a7bd5a7bcc719a9b73
"use strict";

/**
 * OrganismCore refactorisé - Architecture hexagonale
 * Version simplifiée utilisant des services spécialisés
 */
/* istanbul ignore next */
function cov_1kgk1e008k() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/OrganismCore.ts";
  var hash = "dc6922717c282430b95033d7141c7dfa97a33d6d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/OrganismCore.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 8,
          column: 1
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 30
        }
      },
      "4": {
        start: {
          line: 11,
          column: 23
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "5": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 12,
          column: 57
        }
      },
      "6": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 59
        }
      },
      "7": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 59
        }
      },
      "8": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 86
        }
      },
      "9": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 86
        }
      },
      "10": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "11": {
        start: {
          line: 18,
          column: 37
        },
        end: {
          line: 18,
          column: 90
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 26
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 39
        }
      },
      "14": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 65
        }
      },
      "15": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "16": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 93
        }
      },
      "17": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 51
        }
      },
      "18": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "19": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 43
        }
      },
      "20": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 73
        }
      },
      "21": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 71
        }
      },
      "22": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 75
        }
      },
      "23": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 68
        }
      },
      "24": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "25": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 92
        }
      },
      "26": {
        start: {
          line: 43,
          column: 35
        },
        end: {
          line: 43,
          column: 58
        }
      },
      "27": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 85
        }
      },
      "28": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 37
        }
      },
      "29": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 87
        }
      },
      "30": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 57,
          column: 11
        }
      },
      "31": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "32": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 29
        }
      },
      "33": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "34": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "35": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 88
        }
      },
      "36": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 70,
          column: 55
        }
      },
      "37": {
        start: {
          line: 71,
          column: 33
        },
        end: {
          line: 71,
          column: 78
        }
      },
      "38": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 59
        }
      },
      "39": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "40": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 83,
          column: 25
        }
      },
      "41": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "42": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 58
        }
      },
      "43": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "44": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 67
        }
      },
      "45": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "46": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 95,
          column: 15
        }
      },
      "47": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 94,
          column: 17
        }
      },
      "48": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 81
        }
      },
      "49": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 56
        }
      },
      "50": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 23
        }
      },
      "51": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 24
        }
      },
      "52": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 48
        }
      },
      "53": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "54": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 67
        }
      },
      "55": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 68
        }
      },
      "56": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 68
        }
      },
      "57": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 51
        }
      },
      "58": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 27
        }
      },
      "59": {
        start: {
          line: 132,
          column: 27
        },
        end: {
          line: 132,
          column: 28
        }
      },
      "60": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "61": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 73
        }
      },
      "62": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 19
        }
      },
      "63": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 29
        }
      },
      "64": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "65": {
        start: {
          line: 139,
          column: 34
        },
        end: {
          line: 139,
          column: 66
        }
      },
      "66": {
        start: {
          line: 140,
          column: 27
        },
        end: {
          line: 140,
          column: 92
        }
      },
      "67": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "68": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 80
        }
      },
      "69": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 47
        }
      },
      "70": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 147,
          column: 19
        }
      },
      "71": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 59
        }
      },
      "72": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 98
        }
      },
      "73": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 159,
          column: 28
        }
      },
      "74": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "75": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 19
        }
      },
      "76": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 29
        }
      },
      "77": {
        start: {
          line: 164,
          column: 24
        },
        end: {
          line: 164,
          column: 68
        }
      },
      "78": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "79": {
        start: {
          line: 167,
          column: 34
        },
        end: {
          line: 167,
          column: 70
        }
      },
      "80": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 86
        }
      },
      "81": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 82
        }
      },
      "82": {
        start: {
          line: 176,
          column: 27
        },
        end: {
          line: 176,
          column: 28
        }
      },
      "83": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "84": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 19
        }
      },
      "85": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 29
        }
      },
      "86": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 188,
          column: 11
        }
      },
      "87": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 63
        }
      },
      "88": {
        start: {
          line: 195,
          column: 23
        },
        end: {
          line: 195,
          column: 55
        }
      },
      "89": {
        start: {
          line: 196,
          column: 28
        },
        end: {
          line: 196,
          column: 63
        }
      },
      "90": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 208,
          column: 10
        }
      },
      "91": {
        start: {
          line: 214,
          column: 23
        },
        end: {
          line: 214,
          column: 55
        }
      },
      "92": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 226,
          column: 10
        }
      },
      "93": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 241,
          column: 10
        }
      },
      "94": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "95": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 52
        }
      },
      "96": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "97": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 53
        }
      },
      "98": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "99": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 54
        }
      },
      "100": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 41
        }
      },
      "101": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 60
        }
      },
      "102": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 72
        }
      },
      "103": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 37
        }
      },
      "104": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 36
        }
      },
      "105": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 37
        }
      },
      "106": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 71
        }
      },
      "107": {
        start: {
          line: 273,
          column: 23
        },
        end: {
          line: 273,
          column: 25
        }
      },
      "108": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "109": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 38
        }
      },
      "110": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "111": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 38
        }
      },
      "112": {
        start: {
          line: 280,
          column: 29
        },
        end: {
          line: 280,
          column: 61
        }
      },
      "113": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "114": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 48
        }
      },
      "115": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 287,
          column: 10
        }
      },
      "116": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 304,
          column: 9
        }
      },
      "117": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 50
        }
      },
      "118": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 80
        }
      },
      "119": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 91
        }
      },
      "120": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 25
        }
      },
      "121": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "122": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 50
        }
      },
      "123": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 47
        }
      },
      "124": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 71
        }
      },
      "125": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 96
        }
      },
      "126": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 25
        }
      },
      "127": {
        start: {
          line: 325,
          column: 27
        },
        end: {
          line: 325,
          column: 44
        }
      },
      "128": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 73
        }
      },
      "129": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 45
        }
      },
      "130": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 333,
          column: 9
        }
      },
      "131": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 74
        }
      },
      "132": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 53
        }
      },
      "133": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 341,
          column: 72
        }
      },
      "134": {
        start: {
          line: 347,
          column: 23
        },
        end: {
          line: 347,
          column: 55
        }
      },
      "135": {
        start: {
          line: 348,
          column: 26
        },
        end: {
          line: 348,
          column: 28
        }
      },
      "136": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 357,
          column: 11
        }
      },
      "137": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 356,
          column: 13
        }
      },
      "138": {
        start: {
          line: 352,
          column: 37
        },
        end: {
          line: 352,
          column: 54
        }
      },
      "139": {
        start: {
          line: 353,
          column: 33
        },
        end: {
          line: 353,
          column: 111
        }
      },
      "140": {
        start: {
          line: 354,
          column: 33
        },
        end: {
          line: 354,
          column: 82
        }
      },
      "141": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 355,
          column: 48
        }
      },
      "142": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 363,
          column: 9
        }
      },
      "143": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 66
        }
      },
      "144": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 43
        }
      },
      "145": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 362,
          column: 79
        }
      },
      "146": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 45
        }
      },
      "147": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 68
        }
      },
      "148": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 66
        }
      },
      "149": {
        start: {
          line: 382,
          column: 30
        },
        end: {
          line: 382,
          column: 72
        }
      },
      "150": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 388,
          column: 10
        }
      },
      "151": {
        start: {
          line: 394,
          column: 23
        },
        end: {
          line: 394,
          column: 39
        }
      },
      "152": {
        start: {
          line: 395,
          column: 23
        },
        end: {
          line: 395,
          column: 58
        }
      },
      "153": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 403,
          column: 10
        }
      },
      "154": {
        start: {
          line: 406,
          column: 0
        },
        end: {
          line: 406,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 56
          },
          end: {
            line: 6,
            column: 57
          }
        },
        loc: {
          start: {
            line: 6,
            column: 71
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 50
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        loc: {
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 52
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 54,
            column: 49
          },
          end: {
            line: 54,
            column: 50
          }
        },
        loc: {
          start: {
            line: 54,
            column: 60
          },
          end: {
            line: 57,
            column: 9
          }
        },
        line: 54
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 45
          },
          end: {
            line: 59,
            column: 46
          }
        },
        loc: {
          start: {
            line: 59,
            column: 56
          },
          end: {
            line: 63,
            column: 9
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 26
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 68
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 82
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 91,
            column: 43
          },
          end: {
            line: 91,
            column: 44
          }
        },
        loc: {
          start: {
            line: 91,
            column: 61
          },
          end: {
            line: 95,
            column: 13
          }
        },
        line: 91
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 106
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 13
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 109
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        loc: {
          start: {
            line: 112,
            column: 16
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 112
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 29
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 115
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        loc: {
          start: {
            line: 122,
            column: 21
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 122
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 16
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 125
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 27
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 131
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 30
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 158
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 30
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 175
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        loc: {
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 194
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 31
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 213
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 231,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        loc: {
          start: {
            line: 231,
            column: 13
          },
          end: {
            line: 242,
            column: 5
          }
        },
        line: 231
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 246,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        loc: {
          start: {
            line: 246,
            column: 19
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 246
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        loc: {
          start: {
            line: 263,
            column: 14
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 263
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 18
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 272
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        },
        loc: {
          start: {
            line: 295,
            column: 17
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 295
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        },
        loc: {
          start: {
            line: 309,
            column: 22
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 309
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 30
          },
          end: {
            line: 334,
            column: 5
          }
        },
        line: 323
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        },
        loc: {
          start: {
            line: 338,
            column: 30
          },
          end: {
            line: 342,
            column: 5
          }
        },
        line: 338
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 346,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        loc: {
          start: {
            line: 346,
            column: 24
          },
          end: {
            line: 364,
            column: 5
          }
        },
        line: 346
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 350,
            column: 36
          },
          end: {
            line: 350,
            column: 37
          }
        },
        loc: {
          start: {
            line: 350,
            column: 49
          },
          end: {
            line: 357,
            column: 9
          }
        },
        line: 350
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 22
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 368
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 375,
            column: 4
          },
          end: {
            line: 375,
            column: 5
          }
        },
        loc: {
          start: {
            line: 375,
            column: 22
          },
          end: {
            line: 377,
            column: 5
          }
        },
        line: 375
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 381,
            column: 4
          },
          end: {
            line: 381,
            column: 5
          }
        },
        loc: {
          start: {
            line: 381,
            column: 34
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 381
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 5
          }
        },
        loc: {
          start: {
            line: 393,
            column: 26
          },
          end: {
            line: 404,
            column: 5
          }
        },
        line: 393
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 22
          },
          end: {
            line: 8,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 23
          },
          end: {
            line: 6,
            column: 27
          }
        }, {
          start: {
            line: 6,
            column: 31
          },
          end: {
            line: 6,
            column: 51
          }
        }, {
          start: {
            line: 6,
            column: 56
          },
          end: {
            line: 8,
            column: 1
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 11
          },
          end: {
            line: 7,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 37
          },
          end: {
            line: 7,
            column: 40
          }
        }, {
          start: {
            line: 7,
            column: 43
          },
          end: {
            line: 7,
            column: 61
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 15
          }
        }, {
          start: {
            line: 7,
            column: 19
          },
          end: {
            line: 7,
            column: 33
          }
        }],
        line: 7
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: 41,
            column: 13
          },
          end: {
            line: 45,
            column: 9
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 44
          }
        }, {
          start: {
            line: 60,
            column: 48
          },
          end: {
            line: 60,
            column: 70
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "8": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 16
          }
        }, {
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 84,
            column: 43
          }
        }],
        line: 84
      },
      "9": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "10": {
        loc: {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 87,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 87,
            column: 15
          }
        }, {
          start: {
            line: 87,
            column: 19
          },
          end: {
            line: 87,
            column: 34
          }
        }],
        line: 87
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 94,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "13": {
        loc: {
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 92,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 92,
            column: 45
          }
        }, {
          start: {
            line: 92,
            column: 49
          },
          end: {
            line: 92,
            column: 58
          }
        }, {
          start: {
            line: 92,
            column: 62
          },
          end: {
            line: 92,
            column: 71
          }
        }],
        line: 92
      },
      "14": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "15": {
        loc: {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "16": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "17": {
        loc: {
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 141,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 141,
            column: 30
          }
        }, {
          start: {
            line: 141,
            column: 34
          },
          end: {
            line: 141,
            column: 76
          }
        }],
        line: 141
      },
      "18": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "19": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "20": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "21": {
        loc: {
          start: {
            line: 233,
            column: 18
          },
          end: {
            line: 233,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 18
          },
          end: {
            line: 233,
            column: 48
          }
        }, {
          start: {
            line: 233,
            column: 52
          },
          end: {
            line: 233,
            column: 54
          }
        }],
        line: 233
      },
      "22": {
        loc: {
          start: {
            line: 237,
            column: 20
          },
          end: {
            line: 237,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 20
          },
          end: {
            line: 237,
            column: 46
          }
        }, {
          start: {
            line: 237,
            column: 50
          },
          end: {
            line: 237,
            column: 107
          }
        }],
        line: 237
      },
      "23": {
        loc: {
          start: {
            line: 238,
            column: 20
          },
          end: {
            line: 238,
            column: 163
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 20
          },
          end: {
            line: 238,
            column: 47
          }
        }, {
          start: {
            line: 238,
            column: 51
          },
          end: {
            line: 238,
            column: 163
          }
        }],
        line: 238
      },
      "24": {
        loc: {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "25": {
        loc: {
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 247,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 247,
            column: 23
          }
        }, {
          start: {
            line: 247,
            column: 27
          },
          end: {
            line: 247,
            column: 58
          }
        }],
        line: 247
      },
      "26": {
        loc: {
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 250,
            column: 8
          },
          end: {
            line: 252,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 250
      },
      "27": {
        loc: {
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 250,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 12
          },
          end: {
            line: 250,
            column: 23
          }
        }, {
          start: {
            line: 250,
            column: 27
          },
          end: {
            line: 250,
            column: 58
          }
        }],
        line: 250
      },
      "28": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 255,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "29": {
        loc: {
          start: {
            line: 256,
            column: 22
          },
          end: {
            line: 256,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 22
          },
          end: {
            line: 256,
            column: 33
          }
        }, {
          start: {
            line: 256,
            column: 37
          },
          end: {
            line: 256,
            column: 40
          }
        }],
        line: 256
      },
      "30": {
        loc: {
          start: {
            line: 257,
            column: 28
          },
          end: {
            line: 257,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 28
          },
          end: {
            line: 257,
            column: 45
          }
        }, {
          start: {
            line: 257,
            column: 49
          },
          end: {
            line: 257,
            column: 59
          }
        }],
        line: 257
      },
      "31": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 276,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "32": {
        loc: {
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "33": {
        loc: {
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "34": {
        loc: {
          start: {
            line: 323,
            column: 11
          },
          end: {
            line: 323,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 323,
            column: 23
          },
          end: {
            line: 323,
            column: 28
          }
        }],
        line: 323
      },
      "35": {
        loc: {
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 333,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 8
          },
          end: {
            line: 333,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "36": {
        loc: {
          start: {
            line: 346,
            column: 11
          },
          end: {
            line: 346,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 346,
            column: 18
          },
          end: {
            line: 346,
            column: 22
          }
        }],
        line: 346
      },
      "37": {
        loc: {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 356,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 356,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "38": {
        loc: {
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 363,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 363,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "39": {
        loc: {
          start: {
            line: 368,
            column: 9
          },
          end: {
            line: 368,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 368,
            column: 18
          },
          end: {
            line: 368,
            column: 20
          }
        }],
        line: 368
      },
      "40": {
        loc: {
          start: {
            line: 386,
            column: 28
          },
          end: {
            line: 386,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 386,
            column: 28
          },
          end: {
            line: 386,
            column: 57
          }
        }, {
          start: {
            line: 386,
            column: 61
          },
          end: {
            line: 386,
            column: 62
          }
        }],
        line: 386
      },
      "41": {
        loc: {
          start: {
            line: 387,
            column: 32
          },
          end: {
            line: 387,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 387,
            column: 32
          },
          end: {
            line: 387,
            column: 65
          }
        }, {
          start: {
            line: 387,
            column: 69
          },
          end: {
            line: 387,
            column: 70
          }
        }],
        line: 387
      },
      "42": {
        loc: {
          start: {
            line: 399,
            column: 28
          },
          end: {
            line: 399,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 399,
            column: 28
          },
          end: {
            line: 399,
            column: 66
          }
        }, {
          start: {
            line: 399,
            column: 70
          },
          end: {
            line: 399,
            column: 71
          }
        }],
        line: 399
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0, 0],
      "36": [0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/OrganismCore.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/OrganismCore.ts"],
      sourcesContent: ["/**\r\n * OrganismCore refactoris\xE9 - Architecture hexagonale\r\n * Version simplifi\xE9e utilisant des services sp\xE9cialis\xE9s\r\n */\r\n\r\nimport { OrganismState, OrganismTraits } from '../shared/types/organism';\r\nimport { IOrganismCore, OrganismJSON, ShaderParameters } from './interfaces/IOrganismCore';\r\nimport { errorHandler } from './utils/ErrorHandler';\r\nimport { TraitService, TraitUpdateEvent } from './services/TraitService';\r\nimport { EnergyService, EnergyEvent } from './services/EnergyService';\r\nimport { NeuralService, NeuralProcessingResult } from './services/NeuralService';\r\nimport { INeuralMesh } from './interfaces/INeuralMesh';\r\nimport RealMetricsService from './services/RealMetricsService';\r\nimport FeatureFlagService from './services/FeatureFlagService';\r\nimport { generateSecureUUID } from '../shared/utils/uuid';\r\nimport { PerformanceOptimizedRandom } from '../shared/utils/PerformanceOptimizedRandom';\r\n\r\nexport interface OrganismDependencies {\r\n  neuralMesh: INeuralMesh;\r\n  logger?: { debug: Function; info: Function; error: Function };\r\n}\r\n\r\nexport class OrganismCore implements IOrganismCore {\r\n  private readonly id: string;\r\n  private readonly dna: string;\r\n  private health: number = 100;\r\n  private lastMutation: number = Date.now();\r\n  \r\n  // Services sp\xE9cialis\xE9s (injection de d\xE9pendances)\r\n  private readonly traitService: TraitService;\r\n  private readonly energyService: EnergyService;\r\n  private readonly neuralService: NeuralService;\r\n  private readonly metricsService: RealMetricsService;\r\n  // @ts-expect-error Service r\xE9serv\xE9 pour usage futur\r\n  private readonly featureFlags: FeatureFlagService;\r\n  private readonly logger: { debug: Function; info: Function; error: Function } | undefined;\r\n\r\n  constructor(\r\n    dna: string, \r\n    initialTraits?: Partial<OrganismTraits>,\r\n    dependencies?: OrganismDependencies\r\n  ) {\r\n    // Validation d'entr\xE9e\r\n    const validation = this.validateInput(dna, initialTraits);\r\n    if (!validation.isValid) {\r\n      throw new Error(`OrganismCore creation failed: ${validation.errors.join(', ')}`);\r\n    }\r\n\r\n    this.id = generateSecureUUID();\r\n    this.dna = dna;\r\n    this.logger = dependencies?.logger;\r\n\r\n    // Initialisation des services de base\r\n    this.metricsService = RealMetricsService.getInstance();\r\n    this.featureFlags = FeatureFlagService.getInstance();\r\n    \r\n    // Initialisation des services m\xE9tier\r\n    this.traitService = new TraitService(initialTraits);\r\n    this.energyService = new EnergyService(100);\r\n    \r\n    // Service neural n\xE9cessite une d\xE9pendance externe\r\n    if (dependencies?.neuralMesh) {\r\n      this.neuralService = new NeuralService(dependencies.neuralMesh);\r\n    } else {\r\n      // Fallback pour compatibilit\xE9\r\n      const { NeuralMesh } = require('./NeuralMesh');\r\n      this.neuralService = new NeuralService(new NeuralMesh());\r\n    }\r\n\r\n    this.setupServiceListeners();\r\n    this.logger?.debug('OrganismCore initialized', { id: this.id, dna: this.dna });\r\n  }\r\n\r\n  /**\r\n   * Configuration des listeners entre services\r\n   */\r\n  private setupServiceListeners(): void {\r\n    // \xC9coute les changements de traits pour ajuster l'\xE9nergie\r\n    this.traitService.addTraitChangeListener((event: TraitUpdateEvent) => {\r\n      this.onTraitChanged(event);\r\n    \r\n    return undefined;});\r\n\r\n    // \xC9coute les \xE9v\xE9nements d'\xE9nergie pour log\r\n    this.energyService.addEnergyListener((event: EnergyEvent) => {\r\n      if (event.type === 'consumption' && event.energyAfter < 10) {\r\n        this.logger?.debug('Low energy warning', { energy: event.energyAfter });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Gestionnaire de changement de traits\r\n   */\r\n  private onTraitChanged(event: TraitUpdateEvent): void {\r\n    // Ajuste l'efficacit\xE9 m\xE9tabolique bas\xE9e sur les traits\r\n    const traits = this.traitService.getAllTraits();\r\n    const efficiencyFactor = (traits.resilience + traits.adaptability) / 2;\r\n    this.energyService.setEfficiency(efficiencyFactor);\r\n\r\n    this.logger?.debug('Trait changed, metabolism adjusted', { \r\n      trait: event.traitName, \r\n      newValue: event.newValue,\r\n      efficiency: efficiencyFactor \r\n    });\r\n  }\r\n\r\n  /**\r\n   * Validation des entr\xE9es\r\n   */\r\n  private validateInput(dna: string, traits?: Partial<OrganismTraits>): { isValid: boolean; errors: string[] } {\r\n    const errors: string[] = [];\r\n\r\n    if (!dna || typeof dna !== 'string') {\r\n      errors.push('DNA must be a non-empty string');\r\n    }\r\n\r\n    if (dna && dna.length < 10) {\r\n      errors.push('DNA must be at least 10 characters long');\r\n    }\r\n\r\n    if (traits) {\r\n      Object.entries(traits).forEach(([key, value]) => {\r\n        if (typeof value !== 'number' || value < 0 || value > 1) {\r\n          errors.push(`Trait ${key} must be a number between 0 and 1`);\r\n        }\r\n      });\r\n    }\r\n\r\n    return { isValid: errors.length === 0, errors };\r\n  }\r\n\r\n  /**\r\n   * G\xE9n\xE8re un ID unique\r\n   */\r\n  // generateId() supprim\xE9 - utilise generateSecureUUID() maintenant\r\n\r\n  // =============================================================================\r\n  // API PUBLIQUE - Interface IOrganismCore\r\n  // =============================================================================\r\n\r\n  getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  getDNA(): string {\r\n    return this.dna;\r\n  }\r\n\r\n  getTraits(): OrganismTraits {\r\n    return this.traitService.getAllTraits();\r\n  }\r\n\r\n  updateTrait(name: keyof OrganismTraits, value: number): void {\r\n    if (!this.energyService.consumeEnergy(1, `trait_update_${name}`)) {\r\n      throw new Error('Insufficient energy to update trait');\r\n    }\r\n\r\n    this.traitService.updateTrait(name, value, 'manual_update');\r\n    this.logger?.debug('Trait updated', { trait: name, value });\r\n  }\r\n\r\n  getEnergyLevel(): number {\r\n    return this.energyService.getEnergyLevel();\r\n  }\r\n\r\n  getHealth(): number {\r\n    return this.health;\r\n  }\r\n\r\n  /**\r\n   * \xC9volution de l'organisme bas\xE9e sur un stimulus\r\n   */\r\n  async evolve(stimulus: any): Promise<void> {\r\n    const energyCost = 5;\r\n    if (!this.energyService.consumeEnergy(energyCost, 'evolution')) {\r\n      this.logger?.debug('Evolution skipped: insufficient energy');\r\n      return;\r\n    \r\n    return undefined;}\r\n\r\n    try {\r\n      const currentTraits = this.traitService.getAllTraits();\r\n      const result: NeuralProcessingResult = await this.neuralService.processStimulus(stimulus, currentTraits);\r\n\r\n      if (result.success && Object.keys(result.adaptations).length > 0) {\r\n        this.traitService.updateTraits(result.adaptations, 'evolution');\r\n        this.lastMutation = Date.now();\r\n        \r\n        this.logger?.debug('Evolution successful', { \r\n          adaptations: result.adaptations,\r\n          confidence: result.confidence \r\n        });\r\n      }\r\n    } catch (_error) {\r\n      this.logger?.error('Evolution failed', _error);\r\n      errorHandler.logSimpleError('OrganismCore', 'evolve', _error, 'error');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apprentissage \xE0 partir de donn\xE9es comportementales\r\n   */\r\n  async learn(behaviorData: any): Promise<void> {\r\n    const energyCost = 2;\r\n    if (!this.energyService.consumeEnergy(energyCost, 'learning')) {\r\n      return;\r\n    \r\n    return undefined;}\r\n\r\n    const success = await this.neuralService.learn(behaviorData);\r\n    if (success) {\r\n      // Am\xE9liore l\xE9g\xE8rement la m\xE9moire lors de l'apprentissage\r\n      const currentMemory = this.traitService.getTrait('memory');\r\n      this.traitService.updateTrait('memory', currentMemory + 0.01, 'learning');\r\n    }\r\n\r\n    this.logger?.debug('Learning completed', { success, data: behaviorData });\r\n  }\r\n\r\n  /**\r\n   * Traitement d'un stimulus simple\r\n   */\r\n  processStimulus(stimulus: any): void {\r\n    const energyCost = 1;\r\n    if (!this.energyService.consumeEnergy(energyCost, 'stimulus_processing')) {\r\n      return;\r\n    \r\n    return undefined;}\r\n\r\n    // Traitement simplifi\xE9 en arri\xE8re-plan\r\n    this.neuralService.queuePattern({\r\n      id: `pattern_${Date.now()}`,\r\n      type: 'behavioral',\r\n      data: stimulus,\r\n      timestamp: Date.now(),\r\n      confidence: 0.8\r\n    });\r\n\r\n    this.logger?.debug('Stimulus processed', { stimulus });\r\n  }\r\n\r\n  /**\r\n   * Obtient l'\xE9tat complet de l'organisme\r\n   */\r\n  getState(): OrganismState {\r\n    const traits = this.traitService.getAllTraits();\r\n    const energyStats = this.energyService.getEnergyStats();\r\n\r\n    return {\r\n      id: this.id,\r\n      traits,\r\n      energy: energyStats.current,\r\n      maxEnergy: energyStats.max,\r\n      health: this.health,\r\n      dna: this.dna,\r\n      lastMutation: this.lastMutation,\r\n      balance: this.traitService.calculateBalance(),\r\n      metabolismRate: energyStats.metabolismRate,\r\n      age: Date.now() - parseInt(this.id.split('_')[1]) // Approximation bas\xE9e sur l'ID\r\n    };\r\n  }\r\n\r\n  /**\r\n   * G\xE9n\xE8re les param\xE8tres de shader pour le rendu visuel\r\n   */\r\n  generateShaderParameters(): ShaderParameters {\r\n    const traits = this.traitService.getAllTraits();\r\n    \r\n    return {\r\n      energy: this.energyService.getEnergyPercentage() / 100,\r\n      health: this.health / 100,\r\n      neuralActivity: this.neuralService.getNeuralActivity(),\r\n      creativity: traits.creativity,\r\n      focus: traits.focus,\r\n      time: Date.now() / 1000,\r\n      colorPrimary: [traits.creativity, traits.empathy, traits.intuition],\r\n      colorSecondary: [traits.focus, traits.resilience, traits.adaptability],\r\n      morphology: traits.adaptability,\r\n      complexity: traits.creativity * traits.memory\r\n    };\r\n  }\r\n\r\n  /**\r\n   * S\xE9rialisation pour sauvegarde\r\n   */\r\n  toJSON(): OrganismJSON {\r\n    return {\r\n      mesh: this.neuralService.saveState() || {},\r\n      dna: this.dna,\r\n      health: this.health,\r\n      lastMutation: this.lastMutation,\r\n      traits: this.traitService.toJSON() || { traits: this.traitService.getAllTraits(), history: [] },\r\n      energy: this.energyService.toJSON() || { energy: 100, maxEnergy: 100, metabolismRate: 1, config: { efficiency: 1, baseConsumption: 0.1 }, history: [] },\r\n      neural: this.neuralService.saveState(),\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Restauration depuis JSON\r\n   */\r\n  fromJSON(data: OrganismJSON): void {\r\n    if (data.traits && typeof data.traits === 'object') {\r\n      this.traitService.fromJSON(data.traits as any);\r\n    }\r\n    \r\n    if (data.energy && typeof data.energy === 'object') {\r\n      this.energyService.fromJSON(data.energy as any);\r\n    }\r\n    \r\n    if (data.neural) {\r\n      this.neuralService.loadState(data.neural);\r\n    }\r\n\r\n    this.health = data.health || 100;\r\n    this.lastMutation = data.lastMutation || Date.now();\r\n\r\n    this.logger?.debug('State restored from JSON', { id: this.id });\r\n  }\r\n\r\n  /**\r\n   * Nettoyage et lib\xE9ration des ressources\r\n   */\r\n  cleanup(): void {\r\n    this.energyService.destroy();\r\n    this.traitService.cleanup();\r\n    this.neuralService.cleanup();\r\n    \r\n    this.logger?.debug('OrganismCore cleaned up', { id: this.id });\r\n  }\r\n\r\n  /**\r\n   * V\xE9rification de l'\xE9tat de sant\xE9\r\n   */\r\n  healthCheck(): { healthy: boolean; issues: string[] } {\r\n    const issues: string[] = [];\r\n\r\n    if (this.health < 20) {\r\n      issues.push('Low health');\r\n    }\r\n\r\n    if (this.energyService.getEnergyLevel() < 10) {\r\n      issues.push('Low energy');\r\n    }\r\n\r\n    const neuralHealth = this.neuralService.healthCheck();\r\n    if (!neuralHealth.healthy) {\r\n      issues.push(...neuralHealth.issues);\r\n    }\r\n\r\n    return {\r\n      healthy: issues.length === 0,\r\n      issues\r\n    };\r\n  }\r\n\r\n  // =============================================================================\r\n  // M\xC9THODES MANQUANTES POUR IOrganismCore\r\n  // =============================================================================\r\n\r\n  /**\r\n   * Boot the organism\r\n   */\r\n  async boot(): Promise<void> {\r\n    // Initialize neural mesh if needed\r\n    try {\r\n      await this.neuralService.initialize();\r\n      this.logger?.debug('Organism booted successfully', { id: this.id });\r\n    } catch (_error) {\r\n      this.logger?.error('Failed to boot organism', { id: this.id, _error: _error });\r\n      throw _error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hibernate the organism\r\n   */\r\n  async hibernate(): Promise<void> {\r\n    try {\r\n      this.energyService.setEfficiency(0.1); // Reduce energy consumption\r\n      await this.neuralService.suspend();\r\n      this.logger?.debug('Organism hibernated', { id: this.id });\r\n    } catch (_error) {\r\n      this.logger?.error('Failed to hibernate organism', { id: this.id, _error: _error });\r\n      throw _error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update organism with delta time\r\n   */\r\n  update(deltaTime: number = 16.67): void {\r\n    // Standard frame time processing\r\n    const timeFactor = deltaTime / 16.67; // Normalize to 60fps\r\n    \r\n    // Update energy decay\r\n    this.energyService.consumeEnergy(0.1 * timeFactor, 'metabolism');\r\n    \r\n    // Update neural processing\r\n    this.neuralService.update(deltaTime);\r\n    \r\n    // Health regeneration if high energy\r\n    if (this.energyService.getEnergyLevel() > 80) {\r\n      this.health = Math.min(100, this.health + (0.1 * timeFactor));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stimulate organism input\r\n   */\r\n  stimulate(inputId: string, value: number): void {\r\n    this.neuralService.stimulate(inputId, value);\r\n    \r\n    // Consume energy for processing\r\n    this.energyService.consumeEnergy(0.5, `stimulation_${inputId}`);\r\n  }\r\n\r\n  /**\r\n   * Mutate organism with given rate\r\n   */\r\n  mutate(rate: number = 0.01): void {\r\n    const traits = this.traitService.getAllTraits();\r\n    const mutations: { [key: string]: number } = {};\r\n    \r\n    // Mutate each trait based on rate\r\n    Object.keys(traits).forEach(traitName => {\r\n      if (PerformanceOptimizedRandom.random() < rate) {\r\n        const currentValue = traits[traitName as keyof OrganismTraits];\r\n        const mutation = (PerformanceOptimizedRandom.random() - 0.5) * 0.1; // \xB15% mutation\r\n        const newValue = Math.max(0, Math.min(1, currentValue + mutation));\r\n        mutations[traitName] = newValue;\r\n      }\r\n    });\r\n    \r\n    // Apply mutations\r\n    if (Object.keys(mutations).length > 0) {\r\n      this.traitService.updateTraits(mutations as Partial<OrganismTraits>, 'mutation');\r\n      this.lastMutation = Date.now();\r\n      this.logger?.debug('Mutation applied', { id: this.id, mutations });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Feed organism with energy\r\n   */\r\n  feed(amount: number = 10): void {\r\n    this.energyService.addEnergy(amount);\r\n    this.logger?.debug('Organism fed', { id: this.id, amount });\r\n  }\r\n\r\n  /**\r\n   * Set traits (partial update)\r\n   */\r\n  setTraits(traits: Partial<OrganismTraits>): void {\r\n    this.traitService.updateTraits(traits, 'external_update');\r\n  }\r\n\r\n  /**\r\n   * Get performance metrics\r\n   */\r\n  async getPerformanceMetrics() {\r\n    const neuralMetrics = this.neuralService.getPerformanceMetrics();\r\n    \r\n    return {\r\n      cpu: await this.metricsService.getCPUUsage(),\r\n      memory: await this.metricsService.getMemoryUsage(),\r\n      neuralActivity: neuralMetrics?.neuralActivity || 0,\r\n      connectionStrength: neuralMetrics?.connectionStrength || 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get shader parameters for WebGL rendering\r\n   */\r\n  getShaderParameters(): ShaderParameters {\r\n    const traits = this.getTraits();\r\n    const energy = this.energyService.getEnergyLevel();\r\n    \r\n    return {\r\n      energy: energy / 100,\r\n      health: this.health / 100,\r\n      neuralActivity: this.neuralService.getNeuralActivity() || 0,\r\n      creativity: traits.creativity,\r\n      focus: traits.focus,\r\n      time: Date.now() / 1000\r\n    };\r\n  }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dc6922717c282430b95033d7141c7dfa97a33d6d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kgk1e008k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kgk1e008k();
var __importDefault =
/* istanbul ignore next */
(cov_1kgk1e008k().s[0]++,
/* istanbul ignore next */
(cov_1kgk1e008k().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1kgk1e008k().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1kgk1e008k().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1kgk1e008k().f[0]++;
  cov_1kgk1e008k().s[1]++;
  return /* istanbul ignore next */(cov_1kgk1e008k().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1kgk1e008k().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1kgk1e008k().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1kgk1e008k().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1kgk1e008k().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1kgk1e008k().s[3]++;
exports.OrganismCore = void 0;
const ErrorHandler_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[4]++, require("./utils/ErrorHandler"));
const TraitService_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[5]++, require("./services/TraitService"));
const EnergyService_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[6]++, require("./services/EnergyService"));
const NeuralService_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[7]++, require("./services/NeuralService"));
const RealMetricsService_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[8]++, __importDefault(require("./services/RealMetricsService")));
const FeatureFlagService_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[9]++, __importDefault(require("./services/FeatureFlagService")));
const uuid_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[10]++, require("../shared/utils/uuid"));
const PerformanceOptimizedRandom_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[11]++, require("../shared/utils/PerformanceOptimizedRandom"));
class OrganismCore {
  constructor(dna, initialTraits, dependencies) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[1]++;
    cov_1kgk1e008k().s[12]++;
    this.health = 100;
    /* istanbul ignore next */
    cov_1kgk1e008k().s[13]++;
    this.lastMutation = Date.now();
    // Validation d'entrée
    const validation =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[14]++, this.validateInput(dna, initialTraits));
    /* istanbul ignore next */
    cov_1kgk1e008k().s[15]++;
    if (!validation.isValid) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[3][0]++;
      cov_1kgk1e008k().s[16]++;
      throw new Error(`OrganismCore creation failed: ${validation.errors.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[3][1]++;
    }
    cov_1kgk1e008k().s[17]++;
    this.id = (0, uuid_1.generateSecureUUID)();
    /* istanbul ignore next */
    cov_1kgk1e008k().s[18]++;
    this.dna = dna;
    /* istanbul ignore next */
    cov_1kgk1e008k().s[19]++;
    this.logger = dependencies?.logger;
    // Initialisation des services de base
    /* istanbul ignore next */
    cov_1kgk1e008k().s[20]++;
    this.metricsService = RealMetricsService_1.default.getInstance();
    /* istanbul ignore next */
    cov_1kgk1e008k().s[21]++;
    this.featureFlags = FeatureFlagService_1.default.getInstance();
    // Initialisation des services métier
    /* istanbul ignore next */
    cov_1kgk1e008k().s[22]++;
    this.traitService = new TraitService_1.TraitService(initialTraits);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[23]++;
    this.energyService = new EnergyService_1.EnergyService(100);
    // Service neural nécessite une dépendance externe
    /* istanbul ignore next */
    cov_1kgk1e008k().s[24]++;
    if (dependencies?.neuralMesh) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[4][0]++;
      cov_1kgk1e008k().s[25]++;
      this.neuralService = new NeuralService_1.NeuralService(dependencies.neuralMesh);
    } else {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[4][1]++;
      // Fallback pour compatibilité
      const {
        NeuralMesh
      } =
      /* istanbul ignore next */
      (cov_1kgk1e008k().s[26]++, require('./NeuralMesh'));
      /* istanbul ignore next */
      cov_1kgk1e008k().s[27]++;
      this.neuralService = new NeuralService_1.NeuralService(new NeuralMesh());
    }
    /* istanbul ignore next */
    cov_1kgk1e008k().s[28]++;
    this.setupServiceListeners();
    /* istanbul ignore next */
    cov_1kgk1e008k().s[29]++;
    this.logger?.debug('OrganismCore initialized', {
      id: this.id,
      dna: this.dna
    });
  }
  /**
   * Configuration des listeners entre services
   */
  setupServiceListeners() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[2]++;
    cov_1kgk1e008k().s[30]++;
    // Écoute les changements de traits pour ajuster l'énergie
    this.traitService.addTraitChangeListener(event => {
      /* istanbul ignore next */
      cov_1kgk1e008k().f[3]++;
      cov_1kgk1e008k().s[31]++;
      this.onTraitChanged(event);
      /* istanbul ignore next */
      cov_1kgk1e008k().s[32]++;
      return undefined;
    });
    // Écoute les événements d'énergie pour log
    /* istanbul ignore next */
    cov_1kgk1e008k().s[33]++;
    this.energyService.addEnergyListener(event => {
      /* istanbul ignore next */
      cov_1kgk1e008k().f[4]++;
      cov_1kgk1e008k().s[34]++;
      if (
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[6][0]++, event.type === 'consumption') &&
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[6][1]++, event.energyAfter < 10)) {
        /* istanbul ignore next */
        cov_1kgk1e008k().b[5][0]++;
        cov_1kgk1e008k().s[35]++;
        this.logger?.debug('Low energy warning', {
          energy: event.energyAfter
        });
      } else
      /* istanbul ignore next */
      {
        cov_1kgk1e008k().b[5][1]++;
      }
    });
  }
  /**
   * Gestionnaire de changement de traits
   */
  onTraitChanged(event) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[5]++;
    // Ajuste l'efficacité métabolique basée sur les traits
    const traits =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[36]++, this.traitService.getAllTraits());
    const efficiencyFactor =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[37]++, (traits.resilience + traits.adaptability) / 2);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[38]++;
    this.energyService.setEfficiency(efficiencyFactor);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[39]++;
    this.logger?.debug('Trait changed, metabolism adjusted', {
      trait: event.traitName,
      newValue: event.newValue,
      efficiency: efficiencyFactor
    });
  }
  /**
   * Validation des entrées
   */
  validateInput(dna, traits) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[6]++;
    const errors =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[40]++, []);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[8][0]++, !dna) ||
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[8][1]++, typeof dna !== 'string')) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[7][0]++;
      cov_1kgk1e008k().s[42]++;
      errors.push('DNA must be a non-empty string');
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[7][1]++;
    }
    cov_1kgk1e008k().s[43]++;
    if (
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[10][0]++, dna) &&
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[10][1]++, dna.length < 10)) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[9][0]++;
      cov_1kgk1e008k().s[44]++;
      errors.push('DNA must be at least 10 characters long');
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[9][1]++;
    }
    cov_1kgk1e008k().s[45]++;
    if (traits) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[11][0]++;
      cov_1kgk1e008k().s[46]++;
      Object.entries(traits).forEach(([key, value]) => {
        /* istanbul ignore next */
        cov_1kgk1e008k().f[7]++;
        cov_1kgk1e008k().s[47]++;
        if (
        /* istanbul ignore next */
        (cov_1kgk1e008k().b[13][0]++, typeof value !== 'number') ||
        /* istanbul ignore next */
        (cov_1kgk1e008k().b[13][1]++, value < 0) ||
        /* istanbul ignore next */
        (cov_1kgk1e008k().b[13][2]++, value > 1)) {
          /* istanbul ignore next */
          cov_1kgk1e008k().b[12][0]++;
          cov_1kgk1e008k().s[48]++;
          errors.push(`Trait ${key} must be a number between 0 and 1`);
        } else
        /* istanbul ignore next */
        {
          cov_1kgk1e008k().b[12][1]++;
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[11][1]++;
    }
    cov_1kgk1e008k().s[49]++;
    return {
      isValid: errors.length === 0,
      errors
    };
  }
  /**
   * Génère un ID unique
   */
  // generateId() supprimé - utilise generateSecureUUID() maintenant
  // =============================================================================
  // API PUBLIQUE - Interface IOrganismCore
  // =============================================================================
  getId() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[8]++;
    cov_1kgk1e008k().s[50]++;
    return this.id;
  }
  getDNA() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[9]++;
    cov_1kgk1e008k().s[51]++;
    return this.dna;
  }
  getTraits() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[10]++;
    cov_1kgk1e008k().s[52]++;
    return this.traitService.getAllTraits();
  }
  updateTrait(name, value) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[11]++;
    cov_1kgk1e008k().s[53]++;
    if (!this.energyService.consumeEnergy(1, `trait_update_${name}`)) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[14][0]++;
      cov_1kgk1e008k().s[54]++;
      throw new Error('Insufficient energy to update trait');
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[14][1]++;
    }
    cov_1kgk1e008k().s[55]++;
    this.traitService.updateTrait(name, value, 'manual_update');
    /* istanbul ignore next */
    cov_1kgk1e008k().s[56]++;
    this.logger?.debug('Trait updated', {
      trait: name,
      value
    });
  }
  getEnergyLevel() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[12]++;
    cov_1kgk1e008k().s[57]++;
    return this.energyService.getEnergyLevel();
  }
  getHealth() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[13]++;
    cov_1kgk1e008k().s[58]++;
    return this.health;
  }
  /**
   * Évolution de l'organisme basée sur un stimulus
   */
  async evolve(stimulus) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[14]++;
    const energyCost =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[59]++, 5);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[60]++;
    if (!this.energyService.consumeEnergy(energyCost, 'evolution')) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[15][0]++;
      cov_1kgk1e008k().s[61]++;
      this.logger?.debug('Evolution skipped: insufficient energy');
      /* istanbul ignore next */
      cov_1kgk1e008k().s[62]++;
      return;
      /* istanbul ignore next */
      cov_1kgk1e008k().s[63]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[15][1]++;
    }
    cov_1kgk1e008k().s[64]++;
    try {
      const currentTraits =
      /* istanbul ignore next */
      (cov_1kgk1e008k().s[65]++, this.traitService.getAllTraits());
      const result =
      /* istanbul ignore next */
      (cov_1kgk1e008k().s[66]++, await this.neuralService.processStimulus(stimulus, currentTraits));
      /* istanbul ignore next */
      cov_1kgk1e008k().s[67]++;
      if (
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[17][0]++, result.success) &&
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[17][1]++, Object.keys(result.adaptations).length > 0)) {
        /* istanbul ignore next */
        cov_1kgk1e008k().b[16][0]++;
        cov_1kgk1e008k().s[68]++;
        this.traitService.updateTraits(result.adaptations, 'evolution');
        /* istanbul ignore next */
        cov_1kgk1e008k().s[69]++;
        this.lastMutation = Date.now();
        /* istanbul ignore next */
        cov_1kgk1e008k().s[70]++;
        this.logger?.debug('Evolution successful', {
          adaptations: result.adaptations,
          confidence: result.confidence
        });
      } else
      /* istanbul ignore next */
      {
        cov_1kgk1e008k().b[16][1]++;
      }
    } catch (_error) {
      /* istanbul ignore next */
      cov_1kgk1e008k().s[71]++;
      this.logger?.error('Evolution failed', _error);
      /* istanbul ignore next */
      cov_1kgk1e008k().s[72]++;
      ErrorHandler_1.errorHandler.logSimpleError('OrganismCore', 'evolve', _error, 'error');
    }
  }
  /**
   * Apprentissage à partir de données comportementales
   */
  async learn(behaviorData) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[15]++;
    const energyCost =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[73]++, 2);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[74]++;
    if (!this.energyService.consumeEnergy(energyCost, 'learning')) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[18][0]++;
      cov_1kgk1e008k().s[75]++;
      return;
      /* istanbul ignore next */
      cov_1kgk1e008k().s[76]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[18][1]++;
    }
    const success =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[77]++, await this.neuralService.learn(behaviorData));
    /* istanbul ignore next */
    cov_1kgk1e008k().s[78]++;
    if (success) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[19][0]++;
      // Améliore légèrement la mémoire lors de l'apprentissage
      const currentMemory =
      /* istanbul ignore next */
      (cov_1kgk1e008k().s[79]++, this.traitService.getTrait('memory'));
      /* istanbul ignore next */
      cov_1kgk1e008k().s[80]++;
      this.traitService.updateTrait('memory', currentMemory + 0.01, 'learning');
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[19][1]++;
    }
    cov_1kgk1e008k().s[81]++;
    this.logger?.debug('Learning completed', {
      success,
      data: behaviorData
    });
  }
  /**
   * Traitement d'un stimulus simple
   */
  processStimulus(stimulus) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[16]++;
    const energyCost =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[82]++, 1);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[83]++;
    if (!this.energyService.consumeEnergy(energyCost, 'stimulus_processing')) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[20][0]++;
      cov_1kgk1e008k().s[84]++;
      return;
      /* istanbul ignore next */
      cov_1kgk1e008k().s[85]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[20][1]++;
    }
    // Traitement simplifié en arrière-plan
    cov_1kgk1e008k().s[86]++;
    this.neuralService.queuePattern({
      id: `pattern_${Date.now()}`,
      type: 'behavioral',
      data: stimulus,
      timestamp: Date.now(),
      confidence: 0.8
    });
    /* istanbul ignore next */
    cov_1kgk1e008k().s[87]++;
    this.logger?.debug('Stimulus processed', {
      stimulus
    });
  }
  /**
   * Obtient l'état complet de l'organisme
   */
  getState() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[17]++;
    const traits =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[88]++, this.traitService.getAllTraits());
    const energyStats =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[89]++, this.energyService.getEnergyStats());
    /* istanbul ignore next */
    cov_1kgk1e008k().s[90]++;
    return {
      id: this.id,
      traits,
      energy: energyStats.current,
      maxEnergy: energyStats.max,
      health: this.health,
      dna: this.dna,
      lastMutation: this.lastMutation,
      balance: this.traitService.calculateBalance(),
      metabolismRate: energyStats.metabolismRate,
      age: Date.now() - parseInt(this.id.split('_')[1]) // Approximation basée sur l'ID
    };
  }
  /**
   * Génère les paramètres de shader pour le rendu visuel
   */
  generateShaderParameters() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[18]++;
    const traits =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[91]++, this.traitService.getAllTraits());
    /* istanbul ignore next */
    cov_1kgk1e008k().s[92]++;
    return {
      energy: this.energyService.getEnergyPercentage() / 100,
      health: this.health / 100,
      neuralActivity: this.neuralService.getNeuralActivity(),
      creativity: traits.creativity,
      focus: traits.focus,
      time: Date.now() / 1000,
      colorPrimary: [traits.creativity, traits.empathy, traits.intuition],
      colorSecondary: [traits.focus, traits.resilience, traits.adaptability],
      morphology: traits.adaptability,
      complexity: traits.creativity * traits.memory
    };
  }
  /**
   * Sérialisation pour sauvegarde
   */
  toJSON() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[19]++;
    cov_1kgk1e008k().s[93]++;
    return {
      mesh:
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[21][0]++, this.neuralService.saveState()) ||
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[21][1]++, {}),
      dna: this.dna,
      health: this.health,
      lastMutation: this.lastMutation,
      traits:
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[22][0]++, this.traitService.toJSON()) ||
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[22][1]++, {
        traits: this.traitService.getAllTraits(),
        history: []
      }),
      energy:
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[23][0]++, this.energyService.toJSON()) ||
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[23][1]++, {
        energy: 100,
        maxEnergy: 100,
        metabolismRate: 1,
        config: {
          efficiency: 1,
          baseConsumption: 0.1
        },
        history: []
      }),
      neural: this.neuralService.saveState(),
      timestamp: Date.now()
    };
  }
  /**
   * Restauration depuis JSON
   */
  fromJSON(data) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[20]++;
    cov_1kgk1e008k().s[94]++;
    if (
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[25][0]++, data.traits) &&
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[25][1]++, typeof data.traits === 'object')) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[24][0]++;
      cov_1kgk1e008k().s[95]++;
      this.traitService.fromJSON(data.traits);
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[24][1]++;
    }
    cov_1kgk1e008k().s[96]++;
    if (
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[27][0]++, data.energy) &&
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[27][1]++, typeof data.energy === 'object')) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[26][0]++;
      cov_1kgk1e008k().s[97]++;
      this.energyService.fromJSON(data.energy);
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[26][1]++;
    }
    cov_1kgk1e008k().s[98]++;
    if (data.neural) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[28][0]++;
      cov_1kgk1e008k().s[99]++;
      this.neuralService.loadState(data.neural);
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[28][1]++;
    }
    cov_1kgk1e008k().s[100]++;
    this.health =
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[29][0]++, data.health) ||
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[29][1]++, 100);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[101]++;
    this.lastMutation =
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[30][0]++, data.lastMutation) ||
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[30][1]++, Date.now());
    /* istanbul ignore next */
    cov_1kgk1e008k().s[102]++;
    this.logger?.debug('State restored from JSON', {
      id: this.id
    });
  }
  /**
   * Nettoyage et libération des ressources
   */
  cleanup() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[21]++;
    cov_1kgk1e008k().s[103]++;
    this.energyService.destroy();
    /* istanbul ignore next */
    cov_1kgk1e008k().s[104]++;
    this.traitService.cleanup();
    /* istanbul ignore next */
    cov_1kgk1e008k().s[105]++;
    this.neuralService.cleanup();
    /* istanbul ignore next */
    cov_1kgk1e008k().s[106]++;
    this.logger?.debug('OrganismCore cleaned up', {
      id: this.id
    });
  }
  /**
   * Vérification de l'état de santé
   */
  healthCheck() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[22]++;
    const issues =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[107]++, []);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[108]++;
    if (this.health < 20) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[31][0]++;
      cov_1kgk1e008k().s[109]++;
      issues.push('Low health');
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[31][1]++;
    }
    cov_1kgk1e008k().s[110]++;
    if (this.energyService.getEnergyLevel() < 10) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[32][0]++;
      cov_1kgk1e008k().s[111]++;
      issues.push('Low energy');
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[32][1]++;
    }
    const neuralHealth =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[112]++, this.neuralService.healthCheck());
    /* istanbul ignore next */
    cov_1kgk1e008k().s[113]++;
    if (!neuralHealth.healthy) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[33][0]++;
      cov_1kgk1e008k().s[114]++;
      issues.push(...neuralHealth.issues);
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[33][1]++;
    }
    cov_1kgk1e008k().s[115]++;
    return {
      healthy: issues.length === 0,
      issues
    };
  }
  // =============================================================================
  // MÉTHODES MANQUANTES POUR IOrganismCore
  // =============================================================================
  /**
   * Boot the organism
   */
  async boot() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[23]++;
    cov_1kgk1e008k().s[116]++;
    // Initialize neural mesh if needed
    try {
      /* istanbul ignore next */
      cov_1kgk1e008k().s[117]++;
      await this.neuralService.initialize();
      /* istanbul ignore next */
      cov_1kgk1e008k().s[118]++;
      this.logger?.debug('Organism booted successfully', {
        id: this.id
      });
    } catch (_error) {
      /* istanbul ignore next */
      cov_1kgk1e008k().s[119]++;
      this.logger?.error('Failed to boot organism', {
        id: this.id,
        _error: _error
      });
      /* istanbul ignore next */
      cov_1kgk1e008k().s[120]++;
      throw _error;
    }
  }
  /**
   * Hibernate the organism
   */
  async hibernate() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[24]++;
    cov_1kgk1e008k().s[121]++;
    try {
      /* istanbul ignore next */
      cov_1kgk1e008k().s[122]++;
      this.energyService.setEfficiency(0.1); // Reduce energy consumption
      /* istanbul ignore next */
      cov_1kgk1e008k().s[123]++;
      await this.neuralService.suspend();
      /* istanbul ignore next */
      cov_1kgk1e008k().s[124]++;
      this.logger?.debug('Organism hibernated', {
        id: this.id
      });
    } catch (_error) {
      /* istanbul ignore next */
      cov_1kgk1e008k().s[125]++;
      this.logger?.error('Failed to hibernate organism', {
        id: this.id,
        _error: _error
      });
      /* istanbul ignore next */
      cov_1kgk1e008k().s[126]++;
      throw _error;
    }
  }
  /**
   * Update organism with delta time
   */
  update(deltaTime =
  /* istanbul ignore next */
  (cov_1kgk1e008k().b[34][0]++, 16.67)) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[25]++;
    // Standard frame time processing
    const timeFactor =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[127]++, deltaTime / 16.67); // Normalize to 60fps
    // Update energy decay
    /* istanbul ignore next */
    cov_1kgk1e008k().s[128]++;
    this.energyService.consumeEnergy(0.1 * timeFactor, 'metabolism');
    // Update neural processing
    /* istanbul ignore next */
    cov_1kgk1e008k().s[129]++;
    this.neuralService.update(deltaTime);
    // Health regeneration if high energy
    /* istanbul ignore next */
    cov_1kgk1e008k().s[130]++;
    if (this.energyService.getEnergyLevel() > 80) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[35][0]++;
      cov_1kgk1e008k().s[131]++;
      this.health = Math.min(100, this.health + 0.1 * timeFactor);
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[35][1]++;
    }
  }
  /**
   * Stimulate organism input
   */
  stimulate(inputId, value) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[26]++;
    cov_1kgk1e008k().s[132]++;
    this.neuralService.stimulate(inputId, value);
    // Consume energy for processing
    /* istanbul ignore next */
    cov_1kgk1e008k().s[133]++;
    this.energyService.consumeEnergy(0.5, `stimulation_${inputId}`);
  }
  /**
   * Mutate organism with given rate
   */
  mutate(rate =
  /* istanbul ignore next */
  (cov_1kgk1e008k().b[36][0]++, 0.01)) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[27]++;
    const traits =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[134]++, this.traitService.getAllTraits());
    const mutations =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[135]++, {});
    // Mutate each trait based on rate
    /* istanbul ignore next */
    cov_1kgk1e008k().s[136]++;
    Object.keys(traits).forEach(traitName => {
      /* istanbul ignore next */
      cov_1kgk1e008k().f[28]++;
      cov_1kgk1e008k().s[137]++;
      if (PerformanceOptimizedRandom_1.PerformanceOptimizedRandom.random() < rate) {
        /* istanbul ignore next */
        cov_1kgk1e008k().b[37][0]++;
        const currentValue =
        /* istanbul ignore next */
        (cov_1kgk1e008k().s[138]++, traits[traitName]);
        const mutation =
        /* istanbul ignore next */
        (cov_1kgk1e008k().s[139]++, (PerformanceOptimizedRandom_1.PerformanceOptimizedRandom.random() - 0.5) * 0.1); // ±5% mutation
        const newValue =
        /* istanbul ignore next */
        (cov_1kgk1e008k().s[140]++, Math.max(0, Math.min(1, currentValue + mutation)));
        /* istanbul ignore next */
        cov_1kgk1e008k().s[141]++;
        mutations[traitName] = newValue;
      } else
      /* istanbul ignore next */
      {
        cov_1kgk1e008k().b[37][1]++;
      }
    });
    // Apply mutations
    /* istanbul ignore next */
    cov_1kgk1e008k().s[142]++;
    if (Object.keys(mutations).length > 0) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[38][0]++;
      cov_1kgk1e008k().s[143]++;
      this.traitService.updateTraits(mutations, 'mutation');
      /* istanbul ignore next */
      cov_1kgk1e008k().s[144]++;
      this.lastMutation = Date.now();
      /* istanbul ignore next */
      cov_1kgk1e008k().s[145]++;
      this.logger?.debug('Mutation applied', {
        id: this.id,
        mutations
      });
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[38][1]++;
    }
  }
  /**
   * Feed organism with energy
   */
  feed(amount =
  /* istanbul ignore next */
  (cov_1kgk1e008k().b[39][0]++, 10)) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[29]++;
    cov_1kgk1e008k().s[146]++;
    this.energyService.addEnergy(amount);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[147]++;
    this.logger?.debug('Organism fed', {
      id: this.id,
      amount
    });
  }
  /**
   * Set traits (partial update)
   */
  setTraits(traits) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[30]++;
    cov_1kgk1e008k().s[148]++;
    this.traitService.updateTraits(traits, 'external_update');
  }
  /**
   * Get performance metrics
   */
  async getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[31]++;
    const neuralMetrics =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[149]++, this.neuralService.getPerformanceMetrics());
    /* istanbul ignore next */
    cov_1kgk1e008k().s[150]++;
    return {
      cpu: await this.metricsService.getCPUUsage(),
      memory: await this.metricsService.getMemoryUsage(),
      neuralActivity:
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[40][0]++, neuralMetrics?.neuralActivity) ||
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[40][1]++, 0),
      connectionStrength:
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[41][0]++, neuralMetrics?.connectionStrength) ||
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[41][1]++, 0)
    };
  }
  /**
   * Get shader parameters for WebGL rendering
   */
  getShaderParameters() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[32]++;
    const traits =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[151]++, this.getTraits());
    const energy =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[152]++, this.energyService.getEnergyLevel());
    /* istanbul ignore next */
    cov_1kgk1e008k().s[153]++;
    return {
      energy: energy / 100,
      health: this.health / 100,
      neuralActivity:
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[42][0]++, this.neuralService.getNeuralActivity()) ||
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[42][1]++, 0),
      creativity: traits.creativity,
      focus: traits.focus,
      time: Date.now() / 1000
    };
  }
}
/* istanbul ignore next */
cov_1kgk1e008k().s[154]++;
exports.OrganismCore = OrganismCore;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,