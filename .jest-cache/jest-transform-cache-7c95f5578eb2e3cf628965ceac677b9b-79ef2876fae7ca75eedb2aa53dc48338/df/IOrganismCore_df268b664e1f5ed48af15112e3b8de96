0e812cb052a4b932ce86dd7fadbcb040
"use strict";

// Interface d'abstraction pour OrganismCore
/* istanbul ignore next */
function cov_re1sgkt1z() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/interfaces/IOrganismCore.ts";
  var hash = "62f8b543889b73e49ef8f1db1ad75639bfd29e99";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/interfaces/IOrganismCore.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/interfaces/IOrganismCore.ts",
      mappings: ";AAAA,4CAA4C",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/interfaces/IOrganismCore.ts"],
      sourcesContent: ["// Interface d'abstraction pour OrganismCore\r\n\r\nimport { OrganismState, OrganismTraits } from '../../shared/types/organism';\r\nimport { PerformanceMetrics } from './INeuralMesh';\r\n\r\nexport interface ShaderParameters {\r\n  energy: number;\r\n  health: number;\r\n  neuralActivity: number;\r\n  creativity: number;\r\n  focus: number;\r\n  time: number;\r\n  colorPrimary?: [number, number, number];\r\n  colorSecondary?: [number, number, number];\r\n  morphology?: number;\r\n  complexity?: number;\r\n  animation?: number;\r\n}\r\n\r\nexport interface OrganismJSON {\r\n  mesh: unknown;\r\n  traits: unknown;\r\n  energy: unknown;\r\n  health: number;\r\n  dna: string;\r\n  timestamp: number;\r\n  neural?: unknown;\r\n  lastMutation?: number;\r\n}\r\n\r\nexport interface IOrganismCore {\r\n  // Cycle de vie\r\n  boot(): Promise<void>;\r\n  hibernate(): Promise<void>;\r\n  update(deltaTime?: number): void;\r\n  \r\n  // Stimulation\r\n  stimulate(inputId: string, value: number): void;\r\n  \r\n  // \xC9volution\r\n  mutate(rate?: number): void;\r\n  feed(amount?: number): void;\r\n  \r\n  // \xC9tat et traits\r\n  getTraits(): OrganismTraits;\r\n  setTraits(traits: Partial<OrganismTraits>): void;\r\n  getState(): OrganismState;\r\n  \r\n  // M\xE9triques et export\r\n  getPerformanceMetrics(): Promise<PerformanceMetrics>;\r\n  getShaderParameters(): ShaderParameters;\r\n  toJSON(): OrganismJSON;\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "62f8b543889b73e49ef8f1db1ad75639bfd29e99"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_re1sgkt1z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_re1sgkt1z();
cov_re1sgkt1z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfcmUxc2drdDF6IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIl0sInNvdXJjZXMiOlsiL21udC9jL1VzZXJzL21fb2xpL1Byb2pldHMvU1lNQklPTlQvc3JjL2NvcmUvaW50ZXJmYWNlcy9JT3JnYW5pc21Db3JlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEludGVyZmFjZSBkJ2Fic3RyYWN0aW9uIHBvdXIgT3JnYW5pc21Db3JlXHJcblxyXG5pbXBvcnQgeyBPcmdhbmlzbVN0YXRlLCBPcmdhbmlzbVRyYWl0cyB9IGZyb20gJy4uLy4uL3NoYXJlZC90eXBlcy9vcmdhbmlzbSc7XHJcbmltcG9ydCB7IFBlcmZvcm1hbmNlTWV0cmljcyB9IGZyb20gJy4vSU5ldXJhbE1lc2gnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBTaGFkZXJQYXJhbWV0ZXJzIHtcclxuICBlbmVyZ3k6IG51bWJlcjtcclxuICBoZWFsdGg6IG51bWJlcjtcclxuICBuZXVyYWxBY3Rpdml0eTogbnVtYmVyO1xyXG4gIGNyZWF0aXZpdHk6IG51bWJlcjtcclxuICBmb2N1czogbnVtYmVyO1xyXG4gIHRpbWU6IG51bWJlcjtcclxuICBjb2xvclByaW1hcnk/OiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XHJcbiAgY29sb3JTZWNvbmRhcnk/OiBbbnVtYmVyLCBudW1iZXIsIG51bWJlcl07XHJcbiAgbW9ycGhvbG9neT86IG51bWJlcjtcclxuICBjb21wbGV4aXR5PzogbnVtYmVyO1xyXG4gIGFuaW1hdGlvbj86IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBPcmdhbmlzbUpTT04ge1xyXG4gIG1lc2g6IHVua25vd247XHJcbiAgdHJhaXRzOiB1bmtub3duO1xyXG4gIGVuZXJneTogdW5rbm93bjtcclxuICBoZWFsdGg6IG51bWJlcjtcclxuICBkbmE6IHN0cmluZztcclxuICB0aW1lc3RhbXA6IG51bWJlcjtcclxuICBuZXVyYWw/OiB1bmtub3duO1xyXG4gIGxhc3RNdXRhdGlvbj86IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJT3JnYW5pc21Db3JlIHtcclxuICAvLyBDeWNsZSBkZSB2aWVcclxuICBib290KCk6IFByb21pc2U8dm9pZD47XHJcbiAgaGliZXJuYXRlKCk6IFByb21pc2U8dm9pZD47XHJcbiAgdXBkYXRlKGRlbHRhVGltZT86IG51bWJlcik6IHZvaWQ7XHJcbiAgXHJcbiAgLy8gU3RpbXVsYXRpb25cclxuICBzdGltdWxhdGUoaW5wdXRJZDogc3RyaW5nLCB2YWx1ZTogbnVtYmVyKTogdm9pZDtcclxuICBcclxuICAvLyDDiXZvbHV0aW9uXHJcbiAgbXV0YXRlKHJhdGU/OiBudW1iZXIpOiB2b2lkO1xyXG4gIGZlZWQoYW1vdW50PzogbnVtYmVyKTogdm9pZDtcclxuICBcclxuICAvLyDDiXRhdCBldCB0cmFpdHNcclxuICBnZXRUcmFpdHMoKTogT3JnYW5pc21UcmFpdHM7XHJcbiAgc2V0VHJhaXRzKHRyYWl0czogUGFydGlhbDxPcmdhbmlzbVRyYWl0cz4pOiB2b2lkO1xyXG4gIGdldFN0YXRlKCk6IE9yZ2FuaXNtU3RhdGU7XHJcbiAgXHJcbiAgLy8gTcOpdHJpcXVlcyBldCBleHBvcnRcclxuICBnZXRQZXJmb3JtYW5jZU1ldHJpY3MoKTogUHJvbWlzZTxQZXJmb3JtYW5jZU1ldHJpY3M+O1xyXG4gIGdldFNoYWRlclBhcmFtZXRlcnMoKTogU2hhZGVyUGFyYW1ldGVycztcclxuICB0b0pTT04oKTogT3JnYW5pc21KU09OO1xyXG59ICJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUFBO0FBQUEsU0FBQUEsY0FBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO0lBQUFDLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtJQUFBQyxDQUFBO0lBQUFDLGNBQUE7TUFBQUMsSUFBQTtNQUFBQyxRQUFBO01BQUFDLEtBQUE7TUFBQUMsT0FBQTtNQUFBQyxjQUFBO01BQUFDLE9BQUE7SUFBQTtJQUFBQyxlQUFBO0lBQUF0QixJQUFBO0VBQUE7RUFBQSxJQUFBdUIsUUFBQSxHQUFBdEIsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUFvQixRQUFBLENBQUF4QixJQUFBLEtBQUF3QixRQUFBLENBQUF4QixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBdUIsUUFBQSxDQUFBeEIsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBb0IsY0FBQSxHQUFBRCxRQUFBLENBQUF4QixJQUFBO0VBQUEiLCJpZ25vcmVMaXN0IjpbXX0=