{"version":3,"names":["cov_27jbirh236","actualCoverage","s","exports","validateVariable","validateLengthProperty","validateSplitOperation","enableErrorValidation","runErrorTests","secureLogger_1","require","variable","variableName","f","undefined","b","SecureLogger","warn","obj","objectName","str","stringName","isDevelopment","info","window","errorHandler","event","message","includes","error","filename","lineno","stack","addEventListener","removeEventListener","element","className","split","emptyArray","average","length","reduce","a","undefinedVar"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/errorValidation.ts"],"sourcesContent":["import { SecureLogger } from '@shared/utils/secureLogger';\n// Utilitaire de validation pour d√©tecter et pr√©venir les erreurs courantes\r\n\r\n/**\r\n * V√©rifie si une variable peut causer l'erreur \"Cannot read properties of undefined\"\r\n */\r\nexport function validateVariable(variable: any, variableName: string): void {\r\n  if (variable === undefined) {\r\n    SecureLogger.warn(`‚ö†Ô∏è Variable \"${variableName}\" est undefined`);\r\n  }\r\n  if (variable === null) {\r\n    SecureLogger.warn(`‚ö†Ô∏è Variable \"${variableName}\" est null`);\r\n  }\r\n}\r\n\r\n/**\r\n * V√©rifie si un objet a des propri√©t√©s length avant de les utiliser\r\n */\r\nexport function validateLengthProperty(obj: any, objectName: string): boolean {\r\n  if (!obj) {\r\n    SecureLogger.warn(`‚ö†Ô∏è \"${objectName}\" est null/undefined, impossible d'acc√©der √† .length`);\r\n    return false;\r\n  }\r\n  \r\n  if (!('length' in obj)) {\r\n    SecureLogger.warn(`‚ö†Ô∏è \"${objectName}\" n'a pas de propri√©t√© length`);\r\n    return false;\r\n  }\r\n  \r\n  return true;\r\n}\r\n\r\n/**\r\n * V√©rifie si une string peut √™tre split√©e\r\n */\r\nexport function validateSplitOperation(str: any, stringName: string): boolean {\r\n  if (typeof str !== 'string') {\r\n    SecureLogger.warn(`‚ö†Ô∏è \"${stringName}\" n'est pas une string, impossible d'utiliser .split()`);\r\n    return false;\r\n  }\r\n  \r\n  return true;\r\n}\r\n\r\n/**\r\n * Mode debug pour traquer les erreurs potentielles\r\n * Utiliser uniquement en d√©veloppement\r\n */\r\nexport function enableErrorValidation(isDevelopment: boolean = false): (() => void) | void {\r\n  if (!isDevelopment) {\r\n    // En production, ne pas activer le mode debug verbose\r\n    return;\r\n  }\r\n  \r\n  SecureLogger.info('‚úÖ Validation d\\'erreurs activ√©e (mode d√©veloppement)');\r\n  \r\n  // Surveiller les erreurs via window.addEventListener\r\n  if (typeof window !== 'undefined') {\r\n    const errorHandler = (event: ErrorEvent) => {\r\n      const message = event.message || '';\r\n      \r\n      if (message.includes('split is not a function')) {\r\n        SecureLogger.error('üö® Erreur className.split d√©tect√©e:', {\r\n          message: event.message,\r\n          filename: event.filename,\r\n          lineno: event.lineno,\r\n          stack: event.error?.stack\r\n        });\r\n      }\r\n      \r\n      if (message.includes('Cannot read properties of undefined')) {\r\n        SecureLogger.error('üö® Erreur lecture propri√©t√© undefined d√©tect√©e:', {\r\n          message: event.message,\r\n          filename: event.filename,\r\n          lineno: event.lineno,\r\n          stack: event.error?.stack\r\n        });\r\n      }\r\n      \r\n      if (message.includes('Cannot access') && message.includes('before initialization')) {\r\n        SecureLogger.error('üö® Erreur variable non initialis√©e d√©tect√©e:', {\r\n          message: event.message,\r\n          filename: event.filename,\r\n          lineno: event.lineno,\r\n          stack: event.error?.stack\r\n        });\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('error', errorHandler);\r\n    \r\n    // Nettoyer l'√©couteur si n√©cessaire\r\n    return () => {\r\n      window.removeEventListener('error', errorHandler);\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Teste les corrections apport√©es\r\n */\r\nexport function runErrorTests(): void {\r\n  SecureLogger.info('üß™ Test des corrections d\\'erreurs...');\r\n  \r\n  // Test 1: className.split sur undefined\r\n  try {\r\n    const element = { className: undefined } as any;\r\n    if (typeof element.className === 'string') {\r\n      element.className.split(' ');\r\n    } else {\r\n      SecureLogger.info('‚úÖ Test 1 r√©ussi: className.split prot√©g√©');\r\n    }\r\n  } catch (error) {\r\n    SecureLogger.error('‚ùå Test 1 √©chou√©:', error);\r\n  }\r\n  \r\n  // Test 2: Division par z√©ro\r\n  try {\r\n    const emptyArray: number[] = [];\r\n    const average = emptyArray.length > 0 \r\n      ? emptyArray.reduce((a, b) => a + b, 0) / emptyArray.length \r\n      : 0;\r\n    SecureLogger.info('‚úÖ Test 2 r√©ussi: Division par z√©ro √©vit√©e, moyenne =', average);\r\n  } catch (error) {\r\n    SecureLogger.error('‚ùå Test 2 √©chou√©:', error);\r\n  }\r\n  \r\n  // Test 3: Propri√©t√© length sur undefined\r\n  try {\r\n    const undefinedVar = undefined as any;\r\n    const length = undefinedVar?.length || 0;\r\n    SecureLogger.info('‚úÖ Test 3 r√©ussi: Propri√©t√© length prot√©g√©e, length =', length);\r\n  } catch (error) {\r\n    SecureLogger.error('‚ùå Test 3 √©chou√©:', error);\r\n  }\r\n  \r\n  SecureLogger.info('‚úÖ Tests termin√©s');\r\n} "],"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","ignoreList":[]}