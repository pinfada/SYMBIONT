260c17525b457ad7da857ef96db2201f
"use strict";

/* istanbul ignore next */
function cov_1n02ebmhdc() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/RealTimePerformanceMonitor.ts";
  var hash = "d187e7881d277c613abb5bb5bb8ad4328d903476";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/RealTimePerformanceMonitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 44
        }
      },
      "2": {
        start: {
          line: 4,
          column: 23
        },
        end: {
          line: 4,
          column: 60
        }
      },
      "3": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 60
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 40
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "6": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 16,
          column: 10
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 48
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 55
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "10": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 29,
          column: 10
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "12": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 77
        }
      },
      "13": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 19
        }
      },
      "14": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 43,
          column: 11
        }
      },
      "15": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "16": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 52
        }
      },
      "17": {
        start: {
          line: 45,
          column: 27
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "18": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 60,
          column: 11
        }
      },
      "19": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "20": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 73
        }
      },
      "21": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 85
        }
      },
      "22": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "23": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 52
        }
      },
      "24": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 22
        }
      },
      "25": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 47
        }
      },
      "26": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 22
        }
      },
      "27": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 58
        }
      },
      "28": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 22
        }
      },
      "29": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 82
        }
      },
      "30": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 22
        }
      },
      "31": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 60
        }
      },
      "32": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 22
        }
      },
      "33": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "34": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 76
        }
      },
      "35": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "36": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 54
        }
      },
      "37": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "38": {
        start: {
          line: 108,
          column: 28
        },
        end: {
          line: 108,
          column: 46
        }
      },
      "39": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 113,
          column: 14
        }
      },
      "40": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 121,
          column: 14
        }
      },
      "41": {
        start: {
          line: 129,
          column: 23
        },
        end: {
          line: 129,
          column: 24
        }
      },
      "42": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "43": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 69
        }
      },
      "44": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 57
        }
      },
      "45": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 28
        }
      },
      "46": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 31
        }
      },
      "47": {
        start: {
          line: 145,
          column: 22
        },
        end: {
          line: 145,
          column: 39
        }
      },
      "48": {
        start: {
          line: 147,
          column: 25
        },
        end: {
          line: 147,
          column: 26
        }
      },
      "49": {
        start: {
          line: 148,
          column: 27
        },
        end: {
          line: 148,
          column: 29
        }
      },
      "50": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "51": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 25
        }
      },
      "52": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 49
        }
      },
      "53": {
        start: {
          line: 153,
          column: 27
        },
        end: {
          line: 153,
          column: 52
        }
      },
      "54": {
        start: {
          line: 154,
          column: 27
        },
        end: {
          line: 154,
          column: 50
        }
      },
      "55": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 66
        }
      },
      "56": {
        start: {
          line: 162,
          column: 22
        },
        end: {
          line: 162,
          column: 39
        }
      },
      "57": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "58": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 168,
          column: 15
        }
      },
      "59": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 45
        }
      },
      "60": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 23
        }
      },
      "61": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "62": {
        start: {
          line: 181,
          column: 49
        },
        end: {
          line: 181,
          column: 78
        }
      },
      "63": {
        start: {
          line: 182,
          column: 59
        },
        end: {
          line: 182,
          column: 98
        }
      },
      "64": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 64
        }
      },
      "65": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 51
        }
      },
      "66": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 35
        }
      },
      "67": {
        start: {
          line: 194,
          column: 27
        },
        end: {
          line: 194,
          column: 29
        }
      },
      "68": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "69": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 145
        }
      },
      "70": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "71": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 104
        }
      },
      "72": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "73": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 120
        }
      },
      "74": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "75": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 122
        }
      },
      "76": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "77": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 109
        }
      },
      "78": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 213,
          column: 10
        }
      },
      "79": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 220,
          column: 19
        }
      },
      "80": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 19
        }
      },
      "81": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 33
        }
      },
      "82": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 38
        }
      },
      "83": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 233,
          column: 17
        }
      },
      "84": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 232,
          column: 13
        }
      },
      "85": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 44
        }
      },
      "86": {
        start: {
          line: 228,
          column: 36
        },
        end: {
          line: 228,
          column: 65
        }
      },
      "87": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 231,
          column: 17
        }
      },
      "88": {
        start: {
          line: 230,
          column: 20
        },
        end: {
          line: 230,
          column: 105
        }
      },
      "89": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 34
        }
      },
      "90": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 240,
          column: 37
        }
      },
      "91": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 243,
          column: 9
        }
      },
      "92": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 50
        }
      },
      "93": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 35
        }
      },
      "94": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 42
        }
      },
      "95": {
        start: {
          line: 258,
          column: 0
        },
        end: {
          line: 258,
          column: 64
        }
      },
      "96": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 28
        }
      },
      "97": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 26
        }
      },
      "98": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 27
        }
      },
      "99": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 27
        }
      },
      "100": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 31
        }
      },
      "101": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 269,
          column: 32
        }
      },
      "102": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 37
        }
      },
      "103": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 274,
          column: 19
        }
      },
      "104": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 19
        }
      },
      "105": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 31
        }
      },
      "106": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 42
        }
      },
      "107": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 28
        }
      },
      "108": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 32
        }
      },
      "109": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 32
        }
      },
      "110": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "111": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 56
        }
      },
      "112": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 41
        }
      },
      "113": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 289,
          column: 19
        }
      },
      "114": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 19
        }
      },
      "115": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 305,
          column: 11
        }
      },
      "116": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 30
        }
      },
      "117": {
        start: {
          line: 292,
          column: 30
        },
        end: {
          line: 292,
          column: 55
        }
      },
      "118": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 39
        }
      },
      "119": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 303,
          column: 13
        }
      },
      "120": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 296,
          column: 70
        }
      },
      "121": {
        start: {
          line: 298,
          column: 16
        },
        end: {
          line: 300,
          column: 17
        }
      },
      "122": {
        start: {
          line: 299,
          column: 20
        },
        end: {
          line: 299,
          column: 62
        }
      },
      "123": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 36
        }
      },
      "124": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 302,
          column: 42
        }
      },
      "125": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 36
        }
      },
      "126": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 312,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 39,
            column: 59
          },
          end: {
            line: 39,
            column: 60
          }
        },
        loc: {
          start: {
            line: 39,
            column: 69
          },
          end: {
            line: 43,
            column: 9
          }
        },
        line: 39
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 53,
            column: 27
          },
          end: {
            line: 53,
            column: 28
          }
        },
        loc: {
          start: {
            line: 53,
            column: 35
          },
          end: {
            line: 60,
            column: 9
          }
        },
        line: 53
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 35
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 35
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 87
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 30
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 98
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        loc: {
          start: {
            line: 106,
            column: 33
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 106
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 26
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 127
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 28
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 144
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 34
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 161
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        loc: {
          start: {
            line: 178,
            column: 27
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 178
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 181,
            column: 40
          },
          end: {
            line: 181,
            column: 41
          }
        },
        loc: {
          start: {
            line: 181,
            column: 47
          },
          end: {
            line: 181,
            column: 80
          }
        },
        line: 181
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 182,
            column: 46
          },
          end: {
            line: 182,
            column: 47
          }
        },
        loc: {
          start: {
            line: 182,
            column: 57
          },
          end: {
            line: 182,
            column: 100
          }
        },
        line: 182
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 29
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 193
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 22
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 218
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 224,
            column: 20
          },
          end: {
            line: 224,
            column: 21
          }
        },
        loc: {
          start: {
            line: 224,
            column: 32
          },
          end: {
            line: 233,
            column: 9
          }
        },
        line: 224
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 238,
            column: 4
          },
          end: {
            line: 238,
            column: 5
          }
        },
        loc: {
          start: {
            line: 238,
            column: 21
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 238
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 5
          }
        },
        loc: {
          start: {
            line: 248,
            column: 24
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 248
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 254,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        loc: {
          start: {
            line: 254,
            column: 19
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 254
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        loc: {
          start: {
            line: 263,
            column: 18
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 263
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 272,
            column: 4
          },
          end: {
            line: 272,
            column: 5
          }
        },
        loc: {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 279,
            column: 5
          }
        },
        line: 272
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        loc: {
          start: {
            line: 280,
            column: 11
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 280
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        loc: {
          start: {
            line: 287,
            column: 23
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 287
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 290,
            column: 54
          },
          end: {
            line: 290,
            column: 55
          }
        },
        loc: {
          start: {
            line: 290,
            column: 69
          },
          end: {
            line: 305,
            column: 9
          }
        },
        line: 290
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 307,
            column: 5
          }
        },
        loc: {
          start: {
            line: 307,
            column: 17
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 307
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 69,
            column: 22
          }
        }, {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 72,
            column: 22
          }
        }, {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 75,
            column: 22
          }
        }, {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 78,
            column: 22
          }
        }, {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 81,
            column: 22
          }
        }],
        line: 66
      },
      "2": {
        loc: {
          start: {
            line: 80,
            column: 43
          },
          end: {
            line: 80,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 43
          },
          end: {
            line: 80,
            column: 54
          }
        }, {
          start: {
            line: 80,
            column: 58
          },
          end: {
            line: 80,
            column: 59
          }
        }],
        line: 80
      },
      "3": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "4": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: 115,
            column: 13
          },
          end: {
            line: 122,
            column: 9
          }
        }],
        line: 107
      },
      "5": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "6": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "7": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "8": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "9": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "10": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 220,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 220,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "11": {
        loc: {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "12": {
        loc: {
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 231,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 16
          },
          end: {
            line: 231,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "13": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 243,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "14": {
        loc: {
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 274,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 8
          },
          end: {
            line: 274,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "15": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "16": {
        loc: {
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 289,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 288,
            column: 8
          },
          end: {
            line: 289,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 288
      },
      "17": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 303,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 303,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "18": {
        loc: {
          start: {
            line: 298,
            column: 16
          },
          end: {
            line: 300,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 16
          },
          end: {
            line: 300,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/RealTimePerformanceMonitor.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/RealTimePerformanceMonitor.ts"],
      sourcesContent: ["import { SecureRandom } from '@shared/utils/secureRandom';\nimport { logger } from '@shared/utils/secureLogger';\n/**\r\n * RealTimePerformanceMonitor - Monitoring de performance en temps r\xE9el\r\n * Remplace les simulations par des m\xE9triques r\xE9elles\r\n */\r\n\r\ninterface WebVitalsMetrics {\r\n  lcp: number; // Largest Contentful Paint\r\n  fid: number; // First Input Delay\r\n  cls: number; // Cumulative Layout Shift\r\n  fcp: number; // First Contentful Paint\r\n  ttfb: number; // Time To First Byte\r\n  timestamp: number;\r\n}\r\n\r\ninterface PerformanceMetrics {\r\n  memory: {\r\n    used: number;\r\n    total: number;\r\n    limit: number;\r\n  };\r\n  cpu: {\r\n    usage: number;\r\n    loadAverage: number[];\r\n  };\r\n  network: {\r\n    latency: number;\r\n    bandwidth: number;\r\n  };\r\n  webgl: {\r\n    frameRate: number;\r\n    frameTime: number;\r\n    droppedFrames: number;\r\n  };\r\n  timing: {\r\n    domContentLoaded: number;\r\n    loadComplete: number;\r\n    navigationStart: number;\r\n  };\r\n  vitals: WebVitalsMetrics;\r\n}\r\n\r\ninterface PerformanceBudget {\r\n  maxMemoryUsage: number; // 50MB\r\n  maxCPUUsage: number; // 10%\r\n  maxFrameTime: number; // 16.67ms (60 FPS)\r\n  maxNetworkLatency: number; // 100ms\r\n  minFrameRate: number; // 58 FPS\r\n}\r\n\r\nexport class RealTimePerformanceMonitor {\r\n  private performanceObserver: PerformanceObserver | null = null;\r\n  private metrics: PerformanceMetrics;\r\n  private budget: PerformanceBudget;\r\n  private isMonitoring = false;\r\n  private frameRateTracker: FrameRateTracker;\r\n\r\n  constructor() {\r\n    this.budget = {\r\n      maxMemoryUsage: 50 * 1024 * 1024, // 50MB\r\n      maxCPUUsage: 10, // 10%\r\n      maxFrameTime: 16.67, // 60 FPS\r\n      maxNetworkLatency: 100, // 100ms\r\n      minFrameRate: 58 // FPS\r\n    };\r\n\r\n    this.metrics = this.initializeMetrics();\r\n    this.frameRateTracker = new FrameRateTracker();\r\n    this.setupPerformanceObserver();\r\n  }\r\n\r\n  private initializeMetrics(): PerformanceMetrics {\r\n    return {\r\n      memory: { used: 0, total: 0, limit: 0 },\r\n      cpu: { usage: 0, loadAverage: [] },\r\n      network: { latency: 0, bandwidth: 0 },\r\n      webgl: { frameRate: 0, frameTime: 0, droppedFrames: 0 },\r\n      timing: { domContentLoaded: 0, loadComplete: 0, navigationStart: 0 },\r\n      vitals: { lcp: 0, fid: 0, cls: 0, fcp: 0, ttfb: 0, timestamp: Date.now() }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Configuration de l'observateur de performance\r\n   */\r\n  private setupPerformanceObserver(): void {\r\n    if (typeof PerformanceObserver === 'undefined') {\r\n      logger.warn('PerformanceObserver non disponible');\r\n      return;\r\n    }\r\n\r\n    this.performanceObserver = new PerformanceObserver((list) => {\r\n      for (const entry of list.getEntries()) {\r\n        this.processPerformanceEntry(entry);\r\n      }\r\n    });\r\n\r\n    // Observer les diff\xE9rents types d'entr\xE9es de performance\r\n    const entryTypes = [\r\n      'measure',\r\n      'navigation', \r\n      'paint',\r\n      'largest-contentful-paint',\r\n      'first-input',\r\n      'layout-shift'\r\n    ];\r\n\r\n    entryTypes.forEach(type => {\r\n      try {\r\n        this.performanceObserver!.observe({ entryTypes: [type] });\r\n      } catch (e) {\r\n        logger.warn(`Type d'entr\xE9e ${type} non support\xE9:`, e);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Traitement des entr\xE9es de performance\r\n   */\r\n  private processPerformanceEntry(entry: PerformanceEntry): void {\r\n    switch (entry.entryType) {\r\n      case 'navigation':\r\n        this.updateNavigationMetrics(entry as PerformanceNavigationTiming);\r\n        break;\r\n      case 'paint':\r\n        this.updatePaintMetrics(entry as PerformancePaintTiming);\r\n        break;\r\n      case 'largest-contentful-paint':\r\n        this.metrics.vitals.lcp = entry.startTime;\r\n        break;\r\n      case 'first-input':\r\n        this.metrics.vitals.fid = (entry as any).processingStart - entry.startTime;\r\n        break;\r\n      case 'layout-shift':\r\n        this.metrics.vitals.cls += (entry as any).value || 0;\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mise \xE0 jour des m\xE9triques de navigation\r\n   */\r\n  private updateNavigationMetrics(entry: PerformanceNavigationTiming): void {\r\n    this.metrics.timing = {\r\n      navigationStart: entry.fetchStart,\r\n      domContentLoaded: entry.domContentLoadedEventEnd - entry.fetchStart,\r\n      loadComplete: entry.loadEventEnd - entry.fetchStart\r\n    };\r\n\r\n    this.metrics.vitals.ttfb = entry.responseStart - entry.requestStart;\r\n  }\r\n\r\n  /**\r\n   * Mise \xE0 jour des m\xE9triques de paint\r\n   */\r\n  private updatePaintMetrics(entry: PerformancePaintTiming): void {\r\n    if (entry.name === 'first-contentful-paint') {\r\n      this.metrics.vitals.fcp = entry.startTime;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collecte des m\xE9triques m\xE9moire r\xE9elles\r\n   */\r\n  private async collectMemoryMetrics(): Promise<void> {\r\n    if ('memory' in performance) {\r\n      const memInfo = (performance as any).memory;\r\n      this.metrics.memory = {\r\n        used: memInfo.usedJSHeapSize,\r\n        total: memInfo.totalJSHeapSize,\r\n        limit: memInfo.jsHeapSizeLimit\r\n      };\r\n    } else {\r\n      // Estimation bas\xE9e sur les objets JavaScript\r\n      this.metrics.memory = {\r\n        used: this.estimateMemoryUsage(),\r\n        total: 0,\r\n        limit: 0\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Estimation de l'utilisation m\xE9moire\r\n   */\r\n  private estimateMemoryUsage(): number {\r\n    // Estimation approximative bas\xE9e sur les objets globaux\r\n    let estimate = 0;\r\n    \r\n    try {\r\n      // Taille approximative des objets DOM\r\n      estimate += document.querySelectorAll('*').length * 1000; // ~1KB par \xE9l\xE9ment\r\n      \r\n      // Estimation des variables JavaScript\r\n      estimate += Object.keys(window).length * 100;\r\n      \r\n      return estimate;\r\n    } catch {\r\n      return 1024 * 1024; // 1MB par d\xE9faut\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mesure de l'utilisation CPU (approximative)\r\n   */\r\n  private async measureCPUUsage(): Promise<number> {\r\n    const start = performance.now();\r\n    \r\n    // T\xE2che intensive pour mesurer la latence CPU\r\n    let iterations = 0;\r\n    const targetTime = 10; // 10ms\r\n    \r\n    while (performance.now() - start < targetTime) {\r\n      iterations++;\r\n      SecureRandom.random(); // Op\xE9ration simple\r\n    }\r\n    \r\n    const actualTime = performance.now() - start;\r\n    const efficiency = targetTime / actualTime;\r\n    \r\n    // Conversion en pourcentage d'utilisation (inverse de l'efficacit\xE9)\r\n    return Math.max(0, Math.min(100, (1 - efficiency) * 100));\r\n  }\r\n\r\n  /**\r\n   * Mesure de la latence r\xE9seau\r\n   */\r\n  private async measureNetworkLatency(): Promise<number> {\r\n    const start = performance.now();\r\n    \r\n    try {\r\n      // Ping vers une ressource locale ou API\r\n      await fetch('data:text/plain,ping', { \r\n        method: 'GET',\r\n        cache: 'no-cache'\r\n      });\r\n      \r\n      return performance.now() - start;\r\n    } catch {\r\n      return 999; // Valeur \xE9lev\xE9e en cas d'erreur\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collecte compl\xE8te des m\xE9triques\r\n   */\r\n  async collectMetrics(): Promise<PerformanceMetrics> {\r\n    await Promise.all([\r\n      this.collectMemoryMetrics(),\r\n      this.measureCPUUsage().then(cpu => { this.metrics.cpu.usage = cpu; }),\r\n      this.measureNetworkLatency().then(latency => { this.metrics.network.latency = latency; })\r\n    ]);\r\n\r\n    // Mise \xE0 jour des m\xE9triques WebGL si disponibles\r\n    this.metrics.webgl = this.frameRateTracker.getMetrics();\r\n    \r\n    // Mise \xE0 jour du timestamp\r\n    this.metrics.vitals.timestamp = Date.now();\r\n    \r\n    return { ...this.metrics };\r\n  }\r\n\r\n  /**\r\n   * V\xE9rification du budget de performance\r\n   */\r\n  checkPerformanceBudget(): { passed: boolean; violations: string[] } {\r\n    const violations: string[] = [];\r\n\r\n    if (this.metrics.memory.used > this.budget.maxMemoryUsage) {\r\n      violations.push(`M\xE9moire: ${(this.metrics.memory.used / 1024 / 1024).toFixed(1)}MB > ${this.budget.maxMemoryUsage / 1024 / 1024}MB`);\r\n    }\r\n\r\n    if (this.metrics.cpu.usage > this.budget.maxCPUUsage) {\r\n      violations.push(`CPU: ${this.metrics.cpu.usage.toFixed(1)}% > ${this.budget.maxCPUUsage}%`);\r\n    }\r\n\r\n    if (this.metrics.webgl.frameTime > this.budget.maxFrameTime) {\r\n      violations.push(`Frame Time: ${this.metrics.webgl.frameTime.toFixed(1)}ms > ${this.budget.maxFrameTime}ms`);\r\n    }\r\n\r\n    if (this.metrics.network.latency > this.budget.maxNetworkLatency) {\r\n      violations.push(`Latence: ${this.metrics.network.latency.toFixed(1)}ms > ${this.budget.maxNetworkLatency}ms`);\r\n    }\r\n\r\n    if (this.metrics.webgl.frameRate < this.budget.minFrameRate) {\r\n      violations.push(`FPS: ${this.metrics.webgl.frameRate.toFixed(1)} < ${this.budget.minFrameRate}`);\r\n    }\r\n\r\n    return {\r\n      passed: violations.length === 0,\r\n      violations\r\n    };\r\n  }\r\n\r\n  /**\r\n   * D\xE9marrage du monitoring continu\r\n   */\r\n  startMonitoring(): void {\r\n    if (this.isMonitoring) return;\r\n\r\n    this.isMonitoring = true;\r\n    this.frameRateTracker.start();\r\n\r\n    // Collecte p\xE9riodique des m\xE9triques\r\n    setInterval(async () => {\r\n      if (this.isMonitoring) {\r\n        await this.collectMetrics();\r\n        \r\n        // V\xE9rification du budget\r\n        const budgetCheck = this.checkPerformanceBudget();\r\n        if (!budgetCheck.passed) {\r\n          logger.warn('Budget de performance d\xE9pass\xE9:', budgetCheck.violations);\r\n        }\r\n      }\r\n    }, 5000); // Toutes les 5 secondes\r\n  }\r\n\r\n  /**\r\n   * Arr\xEAt du monitoring\r\n   */\r\n  stopMonitoring(): void {\r\n    this.isMonitoring = false;\r\n    this.frameRateTracker.stop();\r\n    \r\n    if (this.performanceObserver) {\r\n      this.performanceObserver.disconnect();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtient les m\xE9triques actuelles\r\n   */\r\n  getCurrentMetrics(): PerformanceMetrics {\r\n    return { ...this.metrics };\r\n  }\r\n\r\n  /**\r\n   * Obtient les Web Vitals\r\n   */\r\n  getWebVitals(): WebVitalsMetrics {\r\n    return { ...this.metrics.vitals };\r\n  }\r\n}\r\n\r\n/**\r\n * Tracker de frame rate pour WebGL\r\n */\r\nclass FrameRateTracker {\r\n  private frameCount = 0;\r\n  private lastTime = 0;\r\n  private frameRate = 0;\r\n  private frameTime = 0;\r\n  private droppedFrames = 0;\r\n  private isTracking = false;\r\n  private animationFrameId: number | null = null;\r\n\r\n  start(): void {\r\n    if (this.isTracking) return;\r\n    \r\n    this.isTracking = true;\r\n    this.lastTime = performance.now();\r\n    this.frameCount = 0;\r\n    this.measureFrameRate();\r\n  }\r\n\r\n  stop(): void {\r\n    this.isTracking = false;\r\n    \r\n    if (this.animationFrameId) {\r\n      cancelAnimationFrame(this.animationFrameId);\r\n      this.animationFrameId = null;\r\n    }\r\n  }\r\n\r\n  private measureFrameRate(): void {\r\n    if (!this.isTracking) return;\r\n\r\n    this.animationFrameId = requestAnimationFrame((timestamp) => {\r\n      this.frameCount++;\r\n      \r\n      const deltaTime = timestamp - this.lastTime;\r\n      this.frameTime = deltaTime;\r\n      \r\n      // Calcul du frame rate toutes les secondes\r\n      if (deltaTime >= 1000) {\r\n        this.frameRate = (this.frameCount * 1000) / deltaTime;\r\n        \r\n        // D\xE9tection des frames perdues (< 58 FPS)\r\n        if (this.frameRate < 58) {\r\n          this.droppedFrames += 60 - this.frameRate;\r\n        }\r\n        \r\n        this.frameCount = 0;\r\n        this.lastTime = timestamp;\r\n      }\r\n      \r\n      this.measureFrameRate();\r\n    });\r\n  }\r\n\r\n  getMetrics(): { frameRate: number; frameTime: number; droppedFrames: number } {\r\n    return {\r\n      frameRate: this.frameRate,\r\n      frameTime: this.frameTime,\r\n      droppedFrames: this.droppedFrames\r\n    };\r\n  }\r\n}\r\n\r\nexport type { PerformanceMetrics, WebVitalsMetrics, PerformanceBudget };"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d187e7881d277c613abb5bb5bb8ad4328d903476"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1n02ebmhdc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1n02ebmhdc();
cov_1n02ebmhdc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1n02ebmhdc().s[1]++;
exports.RealTimePerformanceMonitor = void 0;
const secureRandom_1 =
/* istanbul ignore next */
(cov_1n02ebmhdc().s[2]++, require("@shared/utils/secureRandom"));
const secureLogger_1 =
/* istanbul ignore next */
(cov_1n02ebmhdc().s[3]++, require("@shared/utils/secureLogger"));
class RealTimePerformanceMonitor {
  constructor() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[0]++;
    cov_1n02ebmhdc().s[4]++;
    this.performanceObserver = null;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[5]++;
    this.isMonitoring = false;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[6]++;
    this.budget = {
      maxMemoryUsage: 50 * 1024 * 1024,
      // 50MB
      maxCPUUsage: 10,
      // 10%
      maxFrameTime: 16.67,
      // 60 FPS
      maxNetworkLatency: 100,
      // 100ms
      minFrameRate: 58 // FPS
    };
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[7]++;
    this.metrics = this.initializeMetrics();
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[8]++;
    this.frameRateTracker = new FrameRateTracker();
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[9]++;
    this.setupPerformanceObserver();
  }
  initializeMetrics() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[1]++;
    cov_1n02ebmhdc().s[10]++;
    return {
      memory: {
        used: 0,
        total: 0,
        limit: 0
      },
      cpu: {
        usage: 0,
        loadAverage: []
      },
      network: {
        latency: 0,
        bandwidth: 0
      },
      webgl: {
        frameRate: 0,
        frameTime: 0,
        droppedFrames: 0
      },
      timing: {
        domContentLoaded: 0,
        loadComplete: 0,
        navigationStart: 0
      },
      vitals: {
        lcp: 0,
        fid: 0,
        cls: 0,
        fcp: 0,
        ttfb: 0,
        timestamp: Date.now()
      }
    };
  }
  /**
   * Configuration de l'observateur de performance
   */
  setupPerformanceObserver() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[2]++;
    cov_1n02ebmhdc().s[11]++;
    if (typeof PerformanceObserver === 'undefined') {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[0][0]++;
      cov_1n02ebmhdc().s[12]++;
      secureLogger_1.logger.warn('PerformanceObserver non disponible');
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[13]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1n02ebmhdc().b[0][1]++;
    }
    cov_1n02ebmhdc().s[14]++;
    this.performanceObserver = new PerformanceObserver(list => {
      /* istanbul ignore next */
      cov_1n02ebmhdc().f[3]++;
      cov_1n02ebmhdc().s[15]++;
      for (const entry of list.getEntries()) {
        /* istanbul ignore next */
        cov_1n02ebmhdc().s[16]++;
        this.processPerformanceEntry(entry);
      }
    });
    // Observer les différents types d'entrées de performance
    const entryTypes =
    /* istanbul ignore next */
    (cov_1n02ebmhdc().s[17]++, ['measure', 'navigation', 'paint', 'largest-contentful-paint', 'first-input', 'layout-shift']);
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[18]++;
    entryTypes.forEach(type => {
      /* istanbul ignore next */
      cov_1n02ebmhdc().f[4]++;
      cov_1n02ebmhdc().s[19]++;
      try {
        /* istanbul ignore next */
        cov_1n02ebmhdc().s[20]++;
        this.performanceObserver.observe({
          entryTypes: [type]
        });
      } catch (e) {
        /* istanbul ignore next */
        cov_1n02ebmhdc().s[21]++;
        secureLogger_1.logger.warn(`Type d'entrée ${type} non supporté:`, e);
      }
    });
  }
  /**
   * Traitement des entrées de performance
   */
  processPerformanceEntry(entry) {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[5]++;
    cov_1n02ebmhdc().s[22]++;
    switch (entry.entryType) {
      case 'navigation':
        /* istanbul ignore next */
        cov_1n02ebmhdc().b[1][0]++;
        cov_1n02ebmhdc().s[23]++;
        this.updateNavigationMetrics(entry);
        /* istanbul ignore next */
        cov_1n02ebmhdc().s[24]++;
        break;
      case 'paint':
        /* istanbul ignore next */
        cov_1n02ebmhdc().b[1][1]++;
        cov_1n02ebmhdc().s[25]++;
        this.updatePaintMetrics(entry);
        /* istanbul ignore next */
        cov_1n02ebmhdc().s[26]++;
        break;
      case 'largest-contentful-paint':
        /* istanbul ignore next */
        cov_1n02ebmhdc().b[1][2]++;
        cov_1n02ebmhdc().s[27]++;
        this.metrics.vitals.lcp = entry.startTime;
        /* istanbul ignore next */
        cov_1n02ebmhdc().s[28]++;
        break;
      case 'first-input':
        /* istanbul ignore next */
        cov_1n02ebmhdc().b[1][3]++;
        cov_1n02ebmhdc().s[29]++;
        this.metrics.vitals.fid = entry.processingStart - entry.startTime;
        /* istanbul ignore next */
        cov_1n02ebmhdc().s[30]++;
        break;
      case 'layout-shift':
        /* istanbul ignore next */
        cov_1n02ebmhdc().b[1][4]++;
        cov_1n02ebmhdc().s[31]++;
        this.metrics.vitals.cls +=
        /* istanbul ignore next */
        (cov_1n02ebmhdc().b[2][0]++, entry.value) ||
        /* istanbul ignore next */
        (cov_1n02ebmhdc().b[2][1]++, 0);
        /* istanbul ignore next */
        cov_1n02ebmhdc().s[32]++;
        break;
    }
  }
  /**
   * Mise à jour des métriques de navigation
   */
  updateNavigationMetrics(entry) {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[6]++;
    cov_1n02ebmhdc().s[33]++;
    this.metrics.timing = {
      navigationStart: entry.fetchStart,
      domContentLoaded: entry.domContentLoadedEventEnd - entry.fetchStart,
      loadComplete: entry.loadEventEnd - entry.fetchStart
    };
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[34]++;
    this.metrics.vitals.ttfb = entry.responseStart - entry.requestStart;
  }
  /**
   * Mise à jour des métriques de paint
   */
  updatePaintMetrics(entry) {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[7]++;
    cov_1n02ebmhdc().s[35]++;
    if (entry.name === 'first-contentful-paint') {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[3][0]++;
      cov_1n02ebmhdc().s[36]++;
      this.metrics.vitals.fcp = entry.startTime;
    } else
    /* istanbul ignore next */
    {
      cov_1n02ebmhdc().b[3][1]++;
    }
  }
  /**
   * Collecte des métriques mémoire réelles
   */
  async collectMemoryMetrics() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[8]++;
    cov_1n02ebmhdc().s[37]++;
    if ('memory' in performance) {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[4][0]++;
      const memInfo =
      /* istanbul ignore next */
      (cov_1n02ebmhdc().s[38]++, performance.memory);
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[39]++;
      this.metrics.memory = {
        used: memInfo.usedJSHeapSize,
        total: memInfo.totalJSHeapSize,
        limit: memInfo.jsHeapSizeLimit
      };
    } else {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[4][1]++;
      cov_1n02ebmhdc().s[40]++;
      // Estimation basée sur les objets JavaScript
      this.metrics.memory = {
        used: this.estimateMemoryUsage(),
        total: 0,
        limit: 0
      };
    }
  }
  /**
   * Estimation de l'utilisation mémoire
   */
  estimateMemoryUsage() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[9]++;
    // Estimation approximative basée sur les objets globaux
    let estimate =
    /* istanbul ignore next */
    (cov_1n02ebmhdc().s[41]++, 0);
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[42]++;
    try {
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[43]++;
      // Taille approximative des objets DOM
      estimate += document.querySelectorAll('*').length * 1000; // ~1KB par élément
      // Estimation des variables JavaScript
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[44]++;
      estimate += Object.keys(window).length * 100;
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[45]++;
      return estimate;
    } catch {
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[46]++;
      return 1024 * 1024; // 1MB par défaut
    }
  }
  /**
   * Mesure de l'utilisation CPU (approximative)
   */
  async measureCPUUsage() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[10]++;
    const start =
    /* istanbul ignore next */
    (cov_1n02ebmhdc().s[47]++, performance.now());
    // Tâche intensive pour mesurer la latence CPU
    let iterations =
    /* istanbul ignore next */
    (cov_1n02ebmhdc().s[48]++, 0);
    const targetTime =
    /* istanbul ignore next */
    (cov_1n02ebmhdc().s[49]++, 10); // 10ms
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[50]++;
    while (performance.now() - start < targetTime) {
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[51]++;
      iterations++;
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[52]++;
      secureRandom_1.SecureRandom.random(); // Opération simple
    }
    const actualTime =
    /* istanbul ignore next */
    (cov_1n02ebmhdc().s[53]++, performance.now() - start);
    const efficiency =
    /* istanbul ignore next */
    (cov_1n02ebmhdc().s[54]++, targetTime / actualTime);
    // Conversion en pourcentage d'utilisation (inverse de l'efficacité)
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[55]++;
    return Math.max(0, Math.min(100, (1 - efficiency) * 100));
  }
  /**
   * Mesure de la latence réseau
   */
  async measureNetworkLatency() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[11]++;
    const start =
    /* istanbul ignore next */
    (cov_1n02ebmhdc().s[56]++, performance.now());
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[57]++;
    try {
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[58]++;
      // Ping vers une ressource locale ou API
      await fetch('data:text/plain,ping', {
        method: 'GET',
        cache: 'no-cache'
      });
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[59]++;
      return performance.now() - start;
    } catch {
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[60]++;
      return 999; // Valeur élevée en cas d'erreur
    }
  }
  /**
   * Collecte complète des métriques
   */
  async collectMetrics() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[12]++;
    cov_1n02ebmhdc().s[61]++;
    await Promise.all([this.collectMemoryMetrics(), this.measureCPUUsage().then(cpu => {
      /* istanbul ignore next */
      cov_1n02ebmhdc().f[13]++;
      cov_1n02ebmhdc().s[62]++;
      this.metrics.cpu.usage = cpu;
    }), this.measureNetworkLatency().then(latency => {
      /* istanbul ignore next */
      cov_1n02ebmhdc().f[14]++;
      cov_1n02ebmhdc().s[63]++;
      this.metrics.network.latency = latency;
    })]);
    // Mise à jour des métriques WebGL si disponibles
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[64]++;
    this.metrics.webgl = this.frameRateTracker.getMetrics();
    // Mise à jour du timestamp
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[65]++;
    this.metrics.vitals.timestamp = Date.now();
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[66]++;
    return {
      ...this.metrics
    };
  }
  /**
   * Vérification du budget de performance
   */
  checkPerformanceBudget() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[15]++;
    const violations =
    /* istanbul ignore next */
    (cov_1n02ebmhdc().s[67]++, []);
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[68]++;
    if (this.metrics.memory.used > this.budget.maxMemoryUsage) {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[5][0]++;
      cov_1n02ebmhdc().s[69]++;
      violations.push(`Mémoire: ${(this.metrics.memory.used / 1024 / 1024).toFixed(1)}MB > ${this.budget.maxMemoryUsage / 1024 / 1024}MB`);
    } else
    /* istanbul ignore next */
    {
      cov_1n02ebmhdc().b[5][1]++;
    }
    cov_1n02ebmhdc().s[70]++;
    if (this.metrics.cpu.usage > this.budget.maxCPUUsage) {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[6][0]++;
      cov_1n02ebmhdc().s[71]++;
      violations.push(`CPU: ${this.metrics.cpu.usage.toFixed(1)}% > ${this.budget.maxCPUUsage}%`);
    } else
    /* istanbul ignore next */
    {
      cov_1n02ebmhdc().b[6][1]++;
    }
    cov_1n02ebmhdc().s[72]++;
    if (this.metrics.webgl.frameTime > this.budget.maxFrameTime) {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[7][0]++;
      cov_1n02ebmhdc().s[73]++;
      violations.push(`Frame Time: ${this.metrics.webgl.frameTime.toFixed(1)}ms > ${this.budget.maxFrameTime}ms`);
    } else
    /* istanbul ignore next */
    {
      cov_1n02ebmhdc().b[7][1]++;
    }
    cov_1n02ebmhdc().s[74]++;
    if (this.metrics.network.latency > this.budget.maxNetworkLatency) {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[8][0]++;
      cov_1n02ebmhdc().s[75]++;
      violations.push(`Latence: ${this.metrics.network.latency.toFixed(1)}ms > ${this.budget.maxNetworkLatency}ms`);
    } else
    /* istanbul ignore next */
    {
      cov_1n02ebmhdc().b[8][1]++;
    }
    cov_1n02ebmhdc().s[76]++;
    if (this.metrics.webgl.frameRate < this.budget.minFrameRate) {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[9][0]++;
      cov_1n02ebmhdc().s[77]++;
      violations.push(`FPS: ${this.metrics.webgl.frameRate.toFixed(1)} < ${this.budget.minFrameRate}`);
    } else
    /* istanbul ignore next */
    {
      cov_1n02ebmhdc().b[9][1]++;
    }
    cov_1n02ebmhdc().s[78]++;
    return {
      passed: violations.length === 0,
      violations
    };
  }
  /**
   * Démarrage du monitoring continu
   */
  startMonitoring() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[16]++;
    cov_1n02ebmhdc().s[79]++;
    if (this.isMonitoring) {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[10][0]++;
      cov_1n02ebmhdc().s[80]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1n02ebmhdc().b[10][1]++;
    }
    cov_1n02ebmhdc().s[81]++;
    this.isMonitoring = true;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[82]++;
    this.frameRateTracker.start();
    // Collecte périodique des métriques
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[83]++;
    setInterval(async () => {
      /* istanbul ignore next */
      cov_1n02ebmhdc().f[17]++;
      cov_1n02ebmhdc().s[84]++;
      if (this.isMonitoring) {
        /* istanbul ignore next */
        cov_1n02ebmhdc().b[11][0]++;
        cov_1n02ebmhdc().s[85]++;
        await this.collectMetrics();
        // Vérification du budget
        const budgetCheck =
        /* istanbul ignore next */
        (cov_1n02ebmhdc().s[86]++, this.checkPerformanceBudget());
        /* istanbul ignore next */
        cov_1n02ebmhdc().s[87]++;
        if (!budgetCheck.passed) {
          /* istanbul ignore next */
          cov_1n02ebmhdc().b[12][0]++;
          cov_1n02ebmhdc().s[88]++;
          secureLogger_1.logger.warn('Budget de performance dépassé:', budgetCheck.violations);
        } else
        /* istanbul ignore next */
        {
          cov_1n02ebmhdc().b[12][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1n02ebmhdc().b[11][1]++;
      }
    }, 5000); // Toutes les 5 secondes
  }
  /**
   * Arrêt du monitoring
   */
  stopMonitoring() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[18]++;
    cov_1n02ebmhdc().s[89]++;
    this.isMonitoring = false;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[90]++;
    this.frameRateTracker.stop();
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[91]++;
    if (this.performanceObserver) {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[13][0]++;
      cov_1n02ebmhdc().s[92]++;
      this.performanceObserver.disconnect();
    } else
    /* istanbul ignore next */
    {
      cov_1n02ebmhdc().b[13][1]++;
    }
  }
  /**
   * Obtient les métriques actuelles
   */
  getCurrentMetrics() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[19]++;
    cov_1n02ebmhdc().s[93]++;
    return {
      ...this.metrics
    };
  }
  /**
   * Obtient les Web Vitals
   */
  getWebVitals() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[20]++;
    cov_1n02ebmhdc().s[94]++;
    return {
      ...this.metrics.vitals
    };
  }
}
/* istanbul ignore next */
cov_1n02ebmhdc().s[95]++;
exports.RealTimePerformanceMonitor = RealTimePerformanceMonitor;
/**
 * Tracker de frame rate pour WebGL
 */
class FrameRateTracker {
  constructor() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[21]++;
    cov_1n02ebmhdc().s[96]++;
    this.frameCount = 0;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[97]++;
    this.lastTime = 0;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[98]++;
    this.frameRate = 0;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[99]++;
    this.frameTime = 0;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[100]++;
    this.droppedFrames = 0;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[101]++;
    this.isTracking = false;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[102]++;
    this.animationFrameId = null;
  }
  start() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[22]++;
    cov_1n02ebmhdc().s[103]++;
    if (this.isTracking) {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[14][0]++;
      cov_1n02ebmhdc().s[104]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1n02ebmhdc().b[14][1]++;
    }
    cov_1n02ebmhdc().s[105]++;
    this.isTracking = true;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[106]++;
    this.lastTime = performance.now();
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[107]++;
    this.frameCount = 0;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[108]++;
    this.measureFrameRate();
  }
  stop() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[23]++;
    cov_1n02ebmhdc().s[109]++;
    this.isTracking = false;
    /* istanbul ignore next */
    cov_1n02ebmhdc().s[110]++;
    if (this.animationFrameId) {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[15][0]++;
      cov_1n02ebmhdc().s[111]++;
      cancelAnimationFrame(this.animationFrameId);
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[112]++;
      this.animationFrameId = null;
    } else
    /* istanbul ignore next */
    {
      cov_1n02ebmhdc().b[15][1]++;
    }
  }
  measureFrameRate() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[24]++;
    cov_1n02ebmhdc().s[113]++;
    if (!this.isTracking) {
      /* istanbul ignore next */
      cov_1n02ebmhdc().b[16][0]++;
      cov_1n02ebmhdc().s[114]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1n02ebmhdc().b[16][1]++;
    }
    cov_1n02ebmhdc().s[115]++;
    this.animationFrameId = requestAnimationFrame(timestamp => {
      /* istanbul ignore next */
      cov_1n02ebmhdc().f[25]++;
      cov_1n02ebmhdc().s[116]++;
      this.frameCount++;
      const deltaTime =
      /* istanbul ignore next */
      (cov_1n02ebmhdc().s[117]++, timestamp - this.lastTime);
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[118]++;
      this.frameTime = deltaTime;
      // Calcul du frame rate toutes les secondes
      /* istanbul ignore next */
      cov_1n02ebmhdc().s[119]++;
      if (deltaTime >= 1000) {
        /* istanbul ignore next */
        cov_1n02ebmhdc().b[17][0]++;
        cov_1n02ebmhdc().s[120]++;
        this.frameRate = this.frameCount * 1000 / deltaTime;
        // Détection des frames perdues (< 58 FPS)
        /* istanbul ignore next */
        cov_1n02ebmhdc().s[121]++;
        if (this.frameRate < 58) {
          /* istanbul ignore next */
          cov_1n02ebmhdc().b[18][0]++;
          cov_1n02ebmhdc().s[122]++;
          this.droppedFrames += 60 - this.frameRate;
        } else
        /* istanbul ignore next */
        {
          cov_1n02ebmhdc().b[18][1]++;
        }
        cov_1n02ebmhdc().s[123]++;
        this.frameCount = 0;
        /* istanbul ignore next */
        cov_1n02ebmhdc().s[124]++;
        this.lastTime = timestamp;
      } else
      /* istanbul ignore next */
      {
        cov_1n02ebmhdc().b[17][1]++;
      }
      cov_1n02ebmhdc().s[125]++;
      this.measureFrameRate();
    });
  }
  getMetrics() {
    /* istanbul ignore next */
    cov_1n02ebmhdc().f[26]++;
    cov_1n02ebmhdc().s[126]++;
    return {
      frameRate: this.frameRate,
      frameTime: this.frameTime,
      droppedFrames: this.droppedFrames
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,