f08958436998139364d5e1cbb12368ed
"use strict";

/* istanbul ignore next */
function cov_1hvukz6sxf() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/neural/NeuronTypes.ts";
  var hash = "f1d7939cf11132f54d09781c07a20b5744592bb5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/neural/NeuronTypes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 6,
          column: 2
        }
      },
      "3": {
        start: {
          line: 5,
          column: 31
        },
        end: {
          line: 5,
          column: 55
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 29
          },
          end: {
            line: 5,
            column: 57
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/neural/NeuronTypes.ts",
      mappings: ";;;AAAa,QAAA,WAAW,GAAG;IACzB,UAAU,CAAC,IAAY,EAAE,MAA+B,IAAI,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;CACvF,CAAC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/neural/NeuronTypes.ts"],
      sourcesContent: ["export const NeuronTypes = {\r\n  createType(name: string, config: Record<string, unknown>) { return { name, config }; }\r\n}; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f1d7939cf11132f54d09781c07a20b5744592bb5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hvukz6sxf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hvukz6sxf();
cov_1hvukz6sxf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1hvukz6sxf().s[1]++;
exports.NeuronTypes = void 0;
/* istanbul ignore next */
cov_1hvukz6sxf().s[2]++;
exports.NeuronTypes = {
  createType(name, config) {
    /* istanbul ignore next */
    cov_1hvukz6sxf().f[0]++;
    cov_1hvukz6sxf().s[3]++;
    return {
      name,
      config
    };
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiTmV1cm9uVHlwZXMiLCJjcmVhdGVUeXBlIiwibmFtZSIsImNvbmZpZyIsImNvdl8xaHZ1a3o2c3hmIiwiZiIsInMiXSwic291cmNlcyI6WyIvbW50L2MvVXNlcnMvbV9vbGkvUHJvamV0cy9TWU1CSU9OVC9zcmMvbmV1cmFsL05ldXJvblR5cGVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBOZXVyb25UeXBlcyA9IHtcclxuICBjcmVhdGVUeXBlKG5hbWU6IHN0cmluZywgY29uZmlnOiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPikgeyByZXR1cm4geyBuYW1lLCBjb25maWcgfTsgfVxyXG59OyAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFhQSxPQUFBLENBQUFDLFdBQVcsR0FBRztFQUN6QkMsVUFBVUEsQ0FBQ0MsSUFBWSxFQUFFQyxNQUErQjtJQUFBO0lBQUFDLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFBSSxPQUFPO01BQUVKLElBQUk7TUFBRUM7SUFBTSxDQUFFO0VBQUU7Q0FDdEYiLCJpZ25vcmVMaXN0IjpbXX0=