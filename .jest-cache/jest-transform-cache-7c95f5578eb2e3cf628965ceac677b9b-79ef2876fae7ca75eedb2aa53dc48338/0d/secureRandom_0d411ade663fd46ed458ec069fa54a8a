34732b3e38fb89bf677a3be3db328d23
"use strict";

/**
 * Utilitaires de génération de nombres aléatoires sécurisés
 * Remplace Math.random() par crypto.getRandomValues() pour la sécurité cryptographique
 */
/* istanbul ignore next */
function cov_nbnxbqo65() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/secureRandom.ts";
  var hash = "cfeea0fcd748c401fbc9c7dde9493cc1d50c52cf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/secureRandom.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 107
        }
      },
      "2": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 17,
          column: 9
        }
      },
      "3": {
        start: {
          line: 14,
          column: 26
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "4": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "5": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 52
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 106
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "9": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 75
        }
      },
      "10": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "11": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 55
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "13": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 75
        }
      },
      "14": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 49
        }
      },
      "15": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "16": {
        start: {
          line: 46,
          column: 26
        },
        end: {
          line: 46,
          column: 48
        }
      },
      "17": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "18": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "19": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 97
        }
      },
      "20": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 52,
          column: 44
        }
      },
      "21": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "22": {
        start: {
          line: 53,
          column: 21
        },
        end: {
          line: 53,
          column: 22
        }
      },
      "23": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 55
        }
      },
      "24": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 21
        }
      },
      "25": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "26": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 78
        }
      },
      "27": {
        start: {
          line: 65,
          column: 22
        },
        end: {
          line: 65,
          column: 53
        }
      },
      "28": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 28
        }
      },
      "29": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "30": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 73,
          column: 44
        }
      },
      "31": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 42
        }
      },
      "32": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 48
        }
      },
      "33": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 48
        }
      },
      "34": {
        start: {
          line: 78,
          column: 24
        },
        end: {
          line: 78,
          column: 88
        }
      },
      "35": {
        start: {
          line: 78,
          column: 47
        },
        end: {
          line: 78,
          column: 78
        }
      },
      "36": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 85,
          column: 24
        }
      },
      "37": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 91
        }
      },
      "38": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "39": {
        start: {
          line: 90,
          column: 22
        },
        end: {
          line: 90,
          column: 44
        }
      },
      "40": {
        start: {
          line: 91,
          column: 22
        },
        end: {
          line: 91,
          column: 53
        }
      },
      "41": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 34
        }
      },
      "42": {
        start: {
          line: 99,
          column: 21
        },
        end: {
          line: 99,
          column: 23
        }
      },
      "43": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "44": {
        start: {
          line: 100,
          column: 21
        },
        end: {
          line: 100,
          column: 22
        }
      },
      "45": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 72
        }
      },
      "46": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 22
        }
      },
      "47": {
        start: {
          line: 109,
          column: 19
        },
        end: {
          line: 109,
          column: 110
        }
      },
      "48": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 47
        }
      },
      "49": {
        start: {
          line: 113,
          column: 0
        },
        end: {
          line: 113,
          column: 36
        }
      },
      "50": {
        start: {
          line: 114,
          column: 0
        },
        end: {
          line: 114,
          column: 37
        }
      },
      "51": {
        start: {
          line: 116,
          column: 0
        },
        end: {
          line: 116,
          column: 43
        }
      },
      "52": {
        start: {
          line: 117,
          column: 0
        },
        end: {
          line: 117,
          column: 49
        }
      },
      "53": {
        start: {
          line: 118,
          column: 0
        },
        end: {
          line: 118,
          column: 53
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 33
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 31
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 44
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 25
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 61
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 18
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 71
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 78,
            column: 42
          },
          end: {
            line: 78,
            column: 43
          }
        },
        loc: {
          start: {
            line: 78,
            column: 47
          },
          end: {
            line: 78,
            column: 78
          }
        },
        line: 78
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 89,
            column: 71
          },
          end: {
            line: 89,
            column: 72
          }
        },
        loc: {
          start: {
            line: 89,
            column: 78
          },
          end: {
            line: 93,
            column: 9
          }
        },
        line: 89
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 108
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 98
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        loc: {
          start: {
            line: 108,
            column: 45
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 108
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 13,
            column: 41
          }
        }, {
          start: {
            line: 13,
            column: 45
          },
          end: {
            line: 13,
            column: 67
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 45,
            column: 41
          }
        }, {
          start: {
            line: 45,
            column: 45
          },
          end: {
            line: 45,
            column: 67
          }
        }],
        line: 45
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "8": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 72,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 72,
            column: 41
          }
        }, {
          start: {
            line: 72,
            column: 45
          },
          end: {
            line: 72,
            column: 67
          }
        }],
        line: 72
      },
      "9": {
        loc: {
          start: {
            line: 91,
            column: 22
          },
          end: {
            line: 91,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 34
          },
          end: {
            line: 91,
            column: 35
          }
        }, {
          start: {
            line: 91,
            column: 39
          },
          end: {
            line: 91,
            column: 52
          }
        }],
        line: 91
      },
      "10": {
        loc: {
          start: {
            line: 98,
            column: 32
          },
          end: {
            line: 98,
            column: 106
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 98,
            column: 42
          },
          end: {
            line: 98,
            column: 106
          }
        }],
        line: 98
      },
      "11": {
        loc: {
          start: {
            line: 108,
            column: 20
          },
          end: {
            line: 108,
            column: 31
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 108,
            column: 29
          },
          end: {
            line: 108,
            column: 31
          }
        }],
        line: 108
      },
      "12": {
        loc: {
          start: {
            line: 108,
            column: 33
          },
          end: {
            line: 108,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 108,
            column: 42
          },
          end: {
            line: 108,
            column: 43
          }
        }],
        line: 108
      },
      "13": {
        loc: {
          start: {
            line: 110,
            column: 15
          },
          end: {
            line: 110,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 24
          },
          end: {
            line: 110,
            column: 41
          }
        }, {
          start: {
            line: 110,
            column: 44
          },
          end: {
            line: 110,
            column: 46
          }
        }],
        line: 110
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0],
      "12": [0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/secureRandom.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/secureRandom.ts"],
      sourcesContent: ["/**\n * Utilitaires de g\xE9n\xE9ration de nombres al\xE9atoires s\xE9curis\xE9s\n * Remplace Math.random() par crypto.getRandomValues() pour la s\xE9curit\xE9 cryptographique\n */\n\nexport class SecureRandom {\n  private static readonly MAX_UINT32 = 0xFFFFFFFF;\n\n  /**\n   * G\xE9n\xE8re un nombre al\xE9atoire s\xE9curis\xE9 entre 0 et 1 (\xE9quivalent Math.random())\n   */\n  static random(): number {\n    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n      const array = new Uint32Array(1);\n      crypto.getRandomValues(array);\n      return array[0] / (this.MAX_UINT32 + 1);\n    }\n    \n    // Fallback pour les environnements sans crypto\n    console.warn('SecureRandom: crypto.getRandomValues non disponible, utilisation de Math.random()');\n    return Math.random();\n  }\n\n  /**\n   * G\xE9n\xE8re un entier al\xE9atoire s\xE9curis\xE9 dans une plage\n   */\n  static randomInt(min: number, max: number): number {\n    if (min >= max) {\n      throw new Error('SecureRandom: min doit \xEAtre inf\xE9rieur \xE0 max');\n    }\n    \n    const range = max - min;\n    return Math.floor(this.random() * range) + min;\n  }\n\n  /**\n   * G\xE9n\xE8re un nombre flottant al\xE9atoire s\xE9curis\xE9 dans une plage\n   */\n  static randomFloat(min: number, max: number): number {\n    if (min >= max) {\n      throw new Error('SecureRandom: min doit \xEAtre inf\xE9rieur \xE0 max');\n    }\n    \n    return this.random() * (max - min) + min;\n  }\n\n  /**\n   * G\xE9n\xE8re des bytes al\xE9atoires s\xE9curis\xE9s\n   */\n  static randomBytes(length: number): Uint8Array {\n    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n      const array = new Uint8Array(length);\n      crypto.getRandomValues(array);\n      return array;\n    }\n    \n    // Fallback pour les environnements sans crypto\n    console.warn('SecureRandom: crypto.getRandomValues non disponible, g\xE9n\xE9ration fallback');\n    const array = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n      array[i] = Math.floor(Math.random() * 256);\n    }\n    return array;\n  }\n\n  /**\n   * S\xE9lectionne un \xE9l\xE9ment al\xE9atoire d'un tableau\n   */\n  static choice<T>(array: T[]): T {\n    if (array.length === 0) {\n      throw new Error('SecureRandom: Le tableau ne peut pas \xEAtre vide');\n    }\n    \n    const index = this.randomInt(0, array.length);\n    return array[index];\n  }\n\n  /**\n   * G\xE9n\xE8re un UUID v4 s\xE9curis\xE9\n   */\n  static uuid(): string {\n    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n      const bytes = new Uint8Array(16);\n      crypto.getRandomValues(bytes);\n      \n      // Version 4 UUID format\n      bytes[6] = (bytes[6] & 0x0f) | 0x40; // Version 4\n      bytes[8] = (bytes[8] & 0x3f) | 0x80; // Variant 10\n\n      const hex = Array.from(bytes, b => b.toString(16).padStart(2, '0')).join('');\n      return [\n        hex.slice(0, 8),\n        hex.slice(8, 12),\n        hex.slice(12, 16),\n        hex.slice(16, 20),\n        hex.slice(20, 32)\n      ].join('-');\n    }\n    \n    // Fallback UUID generation\n    console.warn('SecureRandom: crypto.getRandomValues non disponible, UUID fallback');\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n      const r = Math.random() * 16 | 0;\n      const v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n  /**\n   * G\xE9n\xE8re une cha\xEEne al\xE9atoire s\xE9curis\xE9e\n   */\n  static randomString(length: number, charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'): string {\n    let result = '';\n    for (let i = 0; i < length; i++) {\n      result += charset.charAt(this.randomInt(0, charset.length));\n    }\n    return result;\n  }\n\n  /**\n   * G\xE9n\xE8re un ID court s\xE9curis\xE9 pour les identifiants\n   */\n  static randomId(prefix = '', length = 8): string {\n    const id = this.randomString(length, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789');\n    return prefix ? `${prefix}_${id}` : id;\n  }\n}\n\n// Alias pour une migration facile depuis Math.random()\nexport const secureRandom = SecureRandom.random;\nexport const secureRandomInt = SecureRandom.randomInt;\nexport const secureRandomFloat = SecureRandom.randomFloat;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cfeea0fcd748c401fbc9c7dde9493cc1d50c52cf"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_nbnxbqo65 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_nbnxbqo65();
cov_nbnxbqo65().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_nbnxbqo65().s[1]++;
exports.secureRandomFloat = exports.secureRandomInt = exports.secureRandom = exports.SecureRandom = void 0;
class SecureRandom {
  /**
   * Génère un nombre aléatoire sécurisé entre 0 et 1 (équivalent Math.random())
   */
  static random() {
    /* istanbul ignore next */
    cov_nbnxbqo65().f[0]++;
    cov_nbnxbqo65().s[2]++;
    if (
    /* istanbul ignore next */
    (cov_nbnxbqo65().b[1][0]++, typeof crypto !== 'undefined') &&
    /* istanbul ignore next */
    (cov_nbnxbqo65().b[1][1]++, crypto.getRandomValues)) {
      /* istanbul ignore next */
      cov_nbnxbqo65().b[0][0]++;
      const array =
      /* istanbul ignore next */
      (cov_nbnxbqo65().s[3]++, new Uint32Array(1));
      /* istanbul ignore next */
      cov_nbnxbqo65().s[4]++;
      crypto.getRandomValues(array);
      /* istanbul ignore next */
      cov_nbnxbqo65().s[5]++;
      return array[0] / (this.MAX_UINT32 + 1);
    } else
    /* istanbul ignore next */
    {
      cov_nbnxbqo65().b[0][1]++;
    }
    // Fallback pour les environnements sans crypto
    cov_nbnxbqo65().s[6]++;
    console.warn('SecureRandom: crypto.getRandomValues non disponible, utilisation de Math.random()');
    /* istanbul ignore next */
    cov_nbnxbqo65().s[7]++;
    return Math.random();
  }
  /**
   * Génère un entier aléatoire sécurisé dans une plage
   */
  static randomInt(min, max) {
    /* istanbul ignore next */
    cov_nbnxbqo65().f[1]++;
    cov_nbnxbqo65().s[8]++;
    if (min >= max) {
      /* istanbul ignore next */
      cov_nbnxbqo65().b[2][0]++;
      cov_nbnxbqo65().s[9]++;
      throw new Error('SecureRandom: min doit être inférieur à max');
    } else
    /* istanbul ignore next */
    {
      cov_nbnxbqo65().b[2][1]++;
    }
    const range =
    /* istanbul ignore next */
    (cov_nbnxbqo65().s[10]++, max - min);
    /* istanbul ignore next */
    cov_nbnxbqo65().s[11]++;
    return Math.floor(this.random() * range) + min;
  }
  /**
   * Génère un nombre flottant aléatoire sécurisé dans une plage
   */
  static randomFloat(min, max) {
    /* istanbul ignore next */
    cov_nbnxbqo65().f[2]++;
    cov_nbnxbqo65().s[12]++;
    if (min >= max) {
      /* istanbul ignore next */
      cov_nbnxbqo65().b[3][0]++;
      cov_nbnxbqo65().s[13]++;
      throw new Error('SecureRandom: min doit être inférieur à max');
    } else
    /* istanbul ignore next */
    {
      cov_nbnxbqo65().b[3][1]++;
    }
    cov_nbnxbqo65().s[14]++;
    return this.random() * (max - min) + min;
  }
  /**
   * Génère des bytes aléatoires sécurisés
   */
  static randomBytes(length) {
    /* istanbul ignore next */
    cov_nbnxbqo65().f[3]++;
    cov_nbnxbqo65().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_nbnxbqo65().b[5][0]++, typeof crypto !== 'undefined') &&
    /* istanbul ignore next */
    (cov_nbnxbqo65().b[5][1]++, crypto.getRandomValues)) {
      /* istanbul ignore next */
      cov_nbnxbqo65().b[4][0]++;
      const array =
      /* istanbul ignore next */
      (cov_nbnxbqo65().s[16]++, new Uint8Array(length));
      /* istanbul ignore next */
      cov_nbnxbqo65().s[17]++;
      crypto.getRandomValues(array);
      /* istanbul ignore next */
      cov_nbnxbqo65().s[18]++;
      return array;
    } else
    /* istanbul ignore next */
    {
      cov_nbnxbqo65().b[4][1]++;
    }
    // Fallback pour les environnements sans crypto
    cov_nbnxbqo65().s[19]++;
    console.warn('SecureRandom: crypto.getRandomValues non disponible, génération fallback');
    const array =
    /* istanbul ignore next */
    (cov_nbnxbqo65().s[20]++, new Uint8Array(length));
    /* istanbul ignore next */
    cov_nbnxbqo65().s[21]++;
    for (let i =
    /* istanbul ignore next */
    (cov_nbnxbqo65().s[22]++, 0); i < length; i++) {
      /* istanbul ignore next */
      cov_nbnxbqo65().s[23]++;
      array[i] = Math.floor(Math.random() * 256);
    }
    /* istanbul ignore next */
    cov_nbnxbqo65().s[24]++;
    return array;
  }
  /**
   * Sélectionne un élément aléatoire d'un tableau
   */
  static choice(array) {
    /* istanbul ignore next */
    cov_nbnxbqo65().f[4]++;
    cov_nbnxbqo65().s[25]++;
    if (array.length === 0) {
      /* istanbul ignore next */
      cov_nbnxbqo65().b[6][0]++;
      cov_nbnxbqo65().s[26]++;
      throw new Error('SecureRandom: Le tableau ne peut pas être vide');
    } else
    /* istanbul ignore next */
    {
      cov_nbnxbqo65().b[6][1]++;
    }
    const index =
    /* istanbul ignore next */
    (cov_nbnxbqo65().s[27]++, this.randomInt(0, array.length));
    /* istanbul ignore next */
    cov_nbnxbqo65().s[28]++;
    return array[index];
  }
  /**
   * Génère un UUID v4 sécurisé
   */
  static uuid() {
    /* istanbul ignore next */
    cov_nbnxbqo65().f[5]++;
    cov_nbnxbqo65().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_nbnxbqo65().b[8][0]++, typeof crypto !== 'undefined') &&
    /* istanbul ignore next */
    (cov_nbnxbqo65().b[8][1]++, crypto.getRandomValues)) {
      /* istanbul ignore next */
      cov_nbnxbqo65().b[7][0]++;
      const bytes =
      /* istanbul ignore next */
      (cov_nbnxbqo65().s[30]++, new Uint8Array(16));
      /* istanbul ignore next */
      cov_nbnxbqo65().s[31]++;
      crypto.getRandomValues(bytes);
      // Version 4 UUID format
      /* istanbul ignore next */
      cov_nbnxbqo65().s[32]++;
      bytes[6] = bytes[6] & 0x0f | 0x40; // Version 4
      /* istanbul ignore next */
      cov_nbnxbqo65().s[33]++;
      bytes[8] = bytes[8] & 0x3f | 0x80; // Variant 10
      const hex =
      /* istanbul ignore next */
      (cov_nbnxbqo65().s[34]++, Array.from(bytes, b => {
        /* istanbul ignore next */
        cov_nbnxbqo65().f[6]++;
        cov_nbnxbqo65().s[35]++;
        return b.toString(16).padStart(2, '0');
      }).join(''));
      /* istanbul ignore next */
      cov_nbnxbqo65().s[36]++;
      return [hex.slice(0, 8), hex.slice(8, 12), hex.slice(12, 16), hex.slice(16, 20), hex.slice(20, 32)].join('-');
    } else
    /* istanbul ignore next */
    {
      cov_nbnxbqo65().b[7][1]++;
    }
    // Fallback UUID generation
    cov_nbnxbqo65().s[37]++;
    console.warn('SecureRandom: crypto.getRandomValues non disponible, UUID fallback');
    /* istanbul ignore next */
    cov_nbnxbqo65().s[38]++;
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {
      /* istanbul ignore next */
      cov_nbnxbqo65().f[7]++;
      const r =
      /* istanbul ignore next */
      (cov_nbnxbqo65().s[39]++, Math.random() * 16 | 0);
      const v =
      /* istanbul ignore next */
      (cov_nbnxbqo65().s[40]++, c === 'x' ?
      /* istanbul ignore next */
      (cov_nbnxbqo65().b[9][0]++, r) :
      /* istanbul ignore next */
      (cov_nbnxbqo65().b[9][1]++, r & 0x3 | 0x8));
      /* istanbul ignore next */
      cov_nbnxbqo65().s[41]++;
      return v.toString(16);
    });
  }
  /**
   * Génère une chaîne aléatoire sécurisée
   */
  static randomString(length, charset =
  /* istanbul ignore next */
  (cov_nbnxbqo65().b[10][0]++, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789')) {
    /* istanbul ignore next */
    cov_nbnxbqo65().f[8]++;
    let result =
    /* istanbul ignore next */
    (cov_nbnxbqo65().s[42]++, '');
    /* istanbul ignore next */
    cov_nbnxbqo65().s[43]++;
    for (let i =
    /* istanbul ignore next */
    (cov_nbnxbqo65().s[44]++, 0); i < length; i++) {
      /* istanbul ignore next */
      cov_nbnxbqo65().s[45]++;
      result += charset.charAt(this.randomInt(0, charset.length));
    }
    /* istanbul ignore next */
    cov_nbnxbqo65().s[46]++;
    return result;
  }
  /**
   * Génère un ID court sécurisé pour les identifiants
   */
  static randomId(prefix =
  /* istanbul ignore next */
  (cov_nbnxbqo65().b[11][0]++, ''), length =
  /* istanbul ignore next */
  (cov_nbnxbqo65().b[12][0]++, 8)) {
    /* istanbul ignore next */
    cov_nbnxbqo65().f[9]++;
    const id =
    /* istanbul ignore next */
    (cov_nbnxbqo65().s[47]++, this.randomString(length, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'));
    /* istanbul ignore next */
    cov_nbnxbqo65().s[48]++;
    return prefix ?
    /* istanbul ignore next */
    (cov_nbnxbqo65().b[13][0]++, `${prefix}_${id}`) :
    /* istanbul ignore next */
    (cov_nbnxbqo65().b[13][1]++, id);
  }
}
/* istanbul ignore next */
cov_nbnxbqo65().s[49]++;
exports.SecureRandom = SecureRandom;
/* istanbul ignore next */
cov_nbnxbqo65().s[50]++;
SecureRandom.MAX_UINT32 = 0xFFFFFFFF;
// Alias pour une migration facile depuis Math.random()
/* istanbul ignore next */
cov_nbnxbqo65().s[51]++;
exports.secureRandom = SecureRandom.random;
/* istanbul ignore next */
cov_nbnxbqo65().s[52]++;
exports.secureRandomInt = SecureRandom.randomInt;
/* istanbul ignore next */
cov_nbnxbqo65().s[53]++;
exports.secureRandomFloat = SecureRandom.randomFloat;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,