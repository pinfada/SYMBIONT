{"version":3,"names":["cov_24djc257o6","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","secureLogger_1","require","SecurityLevel","exports","UsageContext","XorShift128Plus","constructor","seed1","seed2","state0","state1","random","s1","s0","result","reseed","crypto","getRandomValues","seeds","Uint32Array","RandomPool","poolSize","refillThreshold","pool","isRefilling","totalGenerated","totalConsumed","initialize","fillPool","batchSize","Math","min","length","values","value","push","_error","logger","error","getNext","pop","getStats","hitRate","HybridRandomProvider","configs","Map","CRYPTOGRAPHIC_OPS","securityLevel","CRYPTOGRAPHIC","batchGeneration","metricsEnabled","NEURAL_NETWORK","PERFORMANCE","WEBGL_RENDERING","GENETIC_MUTATIONS","MODERATE","metrics","totalCalls","secureCalls","poolCalls","fastCalls","avgLatencyMs","lastReseedTime","Date","now","securePool","fastPRNG","getInstance","instance","setInterval","context","startTime","performance","config","get","getSecureRandom","getPooledRandom","getFastRandom","latency","array","warn","poolValue","neuralRandom","renderingRandom","cryptoRandom","mutationRandom","generateBatch","count","Array","from","v","getPerformanceMetrics","poolStats","distribution","secure","toFixed","pooled","fast","configureContext","existing","set","shutdown","info","hybridRandom"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/HybridRandomProvider.ts"],"sourcesContent":["/**\r\n * HybridRandomProvider - Système de génération hybride haute performance\r\n * \r\n * Résout le problème de performance critique SecureRandom (284x plus lent)\r\n * en implémentant une architecture hybride optimisée selon le contexte d'usage.\r\n */\r\n\r\nimport { logger } from '@shared/utils/secureLogger';\r\n\r\n/**\r\n * Niveaux de sécurité pour classification des usages\r\n */\r\nexport enum SecurityLevel {\r\n  CRYPTOGRAPHIC = 'cryptographic',    // UUID, tokens, clés -> SecureRandom obligatoire\r\n  MODERATE = 'moderate',              // Mutations traits -> SecureRandom par défaut\r\n  PERFORMANCE = 'performance'         // WebGL, neural weights -> PRNG optimisé\r\n}\r\n\r\n/**\r\n * Contextes d'utilisation pour optimisation automatique\r\n */\r\nexport enum UsageContext {\r\n  NEURAL_NETWORK = 'neural_network',\r\n  WEBGL_RENDERING = 'webgl_rendering',\r\n  GENETIC_MUTATIONS = 'genetic_mutations',\r\n  SOCIAL_EVENTS = 'social_events',\r\n  CRYPTOGRAPHIC_OPS = 'cryptographic_ops',\r\n  MONITORING = 'monitoring'\r\n}\r\n\r\n/**\r\n * Configuration performance pour différents contextes\r\n */\r\ninterface PerformanceConfig {\r\n  securityLevel: SecurityLevel;\r\n  poolSize: number;\r\n  refillThreshold: number;\r\n  batchGeneration: boolean;\r\n  metricsEnabled: boolean;\r\n}\r\n\r\n/**\r\n * PRNG ultra-rapide xorshift128+ pour performance critique\r\n */\r\nclass XorShift128Plus {\r\n  private state0: number;\r\n  private state1: number;\r\n\r\n  constructor(seed1 = 123456789, seed2 = 987654321) {\r\n    this.state0 = seed1;\r\n    this.state1 = seed2;\r\n  }\r\n\r\n  random(): number {\r\n    let s1 = this.state0;\r\n    const s0 = this.state1;\r\n    \r\n    this.state0 = s0;\r\n    s1 ^= s1 << 23;\r\n    s1 ^= s1 >>> 17;\r\n    s1 ^= s0;\r\n    s1 ^= s0 >>> 26;\r\n    this.state1 = s1;\r\n    \r\n    const result = (s0 + s1) >>> 0;\r\n    return result / 0x100000000;\r\n  }\r\n\r\n  /**\r\n   * Re-seed avec valeur cryptographiquement sécurisée périodiquement\r\n   */\r\n  reseed(): void {\r\n    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\r\n      const seeds = new Uint32Array(2);\r\n      crypto.getRandomValues(seeds);\r\n      this.state0 = seeds[0];\r\n      this.state1 = seeds[1];\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Pool de nombres pré-générés pour haute performance\r\n */\r\nclass RandomPool {\r\n  private pool: number[] = [];\r\n  private poolSize: number;\r\n  private refillThreshold: number;\r\n  private isRefilling = false;\r\n  private totalGenerated = 0;\r\n  private totalConsumed = 0;\r\n\r\n  constructor(poolSize = 10000, refillThreshold = 2000) {\r\n    this.poolSize = poolSize;\r\n    this.refillThreshold = refillThreshold;\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    await this.fillPool();\r\n  }\r\n\r\n  private async fillPool(): Promise<void> {\r\n    if (this.isRefilling) return;\r\n    \r\n    this.isRefilling = true;\r\n    try {\r\n      // Génération batch cryptographiquement sécurisée\r\n      const batchSize = Math.min(5000, this.poolSize - this.pool.length);\r\n      const values = new Uint32Array(batchSize);\r\n      \r\n      if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\r\n        crypto.getRandomValues(values);\r\n        \r\n        for (const value of values) {\r\n          this.pool.push(value / 0x100000000);\r\n        }\r\n        \r\n        this.totalGenerated += batchSize;\r\n      }\r\n    } catch (_error) {\r\n      logger.error('RandomPool: Erreur génération batch', { error: _error });\r\n    } finally {\r\n      this.isRefilling = false;\r\n    }\r\n  }\r\n\r\n  getNext(): number | null {\r\n    if (this.pool.length === 0) return null;\r\n    \r\n    const value = this.pool.pop()!;\r\n    this.totalConsumed++;\r\n    \r\n    // Refill asynchrone si nécessaire\r\n    if (this.pool.length <= this.refillThreshold && !this.isRefilling) {\r\n      this.fillPool();\r\n    }\r\n    \r\n    return value;\r\n  }\r\n\r\n  getStats() {\r\n    return {\r\n      poolSize: this.pool.length,\r\n      totalGenerated: this.totalGenerated,\r\n      totalConsumed: this.totalConsumed,\r\n      hitRate: this.totalConsumed > 0 ? (this.totalConsumed - this.pool.length) / this.totalConsumed : 0,\r\n      isRefilling: this.isRefilling\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Provider hybride haute performance avec classification automatique\r\n */\r\nexport class HybridRandomProvider {\r\n  private static instance: HybridRandomProvider;\r\n  \r\n  // Générateurs spécialisés\r\n  private securePool: RandomPool;\r\n  private fastPRNG: XorShift128Plus;\r\n  \r\n  // Configuration par contexte\r\n  private configs = new Map<UsageContext, PerformanceConfig>([\r\n    [UsageContext.CRYPTOGRAPHIC_OPS, {\r\n      securityLevel: SecurityLevel.CRYPTOGRAPHIC,\r\n      poolSize: 1000,\r\n      refillThreshold: 200,\r\n      batchGeneration: true,\r\n      metricsEnabled: true\r\n    }],\r\n    [UsageContext.NEURAL_NETWORK, {\r\n      securityLevel: SecurityLevel.PERFORMANCE,\r\n      poolSize: 50000,\r\n      refillThreshold: 10000,\r\n      batchGeneration: true,\r\n      metricsEnabled: true\r\n    }],\r\n    [UsageContext.WEBGL_RENDERING, {\r\n      securityLevel: SecurityLevel.PERFORMANCE,\r\n      poolSize: 10000,\r\n      refillThreshold: 2000,\r\n      batchGeneration: true,\r\n      metricsEnabled: false\r\n    }],\r\n    [UsageContext.GENETIC_MUTATIONS, {\r\n      securityLevel: SecurityLevel.MODERATE,\r\n      poolSize: 5000,\r\n      refillThreshold: 1000,\r\n      batchGeneration: true,\r\n      metricsEnabled: true\r\n    }]\r\n  ]);\r\n\r\n  // Métriques performance\r\n  private metrics = {\r\n    totalCalls: 0,\r\n    secureCalls: 0,\r\n    poolCalls: 0,\r\n    fastCalls: 0,\r\n    avgLatencyMs: 0,\r\n    lastReseedTime: Date.now()\r\n  };\r\n\r\n  private constructor() {\r\n    this.securePool = new RandomPool(10000, 2000);\r\n    this.fastPRNG = new XorShift128Plus();\r\n    this.initialize();\r\n  }\r\n\r\n  static getInstance(): HybridRandomProvider {\r\n    if (!HybridRandomProvider.instance) {\r\n      HybridRandomProvider.instance = new HybridRandomProvider();\r\n    }\r\n    return HybridRandomProvider.instance;\r\n  }\r\n\r\n  private async initialize(): Promise<void> {\r\n    await this.securePool.initialize();\r\n    \r\n    // Re-seed PRNG périodiquement avec crypto sécurisé\r\n    setInterval(() => {\r\n      this.fastPRNG.reseed();\r\n      this.metrics.lastReseedTime = Date.now();\r\n    }, 300000); // Toutes les 5 minutes\r\n  }\r\n\r\n  /**\r\n   * API principale - génération adaptative selon contexte\r\n   */\r\n  random(context: UsageContext = UsageContext.GENETIC_MUTATIONS): number {\r\n    const startTime = performance.now();\r\n    this.metrics.totalCalls++;\r\n    \r\n    const config = this.configs.get(context) || this.configs.get(UsageContext.GENETIC_MUTATIONS)!;\r\n    let result: number;\r\n    \r\n    switch (config.securityLevel) {\r\n      case SecurityLevel.CRYPTOGRAPHIC:\r\n        result = this.getSecureRandom();\r\n        this.metrics.secureCalls++;\r\n        break;\r\n        \r\n      case SecurityLevel.MODERATE:\r\n        result = this.getPooledRandom();\r\n        this.metrics.poolCalls++;\r\n        break;\r\n        \r\n      case SecurityLevel.PERFORMANCE:\r\n        result = this.getFastRandom();\r\n        this.metrics.fastCalls++;\r\n        break;\r\n        \r\n      default:\r\n        result = this.getPooledRandom();\r\n        this.metrics.poolCalls++;\r\n    }\r\n    \r\n    // Mise à jour métriques\r\n    if (config.metricsEnabled) {\r\n      const latency = performance.now() - startTime;\r\n      this.metrics.avgLatencyMs = (this.metrics.avgLatencyMs + latency) / 2;\r\n    }\r\n    \r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Génération cryptographiquement sécurisée directe\r\n   */\r\n  private getSecureRandom(): number {\r\n    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\r\n      const array = new Uint32Array(1);\r\n      crypto.getRandomValues(array);\r\n      return array[0] / 0x100000000;\r\n    }\r\n    \r\n    logger.warn('HybridRandom: crypto.getRandomValues non disponible, fallback pool');\r\n    return this.getPooledRandom();\r\n  }\r\n\r\n  /**\r\n   * Génération depuis pool pré-calculé (équilibre sécurité/performance)\r\n   */\r\n  private getPooledRandom(): number {\r\n    const poolValue = this.securePool.getNext();\r\n    if (poolValue !== null) {\r\n      return poolValue;\r\n    }\r\n    \r\n    // Fallback si pool vide\r\n    logger.warn('HybridRandom: Pool vide, fallback crypto direct');\r\n    return this.getSecureRandom();\r\n  }\r\n\r\n  /**\r\n   * Génération ultra-rapide PRNG (performance critique)\r\n   */\r\n  private getFastRandom(): number {\r\n    return this.fastPRNG.random();\r\n  }\r\n\r\n  /**\r\n   * APIs spécialisées pour différents usages\r\n   */\r\n  \r\n  // Pour neural networks (performance critique)\r\n  neuralRandom(): number {\r\n    return this.random(UsageContext.NEURAL_NETWORK);\r\n  }\r\n\r\n  // Pour WebGL rendering (ultra performance)\r\n  renderingRandom(): number {\r\n    return this.random(UsageContext.WEBGL_RENDERING);\r\n  }\r\n\r\n  // Pour opérations cryptographiques (sécurité maximale)\r\n  cryptoRandom(): number {\r\n    return this.random(UsageContext.CRYPTOGRAPHIC_OPS);\r\n  }\r\n\r\n  // Pour mutations génétiques (équilibré)\r\n  mutationRandom(): number {\r\n    return this.random(UsageContext.GENETIC_MUTATIONS);\r\n  }\r\n\r\n  /**\r\n   * Batch generation pour opérations intensives\r\n   */\r\n  async generateBatch(count: number, context: UsageContext): Promise<number[]> {\r\n    const config = this.configs.get(context);\r\n    if (!config?.batchGeneration) {\r\n      // Génération séquentielle si batch non supporté\r\n      return Array.from({ length: count }, () => this.random(context));\r\n    }\r\n\r\n    // Génération batch optimisée\r\n    if (config.securityLevel === SecurityLevel.PERFORMANCE) {\r\n      return Array.from({ length: count }, () => this.fastPRNG.random());\r\n    } else {\r\n      // Génération crypto batch\r\n      const values = new Uint32Array(count);\r\n      if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\r\n        crypto.getRandomValues(values);\r\n        return Array.from(values, v => v / 0x100000000);\r\n      }\r\n      return Array.from({ length: count }, () => this.getSecureRandom());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Métriques et monitoring\r\n   */\r\n  getPerformanceMetrics() {\r\n    return {\r\n      ...this.metrics,\r\n      poolStats: this.securePool.getStats(),\r\n      distribution: {\r\n        secure: (this.metrics.secureCalls / this.metrics.totalCalls * 100).toFixed(1) + '%',\r\n        pooled: (this.metrics.poolCalls / this.metrics.totalCalls * 100).toFixed(1) + '%',\r\n        fast: (this.metrics.fastCalls / this.metrics.totalCalls * 100).toFixed(1) + '%'\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Configuration dynamique\r\n   */\r\n  configureContext(context: UsageContext, config: Partial<PerformanceConfig>): void {\r\n    const existing = this.configs.get(context) || this.configs.get(UsageContext.GENETIC_MUTATIONS)!;\r\n    this.configs.set(context, { ...existing, ...config });\r\n  }\r\n\r\n  /**\r\n   * Nettoyage et arrêt propre\r\n   */\r\n  shutdown(): void {\r\n    logger.info('HybridRandomProvider: Arrêt avec métriques', this.getPerformanceMetrics());\r\n  }\r\n}\r\n\r\n// Exports pour compatibilité avec SecureRandom\r\nexport const hybridRandom = HybridRandomProvider.getInstance();\r\n\r\n// APIs simplifiées pour remplacement direct\r\nexport const neuralRandom = () => hybridRandom.neuralRandom();\r\nexport const renderingRandom = () => hybridRandom.renderingRandom();\r\nexport const cryptoRandom = () => hybridRandom.cryptoRandom();\r\nexport const mutationRandom = () => hybridRandom.mutationRandom();\r\n\r\n// Export de classe pour tests et instanciation custom\r\nexport { XorShift128Plus, RandomPool };"],"mappings":"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","ignoreList":[]}