{"version":3,"names":["react_1","cov_ozk1hchhy","s","__importStar","require","OrganismEngine_1","OrganismViewer","dna","traits","width","b","height","onMetrics","f","canvasRef","useRef","engineRef","metrics","setMetrics","useState","useEffect","current","OrganismEngine","running","renderLoop","render","m","getPerformanceMetrics","requestAnimationFrame","cleanup","jsx_runtime_1","jsxs","style","display","position","children","jsx","ref","border","background","borderRadius","left","top","color","fontSize","padding","fps","gpuLoad","toFixed","memoryUsage","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/OrganismViewer.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { OrganismEngine } from '../generative/OrganismEngine';\r\nimport { OrganismTraits, PerformanceMetrics } from '../types';\r\n\r\n/**\r\n * OrganismViewer - Composant React pour visualisation WebGL de l'organisme\r\n * Props :\r\n *   - dna : code ADN de l'organisme\r\n *   - traits : traits comportementaux (optionnel)\r\n *   - width, height : dimensions du canvas\r\n *   - onMetrics : callback pour recevoir les métriques de performance\r\n */\r\ninterface OrganismViewerProps {\r\n  dna: string;\r\n  traits?: OrganismTraits;\r\n  width?: number;\r\n  height?: number;\r\n  onMetrics?: (metrics: PerformanceMetrics) => void;\r\n}\r\n\r\nexport const OrganismViewer: React.FC<OrganismViewerProps> = ({\r\n  dna,\r\n  traits,\r\n  width = 320,\r\n  height = 320,\r\n  onMetrics\r\n}) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const engineRef = useRef<OrganismEngine | null>(null);\r\n  const [metrics, setMetrics] = useState<PerformanceMetrics | null>(null);\r\n\r\n  // Initialisation et cleanup du moteur WebGL\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n    engineRef.current = new OrganismEngine(canvasRef.current, dna);\r\n    let running = true;\r\n\r\n    // Boucle de rendu\r\n    const renderLoop = () => {\r\n      if (!running || !engineRef.current) return;\r\n      engineRef.current.render();\r\n      const m = engineRef.current.getPerformanceMetrics();\r\n      setMetrics(m);\r\n      if (onMetrics) onMetrics(m);\r\n      requestAnimationFrame(renderLoop);\r\n    };\r\n    renderLoop();\r\n\r\n    return () => {\r\n      running = false;\r\n      engineRef.current?.cleanup();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dna]);\r\n\r\n  // Mise à jour des traits si modifiés\r\n  useEffect(() => {\r\n    if (engineRef.current && traits) {\r\n      // engineRef.current.setTraits(traits); // À activer si API disponible\r\n    }\r\n  }, [traits]);\r\n\r\n  return (\r\n    <div style={{ display: 'inline-block', position: 'relative' }}>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={width}\r\n        height={height}\r\n        style={{ border: '1px solid #222', background: '#111', borderRadius: 8 }}\r\n      />\r\n      {metrics && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          left: 8,\r\n          top: 8,\r\n          background: 'rgba(0,0,0,0.7)',\r\n          color: '#fff',\r\n          fontSize: 12,\r\n          padding: '4px 8px',\r\n          borderRadius: 4\r\n        }}>\r\n          <div>FPS : {metrics.fps}</div>\r\n          <div>GPU : {(metrics.gpuLoad * 100).toFixed(0)}%</div>\r\n          <div>RAM : {metrics.memoryUsage.toFixed(1)} Mo</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}; "],"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","ignoreList":[]}