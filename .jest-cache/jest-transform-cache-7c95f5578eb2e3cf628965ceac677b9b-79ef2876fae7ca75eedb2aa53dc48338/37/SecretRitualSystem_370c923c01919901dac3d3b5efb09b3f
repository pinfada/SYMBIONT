03de16f25c2675be865d3c34ef943d69
"use strict";

/* istanbul ignore next */
function cov_a4r3si4bf() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/mystical/SecretRitualSystem.ts";
  var hash = "918f231c35297984814f9f3dd4081b8b722c9c0c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/mystical/SecretRitualSystem.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 37
        },
        end: {
          line: 4,
          column: 88
        }
      },
      "3": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "4": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 8,
          column: 91
        }
      },
      "5": {
        start: {
          line: 8,
          column: 97
        },
        end: {
          line: 8,
          column: 127
        }
      },
      "6": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 30
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 40
        }
      },
      "8": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 37
        }
      },
      "9": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 32,
          column: 11
        }
      },
      "11": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "12": {
        start: {
          line: 21,
          column: 31
        },
        end: {
          line: 21,
          column: 90
        }
      },
      "13": {
        start: {
          line: 21,
          column: 56
        },
        end: {
          line: 21,
          column: 89
        }
      },
      "14": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 100
        }
      },
      "15": {
        start: {
          line: 22,
          column: 45
        },
        end: {
          line: 22,
          column: 55
        }
      },
      "16": {
        start: {
          line: 22,
          column: 79
        },
        end: {
          line: 22,
          column: 99
        }
      },
      "17": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 89
        }
      },
      "18": {
        start: {
          line: 23,
          column: 69
        },
        end: {
          line: 23,
          column: 87
        }
      },
      "19": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 30,
          column: 13
        }
      },
      "20": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 47,
          column: 11
        }
      },
      "21": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 29
        }
      },
      "22": {
        start: {
          line: 40,
          column: 33
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "23": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 56,
          column: 12
        }
      },
      "24": {
        start: {
          line: 50,
          column: 62
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "25": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "26": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "27": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 66,
          column: 18
        }
      },
      "28": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 20
        }
      },
      "29": {
        start: {
          line: 72,
          column: 19
        },
        end: {
          line: 72,
          column: 45
        }
      },
      "30": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 74,
          column: 24
        }
      },
      "31": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 24
        }
      },
      "32": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 27
        }
      },
      "33": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "34": {
        start: {
          line: 80,
          column: 26
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "35": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 44
        }
      },
      "36": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 25
        }
      },
      "37": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 20
        }
      },
      "38": {
        start: {
          line: 92,
          column: 0
        },
        end: {
          line: 92,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "randomUUID",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 19
          }
        },
        loc: {
          start: {
            line: 6,
            column: 22
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 67
          },
          end: {
            line: 7,
            column: 68
          }
        },
        loc: {
          start: {
            line: 7,
            column: 80
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 13
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 19,
            column: 22
          }
        },
        loc: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 24,
            column: 13
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 51
          },
          end: {
            line: 21,
            column: 52
          }
        },
        loc: {
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 21,
            column: 89
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 22,
            column: 40
          },
          end: {
            line: 22,
            column: 41
          }
        },
        loc: {
          start: {
            line: 22,
            column: 45
          },
          end: {
            line: 22,
            column: 55
          }
        },
        line: 22
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 22,
            column: 64
          },
          end: {
            line: 22,
            column: 65
          }
        },
        loc: {
          start: {
            line: 22,
            column: 79
          },
          end: {
            line: 22,
            column: 99
          }
        },
        line: 22
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 23,
            column: 62
          },
          end: {
            line: 23,
            column: 63
          }
        },
        loc: {
          start: {
            line: 23,
            column: 69
          },
          end: {
            line: 23,
            column: 87
          }
        },
        line: 23
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 25,
            column: 21
          }
        },
        loc: {
          start: {
            line: 25,
            column: 33
          },
          end: {
            line: 30,
            column: 13
          }
        },
        line: 25
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 21
          },
          end: {
            line: 36,
            column: 22
          }
        },
        loc: {
          start: {
            line: 36,
            column: 39
          },
          end: {
            line: 39,
            column: 13
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 20
          },
          end: {
            line: 40,
            column: 21
          }
        },
        loc: {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 45,
            column: 13
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 50,
            column: 42
          },
          end: {
            line: 50,
            column: 43
          }
        },
        loc: {
          start: {
            line: 50,
            column: 62
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 50
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 38
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 58
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 33
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 71
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 39
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 78
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 97
          },
          end: {
            line: 8,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 8,
            column: 108
          },
          end: {
            line: 8,
            column: 109
          }
        }, {
          start: {
            line: 8,
            column: 113
          },
          end: {
            line: 8,
            column: 126
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "2": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 44
          }
        }, {
          start: {
            line: 60,
            column: 48
          },
          end: {
            line: 60,
            column: 128
          }
        }],
        line: 60
      },
      "3": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 74,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 74,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "4": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/mystical/SecretRitualSystem.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/mystical/SecretRitualSystem.ts"],
      sourcesContent: ["import { RitualCondition, SecretFunction, MysticalEvent, RitualTrigger, ExecutionContext, SecretResult } from '../shared/types/mystical'\r\nimport { PerformanceOptimizedRandom } from '@shared/utils/PerformanceOptimizedRandom';\r\n\r\n// @ts-expect-error Fonction r\xE9serv\xE9e pour usage futur\r\nfunction randomUUID(): string {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    const r = PerformanceOptimizedRandom.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport class SecretRitualSystem {\r\n  private ritualTriggers: Map<string, RitualCondition> = new Map()\r\n  private secretCodes: Map<string, SecretFunction> = new Map()\r\n  private mysticalEvents: MysticalEvent[] = []\r\n\r\n  constructor() {\r\n    // Rituel navigation : visiter 3 cat\xE9gories diff\xE9rentes en 5 min\r\n    this.ritualTriggers.set('sacred_pattern', {\r\n      trigger: (interactions: unknown[]) => {\r\n        const now = Date.now()\r\n        const recent = interactions.filter(i => now - (i as any).timestamp < 5 * 60 * 1000)\r\n        const cats = recent.map(i => (i as any).category).filter((v: string, i: number, arr: string[]) => arr.indexOf(v) === i)\r\n        return ['news', 'social', 'creativity'].every(cat => cats.includes(cat))\r\n      },\r\n      effect: async () => ({\r\n        name: 'Sacred Pattern Blessing',\r\n        description: 'Votre organisme ressent une \xE9nergie mystique...',\r\n        effects: { traitBonus: { curiosity: 0.1, creativity: 0.15 }, visualEffect: 'golden_aura', duration: 30 * 60 * 1000 },\r\n        rarity: 'rare'\r\n      }),\r\n      rarity: 0.01\r\n    })\r\n    // Rituel synchronisation collective\r\n    this.ritualTriggers.set('collective_awakening', {\r\n      // @ts-expect-error Param\xE8tre r\xE9serv\xE9 pour usage futur\r\n      trigger: (interactions: unknown[]) => {\r\n        // TODO: D\xE9tection de synchronisation multi-utilisateurs\r\n        return false\r\n      },\r\n      effect: async () => ({\r\n        name: 'Collective Awakening',\r\n        description: 'Un \xE9veil collectif synchronis\xE9 se produit.',\r\n        effects: { traitBonus: { empathy: 0.2 }, visualEffect: 'blue_aura', duration: 60 * 60 * 1000 },\r\n        rarity: 'epic'\r\n      }),\r\n      rarity: 0.001\r\n    })\r\n    // Code secret \"SYMBIOSIS\"\r\n    // @ts-expect-error Param\xE8tre r\xE9serv\xE9 pour usage futur\r\n    this.secretCodes.set('SYMBIOSIS', async (context: ExecutionContext) => ({\r\n      name: 'Symbiosis Mode',\r\n      description: 'Fusion compl\xE8te entre vous et votre organisme num\xE9rique',\r\n      effects: { enhancedPrediction: true, realTimeEvolution: true, mysticalVisuals: true },\r\n      duration: 'Infinity',\r\n      unlockMessage: '\uD83C\uDF1F F\xC9LICITATIONS ! Mode Symbiose Ultime d\xE9bloqu\xE9.'\r\n    }))\r\n  }\r\n\r\n  detectRitualTrigger(interactions: unknown[]): RitualTrigger | null {\r\n    for (const [name, ritual] of this.ritualTriggers.entries()) {\r\n      if (ritual.trigger(interactions) && PerformanceOptimizedRandom.random() < ritual.rarity) {\r\n        return {\r\n          name,\r\n          effect: ritual.effect(),\r\n          timestamp: Date.now(),\r\n          rarity: ritual.rarity\r\n        }\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n  executeSecret(code: string, context: ExecutionContext): SecretResult | null {\r\n    const fn = this.secretCodes.get(code)\r\n    if (!fn) return null\r\n    // Note: ici on retourne une promesse, \xE0 adapter selon usage\r\n    return fn(context) as any\r\n  }\r\n\r\n  generateMysticalEvent(probability: number): MysticalEvent | null {\r\n    if (PerformanceOptimizedRandom.random() < probability) {\r\n      const event: MysticalEvent = {\r\n        name: 'Mystical Surge',\r\n        description: \"Une vague d'\xE9nergie traverse l'organisme.\",\r\n        effects: { traitBonus: { focus: 0.2 }, visualEffect: 'purple_flash', duration: 10 * 60 * 1000 },\r\n        rarity: 'legendary'\r\n      }\r\n      this.mysticalEvents.push(event)\r\n      return event\r\n    }\r\n    return null\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "918f231c35297984814f9f3dd4081b8b722c9c0c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_a4r3si4bf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_a4r3si4bf();
cov_a4r3si4bf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_a4r3si4bf().s[1]++;
exports.SecretRitualSystem = void 0;
const PerformanceOptimizedRandom_1 =
/* istanbul ignore next */
(cov_a4r3si4bf().s[2]++, require("@shared/utils/PerformanceOptimizedRandom"));
// @ts-expect-error Fonction réservée pour usage futur
function randomUUID() {
  /* istanbul ignore next */
  cov_a4r3si4bf().f[0]++;
  cov_a4r3si4bf().s[3]++;
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    /* istanbul ignore next */
    cov_a4r3si4bf().f[1]++;
    const r =
      /* istanbul ignore next */
      (cov_a4r3si4bf().s[4]++, PerformanceOptimizedRandom_1.PerformanceOptimizedRandom.random() * 16 | 0),
      v =
      /* istanbul ignore next */
      (cov_a4r3si4bf().s[5]++, c == 'x' ?
      /* istanbul ignore next */
      (cov_a4r3si4bf().b[0][0]++, r) :
      /* istanbul ignore next */
      (cov_a4r3si4bf().b[0][1]++, r & 0x3 | 0x8));
    /* istanbul ignore next */
    cov_a4r3si4bf().s[6]++;
    return v.toString(16);
  });
}
class SecretRitualSystem {
  constructor() {
    /* istanbul ignore next */
    cov_a4r3si4bf().f[2]++;
    cov_a4r3si4bf().s[7]++;
    this.ritualTriggers = new Map();
    /* istanbul ignore next */
    cov_a4r3si4bf().s[8]++;
    this.secretCodes = new Map();
    /* istanbul ignore next */
    cov_a4r3si4bf().s[9]++;
    this.mysticalEvents = [];
    // Rituel navigation : visiter 3 catégories différentes en 5 min
    /* istanbul ignore next */
    cov_a4r3si4bf().s[10]++;
    this.ritualTriggers.set('sacred_pattern', {
      trigger: interactions => {
        /* istanbul ignore next */
        cov_a4r3si4bf().f[3]++;
        const now =
        /* istanbul ignore next */
        (cov_a4r3si4bf().s[11]++, Date.now());
        const recent =
        /* istanbul ignore next */
        (cov_a4r3si4bf().s[12]++, interactions.filter(i => {
          /* istanbul ignore next */
          cov_a4r3si4bf().f[4]++;
          cov_a4r3si4bf().s[13]++;
          return now - i.timestamp < 5 * 60 * 1000;
        }));
        const cats =
        /* istanbul ignore next */
        (cov_a4r3si4bf().s[14]++, recent.map(i => {
          /* istanbul ignore next */
          cov_a4r3si4bf().f[5]++;
          cov_a4r3si4bf().s[15]++;
          return i.category;
        }).filter((v, i, arr) => {
          /* istanbul ignore next */
          cov_a4r3si4bf().f[6]++;
          cov_a4r3si4bf().s[16]++;
          return arr.indexOf(v) === i;
        }));
        /* istanbul ignore next */
        cov_a4r3si4bf().s[17]++;
        return ['news', 'social', 'creativity'].every(cat => {
          /* istanbul ignore next */
          cov_a4r3si4bf().f[7]++;
          cov_a4r3si4bf().s[18]++;
          return cats.includes(cat);
        });
      },
      effect: async () => {
        /* istanbul ignore next */
        cov_a4r3si4bf().f[8]++;
        cov_a4r3si4bf().s[19]++;
        return {
          name: 'Sacred Pattern Blessing',
          description: 'Votre organisme ressent une énergie mystique...',
          effects: {
            traitBonus: {
              curiosity: 0.1,
              creativity: 0.15
            },
            visualEffect: 'golden_aura',
            duration: 30 * 60 * 1000
          },
          rarity: 'rare'
        };
      },
      rarity: 0.01
    });
    // Rituel synchronisation collective
    /* istanbul ignore next */
    cov_a4r3si4bf().s[20]++;
    this.ritualTriggers.set('collective_awakening', {
      // @ts-expect-error Paramètre réservé pour usage futur
      trigger: interactions => {
        /* istanbul ignore next */
        cov_a4r3si4bf().f[9]++;
        cov_a4r3si4bf().s[21]++;
        // TODO: Détection de synchronisation multi-utilisateurs
        return false;
      },
      effect: async () => {
        /* istanbul ignore next */
        cov_a4r3si4bf().f[10]++;
        cov_a4r3si4bf().s[22]++;
        return {
          name: 'Collective Awakening',
          description: 'Un éveil collectif synchronisé se produit.',
          effects: {
            traitBonus: {
              empathy: 0.2
            },
            visualEffect: 'blue_aura',
            duration: 60 * 60 * 1000
          },
          rarity: 'epic'
        };
      },
      rarity: 0.001
    });
    // Code secret "SYMBIOSIS"
    // @ts-expect-error Paramètre réservé pour usage futur
    /* istanbul ignore next */
    cov_a4r3si4bf().s[23]++;
    this.secretCodes.set('SYMBIOSIS', async context => {
      /* istanbul ignore next */
      cov_a4r3si4bf().f[11]++;
      cov_a4r3si4bf().s[24]++;
      return {
        name: 'Symbiosis Mode',
        description: 'Fusion complète entre vous et votre organisme numérique',
        effects: {
          enhancedPrediction: true,
          realTimeEvolution: true,
          mysticalVisuals: true
        },
        duration: 'Infinity',
        unlockMessage: '🌟 FÉLICITATIONS ! Mode Symbiose Ultime débloqué.'
      };
    });
  }
  detectRitualTrigger(interactions) {
    /* istanbul ignore next */
    cov_a4r3si4bf().f[12]++;
    cov_a4r3si4bf().s[25]++;
    for (const [name, ritual] of this.ritualTriggers.entries()) {
      /* istanbul ignore next */
      cov_a4r3si4bf().s[26]++;
      if (
      /* istanbul ignore next */
      (cov_a4r3si4bf().b[2][0]++, ritual.trigger(interactions)) &&
      /* istanbul ignore next */
      (cov_a4r3si4bf().b[2][1]++, PerformanceOptimizedRandom_1.PerformanceOptimizedRandom.random() < ritual.rarity)) {
        /* istanbul ignore next */
        cov_a4r3si4bf().b[1][0]++;
        cov_a4r3si4bf().s[27]++;
        return {
          name,
          effect: ritual.effect(),
          timestamp: Date.now(),
          rarity: ritual.rarity
        };
      } else
      /* istanbul ignore next */
      {
        cov_a4r3si4bf().b[1][1]++;
      }
    }
    /* istanbul ignore next */
    cov_a4r3si4bf().s[28]++;
    return null;
  }
  executeSecret(code, context) {
    /* istanbul ignore next */
    cov_a4r3si4bf().f[13]++;
    const fn =
    /* istanbul ignore next */
    (cov_a4r3si4bf().s[29]++, this.secretCodes.get(code));
    /* istanbul ignore next */
    cov_a4r3si4bf().s[30]++;
    if (!fn) {
      /* istanbul ignore next */
      cov_a4r3si4bf().b[3][0]++;
      cov_a4r3si4bf().s[31]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_a4r3si4bf().b[3][1]++;
    }
    // Note: ici on retourne une promesse, à adapter selon usage
    cov_a4r3si4bf().s[32]++;
    return fn(context);
  }
  generateMysticalEvent(probability) {
    /* istanbul ignore next */
    cov_a4r3si4bf().f[14]++;
    cov_a4r3si4bf().s[33]++;
    if (PerformanceOptimizedRandom_1.PerformanceOptimizedRandom.random() < probability) {
      /* istanbul ignore next */
      cov_a4r3si4bf().b[4][0]++;
      const event =
      /* istanbul ignore next */
      (cov_a4r3si4bf().s[34]++, {
        name: 'Mystical Surge',
        description: "Une vague d'énergie traverse l'organisme.",
        effects: {
          traitBonus: {
            focus: 0.2
          },
          visualEffect: 'purple_flash',
          duration: 10 * 60 * 1000
        },
        rarity: 'legendary'
      });
      /* istanbul ignore next */
      cov_a4r3si4bf().s[35]++;
      this.mysticalEvents.push(event);
      /* istanbul ignore next */
      cov_a4r3si4bf().s[36]++;
      return event;
    } else
    /* istanbul ignore next */
    {
      cov_a4r3si4bf().b[4][1]++;
    }
    cov_a4r3si4bf().s[37]++;
    return null;
  }
}
/* istanbul ignore next */
cov_a4r3si4bf().s[38]++;
exports.SecretRitualSystem = SecretRitualSystem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfYTRyM3NpNGJmIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiUGVyZm9ybWFuY2VPcHRpbWl6ZWRSYW5kb21fMSIsInJlcXVpcmUiLCJyYW5kb21VVUlEIiwiZiIsInJlcGxhY2UiLCJjIiwiciIsIlBlcmZvcm1hbmNlT3B0aW1pemVkUmFuZG9tIiwicmFuZG9tIiwidiIsImIiLCJ0b1N0cmluZyIsIlNlY3JldFJpdHVhbFN5c3RlbSIsImNvbnN0cnVjdG9yIiwicml0dWFsVHJpZ2dlcnMiLCJNYXAiLCJzZWNyZXRDb2RlcyIsIm15c3RpY2FsRXZlbnRzIiwic2V0IiwidHJpZ2dlciIsImludGVyYWN0aW9ucyIsIm5vdyIsIkRhdGUiLCJyZWNlbnQiLCJmaWx0ZXIiLCJpIiwidGltZXN0YW1wIiwiY2F0cyIsIm1hcCIsImNhdGVnb3J5IiwiYXJyIiwiaW5kZXhPZiIsImV2ZXJ5IiwiY2F0IiwiaW5jbHVkZXMiLCJlZmZlY3QiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJlZmZlY3RzIiwidHJhaXRCb251cyIsImN1cmlvc2l0eSIsImNyZWF0aXZpdHkiLCJ2aXN1YWxFZmZlY3QiLCJkdXJhdGlvbiIsInJhcml0eSIsImVtcGF0aHkiLCJjb250ZXh0IiwiZW5oYW5jZWRQcmVkaWN0aW9uIiwicmVhbFRpbWVFdm9sdXRpb24iLCJteXN0aWNhbFZpc3VhbHMiLCJ1bmxvY2tNZXNzYWdlIiwiZGV0ZWN0Uml0dWFsVHJpZ2dlciIsInJpdHVhbCIsImVudHJpZXMiLCJleGVjdXRlU2VjcmV0IiwiY29kZSIsImZuIiwiZ2V0IiwiZ2VuZXJhdGVNeXN0aWNhbEV2ZW50IiwicHJvYmFiaWxpdHkiLCJldmVudCIsImZvY3VzIiwicHVzaCIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvbW50L2MvVXNlcnMvbV9vbGkvUHJvamV0cy9TWU1CSU9OVC9zcmMvbXlzdGljYWwvU2VjcmV0Uml0dWFsU3lzdGVtLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJpdHVhbENvbmRpdGlvbiwgU2VjcmV0RnVuY3Rpb24sIE15c3RpY2FsRXZlbnQsIFJpdHVhbFRyaWdnZXIsIEV4ZWN1dGlvbkNvbnRleHQsIFNlY3JldFJlc3VsdCB9IGZyb20gJy4uL3NoYXJlZC90eXBlcy9teXN0aWNhbCdcclxuaW1wb3J0IHsgUGVyZm9ybWFuY2VPcHRpbWl6ZWRSYW5kb20gfSBmcm9tICdAc2hhcmVkL3V0aWxzL1BlcmZvcm1hbmNlT3B0aW1pemVkUmFuZG9tJztcclxuXHJcbi8vIEB0cy1leHBlY3QtZXJyb3IgRm9uY3Rpb24gcsOpc2VydsOpZSBwb3VyIHVzYWdlIGZ1dHVyXHJcbmZ1bmN0aW9uIHJhbmRvbVVVSUQoKTogc3RyaW5nIHtcclxuICByZXR1cm4gJ3h4eHh4eHh4LXh4eHgtNHh4eC15eHh4LXh4eHh4eHh4eHh4eCcucmVwbGFjZSgvW3h5XS9nLCBmdW5jdGlvbihjKSB7XHJcbiAgICBjb25zdCByID0gUGVyZm9ybWFuY2VPcHRpbWl6ZWRSYW5kb20ucmFuZG9tKCkgKiAxNiB8IDAsIHYgPSBjID09ICd4JyA/IHIgOiAociAmIDB4MyB8IDB4OCk7XHJcbiAgICByZXR1cm4gdi50b1N0cmluZygxNik7XHJcbiAgfSk7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBTZWNyZXRSaXR1YWxTeXN0ZW0ge1xyXG4gIHByaXZhdGUgcml0dWFsVHJpZ2dlcnM6IE1hcDxzdHJpbmcsIFJpdHVhbENvbmRpdGlvbj4gPSBuZXcgTWFwKClcclxuICBwcml2YXRlIHNlY3JldENvZGVzOiBNYXA8c3RyaW5nLCBTZWNyZXRGdW5jdGlvbj4gPSBuZXcgTWFwKClcclxuICBwcml2YXRlIG15c3RpY2FsRXZlbnRzOiBNeXN0aWNhbEV2ZW50W10gPSBbXVxyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIC8vIFJpdHVlbCBuYXZpZ2F0aW9uIDogdmlzaXRlciAzIGNhdMOpZ29yaWVzIGRpZmbDqXJlbnRlcyBlbiA1IG1pblxyXG4gICAgdGhpcy5yaXR1YWxUcmlnZ2Vycy5zZXQoJ3NhY3JlZF9wYXR0ZXJuJywge1xyXG4gICAgICB0cmlnZ2VyOiAoaW50ZXJhY3Rpb25zOiB1bmtub3duW10pID0+IHtcclxuICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpXHJcbiAgICAgICAgY29uc3QgcmVjZW50ID0gaW50ZXJhY3Rpb25zLmZpbHRlcihpID0+IG5vdyAtIChpIGFzIGFueSkudGltZXN0YW1wIDwgNSAqIDYwICogMTAwMClcclxuICAgICAgICBjb25zdCBjYXRzID0gcmVjZW50Lm1hcChpID0+IChpIGFzIGFueSkuY2F0ZWdvcnkpLmZpbHRlcigodjogc3RyaW5nLCBpOiBudW1iZXIsIGFycjogc3RyaW5nW10pID0+IGFyci5pbmRleE9mKHYpID09PSBpKVxyXG4gICAgICAgIHJldHVybiBbJ25ld3MnLCAnc29jaWFsJywgJ2NyZWF0aXZpdHknXS5ldmVyeShjYXQgPT4gY2F0cy5pbmNsdWRlcyhjYXQpKVxyXG4gICAgICB9LFxyXG4gICAgICBlZmZlY3Q6IGFzeW5jICgpID0+ICh7XHJcbiAgICAgICAgbmFtZTogJ1NhY3JlZCBQYXR0ZXJuIEJsZXNzaW5nJyxcclxuICAgICAgICBkZXNjcmlwdGlvbjogJ1ZvdHJlIG9yZ2FuaXNtZSByZXNzZW50IHVuZSDDqW5lcmdpZSBteXN0aXF1ZS4uLicsXHJcbiAgICAgICAgZWZmZWN0czogeyB0cmFpdEJvbnVzOiB7IGN1cmlvc2l0eTogMC4xLCBjcmVhdGl2aXR5OiAwLjE1IH0sIHZpc3VhbEVmZmVjdDogJ2dvbGRlbl9hdXJhJywgZHVyYXRpb246IDMwICogNjAgKiAxMDAwIH0sXHJcbiAgICAgICAgcmFyaXR5OiAncmFyZSdcclxuICAgICAgfSksXHJcbiAgICAgIHJhcml0eTogMC4wMVxyXG4gICAgfSlcclxuICAgIC8vIFJpdHVlbCBzeW5jaHJvbmlzYXRpb24gY29sbGVjdGl2ZVxyXG4gICAgdGhpcy5yaXR1YWxUcmlnZ2Vycy5zZXQoJ2NvbGxlY3RpdmVfYXdha2VuaW5nJywge1xyXG4gICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIFBhcmFtw6h0cmUgcsOpc2VydsOpIHBvdXIgdXNhZ2UgZnV0dXJcclxuICAgICAgdHJpZ2dlcjogKGludGVyYWN0aW9uczogdW5rbm93bltdKSA9PiB7XHJcbiAgICAgICAgLy8gVE9ETzogRMOpdGVjdGlvbiBkZSBzeW5jaHJvbmlzYXRpb24gbXVsdGktdXRpbGlzYXRldXJzXHJcbiAgICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICAgIH0sXHJcbiAgICAgIGVmZmVjdDogYXN5bmMgKCkgPT4gKHtcclxuICAgICAgICBuYW1lOiAnQ29sbGVjdGl2ZSBBd2FrZW5pbmcnLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnVW4gw6l2ZWlsIGNvbGxlY3RpZiBzeW5jaHJvbmlzw6kgc2UgcHJvZHVpdC4nLFxyXG4gICAgICAgIGVmZmVjdHM6IHsgdHJhaXRCb251czogeyBlbXBhdGh5OiAwLjIgfSwgdmlzdWFsRWZmZWN0OiAnYmx1ZV9hdXJhJywgZHVyYXRpb246IDYwICogNjAgKiAxMDAwIH0sXHJcbiAgICAgICAgcmFyaXR5OiAnZXBpYydcclxuICAgICAgfSksXHJcbiAgICAgIHJhcml0eTogMC4wMDFcclxuICAgIH0pXHJcbiAgICAvLyBDb2RlIHNlY3JldCBcIlNZTUJJT1NJU1wiXHJcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIFBhcmFtw6h0cmUgcsOpc2VydsOpIHBvdXIgdXNhZ2UgZnV0dXJcclxuICAgIHRoaXMuc2VjcmV0Q29kZXMuc2V0KCdTWU1CSU9TSVMnLCBhc3luYyAoY29udGV4dDogRXhlY3V0aW9uQ29udGV4dCkgPT4gKHtcclxuICAgICAgbmFtZTogJ1N5bWJpb3NpcyBNb2RlJyxcclxuICAgICAgZGVzY3JpcHRpb246ICdGdXNpb24gY29tcGzDqHRlIGVudHJlIHZvdXMgZXQgdm90cmUgb3JnYW5pc21lIG51bcOpcmlxdWUnLFxyXG4gICAgICBlZmZlY3RzOiB7IGVuaGFuY2VkUHJlZGljdGlvbjogdHJ1ZSwgcmVhbFRpbWVFdm9sdXRpb246IHRydWUsIG15c3RpY2FsVmlzdWFsczogdHJ1ZSB9LFxyXG4gICAgICBkdXJhdGlvbjogJ0luZmluaXR5JyxcclxuICAgICAgdW5sb2NrTWVzc2FnZTogJ/CfjJ8gRsOJTElDSVRBVElPTlMgISBNb2RlIFN5bWJpb3NlIFVsdGltZSBkw6libG9xdcOpLidcclxuICAgIH0pKVxyXG4gIH1cclxuXHJcbiAgZGV0ZWN0Uml0dWFsVHJpZ2dlcihpbnRlcmFjdGlvbnM6IHVua25vd25bXSk6IFJpdHVhbFRyaWdnZXIgfCBudWxsIHtcclxuICAgIGZvciAoY29uc3QgW25hbWUsIHJpdHVhbF0gb2YgdGhpcy5yaXR1YWxUcmlnZ2Vycy5lbnRyaWVzKCkpIHtcclxuICAgICAgaWYgKHJpdHVhbC50cmlnZ2VyKGludGVyYWN0aW9ucykgJiYgUGVyZm9ybWFuY2VPcHRpbWl6ZWRSYW5kb20ucmFuZG9tKCkgPCByaXR1YWwucmFyaXR5KSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIG5hbWUsXHJcbiAgICAgICAgICBlZmZlY3Q6IHJpdHVhbC5lZmZlY3QoKSxcclxuICAgICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcclxuICAgICAgICAgIHJhcml0eTogcml0dWFsLnJhcml0eVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGxcclxuICB9XHJcblxyXG4gIGV4ZWN1dGVTZWNyZXQoY29kZTogc3RyaW5nLCBjb250ZXh0OiBFeGVjdXRpb25Db250ZXh0KTogU2VjcmV0UmVzdWx0IHwgbnVsbCB7XHJcbiAgICBjb25zdCBmbiA9IHRoaXMuc2VjcmV0Q29kZXMuZ2V0KGNvZGUpXHJcbiAgICBpZiAoIWZuKSByZXR1cm4gbnVsbFxyXG4gICAgLy8gTm90ZTogaWNpIG9uIHJldG91cm5lIHVuZSBwcm9tZXNzZSwgw6AgYWRhcHRlciBzZWxvbiB1c2FnZVxyXG4gICAgcmV0dXJuIGZuKGNvbnRleHQpIGFzIGFueVxyXG4gIH1cclxuXHJcbiAgZ2VuZXJhdGVNeXN0aWNhbEV2ZW50KHByb2JhYmlsaXR5OiBudW1iZXIpOiBNeXN0aWNhbEV2ZW50IHwgbnVsbCB7XHJcbiAgICBpZiAoUGVyZm9ybWFuY2VPcHRpbWl6ZWRSYW5kb20ucmFuZG9tKCkgPCBwcm9iYWJpbGl0eSkge1xyXG4gICAgICBjb25zdCBldmVudDogTXlzdGljYWxFdmVudCA9IHtcclxuICAgICAgICBuYW1lOiAnTXlzdGljYWwgU3VyZ2UnLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIlVuZSB2YWd1ZSBkJ8OpbmVyZ2llIHRyYXZlcnNlIGwnb3JnYW5pc21lLlwiLFxyXG4gICAgICAgIGVmZmVjdHM6IHsgdHJhaXRCb251czogeyBmb2N1czogMC4yIH0sIHZpc3VhbEVmZmVjdDogJ3B1cnBsZV9mbGFzaCcsIGR1cmF0aW9uOiAxMCAqIDYwICogMTAwMCB9LFxyXG4gICAgICAgIHJhcml0eTogJ2xlZ2VuZGFyeSdcclxuICAgICAgfVxyXG4gICAgICB0aGlzLm15c3RpY2FsRXZlbnRzLnB1c2goZXZlbnQpXHJcbiAgICAgIHJldHVybiBldmVudFxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGxcclxuICB9XHJcbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWNVO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGFBQUE7QUFBQUEsYUFBQSxHQUFBRSxDQUFBOzs7Ozs7O0FBYlYsTUFBQUMsNEJBQUE7QUFBQTtBQUFBLENBQUFILGFBQUEsR0FBQUUsQ0FBQSxPQUFBRSxPQUFBO0FBRUE7QUFDQSxTQUFTQyxVQUFVQSxDQUFBO0VBQUE7RUFBQUwsYUFBQSxHQUFBTSxDQUFBO0VBQUFOLGFBQUEsR0FBQUUsQ0FBQTtFQUNqQixPQUFPLHNDQUFzQyxDQUFD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T0FBeUI7SUFBQTtJQUFBakQsYUFBQSxHQUFBTSxDQUFBO0lBQ25ELE1BQU1xRCxFQUFFO0lBQUE7SUFBQSxDQUFBM0QsYUFBQSxHQUFBRSxDQUFBLFFBQUcsSUFBSSxDQUFDaUIsV0FBVyxDQUFDeUMsR0FBRyxDQUFDRixJQUFJLENBQUM7SUFBQTtJQUFBMUQsYUFBQSxHQUFBRSxDQUFBO0lBQ3JDLElBQUksQ0FBQ3lELEVBQUUsRUFBRTtNQUFBO01BQUEzRCxhQUFBLEdBQUFhLENBQUE7TUFBQWIsYUFBQSxHQUFBRSxDQUFBO01BQUEsT0FBTyxJQUFJO0lBQUE7SUFBQTtJQUFBO01BQUFGLGFBQUEsR0FBQWEsQ0FBQTtJQUFBO0lBQ3BCO0lBQUFiLGFBQUEsR0FBQUUsQ0FBQTtJQUNBLE9BQU95RCxFQUFFLENBQUNWLE9BQU8sQ0FBUTtFQUMzQjtFQUVBWSxxQkFBcUJBLENBQUNDLFdBQW1CO0lBQUE7SUFBQTlELGFBQUEsR0FBQU0sQ0FBQTtJQUFBTixhQUFBLEdBQUFFLENBQUE7SUFDdkMsSUFBSUMsNEJBQUEsQ0FBQU8sMEJBQTBCLENBQUNDLE1BQU0sRUFBRSxHQUFHbUQsV0FBVyxFQUFFO01BQUE7TUFBQTlELGFBQUEsR0FBQWEsQ0FBQTtNQUNyRCxNQUFNa0QsS0FBSztNQUFBO01BQUEsQ0FBQS9ELGFBQUEsR0FBQUUsQ0FBQSxRQUFrQjtRQUMzQnFDLElBQUksRUFBRSxnQkFBZ0I7UUFDdEJDLFdBQVcsRUFBRSwyQ0FBMkM7UUFDeERDLE9BQU8sRUFBRTtVQUFFQyxVQUFVLEVBQUU7WUFBRXNCLEtBQUssRUFBRTtVQUFHLENBQUU7VUFBRW5CLFlBQVksRUFBRSxjQUFjO1VBQUVDLFFBQVEsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHO1FBQUksQ0FBRTtRQUMvRkMsTUFBTSxFQUFFO09BQ1Q7TUFBQTtNQUFBL0MsYUFBQSxHQUFBRSxDQUFBO01BQ0QsSUFBSSxDQUFDa0IsY0FBYyxDQUFDNkMsSUFBSSxDQUFDRixLQUFLLENBQUM7TUFBQTtNQUFBL0QsYUFBQSxHQUFBRSxDQUFBO01BQy9CLE9BQU82RCxLQUFLO0lBQ2QsQ0FBQztJQUFBO0lBQUE7TUFBQS9ELGFBQUEsR0FBQWEsQ0FBQTtJQUFBO0lBQUFiLGFBQUEsR0FBQUUsQ0FBQTtJQUNELE9BQU8sSUFBSTtFQUNiOztBQUNEO0FBQUFGLGFBQUEsR0FBQUUsQ0FBQTtBQWxGRGdFLE9BQUEsQ0FBQW5ELGtCQUFBLEdBQUFBLGtCQUFBIiwiaWdub3JlTGlzdCI6W119