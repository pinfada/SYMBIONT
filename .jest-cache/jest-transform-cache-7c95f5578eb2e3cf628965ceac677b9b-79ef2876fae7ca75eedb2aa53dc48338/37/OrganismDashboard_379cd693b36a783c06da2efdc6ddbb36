5214ad993086cb56410f123f4dfc5c3e
"use strict";

/* istanbul ignore next */
function cov_10h0lsa8km() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/OrganismDashboard.tsx";
  var hash = "444664b17b6423aa2fa1ece83f303892d934d83f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/OrganismDashboard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 35
        }
      },
      "37": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 37,
          column: 50
        }
      },
      "38": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 46
        }
      },
      "39": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 52
        }
      },
      "40": {
        start: {
          line: 41,
          column: 29
        },
        end: {
          line: 41,
          column: 60
        }
      },
      "41": {
        start: {
          line: 42,
          column: 27
        },
        end: {
          line: 42,
          column: 56
        }
      },
      "42": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 62
        }
      },
      "43": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 58,
          column: 1
        }
      },
      "44": {
        start: {
          line: 60,
          column: 18
        },
        end: {
          line: 60,
          column: 56
        }
      },
      "45": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 121
        }
      },
      "46": {
        start: {
          line: 61,
          column: 40
        },
        end: {
          line: 61,
          column: 110
        }
      },
      "47": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 73,
          column: 6
        }
      },
      "48": {
        start: {
          line: 75,
          column: 26
        },
        end: {
          line: 93,
          column: 1
        }
      },
      "49": {
        start: {
          line: 76,
          column: 26
        },
        end: {
          line: 76,
          column: 60
        }
      },
      "50": {
        start: {
          line: 77,
          column: 32
        },
        end: {
          line: 77,
          column: 69
        }
      },
      "51": {
        start: {
          line: 78,
          column: 46
        },
        end: {
          line: 78,
          column: 72
        }
      },
      "52": {
        start: {
          line: 80,
          column: 26
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "53": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 69
        }
      },
      "54": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 92,
          column: 1311
        }
      },
      "55": {
        start: {
          line: 92,
          column: 856
        },
        end: {
          line: 92,
          column: 875
        }
      },
      "56": {
        start: {
          line: 92,
          column: 1101
        },
        end: {
          line: 92,
          column: 1126
        }
      },
      "57": {
        start: {
          line: 94,
          column: 0
        },
        end: {
          line: 94,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "randomDNA",
        decl: {
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 59,
            column: 18
          }
        },
        loc: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 59
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 61,
            column: 34
          },
          end: {
            line: 61,
            column: 35
          }
        },
        loc: {
          start: {
            line: 61,
            column: 40
          },
          end: {
            line: 61,
            column: 110
          }
        },
        line: 61
      },
      "11": {
        name: "randomTraits",
        decl: {
          start: {
            line: 63,
            column: 9
          },
          end: {
            line: 63,
            column: 21
          }
        },
        loc: {
          start: {
            line: 63,
            column: 24
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 63
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 75,
            column: 26
          },
          end: {
            line: 75,
            column: 27
          }
        },
        loc: {
          start: {
            line: 75,
            column: 32
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 75
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 80,
            column: 26
          },
          end: {
            line: 80,
            column: 27
          }
        },
        loc: {
          start: {
            line: 80,
            column: 39
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 80
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 92,
            column: 850
          },
          end: {
            line: 92,
            column: 851
          }
        },
        loc: {
          start: {
            line: 92,
            column: 856
          },
          end: {
            line: 92,
            column: 875
          }
        },
        line: 92
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 92,
            column: 1095
          },
          end: {
            line: 92,
            column: 1096
          }
        },
        loc: {
          start: {
            line: 92,
            column: 1101
          },
          end: {
            line: 92,
            column: 1126
          }
        },
        line: 92
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 59,
            column: 19
          },
          end: {
            line: 59,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 59,
            column: 30
          }
        }],
        line: 59
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/OrganismDashboard.tsx",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/OrganismDashboard.tsx"],
      sourcesContent: ["// src/ui/OrganismDashboard.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { OrganismViewer } from './OrganismViewer';\r\nimport { ConsciousnessGauge } from './ConsciousnessGauge';\r\nimport { TraitsRadarChart } from './TraitsRadarChart';\r\nimport { OrganismTraits } from '../types';\r\nimport { SecureRandom } from '../shared/utils/secureRandom';\n\r\n/**\r\n * OrganismDashboard - Dashboard principal de visualisation et contr\xF4le\r\n * - Affiche l'organisme, la jauge de conscience, le radar des traits\r\n * - Permet de muter l'ADN et de randomiser les traits\r\n */\r\nconst DEFAULT_TRAITS: OrganismTraits = {\r\n  curiosity: 0.7,\r\n  focus: 0.5,\r\n  rhythm: 0.6,\r\n  empathy: 0.4,\r\n  creativity: 0.8,\r\n  energy: 0.6,\r\n  harmony: 0.5,\r\n  wisdom: 0.2\r\n};\r\n\r\nfunction randomDNA(length = 16) {\r\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  return Array.from({ length }, () => chars[Math.floor(SecureRandom.random() * chars.length)]).join('');\r\n}\r\n\r\nfunction randomTraits(): OrganismTraits {\r\n  return {\r\n    curiosity: SecureRandom.random(),\r\n    focus: SecureRandom.random(),\r\n    rhythm: SecureRandom.random(),\r\n    empathy: SecureRandom.random(),\r\n    creativity: SecureRandom.random(),\r\n    energy: SecureRandom.random(),\r\n    harmony: SecureRandom.random(),\r\n    wisdom: SecureRandom.random()\r\n  };\r\n}\r\n\r\nexport const OrganismDashboard: React.FC = () => {\r\n  const [dna, setDNA] = useState(randomDNA());\r\n  const [traits, setTraits] = useState<OrganismTraits>(DEFAULT_TRAITS);\r\n  const [consciousness, setConsciousness] = useState(0.5);\r\n\r\n  // Callback pour recevoir les m\xE9triques (ex : ajuster la conscience)\r\n  const handleMetrics = (metrics: any) => {\r\n    // Exemple : conscience = FPS normalis\xE9 (\xE0 adapter selon logique r\xE9elle)\r\n    setConsciousness(Math.max(0, Math.min(1, metrics.fps / 60)));\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      gap: 24,\r\n      background: '#181c22',\r\n      minHeight: '100vh',\r\n      padding: 32\r\n    }}>\r\n      <h2 style={{ color: '#00e0ff', letterSpacing: 2, fontWeight: 700 }}>SYMBIONT Organism Dashboard</h2>\r\n      <div style={{ display: 'flex', gap: 40, alignItems: 'center' }}>\r\n        <OrganismViewer dna={dna} traits={traits} width={320} height={320} onMetrics={handleMetrics} />\r\n        <div style={{ display: 'flex', flexDirection: 'column', gap: 24, alignItems: 'center' }}>\r\n          <ConsciousnessGauge value={consciousness} />\r\n          <TraitsRadarChart traits={traits} />\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: 32, display: 'flex', gap: 16 }}>\r\n        <button\r\n          onClick={() => setDNA(randomDNA())}\r\n          style={{ padding: '8px 18px', borderRadius: 6, background: '#00e0ff', color: '#111', fontWeight: 600, border: 'none', cursor: 'pointer' }}\r\n        >\r\n          ADN al\xE9atoire\r\n        </button>\r\n        <button\r\n          onClick={() => setTraits(randomTraits())}\r\n          style={{ padding: '8px 18px', borderRadius: 6, background: '#222', color: '#fff', fontWeight: 600, border: 'none', cursor: 'pointer' }}\r\n        >\r\n          Traits al\xE9atoires\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "444664b17b6423aa2fa1ece83f303892d934d83f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10h0lsa8km = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10h0lsa8km();
var __createBinding =
/* istanbul ignore next */
(cov_10h0lsa8km().s[0]++,
/* istanbul ignore next */
(cov_10h0lsa8km().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_10h0lsa8km().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_10h0lsa8km().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_10h0lsa8km().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_10h0lsa8km().f[0]++;
  cov_10h0lsa8km().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_10h0lsa8km().b[2][0]++;
    cov_10h0lsa8km().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_10h0lsa8km().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_10h0lsa8km().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_10h0lsa8km().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_10h0lsa8km().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_10h0lsa8km().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_10h0lsa8km().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_10h0lsa8km().b[5][1]++,
  /* istanbul ignore next */
  (cov_10h0lsa8km().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_10h0lsa8km().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_10h0lsa8km().b[3][0]++;
    cov_10h0lsa8km().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_10h0lsa8km().f[1]++;
        cov_10h0lsa8km().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_10h0lsa8km().b[3][1]++;
  }
  cov_10h0lsa8km().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_10h0lsa8km().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_10h0lsa8km().f[2]++;
  cov_10h0lsa8km().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_10h0lsa8km().b[7][0]++;
    cov_10h0lsa8km().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_10h0lsa8km().b[7][1]++;
  }
  cov_10h0lsa8km().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_10h0lsa8km().s[11]++,
/* istanbul ignore next */
(cov_10h0lsa8km().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_10h0lsa8km().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_10h0lsa8km().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_10h0lsa8km().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_10h0lsa8km().f[3]++;
  cov_10h0lsa8km().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_10h0lsa8km().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_10h0lsa8km().f[4]++;
  cov_10h0lsa8km().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_10h0lsa8km().s[14]++,
/* istanbul ignore next */
(cov_10h0lsa8km().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_10h0lsa8km().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_10h0lsa8km().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_10h0lsa8km().f[5]++;
  cov_10h0lsa8km().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_10h0lsa8km().f[6]++;
    cov_10h0lsa8km().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_10h0lsa8km().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_10h0lsa8km().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_10h0lsa8km().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_10h0lsa8km().s[17]++, []);
      /* istanbul ignore next */
      cov_10h0lsa8km().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_10h0lsa8km().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_10h0lsa8km().b[12][0]++;
          cov_10h0lsa8km().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_10h0lsa8km().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_10h0lsa8km().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_10h0lsa8km().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_10h0lsa8km().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_10h0lsa8km().f[8]++;
    cov_10h0lsa8km().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_10h0lsa8km().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_10h0lsa8km().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_10h0lsa8km().b[13][0]++;
      cov_10h0lsa8km().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_10h0lsa8km().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_10h0lsa8km().s[26]++, {});
    /* istanbul ignore next */
    cov_10h0lsa8km().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_10h0lsa8km().b[15][0]++;
      cov_10h0lsa8km().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_10h0lsa8km().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_10h0lsa8km().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_10h0lsa8km().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_10h0lsa8km().b[16][0]++;
          cov_10h0lsa8km().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_10h0lsa8km().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_10h0lsa8km().b[15][1]++;
    }
    cov_10h0lsa8km().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_10h0lsa8km().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_10h0lsa8km().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_10h0lsa8km().s[36]++;
exports.OrganismDashboard = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_10h0lsa8km().s[37]++, require("react/jsx-runtime"));
// src/ui/OrganismDashboard.tsx
const react_1 =
/* istanbul ignore next */
(cov_10h0lsa8km().s[38]++, __importStar(require("react")));
const OrganismViewer_1 =
/* istanbul ignore next */
(cov_10h0lsa8km().s[39]++, require("./OrganismViewer"));
const ConsciousnessGauge_1 =
/* istanbul ignore next */
(cov_10h0lsa8km().s[40]++, require("./ConsciousnessGauge"));
const TraitsRadarChart_1 =
/* istanbul ignore next */
(cov_10h0lsa8km().s[41]++, require("./TraitsRadarChart"));
const secureRandom_1 =
/* istanbul ignore next */
(cov_10h0lsa8km().s[42]++, require("../shared/utils/secureRandom"));
/**
 * OrganismDashboard - Dashboard principal de visualisation et contrôle
 * - Affiche l'organisme, la jauge de conscience, le radar des traits
 * - Permet de muter l'ADN et de randomiser les traits
 */
const DEFAULT_TRAITS =
/* istanbul ignore next */
(cov_10h0lsa8km().s[43]++, {
  curiosity: 0.7,
  focus: 0.5,
  rhythm: 0.6,
  empathy: 0.4,
  creativity: 0.8,
  energy: 0.6,
  harmony: 0.5,
  wisdom: 0.2
});
function randomDNA(length =
/* istanbul ignore next */
(cov_10h0lsa8km().b[17][0]++, 16)) {
  /* istanbul ignore next */
  cov_10h0lsa8km().f[9]++;
  const chars =
  /* istanbul ignore next */
  (cov_10h0lsa8km().s[44]++, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789');
  /* istanbul ignore next */
  cov_10h0lsa8km().s[45]++;
  return Array.from({
    length
  }, () => {
    /* istanbul ignore next */
    cov_10h0lsa8km().f[10]++;
    cov_10h0lsa8km().s[46]++;
    return chars[Math.floor(secureRandom_1.SecureRandom.random() * chars.length)];
  }).join('');
}
function randomTraits() {
  /* istanbul ignore next */
  cov_10h0lsa8km().f[11]++;
  cov_10h0lsa8km().s[47]++;
  return {
    curiosity: secureRandom_1.SecureRandom.random(),
    focus: secureRandom_1.SecureRandom.random(),
    rhythm: secureRandom_1.SecureRandom.random(),
    empathy: secureRandom_1.SecureRandom.random(),
    creativity: secureRandom_1.SecureRandom.random(),
    energy: secureRandom_1.SecureRandom.random(),
    harmony: secureRandom_1.SecureRandom.random(),
    wisdom: secureRandom_1.SecureRandom.random()
  };
}
/* istanbul ignore next */
cov_10h0lsa8km().s[48]++;
const OrganismDashboard = () => {
  /* istanbul ignore next */
  cov_10h0lsa8km().f[12]++;
  const [dna, setDNA] =
  /* istanbul ignore next */
  (cov_10h0lsa8km().s[49]++, (0, react_1.useState)(randomDNA()));
  const [traits, setTraits] =
  /* istanbul ignore next */
  (cov_10h0lsa8km().s[50]++, (0, react_1.useState)(DEFAULT_TRAITS));
  const [consciousness, setConsciousness] =
  /* istanbul ignore next */
  (cov_10h0lsa8km().s[51]++, (0, react_1.useState)(0.5));
  // Callback pour recevoir les métriques (ex : ajuster la conscience)
  /* istanbul ignore next */
  cov_10h0lsa8km().s[52]++;
  const handleMetrics = metrics => {
    /* istanbul ignore next */
    cov_10h0lsa8km().f[13]++;
    cov_10h0lsa8km().s[53]++;
    // Exemple : conscience = FPS normalisé (à adapter selon logique réelle)
    setConsciousness(Math.max(0, Math.min(1, metrics.fps / 60)));
  };
  /* istanbul ignore next */
  cov_10h0lsa8km().s[54]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    style: {
      display: 'flex',
      flexDirection: 'column',
      alignItems: 'center',
      gap: 24,
      background: '#181c22',
      minHeight: '100vh',
      padding: 32
    },
    children: [(0, jsx_runtime_1.jsx)("h2", {
      style: {
        color: '#00e0ff',
        letterSpacing: 2,
        fontWeight: 700
      },
      children: "SYMBIONT Organism Dashboard"
    }), (0, jsx_runtime_1.jsxs)("div", {
      style: {
        display: 'flex',
        gap: 40,
        alignItems: 'center'
      },
      children: [(0, jsx_runtime_1.jsx)(OrganismViewer_1.OrganismViewer, {
        dna: dna,
        traits: traits,
        width: 320,
        height: 320,
        onMetrics: handleMetrics
      }), (0, jsx_runtime_1.jsxs)("div", {
        style: {
          display: 'flex',
          flexDirection: 'column',
          gap: 24,
          alignItems: 'center'
        },
        children: [(0, jsx_runtime_1.jsx)(ConsciousnessGauge_1.ConsciousnessGauge, {
          value: consciousness
        }), (0, jsx_runtime_1.jsx)(TraitsRadarChart_1.TraitsRadarChart, {
          traits: traits
        })]
      })]
    }), (0, jsx_runtime_1.jsxs)("div", {
      style: {
        marginTop: 32,
        display: 'flex',
        gap: 16
      },
      children: [(0, jsx_runtime_1.jsx)("button", {
        onClick: () => {
          /* istanbul ignore next */
          cov_10h0lsa8km().f[14]++;
          cov_10h0lsa8km().s[55]++;
          return setDNA(randomDNA());
        },
        style: {
          padding: '8px 18px',
          borderRadius: 6,
          background: '#00e0ff',
          color: '#111',
          fontWeight: 600,
          border: 'none',
          cursor: 'pointer'
        },
        children: "ADN al\u00E9atoire"
      }), (0, jsx_runtime_1.jsx)("button", {
        onClick: () => {
          /* istanbul ignore next */
          cov_10h0lsa8km().f[15]++;
          cov_10h0lsa8km().s[56]++;
          return setTraits(randomTraits());
        },
        style: {
          padding: '8px 18px',
          borderRadius: 6,
          background: '#222',
          color: '#fff',
          fontWeight: 600,
          border: 'none',
          cursor: 'pointer'
        },
        children: "Traits al\u00E9atoires"
      })]
    })]
  });
};
/* istanbul ignore next */
cov_10h0lsa8km().s[57]++;
exports.OrganismDashboard = OrganismDashboard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZWFjdF8xIiwiY292XzEwaDBsc2E4a20iLCJzIiwiX19pbXBvcnRTdGFyIiwicmVxdWlyZSIsIk9yZ2FuaXNtVmlld2VyXzEiLCJDb25zY2lvdXNuZXNzR2F1Z2VfMSIsIlRyYWl0c1JhZGFyQ2hhcnRfMSIsInNlY3VyZVJhbmRvbV8xIiwiREVGQVVMVF9UUkFJVFMiLCJjdXJpb3NpdHkiLCJmb2N1cyIsInJoeXRobSIsImVtcGF0aHkiLCJjcmVhdGl2aXR5IiwiZW5lcmd5IiwiaGFybW9ueSIsIndpc2RvbSIsInJhbmRvbUROQSIsImxlbmd0aCIsImIiLCJmIiwiY2hhcnMiLCJBcnJheSIsImZyb20iLCJNYXRoIiwiZmxvb3IiLCJTZWN1cmVSYW5kb20iLCJyYW5kb20iLCJqb2luIiwicmFuZG9tVHJhaXRzIiwiT3JnYW5pc21EYXNoYm9hcmQiLCJkbmEiLCJzZXRETkEiLCJ1c2VTdGF0ZSIsInRyYWl0cyIsInNldFRyYWl0cyIsImNvbnNjaW91c25lc3MiLCJzZXRDb25zY2lvdXNuZXNzIiwiaGFuZGxlTWV0cmljcyIsIm1ldHJpY3MiLCJtYXgiLCJtaW4iLCJmcHMiLCJqc3hfcnVudGltZV8xIiwianN4cyIsInN0eWxlIiwiZGlzcGxheSIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwiZ2FwIiwiYmFja2dyb3VuZCIsIm1pbkhlaWdodCIsInBhZGRpbmciLCJjaGlsZHJlbiIsImpzeCIsImNvbG9yIiwibGV0dGVyU3BhY2luZyIsImZvbnRXZWlnaHQiLCJPcmdhbmlzbVZpZXdlciIsIndpZHRoIiwiaGVpZ2h0Iiwib25NZXRyaWNzIiwiQ29uc2Npb3VzbmVzc0dhdWdlIiwidmFsdWUiLCJUcmFpdHNSYWRhckNoYXJ0IiwibWFyZ2luVG9wIiwib25DbGljayIsImJvcmRlclJhZGl1cyIsImJvcmRlciIsImN1cnNvciIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvbW50L2MvVXNlcnMvbV9vbGkvUHJvamV0cy9TWU1CSU9OVC9zcmMvdWkvT3JnYW5pc21EYXNoYm9hcmQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy91aS9PcmdhbmlzbURhc2hib2FyZC50c3hcclxuXHJcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgT3JnYW5pc21WaWV3ZXIgfSBmcm9tICcuL09yZ2FuaXNtVmlld2VyJztcclxuaW1wb3J0IHsgQ29uc2Npb3VzbmVzc0dhdWdlIH0gZnJvbSAnLi9Db25zY2lvdXNuZXNzR2F1Z2UnO1xyXG5pbXBvcnQgeyBUcmFpdHNSYWRhckNoYXJ0IH0gZnJvbSAnLi9UcmFpdHNSYWRhckNoYXJ0JztcclxuaW1wb3J0IHsgT3JnYW5pc21UcmFpdHMgfSBmcm9tICcuLi90eXBlcyc7XHJcbmltcG9ydCB7IFNlY3VyZVJhbmRvbSB9IGZyb20gJy4uL3NoYXJlZC91dGlscy9zZWN1cmVSYW5kb20nO1xuXHJcbi8qKlxyXG4gKiBPcmdhbmlzbURhc2hib2FyZCAtIERhc2hib2FyZCBwcmluY2lwYWwgZGUgdmlzdWFsaXNhdGlvbiBldCBjb250csO0bGVcclxuICogLSBBZmZpY2hlIGwnb3JnYW5pc21lLCBsYSBqYXVnZSBkZSBjb25zY2llbmNlLCBsZSByYWRhciBkZXMgdHJhaXRzXHJcbiAqIC0gUGVybWV0IGRlIG11dGVyIGwnQUROIGV0IGRlIHJhbmRvbWlzZXIgbGVzIHRyYWl0c1xyXG4gKi9cclxuY29uc3QgREVGQVVMVF9UUkFJVFM6IE9yZ2FuaXNtVHJhaXRzID0ge1xyXG4gIGN1cmlvc2l0eTogMC43LFxyXG4gIGZvY3VzOiAwLjUsXHJcbiAgcmh5dGhtOiAwLjYsXHJcbiAgZW1wYXRoeTogMC40LFxyXG4gIGNyZWF0aXZpdHk6IDAuOCxcclxuICBlbmVyZ3k6IDAuNixcclxuICBoYXJtb255OiAwLjUsXHJcbiAgd2lzZG9tOiAwLjJcclxufTtcclxuXHJcbmZ1bmN0aW9uIHJhbmRvbUROQShsZW5ndGggPSAxNikge1xyXG4gIGNvbnN0IGNoYXJzID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMDEyMzQ1Njc4OSc7XHJcbiAgcmV0dXJuIEFycmF5LmZyb20oeyBsZW5ndGggfSwgKCkgPT4gY2hhcnNbTWF0aC5mbG9vcihTZWN1cmVSYW5kb20ucmFuZG9tKCkgKiBjaGFycy5sZW5ndGgpXSkuam9pbignJyk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJhbmRvbVRyYWl0cygpOiBPcmdhbmlzbVRyYWl0cyB7XHJcbiAgcmV0dXJuIHtcclxuICAgIGN1cmlvc2l0eTogU2VjdXJlUmFuZG9tLnJhbmRvbSgpLFxyXG4gICAgZm9jdXM6IFNlY3VyZVJhbmRvbS5yYW5kb20oKSxcclxuICAgIHJoeXRobTogU2VjdXJlUmFuZG9tLnJhbmRvbSgpLFxyXG4gICAgZW1wYXRoeTogU2VjdXJlUmFuZG9tLnJhbmRvbSgpLFxyXG4gICAgY3JlYXRpdml0eTogU2VjdXJlUmFuZG9tLnJhbmRvbSgpLFxyXG4gICAgZW5lcmd5OiBTZWN1cmVSYW5kb20ucmFuZG9tKCksXHJcbiAgICBoYXJtb255OiBTZWN1cmVSYW5kb20ucmFuZG9tKCksXHJcbiAgICB3aXNkb206IFNlY3VyZVJhbmRvbS5yYW5kb20oKVxyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBPcmdhbmlzbURhc2hib2FyZDogUmVhY3QuRkMgPSAoKSA9PiB7XHJcbiAgY29uc3QgW2RuYSwgc2V0RE5BXSA9IHVzZVN0YXRlKHJhbmRvbUROQSgpKTtcclxuICBjb25zdCBbdHJhaXRzLCBzZXRUcmFpdHNdID0gdXNlU3RhdGU8T3JnYW5pc21UcmFpdHM+KERFRkFVTFRfVFJBSVRTKTtcclxuICBjb25zdCBbY29uc2Npb3VzbmVzcywgc2V0Q29uc2Npb3VzbmVzc10gPSB1c2VTdGF0ZSgwLjUpO1xyXG5cclxuICAvLyBDYWxsYmFjayBwb3VyIHJlY2V2b2lyIGxlcyBtw6l0cmlxdWVzIChleCA6IGFqdXN0ZXIgbGEgY29uc2NpZW5jZSlcclxuICBjb25zdCBoYW5kbGVNZXRyaWNzID0gKG1ldHJpY3M6IGFueSkgPT4ge1xyXG4gICAgLy8gRXhlbXBsZSA6IGNvbnNjaWVuY2UgPSBGUFMgbm9ybWFsaXPDqSAow6AgYWRhcHRlciBzZWxvbiBsb2dpcXVlIHLDqWVsbGUpXHJcbiAgICBzZXRDb25zY2lvdXNuZXNzKE1hdGgubWF4KDAsIE1hdGgubWluKDEsIG1ldHJpY3MuZnBzIC8gNjApKSk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgc3R5bGU9e3tcclxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxyXG4gICAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcclxuICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXHJcbiAgICAgIGdhcDogMjQsXHJcbiAgICAgIGJhY2tncm91bmQ6ICcjMTgxYzIyJyxcclxuICAgICAgbWluSGVpZ2h0OiAnMTAwdmgnLFxyXG4gICAgICBwYWRkaW5nOiAzMlxyXG4gICAgfX0+XHJcbiAgICAgIDxoMiBzdHlsZT17eyBjb2xvcjogJyMwMGUwZmYnLCBsZXR0ZXJTcGFjaW5nOiAyLCBmb250V2VpZ2h0OiA3MDAgfX0+U1lNQklPTlQgT3JnYW5pc20gRGFzaGJvYXJkPC9oMj5cclxuICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIGdhcDogNDAsIGFsaWduSXRlbXM6ICdjZW50ZXInIH19PlxyXG4gICAgICAgIDxPcmdhbmlzbVZpZXdlciBkbmE9e2RuYX0gdHJhaXRzPXt0cmFpdHN9IHdpZHRoPXszMjB9IGhlaWdodD17MzIwfSBvbk1ldHJpY3M9e2hhbmRsZU1ldHJpY3N9IC8+XHJcbiAgICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLCBnYXA6IDI0LCBhbGlnbkl0ZW1zOiAnY2VudGVyJyB9fT5cclxuICAgICAgICAgIDxDb25zY2lvdXNuZXNzR2F1Z2UgdmFsdWU9e2NvbnNjaW91c25lc3N9IC8+XHJcbiAgICAgICAgICA8VHJhaXRzUmFkYXJDaGFydCB0cmFpdHM9e3RyYWl0c30gLz5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9kaXY+XHJcbiAgICAgIDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAzMiwgZGlzcGxheTogJ2ZsZXgnLCBnYXA6IDE2IH19PlxyXG4gICAgICAgIDxidXR0b25cclxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldEROQShyYW5kb21ETkEoKSl9XHJcbiAgICAgICAgICBzdHlsZT17eyBwYWRkaW5nOiAnOHB4IDE4cHgnLCBib3JkZXJSYWRpdXM6IDYsIGJhY2tncm91bmQ6ICcjMDBlMGZmJywgY29sb3I6ICcjMTExJywgZm9udFdlaWdodDogNjAwLCBib3JkZXI6ICdub25lJywgY3Vyc29yOiAncG9pbnRlcicgfX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICBBRE4gYWzDqWF0b2lyZVxyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgIDxidXR0b25cclxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFRyYWl0cyhyYW5kb21UcmFpdHMoKSl9XHJcbiAgICAgICAgICBzdHlsZT17eyBwYWRkaW5nOiAnOHB4IDE4cHgnLCBib3JkZXJSYWRpdXM6IDYsIGJhY2tncm91bmQ6ICcjMjIyJywgY29sb3I6ICcjZmZmJywgZm9udFdlaWdodDogNjAwLCBib3JkZXI6ICdub25lJywgY3Vyc29yOiAncG9pbnRlcicgfX1cclxuICAgICAgICA+XHJcbiAgICAgICAgICBUcmFpdHMgYWzDqWF0b2lyZXNcclxuICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59OyAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBRUEsTUFBQUEsT0FBQTtBQUFBO0FBQUEs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