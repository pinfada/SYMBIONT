38ec37cf3febcb2368789ac8835926da
"use strict";

/* istanbul ignore next */
function cov_g66crfv1p() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/BehavioralEngine.ts";
  var hash = "e18ec9a1f90376447eb140a78431e97ad36c0086";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/BehavioralEngine.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "2": {
        start: {
          line: 5,
          column: 26
        },
        end: {
          line: 5,
          column: 54
        }
      },
      "3": {
        start: {
          line: 6,
          column: 28
        },
        end: {
          line: 6,
          column: 58
        }
      },
      "4": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 60
        }
      },
      "5": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 64
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 64
        }
      },
      "8": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 69
        }
      },
      "9": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "10": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 33
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "12": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 63
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "14": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "15": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "16": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 61
        }
      },
      "17": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "18": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 54,
          column: 10
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 62,
          column: 10
        }
      },
      "20": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 65,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 16
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 25
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 29
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 26
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 46
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 14
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 56
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/BehavioralEngine.ts",
      mappings: ";;;AAAA,mCAAmC;AACnC,uDAAoD;AACpD,2DAAwD;AAExD,6DAA0D;AAE1D,MAAM,cAAc;IAClB,sDAAsD;IACtD,KAAK,CAAC,IAAS;QACb,sBAAsB;QACtB,2BAAY,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACzC,CAAC;CACF;AAED,MAAa,gBAAgB;IAW3B;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,iCAAe,EAAE,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,iCAAe,EAAE,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,qCAAiB,EAAE,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;QAEzB,gDAAgD;IAClD,CAAC;IAEM,MAAM,CAAC,WAAW;QACvB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;YAC/B,gBAAgB,CAAC,QAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAC;QACrD,CAAC;QACD,OAAO,gBAAgB,CAAC,QAAQ,CAAC;IACnC,CAAC;IAEM,KAAK,CAAC,eAAe,CAAC,KAAsB;QACjD,yCAAyC;QACzC,OAAO;YACL,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,SAAS;YAClB,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAEM,iBAAiB,CAAC,KAAsB;QAC7C,2BAA2B;QAC3B,OAAO;YACL,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,SAAS;YAClB,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,IAAS;QACvB,wBAAwB;QACxB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACtD,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAElD,OAAO;YACL,OAAO;YACP,UAAU;YACV,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;SACtB,CAAC;IACJ,CAAC;IAED,OAAO;QACL,sBAAsB;QACtB,OAAO;YACL,KAAK,EAAE,GAAG;YACV,OAAO,EAAE,SAAS;YAClB,OAAO,EAAE,EAAE;SACZ,CAAC;IACJ,CAAC;CAGF;AApED,4CAoEC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/BehavioralEngine.ts"],
      sourcesContent: ["// Moteur d'analyse comportementale\r\nimport { PatternAnalyzer } from './PatternAnalyzer';\r\nimport { BehaviorPredictor } from './BehaviorPredictor';\r\nimport { BehaviorAnalysis, NavigationEvent } from '../../types/behavioral';\r\nimport { SecureLogger } from '@shared/utils/secureLogger';\n\r\nclass SessionTracker {\r\n  // @ts-expect-error Param\xE8tre r\xE9serv\xE9 pour usage futur\r\n  track(data: any): void {\r\n    // Simplified tracking\r\n    SecureLogger.info('Tracking behavior');\r\n  }\r\n}\r\n\r\nexport class BehavioralEngine {\r\n  private static instance: BehavioralEngine;\r\n  // @ts-expect-error Propri\xE9t\xE9 r\xE9serv\xE9e pour usage futur\r\n  private patterns: PatternAnalyzer;\r\n  private analyzer: PatternAnalyzer;\r\n  private predictor: BehaviorPredictor;\r\n  // @ts-expect-error Propri\xE9t\xE9 r\xE9serv\xE9e pour usage futur\r\n  private sessionTracker: SessionTracker;\r\n  // @ts-expect-error Propri\xE9t\xE9 r\xE9serv\xE9e pour usage futur\r\n  private storage: Map<string, any>;\r\n  \r\n  private constructor() {\r\n    this.patterns = new PatternAnalyzer();\r\n    this.analyzer = new PatternAnalyzer();\r\n    this.predictor = new BehaviorPredictor();\r\n    this.sessionTracker = new SessionTracker();\r\n    this.storage = new Map();\r\n    \r\n    // this.initialize(); // TODO: M\xE9thode manquante\r\n  }\r\n  \r\n  public static getInstance(): BehavioralEngine {\r\n    if (!BehavioralEngine.instance) {\r\n      BehavioralEngine.instance = new BehavioralEngine();\r\n    }\r\n    return BehavioralEngine.instance;\r\n  }\r\n  \r\n  public async analyzeBehavior(event: NavigationEvent): Promise<BehaviorAnalysis> {\r\n    // Code d'analyse comportementale factice\r\n    return {\r\n      score: 1,\r\n      pattern: 'default',\r\n      details: event\r\n    };\r\n  }\r\n\r\n  public analyzeNavigation(event: NavigationEvent): BehaviorAnalysis {\r\n    // Exemple d'analyse simple\r\n    return {\r\n      score: 1,\r\n      pattern: 'default',\r\n      details: event\r\n    };\r\n  }\r\n\r\n  processBehavior(data: any): any {\r\n    // Process behavior data\r\n    const pattern = this.analyzer.analyzeBehavior([data]);\r\n    const prediction = this.predictor.predict([data]);\r\n    \r\n    return {\r\n      pattern,\r\n      prediction,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n\r\n  analyze(): BehaviorAnalysis {\r\n    // Simplified analysis\r\n    return { \r\n      score: 0.5, \r\n      pattern: 'default',\r\n      details: {}\r\n    };\r\n  }\r\n\r\n  // Suite de l'impl\xE9mentation...\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e18ec9a1f90376447eb140a78431e97ad36c0086"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_g66crfv1p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_g66crfv1p();
cov_g66crfv1p().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_g66crfv1p().s[1]++;
exports.BehavioralEngine = void 0;
// Moteur d'analyse comportementale
const PatternAnalyzer_1 =
/* istanbul ignore next */
(cov_g66crfv1p().s[2]++, require("./PatternAnalyzer"));
const BehaviorPredictor_1 =
/* istanbul ignore next */
(cov_g66crfv1p().s[3]++, require("./BehaviorPredictor"));
const secureLogger_1 =
/* istanbul ignore next */
(cov_g66crfv1p().s[4]++, require("@shared/utils/secureLogger"));
class SessionTracker {
  // @ts-expect-error Paramètre réservé pour usage futur
  track(data) {
    /* istanbul ignore next */
    cov_g66crfv1p().f[0]++;
    cov_g66crfv1p().s[5]++;
    // Simplified tracking
    secureLogger_1.SecureLogger.info('Tracking behavior');
  }
}
class BehavioralEngine {
  constructor() {
    /* istanbul ignore next */
    cov_g66crfv1p().f[1]++;
    cov_g66crfv1p().s[6]++;
    this.patterns = new PatternAnalyzer_1.PatternAnalyzer();
    /* istanbul ignore next */
    cov_g66crfv1p().s[7]++;
    this.analyzer = new PatternAnalyzer_1.PatternAnalyzer();
    /* istanbul ignore next */
    cov_g66crfv1p().s[8]++;
    this.predictor = new BehaviorPredictor_1.BehaviorPredictor();
    /* istanbul ignore next */
    cov_g66crfv1p().s[9]++;
    this.sessionTracker = new SessionTracker();
    /* istanbul ignore next */
    cov_g66crfv1p().s[10]++;
    this.storage = new Map();
    // this.initialize(); // TODO: Méthode manquante
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_g66crfv1p().f[2]++;
    cov_g66crfv1p().s[11]++;
    if (!BehavioralEngine.instance) {
      /* istanbul ignore next */
      cov_g66crfv1p().b[0][0]++;
      cov_g66crfv1p().s[12]++;
      BehavioralEngine.instance = new BehavioralEngine();
    } else
    /* istanbul ignore next */
    {
      cov_g66crfv1p().b[0][1]++;
    }
    cov_g66crfv1p().s[13]++;
    return BehavioralEngine.instance;
  }
  async analyzeBehavior(event) {
    /* istanbul ignore next */
    cov_g66crfv1p().f[3]++;
    cov_g66crfv1p().s[14]++;
    // Code d'analyse comportementale factice
    return {
      score: 1,
      pattern: 'default',
      details: event
    };
  }
  analyzeNavigation(event) {
    /* istanbul ignore next */
    cov_g66crfv1p().f[4]++;
    cov_g66crfv1p().s[15]++;
    // Exemple d'analyse simple
    return {
      score: 1,
      pattern: 'default',
      details: event
    };
  }
  processBehavior(data) {
    /* istanbul ignore next */
    cov_g66crfv1p().f[5]++;
    // Process behavior data
    const pattern =
    /* istanbul ignore next */
    (cov_g66crfv1p().s[16]++, this.analyzer.analyzeBehavior([data]));
    const prediction =
    /* istanbul ignore next */
    (cov_g66crfv1p().s[17]++, this.predictor.predict([data]));
    /* istanbul ignore next */
    cov_g66crfv1p().s[18]++;
    return {
      pattern,
      prediction,
      timestamp: Date.now()
    };
  }
  analyze() {
    /* istanbul ignore next */
    cov_g66crfv1p().f[6]++;
    cov_g66crfv1p().s[19]++;
    // Simplified analysis
    return {
      score: 0.5,
      pattern: 'default',
      details: {}
    };
  }
}
/* istanbul ignore next */
cov_g66crfv1p().s[20]++;
exports.BehavioralEngine = BehavioralEngine;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZzY2Y3JmdjFwIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiUGF0dGVybkFuYWx5emVyXzEiLCJyZXF1aXJlIiwiQmVoYXZpb3JQcmVkaWN0b3JfMSIsInNlY3VyZUxvZ2dlcl8xIiwiU2Vzc2lvblRyYWNrZXIiLCJ0cmFjayIsImRhdGEiLCJmIiwiU2VjdXJlTG9nZ2VyIiwiaW5mbyIsIkJlaGF2aW9yYWxFbmdpbmUiLCJjb25zdHJ1Y3RvciIsInBhdHRlcm5zIiwiUGF0dGVybkFuYWx5emVyIiwiYW5hbHl6ZXIiLCJwcmVkaWN0b3IiLCJCZWhhdmlvclByZWRpY3RvciIsInNlc3Npb25UcmFja2VyIiwic3RvcmFnZSIsIk1hcCIsImdldEluc3RhbmNlIiwiaW5zdGFuY2UiLCJiIiwiYW5hbHl6ZUJlaGF2aW9yIiwiZXZlbnQiLCJzY29yZSIsInBhdHRlcm4iLCJkZXRhaWxzIiwiYW5hbHl6ZU5hdmlnYXRpb24iLCJwcm9jZXNzQmVoYXZpb3IiLCJwcmVkaWN0aW9uIiwicHJlZGljdCIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJhbmFseXplIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi9tbnQvYy9Vc2Vycy9tX29saS9Qcm9qZXRzL1NZTUJJT05UL3NyYy9iZWhhdmlvcmFsL2NvcmUvQmVoYXZpb3JhbEVuZ2luZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNb3RldXIgZCdhbmFseXNlIGNvbXBvcnRlbWVudGFsZVxyXG5pbXBvcnQgeyBQYXR0ZXJuQW5hbHl6ZXIgfSBmcm9tICcuL1BhdHRlcm5BbmFseXplcic7XHJcbmltcG9ydCB7IEJlaGF2aW9yUHJlZGljdG9yIH0gZnJvbSAnLi9CZWhhdmlvclByZWRpY3Rvcic7XHJcbmltcG9ydCB7IEJlaGF2aW9yQW5hbHlzaXMsIE5hdmlnYXRpb25FdmVudCB9IGZyb20gJy4uLy4uL3R5cGVzL2JlaGF2aW9yYWwnO1xyXG5pbXBvcnQgeyBTZWN1cmVMb2dnZXIgfSBmcm9tICdAc2hhcmVkL3V0aWxzL3NlY3VyZUxvZ2dlcic7XG5cclxuY2xhc3MgU2Vzc2lvblRyYWNrZXIge1xyXG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgUGFyYW3DqHRyZSByw6lzZXJ2w6kgcG91ciB1c2FnZSBmdXR1clxyXG4gIHRyYWNrKGRhdGE6IGFueSk6IHZvaWQge1xyXG4gICAgLy8gU2ltcGxpZmllZCB0cmFja2luZ1xyXG4gICAgU2VjdXJlTG9nZ2VyLmluZm8oJ1RyYWNraW5nIGJlaGF2aW9yJyk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQmVoYXZpb3JhbEVuZ2luZSB7XHJcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IEJlaGF2aW9yYWxFbmdpbmU7XHJcbiAgLy8gQHRzLWV4cGVjdC1lcnJvciBQcm9wcmnDqXTDqSByw6lzZXJ2w6llIHBvdXIgdXNhZ2UgZnV0dXJcclxuICBwcml2YXRlIHBhdHRlcm5zOiBQYXR0ZXJuQW5hbHl6ZXI7XHJcbiAgcHJpdmF0ZSBhbmFseXplcjogUGF0dGVybkFuYWx5emVyO1xyXG4gIHByaXZhdGUgcHJlZGljdG9yOiBCZWhhdmlvclByZWRpY3RvcjtcclxuICAvLyBAdHMtZXhwZWN0LWVycm9yIFByb3ByacOpdMOpIHLDqXNlcnbDqWUgcG91ciB1c2FnZSBmdXR1clxyXG4gIHByaXZhdGUgc2Vzc2lvblRyYWNrZXI6IFNlc3Npb25UcmFja2VyO1xyXG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgUHJvcHJpw6l0w6kgcsOpc2VydsOpZSBwb3VyIHVzYWdlIGZ1dHVyXHJcbiAgcHJpdmF0ZSBzdG9yYWdlOiBNYXA8c3RyaW5nLCBhbnk+O1xyXG4gIFxyXG4gIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLnBhdHRlcm5zID0gbmV3IFBhdHRlcm5BbmFseXplcigpO1xyXG4gICAgdGhpcy5hbmFseXplciA9IG5ldyBQYXR0ZXJuQW5hbHl6ZXIoKTtcclxuICAgIHRoaXMucHJlZGljdG9yID0gbmV3IEJlaGF2aW9yUHJlZGljdG9yKCk7XHJcbiAgICB0aGlzLnNlc3Npb25UcmFja2VyID0gbmV3IFNlc3Npb25UcmFja2VyKCk7XHJcbiAgICB0aGlzLnN0b3JhZ2UgPSBuZXcgTWFwKCk7XHJcbiAgICBcclxuICAgIC8vIHRoaXMuaW5pdGlhbGl6ZSgpOyAvLyBUT0RPOiBNw6l0aG9kZSBtYW5xdWFudGVcclxuICB9XHJcbiAgXHJcbiAgcHVibGljIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBCZWhhdmlvcmFsRW5naW5lIHtcclxuICAgIGlmICghQmVoYXZpb3JhbEVuZ2luZS5pbnN0YW5jZSkge1xyXG4gICAgICBCZWhhdmlvcmFsRW5naW5lLmluc3RhbmNlID0gbmV3IEJlaGF2aW9yYWxFbmdpbmUoKTtcclxuICAgIH1cclxuICAgIHJldHVybiBCZWhhdmlvcmFsRW5naW5lLmluc3RhbmNlO1xyXG4gIH1cclxuICBcclxuICBwdWJsaWMgYXN5bmMgYW5hbHl6ZUJlaGF2aW9yKGV2ZW50OiBOYXZpZ2F0aW9uRXZlbnQpOiBQcm9taXNlPEJlaGF2aW9yQW5hbHlzaXM+IHtcclxuICAgIC8vIENvZGUgZCdhbmFseXNlIGNvbXBvcnRlbWVudGFsZSBmYWN0aWNlXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBzY29yZTogMSxcclxuICAgICAgcGF0dGVybjogJ2RlZmF1bHQnLFxyXG4gICAgICBkZXRhaWxzOiBldmVudFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBhbmFseXplTmF2aWdhdGlvbihldmVudDogTmF2aWdhdGlvbkV2ZW50KTogQmVoYXZpb3JBbmFseXNpcyB7XHJcbiAgICAvLyBFeGVtcGxlIGQnYW5hbHlzZSBzaW1wbGVcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHNjb3JlOiAxLFxyXG4gICAgICBwYXR0ZXJuOiAnZGVmYXVsdCcsXHJcbiAgICAgIGRldGFpbHM6IGV2ZW50XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHJvY2Vzc0JlaGF2aW9yKGRhdGE6IGFueSk6IGFueSB7XHJcbiAgICAvLyBQcm9jZXNzIGJlaGF2aW9yIGRhdGFcclxuICAgIGNvbnN0IHBhdHRlcm4gPSB0aGlzLmFuYWx5emVyLmFuYWx5emVCZWhhdmlvcihbZGF0YV0pO1xyXG4gICAgY29uc3QgcHJlZGljdGlvbiA9IHRoaXMucHJlZGljdG9yLnByZWRpY3QoW2RhdGFdKTtcclxuICAgIFxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcGF0dGVybixcclxuICAgICAgcHJlZGljdGlvbixcclxuICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgYW5hbHl6ZSgpOiBCZWhhdmlvckFuYWx5c2lzIHtcclxuICAgIC8vIFNpbXBsaWZpZWQgYW5hbHlzaXNcclxuICAgIHJldHVybiB7IFxyXG4gICAgICBzY29yZTogMC41LCBcclxuICAgICAgcGF0dGVybjogJ2RlZmF1bHQnLFxyXG4gICAgICBkZXRhaWxzOiB7fVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8vIFN1aXRlIGRlIGwnaW1wbMOpbWVudGF0aW9uLi4uXHJcbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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