e9327f456237c33a7227c53b3587364b
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const resilient_message_bus_1 = require("../src/communication/resilient-message-bus");
describe('ResilientMessageBus', () => {
    it('gÃ¨re la queue et envoie un message', async () => {
        // Mock du swLocalStorage
        const store = {};
        global.swLocalStorage = {
            getItem: async (k) => store[k] || null,
            setItem: async (k, v) => { store[k] = v; }
        };
        // Mock chrome pour le service-worker-adapter
        global.chrome = {
            storage: {
                local: {
                    set: (obj, cb) => { Object.assign(store, obj); if (typeof cb === 'function')
                        cb(); },
                    get: (keys, cb) => {
                        const result = {};
                        const arr = Array.isArray(keys) ? keys : (keys ? [keys] : []);
                        arr.forEach((k) => { if (store[k])
                            result[k] = store[k]; });
                        if (typeof cb === 'function')
                            cb(result);
                        else
                            return Promise.resolve(result);
                    }
                }
            },
            runtime: { lastError: undefined }
        };
        const bus = new resilient_message_bus_1.ResilientMessageBus();
        await bus['messageQueue'].enqueue({ type: 'TEST', payload: 1 });
        const all = await bus['messageQueue'].getAll();
        expect(all.length).toBe(1);
        const msg = await bus['messageQueue'].dequeue();
        expect(msg).toBeDefined();
        if (msg)
            expect(msg.type).toBe('TEST');
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL21udC9jL1VzZXJzL21fb2xpL1Byb2pldHMvU1lNQklPTlQvX190ZXN0c19fL1Jlc2lsaWVudE1lc3NhZ2VCdXMudGVzdC50cyIsIm1hcHBpbmdzIjoiOztBQUFBLHNGQUFnRjtBQUVoRixRQUFRLENBQUMscUJBQXFCLEVBQUUsR0FBRyxFQUFFO0lBQ25DLEVBQUUsQ0FBQyxvQ0FBb0MsRUFBRSxLQUFLLElBQUksRUFBRTtRQUNsRCx5QkFBeUI7UUFDekIsTUFBTSxLQUFLLEdBQXdCLEVBQUUsQ0FBQTtRQUNyQyxNQUFNLENBQUMsY0FBYyxHQUFHO1lBQ3RCLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSTtZQUM5QyxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQVMsRUFBRSxDQUFTLEVBQUUsRUFBRSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUEsQ0FBQyxDQUFDO1NBQzFELENBQUE7UUFDRCw2Q0FBNkM7UUFDN0MsTUFBTSxDQUFDLE1BQU0sR0FBRztZQUNkLE9BQU8sRUFBRTtnQkFDUCxLQUFLLEVBQUU7b0JBQ0wsR0FBRyxFQUFFLENBQUMsR0FBUSxFQUFFLEVBQWUsRUFBRSxFQUFFLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLE9BQU8sRUFBRSxLQUFLLFVBQVU7d0JBQUUsRUFBRSxFQUFFLENBQUEsQ0FBQyxDQUFDO29CQUNyRyxHQUFHLEVBQUUsQ0FBQyxJQUFTLEVBQUUsRUFBMEIsRUFBRSxFQUFFO3dCQUM3QyxNQUFNLE1BQU0sR0FBUSxFQUFFLENBQUE7d0JBQ3RCLE1BQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFBO3dCQUM3RCxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBUyxFQUFFLEVBQUUsR0FBRyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUM7NEJBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFBO3dCQUNsRSxJQUFJLE9BQU8sRUFBRSxLQUFLLFVBQVU7NEJBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFBOzs0QkFDbkMsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFBO29CQUNyQyxDQUFDO2lCQUNGO2FBQ0Y7WUFDRCxPQUFPLEVBQUUsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFTO1NBQ2xDLENBQUE7UUFDUixNQUFNLEdBQUcsR0FBRyxJQUFJLDJDQUFtQixFQUFFLENBQUE7UUFDckMsTUFBTSxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUMvRCxNQUFNLEdBQUcsR0FBRyxNQUFNLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQTtRQUM5QyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQTtRQUMxQixNQUFNLEdBQUcsR0FBRyxNQUFNLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtRQUMvQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUE7UUFDekIsSUFBSSxHQUFHO1lBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7SUFDeEMsQ0FBQyxDQUFDLENBQUE7QUFDSixDQUFDLENBQUMsQ0FBQSIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvbW50L2MvVXNlcnMvbV9vbGkvUHJvamV0cy9TWU1CSU9OVC9fX3Rlc3RzX18vUmVzaWxpZW50TWVzc2FnZUJ1cy50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlc2lsaWVudE1lc3NhZ2VCdXMgfSBmcm9tICcuLi9zcmMvY29tbXVuaWNhdGlvbi9yZXNpbGllbnQtbWVzc2FnZS1idXMnXHJcblxyXG5kZXNjcmliZSgnUmVzaWxpZW50TWVzc2FnZUJ1cycsICgpID0+IHtcclxuICBpdCgnZ8OocmUgbGEgcXVldWUgZXQgZW52b2llIHVuIG1lc3NhZ2UnLCBhc3luYyAoKSA9PiB7XHJcbiAgICAvLyBNb2NrIGR1IHN3TG9jYWxTdG9yYWdlXHJcbiAgICBjb25zdCBzdG9yZTogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9XHJcbiAgICBnbG9iYWwuc3dMb2NhbFN0b3JhZ2UgPSB7XHJcbiAgICAgIGdldEl0ZW06IGFzeW5jIChrOiBzdHJpbmcpID0+IHN0b3JlW2tdIHx8IG51bGwsXHJcbiAgICAgIHNldEl0ZW06IGFzeW5jIChrOiBzdHJpbmcsIHY6IHN0cmluZykgPT4geyBzdG9yZVtrXSA9IHYgfVxyXG4gICAgfVxyXG4gICAgLy8gTW9jayBjaHJvbWUgcG91ciBsZSBzZXJ2aWNlLXdvcmtlci1hZGFwdGVyXHJcbiAgICBnbG9iYWwuY2hyb21lID0ge1xyXG4gICAgICBzdG9yYWdlOiB7XHJcbiAgICAgICAgbG9jYWw6IHtcclxuICAgICAgICAgIHNldDogKG9iajogYW55LCBjYj86ICgpID0+IHZvaWQpID0+IHsgT2JqZWN0LmFzc2lnbihzdG9yZSwgb2JqKTsgaWYgKHR5cGVvZiBjYiA9PT0gJ2Z1bmN0aW9uJykgY2IoKSB9LFxyXG4gICAgICAgICAgZ2V0OiAoa2V5czogYW55LCBjYj86IChyZXN1bHQ6IGFueSkgPT4gdm9pZCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHQ6IGFueSA9IHt9XHJcbiAgICAgICAgICAgIGNvbnN0IGFyciA9IEFycmF5LmlzQXJyYXkoa2V5cykgPyBrZXlzIDogKGtleXMgPyBba2V5c10gOiBbXSlcclxuICAgICAgICAgICAgYXJyLmZvckVhY2goKGs6IHN0cmluZykgPT4geyBpZiAoc3RvcmVba10pIHJlc3VsdFtrXSA9IHN0b3JlW2tdIH0pXHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgY2IgPT09ICdmdW5jdGlvbicpIGNiKHJlc3VsdClcclxuICAgICAgICAgICAgZWxzZSByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3VsdClcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIHJ1bnRpbWU6IHsgbGFzdEVycm9yOiB1bmRlZmluZWQgfSBhcyBhbnlcclxuICAgIH0gYXMgYW55XHJcbiAgICBjb25zdCBidXMgPSBuZXcgUmVzaWxpZW50TWVzc2FnZUJ1cygpXHJcbiAgICBhd2FpdCBidXNbJ21lc3NhZ2VRdWV1ZSddLmVucXVldWUoeyB0eXBlOiAnVEVTVCcsIHBheWxvYWQ6IDEgfSlcclxuICAgIGNvbnN0IGFsbCA9IGF3YWl0IGJ1c1snbWVzc2FnZVF1ZXVlJ10uZ2V0QWxsKClcclxuICAgIGV4cGVjdChhbGwubGVuZ3RoKS50b0JlKDEpXHJcbiAgICBjb25zdCBtc2cgPSBhd2FpdCBidXNbJ21lc3NhZ2VRdWV1ZSddLmRlcXVldWUoKVxyXG4gICAgZXhwZWN0KG1zZykudG9CZURlZmluZWQoKVxyXG4gICAgaWYgKG1zZykgZXhwZWN0KG1zZy50eXBlKS50b0JlKCdURVNUJylcclxuICB9KVxyXG59KSAiXSwidmVyc2lvbiI6M30=