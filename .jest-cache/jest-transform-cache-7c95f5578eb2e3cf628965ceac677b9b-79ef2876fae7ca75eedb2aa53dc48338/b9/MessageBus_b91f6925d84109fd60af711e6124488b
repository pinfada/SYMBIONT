6ecd290392e6baa1cfd36cd12d95cccc
"use strict";

/* istanbul ignore next */
function cov_1e8yjr3qu8() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/messaging/MessageBus.ts";
  var hash = "72a812a380974b54c27f405003ad4a6497ea4cca";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/messaging/MessageBus.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "3": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 65
        }
      },
      "4": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 49
        }
      },
      "5": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 67
        }
      },
      "6": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 14,
          column: 53
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 82
        }
      },
      "8": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 84
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 84
        }
      },
      "10": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "11": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 81
        }
      },
      "12": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "13": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 44
        }
      },
      "14": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 36,
          column: 47
        }
      },
      "15": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 43
        }
      },
      "16": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 37
        }
      },
      "17": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 48
        }
      },
      "18": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 78
        }
      },
      "19": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 47
        }
      },
      "20": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 91
        }
      },
      "21": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 24
        }
      },
      "22": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "23": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 51
        }
      },
      "24": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 77
        }
      },
      "25": {
        start: {
          line: 68,
          column: 29
        },
        end: {
          line: 68,
          column: 65
        }
      },
      "26": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 28
        }
      },
      "27": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "28": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 19
        }
      },
      "29": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "30": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 28
        }
      },
      "31": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "32": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 33
        }
      },
      "33": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "34": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 87,
          column: 10
        }
      },
      "35": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "36": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 43
        }
      },
      "37": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "38": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 19
        }
      },
      "39": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "40": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 38
        }
      },
      "41": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 18
        }
      },
      "42": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "43": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 72
        }
      },
      "44": {
        start: {
          line: 114,
          column: 31
        },
        end: {
          line: 114,
          column: 70
        }
      },
      "45": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 22
        }
      },
      "46": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "47": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "48": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "49": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 75
        }
      },
      "50": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 52
        }
      },
      "51": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 19
        }
      },
      "52": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 29
        }
      },
      "53": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 34
        }
      },
      "54": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 40
        }
      },
      "55": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 26
        }
      },
      "56": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 31
        }
      },
      "57": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 32
        }
      },
      "58": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 30
        }
      },
      "59": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "60": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 147,
          column: 13
        }
      },
      "61": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 45
        }
      },
      "62": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 49
        }
      },
      "63": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 25
        }
      },
      "64": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 61
        }
      },
      "65": {
        start: {
          line: 152,
          column: 44
        },
        end: {
          line: 152,
          column: 59
        }
      },
      "66": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 40
        }
      },
      "67": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "68": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 35
        }
      },
      "69": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "70": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 42
        }
      },
      "71": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 40
        }
      },
      "72": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "73": {
        start: {
          line: 168,
          column: 28
        },
        end: {
          line: 168,
          column: 53
        }
      },
      "74": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 47
        }
      },
      "75": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "76": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 106
        }
      },
      "77": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 19
        }
      },
      "78": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "79": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 185,
          column: 13
        }
      },
      "80": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 39
        }
      },
      "81": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 65
        }
      },
      "82": {
        start: {
          line: 188,
          column: 25
        },
        end: {
          line: 188,
          column: 56
        }
      },
      "83": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "84": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 197,
          column: 13
        }
      },
      "85": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 196,
          column: 17
        }
      },
      "86": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 192,
          column: 43
        }
      },
      "87": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 82
        }
      },
      "88": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "89": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 47
        }
      },
      "90": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 45
        }
      },
      "91": {
        start: {
          line: 207,
          column: 25
        },
        end: {
          line: 207,
          column: 48
        }
      },
      "92": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "93": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 37
        }
      },
      "94": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 41
        }
      },
      "95": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 44
        }
      },
      "96": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 34
        }
      },
      "97": {
        start: {
          line: 222,
          column: 28
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "98": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "99": {
        start: {
          line: 230,
          column: 37
        },
        end: {
          line: 230,
          column: 86
        }
      },
      "100": {
        start: {
          line: 232,
          column: 33
        },
        end: {
          line: 232,
          column: 67
        }
      },
      "101": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "102": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 63
        }
      },
      "103": {
        start: {
          line: 238,
          column: 29
        },
        end: {
          line: 238,
          column: 56
        }
      },
      "104": {
        start: {
          line: 240,
          column: 38
        },
        end: {
          line: 240,
          column: 102
        }
      },
      "105": {
        start: {
          line: 240,
          column: 47
        },
        end: {
          line: 240,
          column: 102
        }
      },
      "106": {
        start: {
          line: 241,
          column: 35
        },
        end: {
          line: 241,
          column: 61
        }
      },
      "107": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 248,
          column: 17
        }
      },
      "108": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 247,
          column: 21
        }
      },
      "109": {
        start: {
          line: 244,
          column: 24
        },
        end: {
          line: 246,
          column: 27
        }
      },
      "110": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 74
        }
      },
      "111": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 59
        }
      },
      "112": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 27
        }
      },
      "113": {
        start: {
          line: 263,
          column: 25
        },
        end: {
          line: 263,
          column: 48
        }
      },
      "114": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "115": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 68
        }
      },
      "116": {
        start: {
          line: 265,
          column: 40
        },
        end: {
          line: 265,
          column: 66
        }
      },
      "117": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 50
        }
      },
      "118": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 50
        }
      },
      "119": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 20
        }
      },
      "120": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 63
        }
      },
      "121": {
        start: {
          line: 285,
          column: 0
        },
        end: {
          line: 285,
          column: 32
        }
      },
      "122": {
        start: {
          line: 286,
          column: 0
        },
        end: {
          line: 286,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "isOrganismState",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 24
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "isOrganismMutation",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 27
          }
        },
        loc: {
          start: {
            line: 16,
            column: 33
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "isBehaviorData",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 23
          }
        },
        loc: {
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 19
      },
      "3": {
        name: "isMurmur",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 17
          }
        },
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "isInvitationPayload",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 28
          }
        },
        loc: {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 25
      },
      "5": {
        name: "isInvitationResult",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 27
          }
        },
        loc: {
          start: {
            line: 28,
            column: 33
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 28
      },
      "6": {
        name: "validatePayload",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 24
          }
        },
        loc: {
          start: {
            line: 31,
            column: 40
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 31
      },
      "7": {
        name: "serializeMessage",
        decl: {
          start: {
            line: 60,
            column: 9
          },
          end: {
            line: 60,
            column: 25
          }
        },
        loc: {
          start: {
            line: 60,
            column: 35
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 60
      },
      "8": {
        name: "cleanObjectForSerialization",
        decl: {
          start: {
            line: 72,
            column: 9
          },
          end: {
            line: 72,
            column: 36
          }
        },
        loc: {
          start: {
            line: 72,
            column: 64
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 72
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 114,
            column: 23
          },
          end: {
            line: 114,
            column: 24
          }
        },
        loc: {
          start: {
            line: 114,
            column: 31
          },
          end: {
            line: 114,
            column: 70
          }
        },
        line: 114
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 24
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 132
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        loc: {
          start: {
            line: 141,
            column: 21
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 141
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 143,
            column: 45
          },
          end: {
            line: 143,
            column: 46
          }
        },
        loc: {
          start: {
            line: 143,
            column: 80
          },
          end: {
            line: 149,
            column: 9
          }
        },
        line: 143
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        loc: {
          start: {
            line: 151,
            column: 34
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 151
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 152,
            column: 34
          },
          end: {
            line: 152,
            column: 35
          }
        },
        loc: {
          start: {
            line: 152,
            column: 44
          },
          end: {
            line: 152,
            column: 59
          }
        },
        line: 152
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 34
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 154
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 25
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 166
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 34
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 172
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 22
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 200
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        loc: {
          start: {
            line: 206,
            column: 23
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 206
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        loc: {
          start: {
            line: 212,
            column: 19
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 212
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 20
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 215
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 22
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 218
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 24
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 221
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 240,
            column: 38
          },
          end: {
            line: 240,
            column: 39
          }
        },
        loc: {
          start: {
            line: 240,
            column: 47
          },
          end: {
            line: 240,
            column: 102
          }
        },
        line: 240
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 244,
            column: 76
          },
          end: {
            line: 244,
            column: 77
          }
        },
        loc: {
          start: {
            line: 244,
            column: 82
          },
          end: {
            line: 246,
            column: 25
          }
        },
        line: 244
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 250,
            column: 63
          },
          end: {
            line: 250,
            column: 64
          }
        },
        loc: {
          start: {
            line: 250,
            column: 69
          },
          end: {
            line: 250,
            column: 72
          }
        },
        line: 250
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        loc: {
          start: {
            line: 258,
            column: 30
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 258
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        loc: {
          start: {
            line: 261,
            column: 24
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 261
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 265,
            column: 29
          },
          end: {
            line: 265,
            column: 30
          }
        },
        loc: {
          start: {
            line: 265,
            column: 40
          },
          end: {
            line: 265,
            column: 66
          }
        },
        line: 265
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 5
          }
        },
        loc: {
          start: {
            line: 269,
            column: 40
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 269
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        },
        loc: {
          start: {
            line: 274,
            column: 45
          },
          end: {
            line: 278,
            column: 5
          }
        },
        line: 274
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        loc: {
          start: {
            line: 280,
            column: 53
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 280
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 14,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 11
          },
          end: {
            line: 9,
            column: 14
          }
        }, {
          start: {
            line: 10,
            column: 8
          },
          end: {
            line: 10,
            column: 34
          }
        }, {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 11,
            column: 42
          }
        }, {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 12,
            column: 38
          }
        }, {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 13,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 14,
            column: 18
          }
        }, {
          start: {
            line: 14,
            column: 22
          },
          end: {
            line: 14,
            column: 52
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 46
          }
        }, {
          start: {
            line: 17,
            column: 50
          },
          end: {
            line: 17,
            column: 81
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 11
          },
          end: {
            line: 20,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 11
          },
          end: {
            line: 20,
            column: 14
          }
        }, {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 45
          }
        }, {
          start: {
            line: 20,
            column: 49
          },
          end: {
            line: 20,
            column: 83
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 14
          }
        }, {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 23,
            column: 46
          }
        }, {
          start: {
            line: 23,
            column: 50
          },
          end: {
            line: 23,
            column: 83
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 14
          }
        }, {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 46
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 11
          },
          end: {
            line: 29,
            column: 14
          }
        }, {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 46
          }
        }, {
          start: {
            line: 29,
            column: 50
          },
          end: {
            line: 29,
            column: 80
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 34,
            column: 44
          }
        }, {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 36,
            column: 47
          }
        }, {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 49
          }
        }, {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 39,
            column: 43
          }
        }, {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 41,
            column: 37
          }
        }, {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 58
          }
        }, {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 57
          }
        }, {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 45,
            column: 48
          }
        }, {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 78
          }
        }, {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 58
          }
        }, {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 50,
            column: 47
          }
        }, {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 91
          }
        }, {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 56,
            column: 24
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 47,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 47,
            column: 46
          }
        }, {
          start: {
            line: 47,
            column: 50
          },
          end: {
            line: 47,
            column: 77
          }
        }],
        line: 47
      },
      "8": {
        loc: {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 53,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 53,
            column: 46
          }
        }, {
          start: {
            line: 53,
            column: 51
          },
          end: {
            line: 53,
            column: 58
          }
        }, {
          start: {
            line: 53,
            column: 62
          },
          end: {
            line: 53,
            column: 89
          }
        }],
        line: 53
      },
      "9": {
        loc: {
          start: {
            line: 72,
            column: 42
          },
          end: {
            line: 72,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 72,
            column: 49
          },
          end: {
            line: 72,
            column: 62
          }
        }],
        line: 72
      },
      "10": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "11": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 20
          }
        }, {
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 73,
            column: 41
          }
        }],
        line: 73
      },
      "12": {
        loc: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "13": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "14": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "15": {
        loc: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "16": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 101,
            column: 125
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 90,
            column: 44
          }
        }, {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 45
          }
        }, {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 92,
            column: 34
          }
        }, {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 93,
            column: 40
          }
        }, {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 94,
            column: 47
          }
        }, {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 35
          }
        }, {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 96,
            column: 34
          }
        }, {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 97,
            column: 35
          }
        }, {
          start: {
            line: 98,
            column: 9
          },
          end: {
            line: 98,
            column: 12
          }
        }, {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 28
          }
        }, {
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 99,
            column: 12
          }
        }, {
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 99,
            column: 32
          }
        }, {
          start: {
            line: 100,
            column: 9
          },
          end: {
            line: 100,
            column: 12
          }
        }, {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 26
          }
        }, {
          start: {
            line: 101,
            column: 9
          },
          end: {
            line: 101,
            column: 12
          }
        }, {
          start: {
            line: 101,
            column: 16
          },
          end: {
            line: 101,
            column: 39
          }
        }, {
          start: {
            line: 101,
            column: 43
          },
          end: {
            line: 101,
            column: 58
          }
        }, {
          start: {
            line: 101,
            column: 62
          },
          end: {
            line: 101,
            column: 82
          }
        }, {
          start: {
            line: 101,
            column: 86
          },
          end: {
            line: 101,
            column: 124
          }
        }],
        line: 90
      },
      "17": {
        loc: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "18": {
        loc: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "19": {
        loc: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "20": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "21": {
        loc: {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 147,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "22": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "23": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "24": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "25": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 203,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "26": {
        loc: {
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "27": {
        loc: {
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        }, {
          start: {
            line: 236,
            column: 17
          },
          end: {
            line: 251,
            column: 13
          }
        }],
        line: 233
      },
      "28": {
        loc: {
          start: {
            line: 240,
            column: 47
          },
          end: {
            line: 240,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 47
          },
          end: {
            line: 240,
            column: 57
          }
        }, {
          start: {
            line: 240,
            column: 62
          },
          end: {
            line: 240,
            column: 69
          }
        }, {
          start: {
            line: 240,
            column: 73
          },
          end: {
            line: 240,
            column: 101
          }
        }],
        line: 240
      },
      "29": {
        loc: {
          start: {
            line: 243,
            column: 20
          },
          end: {
            line: 247,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 20
          },
          end: {
            line: 247,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "30": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0, 0, 0, 0, 0, 0],
      "1": [0, 0, 0],
      "2": [0, 0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/messaging/MessageBus.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/messaging/MessageBus.ts"],
      sourcesContent: ["import { Message, MessageType } from '../../shared/messaging/MessageBus';\r\nimport { OrganismState, OrganismMutation } from '../../shared/types/organism';\r\nimport { InvitationPayload, InvitationResult } from '../../shared/types/invitation';\r\nimport { Murmur } from '../../shared/types/murmur';\r\nimport { generateUUID } from '../../shared/utils/uuid';\r\nimport { sanitizeMessage } from '../../shared/utils/serialization';\r\n\r\ntype MessageHandler<T extends Message = Message> = (message: T) => void | Promise<void>;\r\ntype MessageFilter = (message: Message) => boolean;\r\n\r\nfunction isOrganismState(obj: any): obj is OrganismState {\r\n  return obj &&\r\n    typeof obj.id === 'string' &&\r\n    typeof obj.generation === 'number' &&\r\n    typeof obj.health === 'number' &&\r\n    typeof obj.energy === 'number' &&\r\n    obj.traits && typeof obj.traits === 'object';\r\n}\r\n\r\nfunction isOrganismMutation(obj: any): obj is OrganismMutation {\r\n  return obj && typeof obj.type === 'string' && typeof obj.trigger === 'string';\r\n}\r\n\r\nfunction isBehaviorData(obj: any): boolean {\r\n  return obj && typeof obj.url === 'string' && typeof obj.visitCount === 'number';\r\n}\r\n\r\nfunction isMurmur(obj: any): obj is Murmur {\r\n  return obj && typeof obj.text === 'string' && typeof obj.timestamp === 'number';\r\n}\r\n\r\nfunction isInvitationPayload(obj: any): obj is InvitationPayload {\r\n  return obj && typeof obj.code === 'string';\r\n}\r\n\r\nfunction isInvitationResult(obj: any): obj is InvitationResult {\r\n  return obj && typeof obj.code === 'string' && typeof obj.status === 'string';\r\n}\r\n\r\nfunction validatePayload(type: MessageType, payload: any): boolean {\r\n  switch (type) {\r\n    case MessageType.ORGANISM_UPDATE:\r\n      return isOrganismState(payload);\r\n    case MessageType.ORGANISM_MUTATE:\r\n      return isOrganismMutation(payload);\r\n    case MessageType.PAGE_VISIT:\r\n    case MessageType.SCROLL_EVENT:\r\n      return isBehaviorData(payload);\r\n    case MessageType.MURMUR:\r\n      return isMurmur(payload);\r\n    case MessageType.GENERATE_INVITATION:\r\n    case MessageType.CONSUME_INVITATION:\r\n    case MessageType.CHECK_INVITATION:\r\n      return isInvitationPayload(payload);\r\n    case MessageType.INVITATION_GENERATED:\r\n      return typeof payload === 'string' || isInvitationResult(payload);\r\n    case MessageType.INVITATION_CONSUMED:\r\n    case MessageType.INVITATION_CHECKED:\r\n      return isInvitationResult(payload);\r\n    case MessageType.SHARED_MUTATION_RESULT:\r\n      // Accepte un string (chiffr\xE9) ou un objet (r\xE9sultat de mutation)\r\n      return typeof payload === 'string' || (payload && typeof payload === 'object');\r\n    // Ajouter d'autres cas selon les besoins\r\n    default:\r\n      return true; // Par d\xE9faut, on accepte (\xE0 affiner selon les besoins)\r\n  }\r\n}\r\n\r\n// Fonction pour nettoyer les messages avant s\xE9rialisation\r\nfunction serializeMessage(message: any): any {\r\n  try {\r\n    // Test de s\xE9rialisation avec JSON.parse/stringify\r\n    return JSON.parse(JSON.stringify(message));\r\n  } catch (error) {\r\n    console.warn('Message serialization issue, cleaning object:', error);\r\n    \r\n    // Nettoyage manuel pour les cas probl\xE9matiques\r\n    const cleanMessage = cleanObjectForSerialization(message);\r\n    return cleanMessage;\r\n  }\r\n}\r\n\r\nfunction cleanObjectForSerialization(obj: any, seen = new WeakSet()): any {\r\n  if (obj === null || obj === undefined) {\r\n    return obj;\r\n  }\r\n  \r\n  if (typeof obj === 'function') {\r\n    return '[Function]'; // Remplace les fonctions par une string\r\n  }\r\n  \r\n  if (obj instanceof Date) {\r\n    return obj.toISOString(); // Convertit les dates en ISO string\r\n  }\r\n  \r\n  if (obj instanceof Error) {\r\n    return {\r\n      name: obj.name,\r\n      message: obj.message,\r\n      stack: obj.stack\r\n    };\r\n  }\r\n\r\n  // Objets WebGL, DOM, React non-s\xE9rialisables\r\n  if (obj instanceof WebGLRenderingContext || \r\n      obj instanceof WebGL2RenderingContext ||\r\n      obj instanceof HTMLElement ||\r\n      obj instanceof HTMLCanvasElement ||\r\n      obj instanceof CanvasRenderingContext2D ||\r\n      obj instanceof WebGLProgram ||\r\n      obj instanceof WebGLBuffer ||\r\n      obj instanceof WebGLTexture ||\r\n      (obj && obj.$$typeof) || // React elements\r\n      (obj && obj.__reactFiber) || // React fiber\r\n      (obj && obj._owner) || // React internal\r\n      (obj && typeof obj === 'object' && obj.constructor && obj.constructor.name && obj.constructor.name.includes('Fiber')) // React Fiber variants\r\n  ) {\r\n    return '[Non-serializable Object]';\r\n  }\r\n  \r\n  if (typeof obj !== 'object') {\r\n    return obj; // Primitives sont OK\r\n  }\r\n  \r\n  // V\xE9rification des r\xE9f\xE9rences circulaires AVANT la r\xE9cursion\r\n  if (seen.has(obj)) {\r\n    return '[Circular Reference]';\r\n  }\r\n  seen.add(obj);\r\n  \r\n  if (Array.isArray(obj)) {\r\n    return obj.map(item => cleanObjectForSerialization(item, seen));\r\n  }\r\n  \r\n  // Pour les objets, on nettoie r\xE9cursivement\r\n  const cleaned: any = {};\r\n  \r\n  for (const key in obj) {\r\n    if (obj.hasOwnProperty(key)) {\r\n      try {\r\n        cleaned[key] = cleanObjectForSerialization(obj[key], seen);\r\n      } catch (error) {\r\n        // Supprime les logs verbeux pour \xE9viter le spam\r\n        cleaned[key] = '[Non-serializable]';\r\n      }\r\n    }\r\n  }\r\n  \r\n  return cleaned;\r\n}\r\n\r\nexport class MessageBus {\r\n  private handlers: Map<MessageType, Set<MessageHandler>> = new Map();\r\n  private globalHandlers: Set<MessageHandler> = new Set();\r\n  private filters: MessageFilter[] = [];\r\n  private messageQueue: Message[] = [];\r\n  private processing = false;\r\n\r\n  constructor(private readonly source: 'background' | 'content' | 'popup') {\r\n    this.setupListeners();\r\n  }\r\n\r\n  private setupListeners(): void {\r\n    // @ts-expect-error Param\xE8tre r\xE9serv\xE9 pour usage futur\r\n    chrome.runtime.onMessage.addListener((message: Message, sender, sendResponse) => {\r\n      if (this.shouldProcessMessage(message)) {\r\n        this.enqueueMessage(message);\r\n        sendResponse({ received: true });\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  private shouldProcessMessage(message: Message): boolean {\r\n    return this.filters.every(filter => filter(message));\r\n  }\r\n\r\n  private async enqueueMessage(message: Message): Promise<void> {\r\n    this.messageQueue.push(message);\r\n    if (!this.processing) {\r\n      this.processing = true;\r\n      try {\r\n        await this.processQueue();\r\n      } finally {\r\n        this.processing = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async processQueue(): Promise<void> {\r\n    while (this.messageQueue.length > 0) {\r\n      const message = this.messageQueue.shift()!;\r\n      await this.processMessage(message);\r\n    }\r\n  }\r\n\r\n  private async processMessage(message: Message): Promise<void> {\r\n    // --- Validation stricte du payload ---\r\n    if (!validatePayload(message.type, message.payload)) {\r\n      console.warn(`[MessageBus] Payload non valide pour le type ${message.type}`, message.payload);\r\n      return;\r\n    }\r\n\r\n    // Global handlers\r\n    for (const handler of this.globalHandlers) {\r\n      try {\r\n        await handler(message);\r\n      } catch (error) {\r\n        console.error(`Error in global handler:`, error);\r\n      }\r\n    }\r\n\r\n    // Type-specific handlers\r\n    const handlers = this.handlers.get(message.type);\r\n    if (handlers) {\r\n      for (const handler of handlers) {\r\n        try {\r\n          await handler(message);\r\n        } catch (error) {\r\n          console.error(`Error in handler for ${message.type}:`, error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public on<T extends Message>(type: T['type'], handler: MessageHandler<T>): void {\r\n    if (!this.handlers.has(type)) {\r\n      this.handlers.set(type, new Set());\r\n    }\r\n    this.handlers.get(type)!.add(handler as MessageHandler);\r\n  }\r\n\r\n  public off<T extends Message>(type: T['type'], handler: MessageHandler<T>): void {\r\n    const handlers = this.handlers.get(type);\r\n    if (handlers) {\r\n      handlers.delete(handler as MessageHandler);\r\n    }\r\n  }\r\n\r\n  public onAny(handler: MessageHandler): void {\r\n    this.globalHandlers.add(handler);\r\n  }\r\n\r\n  public offAny(handler: MessageHandler): void {\r\n    this.globalHandlers.delete(handler);\r\n  }\r\n\r\n  public addFilter(filter: MessageFilter): void {\r\n    this.filters.push(filter);\r\n  }\r\n\r\n  public async send(message: Omit<Message, 'source' | 'timestamp' | 'id'>): Promise<void> {\r\n    const fullMessage: Message = {\r\n      ...message,\r\n      source: this.source,\r\n      timestamp: Date.now(),\r\n      id: generateUUID(),\r\n    } as Message;\r\n\r\n    try {\r\n      // Sanitize le message d'abord pour \xE9viter les objets probl\xE9matiques\r\n      const sanitizedMessage = sanitizeMessage(fullMessage);\r\n      // Nettoyer le message avant envoi pour \xE9viter les erreurs de s\xE9rialisation\r\n      const cleanMessage = serializeMessage(sanitizedMessage);\r\n      \r\n      if (this.source === 'content') {\r\n        await chrome.runtime.sendMessage(cleanMessage);\r\n      } else {\r\n        // Send to all tabs for content scripts\r\n        const tabs = await chrome.tabs.query({});\r\n        // Routage intelligent : on ne cible que les tabs actifs ou pertinents\r\n        const isRelevantTab = (tab: any) => tab.active || (tab.url && tab.url.includes('symbiont'));\r\n        const activeTabs = tabs.filter(isRelevantTab);\r\n        for (const tab of activeTabs) {\r\n          if (tab.id) {\r\n            chrome.tabs.sendMessage(tab.id, cleanMessage).catch(() => {\r\n              // Ignore errors for inactive tabs\r\n            });\r\n          }\r\n        }\r\n        // Also send to runtime for popup/background\r\n        chrome.runtime.sendMessage(cleanMessage).catch(() => {});\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  }\r\n\r\n  // Ajout pour compatibilit\xE9 content script\r\n  public sendToBackground(message: any): void {\r\n    this.send(message);\r\n  }\r\n\r\n  public emit(type: any, payload: any): void {\r\n    // Appel direct des handlers si besoin (mock minimal)\r\n    const handlers = this.handlers.get(type as MessageType);\r\n    if (handlers) {\r\n      handlers.forEach(handler => handler({ type, payload }));\r\n    }\r\n  }\r\n\r\n  // @ts-expect-error Variables r\xE9serv\xE9es pour usage futur\r\n  private handleMessage(message: any, targetFrame: string): void {\r\n    // Handle cross-frame messages\r\n    console.log('Handling message:', message);\r\n  }\r\n\r\n  // @ts-expect-error Param\xE8tre r\xE9serv\xE9 pour usage futur\r\n  private onMessage(message: any, sender: chrome.runtime.MessageSender, sendResponse: (response?: any) => void): boolean {\r\n    // Handle incoming message\r\n    console.log('Received message:', message);\r\n    return true;\r\n  }\r\n\r\n  // @ts-expect-error Variables r\xE9serv\xE9es pour usage futur\r\n  private sendToFrame(handleMessage: (msg: any) => any, targetFrame: MessageTarget, payload: any): void {\r\n    // Send message to frame\r\n    console.log('Sending to frame:', targetFrame, payload);\r\n  }\r\n}\r\n\r\nexport default MessageBus;\r\nexport { validatePayload };"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "72a812a380974b54c27f405003ad4a6497ea4cca"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1e8yjr3qu8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1e8yjr3qu8();
cov_1e8yjr3qu8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1e8yjr3qu8().s[1]++;
exports.MessageBus = void 0;
/* istanbul ignore next */
cov_1e8yjr3qu8().s[2]++;
exports.validatePayload = validatePayload;
const MessageBus_1 =
/* istanbul ignore next */
(cov_1e8yjr3qu8().s[3]++, require("../../shared/messaging/MessageBus"));
const uuid_1 =
/* istanbul ignore next */
(cov_1e8yjr3qu8().s[4]++, require("../../shared/utils/uuid"));
const serialization_1 =
/* istanbul ignore next */
(cov_1e8yjr3qu8().s[5]++, require("../../shared/utils/serialization"));
function isOrganismState(obj) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[0]++;
  cov_1e8yjr3qu8().s[6]++;
  return /* istanbul ignore next */(cov_1e8yjr3qu8().b[0][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[0][1]++, typeof obj.id === 'string') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[0][2]++, typeof obj.generation === 'number') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[0][3]++, typeof obj.health === 'number') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[0][4]++, typeof obj.energy === 'number') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[0][5]++, obj.traits) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[0][6]++, typeof obj.traits === 'object');
}
function isOrganismMutation(obj) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[1]++;
  cov_1e8yjr3qu8().s[7]++;
  return /* istanbul ignore next */(cov_1e8yjr3qu8().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[1][1]++, typeof obj.type === 'string') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[1][2]++, typeof obj.trigger === 'string');
}
function isBehaviorData(obj) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[2]++;
  cov_1e8yjr3qu8().s[8]++;
  return /* istanbul ignore next */(cov_1e8yjr3qu8().b[2][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[2][1]++, typeof obj.url === 'string') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[2][2]++, typeof obj.visitCount === 'number');
}
function isMurmur(obj) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[3]++;
  cov_1e8yjr3qu8().s[9]++;
  return /* istanbul ignore next */(cov_1e8yjr3qu8().b[3][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[3][1]++, typeof obj.text === 'string') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[3][2]++, typeof obj.timestamp === 'number');
}
function isInvitationPayload(obj) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[4]++;
  cov_1e8yjr3qu8().s[10]++;
  return /* istanbul ignore next */(cov_1e8yjr3qu8().b[4][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[4][1]++, typeof obj.code === 'string');
}
function isInvitationResult(obj) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[5]++;
  cov_1e8yjr3qu8().s[11]++;
  return /* istanbul ignore next */(cov_1e8yjr3qu8().b[5][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[5][1]++, typeof obj.code === 'string') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[5][2]++, typeof obj.status === 'string');
}
function validatePayload(type, payload) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[6]++;
  cov_1e8yjr3qu8().s[12]++;
  switch (type) {
    case MessageBus_1.MessageType.ORGANISM_UPDATE:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][0]++;
      cov_1e8yjr3qu8().s[13]++;
      return isOrganismState(payload);
    case MessageBus_1.MessageType.ORGANISM_MUTATE:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][1]++;
      cov_1e8yjr3qu8().s[14]++;
      return isOrganismMutation(payload);
    case MessageBus_1.MessageType.PAGE_VISIT:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][2]++;
    case MessageBus_1.MessageType.SCROLL_EVENT:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][3]++;
      cov_1e8yjr3qu8().s[15]++;
      return isBehaviorData(payload);
    case MessageBus_1.MessageType.MURMUR:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][4]++;
      cov_1e8yjr3qu8().s[16]++;
      return isMurmur(payload);
    case MessageBus_1.MessageType.GENERATE_INVITATION:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][5]++;
    case MessageBus_1.MessageType.CONSUME_INVITATION:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][6]++;
    case MessageBus_1.MessageType.CHECK_INVITATION:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][7]++;
      cov_1e8yjr3qu8().s[17]++;
      return isInvitationPayload(payload);
    case MessageBus_1.MessageType.INVITATION_GENERATED:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][8]++;
      cov_1e8yjr3qu8().s[18]++;
      return /* istanbul ignore next */(cov_1e8yjr3qu8().b[7][0]++, typeof payload === 'string') ||
      /* istanbul ignore next */
      (cov_1e8yjr3qu8().b[7][1]++, isInvitationResult(payload));
    case MessageBus_1.MessageType.INVITATION_CONSUMED:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][9]++;
    case MessageBus_1.MessageType.INVITATION_CHECKED:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][10]++;
      cov_1e8yjr3qu8().s[19]++;
      return isInvitationResult(payload);
    case MessageBus_1.MessageType.SHARED_MUTATION_RESULT:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][11]++;
      cov_1e8yjr3qu8().s[20]++;
      // Accepte un string (chiffré) ou un objet (résultat de mutation)
      return /* istanbul ignore next */(cov_1e8yjr3qu8().b[8][0]++, typeof payload === 'string') ||
      /* istanbul ignore next */
      (cov_1e8yjr3qu8().b[8][1]++, payload) &&
      /* istanbul ignore next */
      (cov_1e8yjr3qu8().b[8][2]++, typeof payload === 'object');
    // Ajouter d'autres cas selon les besoins
    default:
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[6][12]++;
      cov_1e8yjr3qu8().s[21]++;
      return true;
    // Par défaut, on accepte (à affiner selon les besoins)
  }
}
// Fonction pour nettoyer les messages avant sérialisation
function serializeMessage(message) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[7]++;
  cov_1e8yjr3qu8().s[22]++;
  try {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[23]++;
    // Test de sérialisation avec JSON.parse/stringify
    return JSON.parse(JSON.stringify(message));
  } catch (error) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[24]++;
    console.warn('Message serialization issue, cleaning object:', error);
    // Nettoyage manuel pour les cas problématiques
    const cleanMessage =
    /* istanbul ignore next */
    (cov_1e8yjr3qu8().s[25]++, cleanObjectForSerialization(message));
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[26]++;
    return cleanMessage;
  }
}
function cleanObjectForSerialization(obj, seen =
/* istanbul ignore next */
(cov_1e8yjr3qu8().b[9][0]++, new WeakSet())) {
  /* istanbul ignore next */
  cov_1e8yjr3qu8().f[8]++;
  cov_1e8yjr3qu8().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[11][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[11][1]++, obj === undefined)) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[10][0]++;
    cov_1e8yjr3qu8().s[28]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[10][1]++;
  }
  cov_1e8yjr3qu8().s[29]++;
  if (typeof obj === 'function') {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[12][0]++;
    cov_1e8yjr3qu8().s[30]++;
    return '[Function]'; // Remplace les fonctions par une string
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[12][1]++;
  }
  cov_1e8yjr3qu8().s[31]++;
  if (obj instanceof Date) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[13][0]++;
    cov_1e8yjr3qu8().s[32]++;
    return obj.toISOString(); // Convertit les dates en ISO string
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[13][1]++;
  }
  cov_1e8yjr3qu8().s[33]++;
  if (obj instanceof Error) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[14][0]++;
    cov_1e8yjr3qu8().s[34]++;
    return {
      name: obj.name,
      message: obj.message,
      stack: obj.stack
    };
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[14][1]++;
  }
  // Objets WebGL, DOM, React non-sérialisables
  cov_1e8yjr3qu8().s[35]++;
  if (
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][0]++, obj instanceof WebGLRenderingContext) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][1]++, obj instanceof WebGL2RenderingContext) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][2]++, obj instanceof HTMLElement) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][3]++, obj instanceof HTMLCanvasElement) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][4]++, obj instanceof CanvasRenderingContext2D) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][5]++, obj instanceof WebGLProgram) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][6]++, obj instanceof WebGLBuffer) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][7]++, obj instanceof WebGLTexture) ||
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][8]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][9]++, obj.$$typeof) ||
  // React elements
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][10]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][11]++, obj.__reactFiber) ||
  // React fiber
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][12]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][13]++, obj._owner) ||
  // React internal
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][14]++, obj) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][15]++, typeof obj === 'object') &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][16]++, obj.constructor) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][17]++, obj.constructor.name) &&
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().b[16][18]++, obj.constructor.name.includes('Fiber')) // React Fiber variants
  ) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[15][0]++;
    cov_1e8yjr3qu8().s[36]++;
    return '[Non-serializable Object]';
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[15][1]++;
  }
  cov_1e8yjr3qu8().s[37]++;
  if (typeof obj !== 'object') {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[17][0]++;
    cov_1e8yjr3qu8().s[38]++;
    return obj; // Primitives sont OK
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[17][1]++;
  }
  // Vérification des références circulaires AVANT la récursion
  cov_1e8yjr3qu8().s[39]++;
  if (seen.has(obj)) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[18][0]++;
    cov_1e8yjr3qu8().s[40]++;
    return '[Circular Reference]';
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[18][1]++;
  }
  cov_1e8yjr3qu8().s[41]++;
  seen.add(obj);
  /* istanbul ignore next */
  cov_1e8yjr3qu8().s[42]++;
  if (Array.isArray(obj)) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().b[19][0]++;
    cov_1e8yjr3qu8().s[43]++;
    return obj.map(item => {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().f[9]++;
      cov_1e8yjr3qu8().s[44]++;
      return cleanObjectForSerialization(item, seen);
    });
  } else
  /* istanbul ignore next */
  {
    cov_1e8yjr3qu8().b[19][1]++;
  }
  // Pour les objets, on nettoie récursivement
  const cleaned =
  /* istanbul ignore next */
  (cov_1e8yjr3qu8().s[45]++, {});
  /* istanbul ignore next */
  cov_1e8yjr3qu8().s[46]++;
  for (const key in obj) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[47]++;
    if (obj.hasOwnProperty(key)) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[20][0]++;
      cov_1e8yjr3qu8().s[48]++;
      try {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[49]++;
        cleaned[key] = cleanObjectForSerialization(obj[key], seen);
      } catch (error) {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[50]++;
        // Supprime les logs verbeux pour éviter le spam
        cleaned[key] = '[Non-serializable]';
      }
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[20][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1e8yjr3qu8().s[51]++;
  return cleaned;
}
class MessageBus {
  constructor(source) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[10]++;
    cov_1e8yjr3qu8().s[52]++;
    this.source = source;
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[53]++;
    this.handlers = new Map();
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[54]++;
    this.globalHandlers = new Set();
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[55]++;
    this.filters = [];
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[56]++;
    this.messageQueue = [];
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[57]++;
    this.processing = false;
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[58]++;
    this.setupListeners();
  }
  setupListeners() {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[11]++;
    cov_1e8yjr3qu8().s[59]++;
    // @ts-expect-error Paramètre réservé pour usage futur
    chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().f[12]++;
      cov_1e8yjr3qu8().s[60]++;
      if (this.shouldProcessMessage(message)) {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().b[21][0]++;
        cov_1e8yjr3qu8().s[61]++;
        this.enqueueMessage(message);
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[62]++;
        sendResponse({
          received: true
        });
      } else
      /* istanbul ignore next */
      {
        cov_1e8yjr3qu8().b[21][1]++;
      }
      cov_1e8yjr3qu8().s[63]++;
      return false;
    });
  }
  shouldProcessMessage(message) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[13]++;
    cov_1e8yjr3qu8().s[64]++;
    return this.filters.every(filter => {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().f[14]++;
      cov_1e8yjr3qu8().s[65]++;
      return filter(message);
    });
  }
  async enqueueMessage(message) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[15]++;
    cov_1e8yjr3qu8().s[66]++;
    this.messageQueue.push(message);
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[67]++;
    if (!this.processing) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[22][0]++;
      cov_1e8yjr3qu8().s[68]++;
      this.processing = true;
      /* istanbul ignore next */
      cov_1e8yjr3qu8().s[69]++;
      try {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[70]++;
        await this.processQueue();
      } finally {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[71]++;
        this.processing = false;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[22][1]++;
    }
  }
  async processQueue() {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[16]++;
    cov_1e8yjr3qu8().s[72]++;
    while (this.messageQueue.length > 0) {
      const message =
      /* istanbul ignore next */
      (cov_1e8yjr3qu8().s[73]++, this.messageQueue.shift());
      /* istanbul ignore next */
      cov_1e8yjr3qu8().s[74]++;
      await this.processMessage(message);
    }
  }
  async processMessage(message) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[17]++;
    cov_1e8yjr3qu8().s[75]++;
    // --- Validation stricte du payload ---
    if (!validatePayload(message.type, message.payload)) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[23][0]++;
      cov_1e8yjr3qu8().s[76]++;
      console.warn(`[MessageBus] Payload non valide pour le type ${message.type}`, message.payload);
      /* istanbul ignore next */
      cov_1e8yjr3qu8().s[77]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[23][1]++;
    }
    // Global handlers
    cov_1e8yjr3qu8().s[78]++;
    for (const handler of this.globalHandlers) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().s[79]++;
      try {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[80]++;
        await handler(message);
      } catch (error) {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[81]++;
        console.error(`Error in global handler:`, error);
      }
    }
    // Type-specific handlers
    const handlers =
    /* istanbul ignore next */
    (cov_1e8yjr3qu8().s[82]++, this.handlers.get(message.type));
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[83]++;
    if (handlers) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[24][0]++;
      cov_1e8yjr3qu8().s[84]++;
      for (const handler of handlers) {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[85]++;
        try {
          /* istanbul ignore next */
          cov_1e8yjr3qu8().s[86]++;
          await handler(message);
        } catch (error) {
          /* istanbul ignore next */
          cov_1e8yjr3qu8().s[87]++;
          console.error(`Error in handler for ${message.type}:`, error);
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[24][1]++;
    }
  }
  on(type, handler) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[18]++;
    cov_1e8yjr3qu8().s[88]++;
    if (!this.handlers.has(type)) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[25][0]++;
      cov_1e8yjr3qu8().s[89]++;
      this.handlers.set(type, new Set());
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[25][1]++;
    }
    cov_1e8yjr3qu8().s[90]++;
    this.handlers.get(type).add(handler);
  }
  off(type, handler) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[19]++;
    const handlers =
    /* istanbul ignore next */
    (cov_1e8yjr3qu8().s[91]++, this.handlers.get(type));
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[92]++;
    if (handlers) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[26][0]++;
      cov_1e8yjr3qu8().s[93]++;
      handlers.delete(handler);
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[26][1]++;
    }
  }
  onAny(handler) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[20]++;
    cov_1e8yjr3qu8().s[94]++;
    this.globalHandlers.add(handler);
  }
  offAny(handler) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[21]++;
    cov_1e8yjr3qu8().s[95]++;
    this.globalHandlers.delete(handler);
  }
  addFilter(filter) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[22]++;
    cov_1e8yjr3qu8().s[96]++;
    this.filters.push(filter);
  }
  async send(message) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[23]++;
    const fullMessage =
    /* istanbul ignore next */
    (cov_1e8yjr3qu8().s[97]++, {
      ...message,
      source: this.source,
      timestamp: Date.now(),
      id: (0, uuid_1.generateUUID)()
    });
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[98]++;
    try {
      // Sanitize le message d'abord pour éviter les objets problématiques
      const sanitizedMessage =
      /* istanbul ignore next */
      (cov_1e8yjr3qu8().s[99]++, (0, serialization_1.sanitizeMessage)(fullMessage));
      // Nettoyer le message avant envoi pour éviter les erreurs de sérialisation
      const cleanMessage =
      /* istanbul ignore next */
      (cov_1e8yjr3qu8().s[100]++, serializeMessage(sanitizedMessage));
      /* istanbul ignore next */
      cov_1e8yjr3qu8().s[101]++;
      if (this.source === 'content') {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().b[27][0]++;
        cov_1e8yjr3qu8().s[102]++;
        await chrome.runtime.sendMessage(cleanMessage);
      } else {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().b[27][1]++;
        // Send to all tabs for content scripts
        const tabs =
        /* istanbul ignore next */
        (cov_1e8yjr3qu8().s[103]++, await chrome.tabs.query({}));
        // Routage intelligent : on ne cible que les tabs actifs ou pertinents
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[104]++;
        const isRelevantTab = tab => {
          /* istanbul ignore next */
          cov_1e8yjr3qu8().f[24]++;
          cov_1e8yjr3qu8().s[105]++;
          return /* istanbul ignore next */(cov_1e8yjr3qu8().b[28][0]++, tab.active) ||
          /* istanbul ignore next */
          (cov_1e8yjr3qu8().b[28][1]++, tab.url) &&
          /* istanbul ignore next */
          (cov_1e8yjr3qu8().b[28][2]++, tab.url.includes('symbiont'));
        };
        const activeTabs =
        /* istanbul ignore next */
        (cov_1e8yjr3qu8().s[106]++, tabs.filter(isRelevantTab));
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[107]++;
        for (const tab of activeTabs) {
          /* istanbul ignore next */
          cov_1e8yjr3qu8().s[108]++;
          if (tab.id) {
            /* istanbul ignore next */
            cov_1e8yjr3qu8().b[29][0]++;
            cov_1e8yjr3qu8().s[109]++;
            chrome.tabs.sendMessage(tab.id, cleanMessage).catch(() => {
              /* istanbul ignore next */
              cov_1e8yjr3qu8().f[25]++;
            } // Ignore errors for inactive tabs
            );
          } else
          /* istanbul ignore next */
          {
            cov_1e8yjr3qu8().b[29][1]++;
          }
        }
        // Also send to runtime for popup/background
        /* istanbul ignore next */
        cov_1e8yjr3qu8().s[110]++;
        chrome.runtime.sendMessage(cleanMessage).catch(() => {
          /* istanbul ignore next */
          cov_1e8yjr3qu8().f[26]++;
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().s[111]++;
      console.error('Error sending message:', error);
    }
  }
  // Ajout pour compatibilité content script
  sendToBackground(message) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[27]++;
    cov_1e8yjr3qu8().s[112]++;
    this.send(message);
  }
  emit(type, payload) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[28]++;
    // Appel direct des handlers si besoin (mock minimal)
    const handlers =
    /* istanbul ignore next */
    (cov_1e8yjr3qu8().s[113]++, this.handlers.get(type));
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[114]++;
    if (handlers) {
      /* istanbul ignore next */
      cov_1e8yjr3qu8().b[30][0]++;
      cov_1e8yjr3qu8().s[115]++;
      handlers.forEach(handler => {
        /* istanbul ignore next */
        cov_1e8yjr3qu8().f[29]++;
        cov_1e8yjr3qu8().s[116]++;
        return handler({
          type,
          payload
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_1e8yjr3qu8().b[30][1]++;
    }
  }
  // @ts-expect-error Variables réservées pour usage futur
  handleMessage(message, targetFrame) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[30]++;
    cov_1e8yjr3qu8().s[117]++;
    // Handle cross-frame messages
    console.log('Handling message:', message);
  }
  // @ts-expect-error Paramètre réservé pour usage futur
  onMessage(message, sender, sendResponse) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[31]++;
    cov_1e8yjr3qu8().s[118]++;
    // Handle incoming message
    console.log('Received message:', message);
    /* istanbul ignore next */
    cov_1e8yjr3qu8().s[119]++;
    return true;
  }
  // @ts-expect-error Variables réservées pour usage futur
  sendToFrame(handleMessage, targetFrame, payload) {
    /* istanbul ignore next */
    cov_1e8yjr3qu8().f[32]++;
    cov_1e8yjr3qu8().s[120]++;
    // Send message to frame
    console.log('Sending to frame:', targetFrame, payload);
  }
}
/* istanbul ignore next */
cov_1e8yjr3qu8().s[121]++;
exports.MessageBus = MessageBus;
/* istanbul ignore next */
cov_1e8yjr3qu8().s[122]++;
exports.default = MessageBus;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,