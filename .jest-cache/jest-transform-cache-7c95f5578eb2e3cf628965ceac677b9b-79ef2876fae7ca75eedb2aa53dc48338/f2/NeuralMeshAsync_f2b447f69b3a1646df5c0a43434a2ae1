4c52e269a9aa7fbcf9dcfc4c4edaecb8
"use strict";

// Version asynchrone de NeuralMesh utilisant Web Workers
// Décharge les calculs intensifs vers un thread séparé
/* istanbul ignore next */
function cov_1ws59xrqcx() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/NeuralMeshAsync.ts";
  var hash = "71dd78e29d2ab15a3e9b919e1af72b0ad7e656f2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/NeuralMeshAsync.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 62
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 33
        }
      },
      "2": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 54
        }
      },
      "3": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "4": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 60
        }
      },
      "5": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 37
        }
      },
      "7": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "8": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 33
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 27
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 43
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 37
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 39
        }
      },
      "14": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "15": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 115
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 32
        }
      },
      "18": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "19": {
        start: {
          line: 40,
          column: 31
        },
        end: {
          line: 46,
          column: 50
        }
      },
      "20": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 70
        }
      },
      "21": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 72
        }
      },
      "22": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 68
        }
      },
      "23": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 112
        }
      },
      "24": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 31
        }
      },
      "25": {
        start: {
          line: 61,
          column: 54
        },
        end: {
          line: 61,
          column: 64
        }
      },
      "26": {
        start: {
          line: 62,
          column: 26
        },
        end: {
          line: 62,
          column: 56
        }
      },
      "27": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "28": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 139
        }
      },
      "29": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 19
        }
      },
      "30": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 40
        }
      },
      "31": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 42
        }
      },
      "32": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 54
        }
      },
      "33": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "34": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 39
        }
      },
      "35": {
        start: {
          line: 75,
          column: 13
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "36": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 57
        }
      },
      "37": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 134
        }
      },
      "38": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "39": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 34
        }
      },
      "40": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 55
        }
      },
      "41": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 39
        }
      },
      "42": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 108,
          column: 11
        }
      },
      "43": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "44": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 74
        }
      },
      "45": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 23
        }
      },
      "46": {
        start: {
          line: 100,
          column: 23
        },
        end: {
          line: 100,
          column: 112
        }
      },
      "47": {
        start: {
          line: 101,
          column: 28
        },
        end: {
          line: 104,
          column: 25
        }
      },
      "48": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 50
        }
      },
      "49": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 71
        }
      },
      "50": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 73
        }
      },
      "51": {
        start: {
          line: 106,
          column: 28
        },
        end: {
          line: 106,
          column: 49
        }
      },
      "52": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 45
        }
      },
      "53": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 30
        }
      },
      "54": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 50
        }
      },
      "55": {
        start: {
          line: 117,
          column: 23
        },
        end: {
          line: 117,
          column: 26
        }
      },
      "56": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 105
        }
      },
      "57": {
        start: {
          line: 124,
          column: 21
        },
        end: {
          line: 124,
          column: 54
        }
      },
      "58": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 33
        }
      },
      "59": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 36
        }
      },
      "60": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "61": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 87
        }
      },
      "62": {
        start: {
          line: 135,
          column: 27
        },
        end: {
          line: 135,
          column: 75
        }
      },
      "63": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "64": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 45
        }
      },
      "65": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 54
        }
      },
      "66": {
        start: {
          line: 145,
          column: 21
        },
        end: {
          line: 145,
          column: 43
        }
      },
      "67": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "68": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 144
        }
      },
      "69": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 19
        }
      },
      "70": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 44
        }
      },
      "71": {
        start: {
          line: 156,
          column: 26
        },
        end: {
          line: 156,
          column: 43
        }
      },
      "72": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 178,
          column: 77
        }
      },
      "73": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 34
        }
      },
      "74": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "75": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 169,
          column: 19
        }
      },
      "76": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 166,
          column: 113
        }
      },
      "77": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 168,
          column: 41
        }
      },
      "78": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 37
        }
      },
      "79": {
        start: {
          line: 176,
          column: 35
        },
        end: {
          line: 176,
          column: 64
        }
      },
      "80": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 58
        }
      },
      "81": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "82": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "83": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 56
        }
      },
      "84": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "85": {
        start: {
          line: 192,
          column: 35
        },
        end: {
          line: 192,
          column: 68
        }
      },
      "86": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 199,
          column: 13
        }
      },
      "87": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 195,
          column: 29
        }
      },
      "88": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 195,
          column: 29
        }
      },
      "89": {
        start: {
          line: 196,
          column: 42
        },
        end: {
          line: 196,
          column: 82
        }
      },
      "90": {
        start: {
          line: 197,
          column: 38
        },
        end: {
          line: 197,
          column: 94
        }
      },
      "91": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 81
        }
      },
      "92": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 206,
          column: 38
        }
      },
      "93": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 49
        }
      },
      "94": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "95": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "96": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 223,
          column: 19
        }
      },
      "97": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 225,
          column: 51
        }
      },
      "98": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 38
        }
      },
      "99": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 102
        }
      },
      "100": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 34
        }
      },
      "101": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "102": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "103": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 246,
          column: 17
        }
      },
      "104": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 244,
          column: 92
        }
      },
      "105": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 245,
          column: 85
        }
      },
      "106": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "107": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 254,
          column: 13
        }
      },
      "108": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 80
        }
      },
      "109": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 253,
          column: 65
        }
      },
      "110": {
        start: {
          line: 269,
          column: 28
        },
        end: {
          line: 269,
          column: 29
        }
      },
      "111": {
        start: {
          line: 270,
          column: 24
        },
        end: {
          line: 270,
          column: 25
        }
      },
      "112": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "113": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 272,
          column: 50
        }
      },
      "114": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 24
        }
      },
      "115": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 61
        }
      },
      "116": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "117": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "118": {
        start: {
          line: 283,
          column: 31
        },
        end: {
          line: 283,
          column: 109
        }
      },
      "119": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 39
        }
      },
      "120": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 118
        }
      },
      "121": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 40
        }
      },
      "122": {
        start: {
          line: 297,
          column: 26
        },
        end: {
          line: 297,
          column: 27
        }
      },
      "123": {
        start: {
          line: 298,
          column: 30
        },
        end: {
          line: 298,
          column: 31
        }
      },
      "124": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 306,
          column: 9
        }
      },
      "125": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 305,
          column: 13
        }
      },
      "126": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 304,
          column: 17
        }
      },
      "127": {
        start: {
          line: 302,
          column: 20
        },
        end: {
          line: 302,
          column: 63
        }
      },
      "128": {
        start: {
          line: 303,
          column: 20
        },
        end: {
          line: 303,
          column: 38
        }
      },
      "129": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 71
        }
      },
      "130": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 323,
          column: 10
        }
      },
      "131": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "132": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 39
        }
      },
      "133": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "134": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 346,
          column: 13
        }
      },
      "135": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 340,
          column: 19
        }
      },
      "136": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 341,
          column: 40
        }
      },
      "137": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 344,
          column: 110
        }
      },
      "138": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 345,
          column: 41
        }
      },
      "139": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 31
        }
      },
      "140": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 47
        }
      },
      "141": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 46
        }
      },
      "142": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 52
        }
      },
      "143": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 53
        }
      },
      "144": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 47
        }
      },
      "145": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 49
        }
      },
      "146": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 65
        }
      },
      "147": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 64
        }
      },
      "148": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 64
        }
      },
      "149": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 66
        }
      },
      "150": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 64
        }
      },
      "151": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 33
        }
      },
      "152": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "153": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 36
        }
      },
      "154": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 31
        }
      },
      "155": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 37
        }
      },
      "156": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 60
        }
      },
      "157": {
        start: {
          line: 390,
          column: 25
        },
        end: {
          line: 390,
          column: 59
        }
      },
      "158": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 37
        }
      },
      "159": {
        start: {
          line: 397,
          column: 28
        },
        end: {
          line: 397,
          column: 97
        }
      },
      "160": {
        start: {
          line: 399,
          column: 27
        },
        end: {
          line: 399,
          column: 28
        }
      },
      "161": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 408,
          column: 9
        }
      },
      "162": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 407,
          column: 13
        }
      },
      "163": {
        start: {
          line: 403,
          column: 16
        },
        end: {
          line: 403,
          column: 43
        }
      },
      "164": {
        start: {
          line: 409,
          column: 28
        },
        end: {
          line: 409,
          column: 54
        }
      },
      "165": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 56
        }
      },
      "166": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 421,
          column: 10
        }
      },
      "167": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 435,
          column: 10
        }
      },
      "168": {
        start: {
          line: 429,
          column: 92
        },
        end: {
          line: 432,
          column: 13
        }
      },
      "169": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 446,
          column: 9
        }
      },
      "170": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 31
        }
      },
      "171": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 445,
          column: 13
        }
      },
      "172": {
        start: {
          line: 444,
          column: 16
        },
        end: {
          line: 444,
          column: 41
        }
      },
      "173": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 452,
          column: 9
        }
      },
      "174": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 448,
          column: 37
        }
      },
      "175": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 451,
          column: 13
        }
      },
      "176": {
        start: {
          line: 450,
          column: 16
        },
        end: {
          line: 450,
          column: 58
        }
      },
      "177": {
        start: {
          line: 453,
          column: 8
        },
        end: {
          line: 458,
          column: 9
        }
      },
      "178": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 454,
          column: 37
        }
      },
      "179": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 457,
          column: 13
        }
      },
      "180": {
        start: {
          line: 456,
          column: 16
        },
        end: {
          line: 456,
          column: 53
        }
      },
      "181": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 463,
          column: 9
        }
      },
      "182": {
        start: {
          line: 460,
          column: 12
        },
        end: {
          line: 460,
          column: 82
        }
      },
      "183": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 461,
          column: 86
        }
      },
      "184": {
        start: {
          line: 462,
          column: 12
        },
        end: {
          line: 462,
          column: 72
        }
      },
      "185": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 469,
          column: 27
        }
      },
      "186": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 470,
          column: 33
        }
      },
      "187": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 471,
          column: 33
        }
      },
      "188": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 472,
          column: 37
        }
      },
      "189": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 473,
          column: 39
        }
      },
      "190": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 474,
          column: 32
        }
      },
      "191": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 475,
          column: 35
        }
      },
      "192": {
        start: {
          line: 481,
          column: 23
        },
        end: {
          line: 481,
          column: 25
        }
      },
      "193": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 484,
          column: 9
        }
      },
      "194": {
        start: {
          line: 483,
          column: 12
        },
        end: {
          line: 483,
          column: 51
        }
      },
      "195": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 487,
          column: 9
        }
      },
      "196": {
        start: {
          line: 486,
          column: 12
        },
        end: {
          line: 486,
          column: 57
        }
      },
      "197": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 490,
          column: 9
        }
      },
      "198": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 489,
          column: 87
        }
      },
      "199": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 493,
          column: 9
        }
      },
      "200": {
        start: {
          line: 492,
          column: 12
        },
        end: {
          line: 492,
          column: 47
        }
      },
      "201": {
        start: {
          line: 495,
          column: 31
        },
        end: {
          line: 495,
          column: 40
        }
      },
      "202": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 501,
          column: 9
        }
      },
      "203": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 39
        }
      },
      "204": {
        start: {
          line: 498,
          column: 12
        },
        end: {
          line: 500,
          column: 13
        }
      },
      "205": {
        start: {
          line: 499,
          column: 16
        },
        end: {
          line: 499,
          column: 50
        }
      },
      "206": {
        start: {
          line: 502,
          column: 30
        },
        end: {
          line: 502,
          column: 105
        }
      },
      "207": {
        start: {
          line: 502,
          column: 77
        },
        end: {
          line: 502,
          column: 104
        }
      },
      "208": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 505,
          column: 9
        }
      },
      "209": {
        start: {
          line: 504,
          column: 12
        },
        end: {
          line: 504,
          column: 71
        }
      },
      "210": {
        start: {
          line: 506,
          column: 8
        },
        end: {
          line: 509,
          column: 10
        }
      },
      "211": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 518,
          column: 11
        }
      },
      "212": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 517,
          column: 34
        }
      },
      "213": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 519,
          column: 39
        }
      },
      "214": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 524,
          column: 9
        }
      },
      "215": {
        start: {
          line: 522,
          column: 12
        },
        end: {
          line: 522,
          column: 36
        }
      },
      "216": {
        start: {
          line: 523,
          column: 12
        },
        end: {
          line: 523,
          column: 31
        }
      },
      "217": {
        start: {
          line: 526,
          column: 8
        },
        end: {
          line: 526,
          column: 27
        }
      },
      "218": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 527,
          column: 33
        }
      },
      "219": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 33
        }
      },
      "220": {
        start: {
          line: 529,
          column: 8
        },
        end: {
          line: 529,
          column: 33
        }
      },
      "221": {
        start: {
          line: 532,
          column: 0
        },
        end: {
          line: 532,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 29
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 23
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 37
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 60
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 29
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 82
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 85,
            column: 39
          },
          end: {
            line: 85,
            column: 40
          }
        },
        loc: {
          start: {
            line: 85,
            column: 64
          },
          end: {
            line: 88,
            column: 9
          }
        },
        line: 85
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        loc: {
          start: {
            line: 94,
            column: 55
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 94
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 95,
            column: 27
          },
          end: {
            line: 95,
            column: 28
          }
        },
        loc: {
          start: {
            line: 95,
            column: 48
          },
          end: {
            line: 108,
            column: 9
          }
        },
        line: 95
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 101,
            column: 39
          },
          end: {
            line: 101,
            column: 40
          }
        },
        loc: {
          start: {
            line: 101,
            column: 45
          },
          end: {
            line: 104,
            column: 13
          }
        },
        line: 101
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 45
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 113
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        loc: {
          start: {
            line: 123,
            column: 32
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 123
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        loc: {
          start: {
            line: 131,
            column: 40
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 131
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 29
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 144
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 22
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 155
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 157,
            column: 48
          },
          end: {
            line: 157,
            column: 49
          }
        },
        loc: {
          start: {
            line: 157,
            column: 54
          },
          end: {
            line: 178,
            column: 9
          }
        },
        line: 157
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 165,
            column: 25
          },
          end: {
            line: 165,
            column: 26
          }
        },
        loc: {
          start: {
            line: 165,
            column: 34
          },
          end: {
            line: 169,
            column: 17
          }
        },
        line: 165
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 183
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        loc: {
          start: {
            line: 205,
            column: 15
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 205
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 26
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 211
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 217,
            column: 4
          },
          end: {
            line: 217,
            column: 5
          }
        },
        loc: {
          start: {
            line: 217,
            column: 30
          },
          end: {
            line: 235,
            column: 5
          }
        },
        line: 217
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 239,
            column: 4
          },
          end: {
            line: 239,
            column: 5
          }
        },
        loc: {
          start: {
            line: 239,
            column: 21
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 239
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 34
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 260
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 24
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 267
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 280,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        loc: {
          start: {
            line: 280,
            column: 35
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 280
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 296,
            column: 5
          }
        },
        loc: {
          start: {
            line: 296,
            column: 28
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 296
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        loc: {
          start: {
            line: 312,
            column: 13
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 312
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 23
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 328
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 354,
            column: 4
          },
          end: {
            line: 354,
            column: 5
          }
        },
        loc: {
          start: {
            line: 354,
            column: 26
          },
          end: {
            line: 370,
            column: 5
          }
        },
        line: 354
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 374,
            column: 5
          }
        },
        loc: {
          start: {
            line: 374,
            column: 20
          },
          end: {
            line: 384,
            column: 5
          }
        },
        line: 374
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        loc: {
          start: {
            line: 388,
            column: 24
          },
          end: {
            line: 392,
            column: 5
          }
        },
        line: 388
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        loc: {
          start: {
            line: 396,
            column: 27
          },
          end: {
            line: 411,
            column: 5
          }
        },
        line: 396
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 415,
            column: 4
          },
          end: {
            line: 415,
            column: 5
          }
        },
        loc: {
          start: {
            line: 415,
            column: 28
          },
          end: {
            line: 422,
            column: 5
          }
        },
        line: 415
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 426,
            column: 4
          },
          end: {
            line: 426,
            column: 5
          }
        },
        loc: {
          start: {
            line: 426,
            column: 16
          },
          end: {
            line: 436,
            column: 5
          }
        },
        line: 426
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 429,
            column: 68
          },
          end: {
            line: 429,
            column: 69
          }
        },
        loc: {
          start: {
            line: 429,
            column: 92
          },
          end: {
            line: 432,
            column: 13
          }
        },
        line: 429
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 440,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        loc: {
          start: {
            line: 440,
            column: 21
          },
          end: {
            line: 464,
            column: 5
          }
        },
        line: 440
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 468,
            column: 5
          }
        },
        loc: {
          start: {
            line: 468,
            column: 12
          },
          end: {
            line: 476,
            column: 5
          }
        },
        line: 468
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        loc: {
          start: {
            line: 480,
            column: 18
          },
          end: {
            line: 510,
            column: 5
          }
        },
        line: 480
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 502,
            column: 67
          },
          end: {
            line: 502,
            column: 68
          }
        },
        loc: {
          start: {
            line: 502,
            column: 77
          },
          end: {
            line: 502,
            column: 104
          }
        },
        line: 502
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 514,
            column: 4
          },
          end: {
            line: 514,
            column: 5
          }
        },
        loc: {
          start: {
            line: 514,
            column: 14
          },
          end: {
            line: 530,
            column: 5
          }
        },
        line: 514
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 516,
            column: 39
          },
          end: {
            line: 516,
            column: 40
          }
        },
        loc: {
          start: {
            line: 516,
            column: 56
          },
          end: {
            line: 518,
            column: 9
          }
        },
        line: 516
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 16
          },
          end: {
            line: 10,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 10,
            column: 25
          },
          end: {
            line: 10,
            column: 27
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: 75,
            column: 13
          },
          end: {
            line: 77,
            column: 9
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 75,
            column: 13
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 13
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "4": {
        loc: {
          start: {
            line: 94,
            column: 37
          },
          end: {
            line: 94,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 94,
            column: 49
          },
          end: {
            line: 94,
            column: 53
          }
        }],
        line: 94
      },
      "5": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "6": {
        loc: {
          start: {
            line: 123,
            column: 22
          },
          end: {
            line: 123,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 123,
            column: 29
          },
          end: {
            line: 123,
            column: 30
          }
        }],
        line: 123
      },
      "7": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "8": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 132,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 132,
            column: 35
          }
        }, {
          start: {
            line: 132,
            column: 39
          },
          end: {
            line: 132,
            column: 60
          }
        }],
        line: 132
      },
      "9": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "10": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "11": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 146,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 146,
            column: 17
          }
        }, {
          start: {
            line: 146,
            column: 21
          },
          end: {
            line: 146,
            column: 42
          }
        }],
        line: 146
      },
      "12": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: 171,
            column: 17
          },
          end: {
            line: 174,
            column: 13
          }
        }],
        line: 161
      },
      "13": {
        loc: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 161,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 161,
            column: 27
          }
        }, {
          start: {
            line: 161,
            column: 31
          },
          end: {
            line: 161,
            column: 47
          }
        }],
        line: 161
      },
      "14": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "15": {
        loc: {
          start: {
            line: 192,
            column: 35
          },
          end: {
            line: 192,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 35
          },
          end: {
            line: 192,
            column: 63
          }
        }, {
          start: {
            line: 192,
            column: 67
          },
          end: {
            line: 192,
            column: 68
          }
        }],
        line: 192
      },
      "16": {
        loc: {
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 195,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 16
          },
          end: {
            line: 195,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "17": {
        loc: {
          start: {
            line: 196,
            column: 42
          },
          end: {
            line: 196,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 42
          },
          end: {
            line: 196,
            column: 77
          }
        }, {
          start: {
            line: 196,
            column: 81
          },
          end: {
            line: 196,
            column: 82
          }
        }],
        line: 196
      },
      "18": {
        loc: {
          start: {
            line: 212,
            column: 15
          },
          end: {
            line: 212,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 15
          },
          end: {
            line: 212,
            column: 43
          }
        }, {
          start: {
            line: 212,
            column: 47
          },
          end: {
            line: 212,
            column: 48
          }
        }],
        line: 212
      },
      "19": {
        loc: {
          start: {
            line: 217,
            column: 17
          },
          end: {
            line: 217,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 217,
            column: 24
          },
          end: {
            line: 217,
            column: 28
          }
        }],
        line: 217
      },
      "20": {
        loc: {
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        }, {
          start: {
            line: 227,
            column: 17
          },
          end: {
            line: 229,
            column: 13
          }
        }],
        line: 219
      },
      "21": {
        loc: {
          start: {
            line: 219,
            column: 16
          },
          end: {
            line: 219,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 16
          },
          end: {
            line: 219,
            column: 27
          }
        }, {
          start: {
            line: 219,
            column: 31
          },
          end: {
            line: 219,
            column: 47
          }
        }],
        line: 219
      },
      "22": {
        loc: {
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 246,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 246,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "23": {
        loc: {
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 254,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 254,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "24": {
        loc: {
          start: {
            line: 275,
            column: 15
          },
          end: {
            line: 275,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 275,
            column: 31
          },
          end: {
            line: 275,
            column: 56
          }
        }, {
          start: {
            line: 275,
            column: 59
          },
          end: {
            line: 275,
            column: 60
          }
        }],
        line: 275
      },
      "25": {
        loc: {
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "26": {
        loc: {
          start: {
            line: 282,
            column: 16
          },
          end: {
            line: 282,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 282,
            column: 16
          },
          end: {
            line: 282,
            column: 27
          }
        }, {
          start: {
            line: 282,
            column: 31
          },
          end: {
            line: 282,
            column: 47
          }
        }],
        line: 282
      },
      "27": {
        loc: {
          start: {
            line: 301,
            column: 16
          },
          end: {
            line: 304,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 16
          },
          end: {
            line: 304,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "28": {
        loc: {
          start: {
            line: 307,
            column: 15
          },
          end: {
            line: 307,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 307,
            column: 37
          },
          end: {
            line: 307,
            column: 66
          }
        }, {
          start: {
            line: 307,
            column: 69
          },
          end: {
            line: 307,
            column: 70
          }
        }],
        line: 307
      },
      "29": {
        loc: {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 330
      },
      "30": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "31": {
        loc: {
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 378
      },
      "32": {
        loc: {
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 408,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 400
      },
      "33": {
        loc: {
          start: {
            line: 400,
            column: 12
          },
          end: {
            line: 400,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 400,
            column: 12
          },
          end: {
            line: 400,
            column: 23
          }
        }, {
          start: {
            line: 400,
            column: 27
          },
          end: {
            line: 400,
            column: 43
          }
        }],
        line: 400
      },
      "34": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "35": {
        loc: {
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 452,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 452,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 447
      },
      "36": {
        loc: {
          start: {
            line: 453,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 453
      },
      "37": {
        loc: {
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 463,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 8
          },
          end: {
            line: 463,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 459
      },
      "38": {
        loc: {
          start: {
            line: 460,
            column: 39
          },
          end: {
            line: 460,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 460,
            column: 39
          },
          end: {
            line: 460,
            column: 76
          }
        }, {
          start: {
            line: 460,
            column: 80
          },
          end: {
            line: 460,
            column: 81
          }
        }],
        line: 460
      },
      "39": {
        loc: {
          start: {
            line: 461,
            column: 41
          },
          end: {
            line: 461,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 461,
            column: 41
          },
          end: {
            line: 461,
            column: 80
          }
        }, {
          start: {
            line: 461,
            column: 84
          },
          end: {
            line: 461,
            column: 85
          }
        }],
        line: 461
      },
      "40": {
        loc: {
          start: {
            line: 462,
            column: 34
          },
          end: {
            line: 462,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 462,
            column: 34
          },
          end: {
            line: 462,
            column: 66
          }
        }, {
          start: {
            line: 462,
            column: 70
          },
          end: {
            line: 462,
            column: 71
          }
        }],
        line: 462
      },
      "41": {
        loc: {
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 484,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 484,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 482
      },
      "42": {
        loc: {
          start: {
            line: 485,
            column: 8
          },
          end: {
            line: 487,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 485,
            column: 8
          },
          end: {
            line: 487,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 485
      },
      "43": {
        loc: {
          start: {
            line: 488,
            column: 8
          },
          end: {
            line: 490,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 488,
            column: 8
          },
          end: {
            line: 490,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 488
      },
      "44": {
        loc: {
          start: {
            line: 491,
            column: 8
          },
          end: {
            line: 493,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 8
          },
          end: {
            line: 493,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "45": {
        loc: {
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 491,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 491,
            column: 12
          },
          end: {
            line: 491,
            column: 23
          }
        }, {
          start: {
            line: 491,
            column: 27
          },
          end: {
            line: 491,
            column: 44
          }
        }],
        line: 491
      },
      "46": {
        loc: {
          start: {
            line: 503,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 503,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 503
      },
      "47": {
        loc: {
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 524,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 8
          },
          end: {
            line: 524,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 521
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/NeuralMeshAsync.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/NeuralMeshAsync.ts"],
      sourcesContent: ["// Version asynchrone de NeuralMesh utilisant Web Workers\r\n// D\xE9charge les calculs intensifs vers un thread s\xE9par\xE9\r\n\r\nimport { INeuralMesh } from './interfaces/INeuralMesh';\r\nimport { WorkerMessage, WorkerResponse } from '../workers/NeuralWorker';\r\nimport { errorHandler } from './utils/ErrorHandler';\r\nimport { SecureRandom } from '../shared/utils/secureRandom';\nimport { logger } from '@shared/utils/secureLogger';\n\r\ninterface NeuralNode {\r\n  id: string;\r\n  type: 'input' | 'hidden' | 'output';\r\n  activation: number;\r\n  bias: number;\r\n}\r\n\r\ninterface NeuralConnection {\r\n  from: string;\r\n  to: string;\r\n  weight: number;\r\n  active: boolean;\r\n}\r\n\r\ninterface NeuralMeshAsyncConfig {\r\n  useWorker?: boolean;\r\n  fallbackToMainThread?: boolean;\r\n  maxRetries?: number;\r\n  timeoutMs?: number;\r\n}\r\n\r\nexport class NeuralMeshAsync implements INeuralMesh {\r\n  private nodes: Map<string, NeuralNode> = new Map();\r\n  private connections: Map<string, NeuralConnection[]> = new Map();\r\n  private activations: Map<string, number> = new Map();\r\n  // @ts-expect-error Taux r\xE9serv\xE9 pour usage futur\r\n  private learningRate: number = 0.01;\r\n  \r\n  // Worker management\r\n  private worker: Worker | null = null;\r\n  private networkId: string;\r\n  private workerReady = false;\r\n  private pendingOperations = new Map<string, {\r\n    resolve: (value: any) => void;\r\n    reject: (error: Error) => void;\r\n    timeout: NodeJS.Timeout;\r\n  }>();\r\n\r\n  // Performance tracking\r\n  private lastPropagationTime = 0;\r\n  private averageProcessingTime = 0;\r\n  private operationCount = 0;\r\n\r\n  // @ts-expect-error Configuration r\xE9serv\xE9e pour usage futur\r\n  private config: any;\r\n\r\n  constructor(config: NeuralMeshAsyncConfig = {}) {\r\n    this.config = {\r\n      useWorker: true,\r\n      fallbackToMainThread: true,\r\n      maxRetries: 3,\r\n      timeoutMs: 5000,\r\n      ...config\r\n    };\r\n    this.networkId = `network_${Date.now()}_${SecureRandom.random().toString(36).substr(2, 9)}`;\r\n    this.initializeWorker();\r\n  }\r\n\r\n  /**\r\n   * Initialise le Web Worker\r\n   */\r\n  private initializeWorker(): void {\r\n    try {\r\n      // Dans un environnement de navigateur, nous devons cr\xE9er le worker diff\xE9remment\r\n      const workerBlob = new Blob([\r\n        // Contenu du worker en tant que string (pour contourner les limitations)\r\n        `\r\n        // Worker code sera inject\xE9 ici lors du build\r\n        importScripts('./workers/NeuralWorker.js');\r\n        `\r\n      ], { type: 'application/javascript' });\r\n      \r\n      this.worker = new Worker(URL.createObjectURL(workerBlob));\r\n      this.worker.onmessage = this.handleWorkerMessage.bind(this);\r\n      this.worker.onerror = this.handleWorkerError.bind(this);\r\n      \r\n    } catch (error) {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'initializeWorker', error, 'warning');\r\n      // Fallback : mode synchrone\r\n      this.worker = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * G\xE8re les messages du worker\r\n   */\r\n  private handleWorkerMessage(event: MessageEvent<WorkerResponse>): void {\r\n    const { type, id, payload, processingTime } = event.data;\r\n    \r\n    const operation = this.pendingOperations.get(id);\r\n    if (!operation) {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'handleWorkerMessage', \r\n        `Unknown operation ID: ${id}`, 'warning');\r\n      return;\r\n    }\r\n\r\n    // Clear timeout et remove operation\r\n    clearTimeout(operation.timeout);\r\n    this.pendingOperations.delete(id);\r\n\r\n    // Update performance metrics\r\n    this.updatePerformanceMetrics(processingTime);\r\n\r\n    if (type === 'NEURAL_RESULT') {\r\n      operation.resolve(payload);\r\n    } else if (type === 'NEURAL_ERROR') {\r\n      operation.reject(new Error(payload.message));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * G\xE8re les erreurs du worker\r\n   */\r\n  private handleWorkerError(event: ErrorEvent): void {\r\n    errorHandler.logSimpleError('NeuralMeshAsync', 'handleWorkerError', \r\n      `Worker error: ${event.message}`, 'error');\r\n    \r\n    // Reject all pending operations\r\n    this.pendingOperations.forEach(({ reject, timeout }) => {\r\n      clearTimeout(timeout);\r\n      reject(new Error('Worker error occurred'));\r\n    });\r\n    this.pendingOperations.clear();\r\n  }\r\n\r\n  /**\r\n   * Envoie un message au worker avec timeout\r\n   */\r\n  private sendWorkerMessage<T>(\r\n    type: WorkerMessage['type'], \r\n    payload: any, \r\n    timeoutMs: number = 5000\r\n  ): Promise<T> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!this.worker) {\r\n        reject(new Error('Worker not available, using fallback'));\r\n        return;\r\n      }\r\n\r\n      const id = `${type}_${Date.now()}_${SecureRandom.random().toString(36).substr(2, 9)}`;\r\n      \r\n      const timeout = setTimeout(() => {\r\n        this.pendingOperations.delete(id);\r\n        reject(new Error(`Worker operation timeout: ${type}`));\r\n      }, timeoutMs);\r\n\r\n      this.pendingOperations.set(id, { resolve, reject, timeout });\r\n\r\n      const message: WorkerMessage = { type, id, payload };\r\n      this.worker.postMessage(message);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Met \xE0 jour les m\xE9triques de performance\r\n   */\r\n  private updatePerformanceMetrics(processingTime: number): void {\r\n    this.operationCount++;\r\n    this.lastPropagationTime = processingTime;\r\n    \r\n    // Moving average\r\n    const weight = 0.1;\r\n    this.averageProcessingTime = this.averageProcessingTime * (1 - weight) + processingTime * weight;\r\n  }\r\n\r\n  /**\r\n   * Ajoute un n\u0153ud au r\xE9seau\r\n   */\r\n  addNode(id: string, type: 'input' | 'hidden' | 'output', bias: number = 0): void {\r\n    const node: NeuralNode = { id, type, activation: 0, bias };\r\n    this.nodes.set(id, node);\r\n    this.activations.set(id, 0);\r\n  }\r\n\r\n  /**\r\n   * Ajoute une connexion entre deux n\u0153uds\r\n   */\r\n  addConnection(fromId: string, toId: string, weight: number): void {\r\n    if (!this.nodes.has(fromId) || !this.nodes.has(toId)) {\r\n      throw new Error(`Cannot connect non-existent nodes: ${fromId} -> ${toId}`);\r\n    }\r\n\r\n    const connection: NeuralConnection = { from: fromId, to: toId, weight, active: true };\r\n\r\n    if (!this.connections.has(fromId)) {\r\n      this.connections.set(fromId, []);\r\n    }\r\n    this.connections.get(fromId)!.push(connection);\r\n  }\r\n\r\n  /**\r\n   * Stimule un n\u0153ud d'entr\xE9e\r\n   */\r\n  stimulate(nodeId: string, value: number): void {\r\n    const node = this.nodes.get(nodeId);\r\n    if (!node || node.type !== 'input') {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'stimulate', \r\n        `Cannot stimulate non-input node: ${nodeId}`, 'warning');\r\n      return;\r\n    }\r\n    this.activations.set(nodeId, value);\r\n  }\r\n\r\n  /**\r\n   * Propagation des signaux dans le r\xE9seau\r\n   */\r\n  async propagate(): Promise<void> {\r\n    const startTime = performance.now();\r\n    \r\n    errorHandler.safeExecute(\r\n      () => {\r\n        // Increment operation count\r\n        this.operationCount++;\r\n        \r\n        // Try worker first if available\r\n        if (this.worker && this.workerReady) {\r\n          this.sendWorkerMessage('NEURAL_PROPAGATE', {\r\n            networkId: this.networkId,\r\n            activations: Object.fromEntries(this.activations)\r\n          }).catch(error => {\r\n            errorHandler.logSimpleError('NeuralMeshAsync', 'propagate', error, 'warning');\r\n            // Fallback to sync\r\n            this.propagateSync();\r\n          });\r\n        } else {\r\n          // Fallback to synchronous propagation\r\n          this.propagateSync();\r\n        }\r\n        \r\n        // Update performance metrics\r\n        const processingTime = performance.now() - startTime;\r\n        this.updatePerformanceMetrics(processingTime);\r\n      },\r\n      undefined,\r\n      { component: 'NeuralMeshAsync', method: 'propagate' }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Propagation synchrone (fallback)\r\n   */\r\n  private propagateSync(): void {\r\n    // Reset non-input activations\r\n    for (const [nodeId, node] of this.nodes) {\r\n      if (node.type !== 'input') {\r\n        this.activations.set(nodeId, node.bias);\r\n      }\r\n    }\r\n\r\n    // Propagate through connections\r\n    for (const [fromId, connections] of this.connections) {\r\n      const fromActivation = this.activations.get(fromId) || 0;\r\n      \r\n      for (const connection of connections) {\r\n        if (!connection.active) continue;\r\n        \r\n        const currentActivation = this.activations.get(connection.to) || 0;\r\n        const newActivation = currentActivation + (fromActivation * connection.weight);\r\n        this.activations.set(connection.to, this.sigmoid(newActivation));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fonction d'activation sigmo\xEFde\r\n   */\r\n  private sigmoid(x: number): number {\r\n    return 1 / (1 + Math.exp(-x));\r\n  }\r\n\r\n  /**\r\n   * R\xE9cup\xE8re l'activation d'un n\u0153ud\r\n   */\r\n  getActivation(nodeId: string): number {\r\n    return this.activations.get(nodeId) || 0;\r\n  }\r\n\r\n  /**\r\n   * Applique une mutation al\xE9atoire au r\xE9seau (version async)\r\n   */\r\n  async mutate(rate: number = 0.05): Promise<void> {\r\n    try {\r\n      if (this.worker && this.workerReady) {\r\n        await this.sendWorkerMessage('NEURAL_MUTATE', {\r\n          networkId: this.networkId,\r\n          rate\r\n        });\r\n        \r\n        // Sync back the mutations to local state\r\n        await this.syncNetworkFromWorker();\r\n      } else {\r\n        this.mutateSync(rate);\r\n      }\r\n    } catch (error) {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'mutate', error, 'warning');\r\n      this.mutateSync(rate);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mutation synchrone (fallback)\r\n   */\r\n  private mutateSync(rate: number): void {\r\n    // Mutate connection weights\r\n    for (const connections of this.connections.values()) {\r\n      for (const connection of connections) {\r\n        if (SecureRandom.random() < rate) {\r\n          connection.weight += (SecureRandom.random() - 0.5) * 0.2;\r\n          connection.weight = Math.max(-2, Math.min(2, connection.weight));\r\n        }\r\n      }\r\n    }\r\n\r\n    // Mutate node biases\r\n    for (const node of this.nodes.values()) {\r\n      if (SecureRandom.random() < rate) {\r\n        node.bias += (SecureRandom.random() - 0.5) * 0.1;\r\n        node.bias = Math.max(-1, Math.min(1, node.bias));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Synchronise l'\xE9tat du r\xE9seau depuis le worker\r\n   */\r\n  private async syncNetworkFromWorker(): Promise<void> {\r\n    // Implementation would sync worker state back to local state\r\n    // For now, we'll skip this complex synchronization\r\n  }\r\n\r\n  /**\r\n   * Mesure l'activit\xE9 neurale globale - impl\xE9mentation unifi\xE9e\r\n   */\r\n  getNeuralActivity(): number {\r\n    // Synchronous fallback implementation\r\n    let totalActivity = 0;\r\n    let nodeCount = 0;\r\n\r\n    for (const activation of this.activations.values()) {\r\n      totalActivity += Math.abs(activation);\r\n      nodeCount++;\r\n    }\r\n\r\n    return nodeCount > 0 ? totalActivity / nodeCount : 0;\r\n  }\r\n\r\n  /**\r\n   * Version asynchrone de getNeuralActivity pour calculs avanc\xE9s\r\n   */\r\n  async getNeuralActivityAsync(): Promise<number> {\r\n    try {\r\n      if (this.worker && this.workerReady) {\r\n        const result = await this.sendWorkerMessage<{\r\n          activity: number;\r\n          connectionStrength: number;\r\n          nodeCount: number;\r\n          connectionCount: number;\r\n        }>('NEURAL_ACTIVITY', { networkId: this.networkId });\r\n        \r\n        return result.activity;\r\n      }\r\n    } catch (error) {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'getNeuralActivityAsync', error, 'warning');\r\n    }\r\n\r\n    // Fallback synchrone\r\n    return this.getNeuralActivity();\r\n  }\r\n\r\n  /**\r\n   * Mesure la force moyenne des connexions\r\n   */\r\n  getConnectionStrength(): number {\r\n    let totalWeight = 0;\r\n    let connectionCount = 0;\r\n\r\n    for (const connections of this.connections.values()) {\r\n      for (const connection of connections) {\r\n        if (connection.active) {\r\n          totalWeight += Math.abs(connection.weight);\r\n          connectionCount++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return connectionCount > 0 ? totalWeight / connectionCount : 0;\r\n  }\r\n\r\n  /**\r\n   * Export JSON pour debug/sauvegarde\r\n   */\r\n  toJSON(): any {\r\n    return {\r\n      nodes: Array.from(this.nodes.values()),\r\n      connections: Array.from(this.connections.values()).flat(),\r\n      activations: Object.fromEntries(this.activations),\r\n      performance: {\r\n        lastPropagationTime: this.lastPropagationTime,\r\n        averageProcessingTime: this.averageProcessingTime,\r\n        operationCount: this.operationCount,\r\n        workerReady: this.workerReady\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialise le r\xE9seau neuronal\r\n   */\r\n  async initialize(): Promise<void> {\r\n    // Setup default network if empty\r\n    if (this.nodes.size === 0) {\r\n      this.setupDefaultNetwork();\r\n    }\r\n\r\n    // Initialize worker network\r\n    if (this.worker) {\r\n      try {\r\n        await this.sendWorkerMessage('NEURAL_INIT', {\r\n          networkId: this.networkId,\r\n          nodes: Array.from(this.nodes.values()),\r\n          connections: Array.from(this.connections.values()).flat()\r\n        });\r\n        this.workerReady = true;\r\n      } catch (error) {\r\n        errorHandler.logSimpleError('NeuralMeshAsync', 'initialize', error, 'warning');\r\n        this.workerReady = false;\r\n      }\r\n    }\r\n    \r\n    // Perform initial propagation\r\n    await this.propagate();\r\n  }\r\n\r\n  /**\r\n   * Configure un r\xE9seau par d\xE9faut pour les tests\r\n   */\r\n  private setupDefaultNetwork(): void {\r\n    // Add input nodes\r\n    this.addNode('sensory_input', 'input');\r\n    this.addNode('memory_input', 'input');\r\n    \r\n    // Add hidden nodes\r\n    this.addNode('processing_1', 'hidden', 0.1);\r\n    this.addNode('processing_2', 'hidden', -0.1);\r\n    \r\n    // Add output nodes\r\n    this.addNode('motor_output', 'output');\r\n    this.addNode('emotion_output', 'output');\r\n    \r\n    // Connect the network\r\n    this.addConnection('sensory_input', 'processing_1', 0.8);\r\n    this.addConnection('memory_input', 'processing_2', 0.6);\r\n    this.addConnection('processing_1', 'motor_output', 0.9);\r\n    this.addConnection('processing_2', 'emotion_output', 0.7);\r\n    this.addConnection('processing_1', 'processing_2', 0.3);\r\n  }\r\n\r\n  /**\r\n   * Suspend neural processing\r\n   */\r\n  async suspend(): Promise<void> {\r\n    // Clear activations but keep structure\r\n    this.activations.clear();\r\n    \r\n    // Terminate worker if needed\r\n    if (this.worker) {\r\n      this.worker.terminate();\r\n      this.worker = null;\r\n      this.workerReady = false;\r\n    }\r\n    \r\n    logger.info('Neural mesh suspended');\r\n  }\r\n\r\n  /**\r\n   * Get CPU usage estimation\r\n   */\r\n  async getCPUUsage(): Promise<number> {\r\n    // Calculate based on processing time and operation frequency\r\n    const baseLoad = this.averageProcessingTime / 16.67; // Compare to 60fps frame time\r\n    return Math.min(1, baseLoad);\r\n  }\r\n\r\n  /**\r\n   * Get memory usage estimation\r\n   */\r\n  async getMemoryUsage(): Promise<number> {\r\n    const localMemory = (this.nodes.size + Array.from(this.connections.values()).length) * 64;\r\n    \r\n    // Add worker memory if available\r\n    let workerMemory = 0;\r\n    if (this.worker && this.workerReady) {\r\n      try {\r\n        // Would get actual worker stats, simplified for now\r\n        workerMemory = localMemory; // Estimate\r\n      } catch (error) {\r\n        // Ignore worker memory calculation error\r\n      }\r\n    }\r\n    \r\n    const totalMemory = localMemory + workerMemory;\r\n    return Math.min(1, totalMemory / (1024 * 1024)); // Convert to MB ratio\r\n  }\r\n\r\n  /**\r\n   * Get performance metrics\r\n   */\r\n  getPerformanceMetrics(): {\r\n    lastPropagationTime: number;\r\n    averageProcessingTime: number;\r\n    operationCount: number;\r\n    workerReady: boolean;\r\n  } {\r\n    return {\r\n      lastPropagationTime: this.lastPropagationTime,\r\n      averageProcessingTime: this.averageProcessingTime,\r\n      operationCount: this.operationCount,\r\n      workerReady: this.workerReady\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Save current state for persistence\r\n   */\r\n  saveState(): any {\r\n    return {\r\n      nodes: Array.from(this.nodes.entries()),\r\n      connections: Array.from(this.connections.entries()).map(([key, connections]) => [\r\n        key,\r\n        connections\r\n      ]),\r\n      activations: Object.fromEntries(this.activations),\r\n      performance: this.getPerformanceMetrics()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Load state from saved data\r\n   */\r\n  loadState(state: any): void {\r\n    if (state.nodes) {\r\n      this.nodes.clear();\r\n      for (const [id, node] of state.nodes) {\r\n        this.nodes.set(id, node as NeuralNode);\r\n      }\r\n    }\r\n    \r\n    if (state.connections) {\r\n      this.connections.clear();\r\n      for (const [fromId, connections] of state.connections) {\r\n        this.connections.set(fromId, connections as NeuralConnection[]);\r\n      }\r\n    }\r\n    \r\n    if (state.activations) {\r\n      this.activations.clear();\r\n      for (const [id, activation] of Object.entries(state.activations)) {\r\n        this.activations.set(id, activation as number);\r\n      }\r\n    }\r\n\r\n    if (state.performance) {\r\n      this.lastPropagationTime = state.performance.lastPropagationTime || 0;\r\n      this.averageProcessingTime = state.performance.averageProcessingTime || 0;\r\n      this.operationCount = state.performance.operationCount || 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset neural mesh to initial state\r\n   */\r\n  reset(): void {\r\n    this.nodes.clear();\r\n    this.connections.clear();\r\n    this.activations.clear();\r\n    this.lastPropagationTime = 0;\r\n    this.averageProcessingTime = 0;\r\n    this.operationCount = 0;\r\n    this.setupDefaultNetwork();\r\n  }\r\n\r\n  /**\r\n   * Health check for neural mesh\r\n   */\r\n  healthCheck(): { healthy: boolean; issues: string[] } {\r\n    const issues: string[] = [];\r\n    \r\n    if (this.nodes.size === 0) {\r\n      issues.push('No nodes in neural mesh');\r\n    }\r\n    \r\n    if (this.connections.size === 0) {\r\n      issues.push('No connections in neural mesh');\r\n    }\r\n\r\n    if (this.pendingOperations.size > 10) {\r\n      issues.push(`Too many pending operations: ${this.pendingOperations.size}`);\r\n    }\r\n\r\n    if (this.worker && !this.workerReady) {\r\n      issues.push('Worker is not ready');\r\n    }\r\n    \r\n    // Check for orphaned nodes\r\n    const connectedNodes = new Set<string>();\r\n    for (const [fromId, connections] of this.connections) {\r\n      connectedNodes.add(fromId);\r\n      for (const connection of connections) {\r\n        connectedNodes.add(connection.to);\r\n      }\r\n    }\r\n    \r\n    const orphanedNodes = Array.from(this.nodes.keys()).filter(\r\n      nodeId => !connectedNodes.has(nodeId)\r\n    );\r\n    \r\n    if (orphanedNodes.length > 0) {\r\n      issues.push(`Orphaned nodes: ${orphanedNodes.join(', ')}`);\r\n    }\r\n    \r\n    return {\r\n      healthy: issues.length === 0,\r\n      issues\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Cleanup resources\r\n   */\r\n  cleanup(): void {\r\n    // Clean up pending operations\r\n    this.pendingOperations.forEach(({ timeout }) => {\r\n      clearTimeout(timeout);\r\n    });\r\n    this.pendingOperations.clear();\r\n\r\n    // Terminate worker\r\n    if (this.worker) {\r\n      this.worker.terminate();\r\n      this.worker = null;\r\n    }\r\n\r\n    // Clear all data\r\n    this.nodes.clear();\r\n    this.connections.clear();\r\n    this.activations.clear();\r\n    this.workerReady = false;\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "71dd78e29d2ab15a3e9b919e1af72b0ad7e656f2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ws59xrqcx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ws59xrqcx();
cov_1ws59xrqcx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ws59xrqcx().s[1]++;
exports.NeuralMeshAsync = void 0;
const ErrorHandler_1 =
/* istanbul ignore next */
(cov_1ws59xrqcx().s[2]++, require("./utils/ErrorHandler"));
const secureRandom_1 =
/* istanbul ignore next */
(cov_1ws59xrqcx().s[3]++, require("../shared/utils/secureRandom"));
const secureLogger_1 =
/* istanbul ignore next */
(cov_1ws59xrqcx().s[4]++, require("@shared/utils/secureLogger"));
class NeuralMeshAsync {
  constructor(config =
  /* istanbul ignore next */
  (cov_1ws59xrqcx().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[0]++;
    cov_1ws59xrqcx().s[5]++;
    this.nodes = new Map();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[6]++;
    this.connections = new Map();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[7]++;
    this.activations = new Map();
    // @ts-expect-error Taux réservé pour usage futur
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[8]++;
    this.learningRate = 0.01;
    // Worker management
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[9]++;
    this.worker = null;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[10]++;
    this.workerReady = false;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[11]++;
    this.pendingOperations = new Map();
    // Performance tracking
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[12]++;
    this.lastPropagationTime = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[13]++;
    this.averageProcessingTime = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[14]++;
    this.operationCount = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[15]++;
    this.config = {
      useWorker: true,
      fallbackToMainThread: true,
      maxRetries: 3,
      timeoutMs: 5000,
      ...config
    };
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[16]++;
    this.networkId = `network_${Date.now()}_${secureRandom_1.SecureRandom.random().toString(36).substr(2, 9)}`;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[17]++;
    this.initializeWorker();
  }
  /**
   * Initialise le Web Worker
   */
  initializeWorker() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[1]++;
    cov_1ws59xrqcx().s[18]++;
    try {
      // Dans un environnement de navigateur, nous devons créer le worker différemment
      const workerBlob =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[19]++, new Blob([
      // Contenu du worker en tant que string (pour contourner les limitations)
      `
        // Worker code sera injecté ici lors du build
        importScripts('./workers/NeuralWorker.js');
        `], {
        type: 'application/javascript'
      }));
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[20]++;
      this.worker = new Worker(URL.createObjectURL(workerBlob));
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[21]++;
      this.worker.onmessage = this.handleWorkerMessage.bind(this);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[22]++;
      this.worker.onerror = this.handleWorkerError.bind(this);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[23]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'initializeWorker', error, 'warning');
      // Fallback : mode synchrone
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[24]++;
      this.worker = null;
    }
  }
  /**
   * Gère les messages du worker
   */
  handleWorkerMessage(event) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[2]++;
    const {
      type,
      id,
      payload,
      processingTime
    } =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[25]++, event.data);
    const operation =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[26]++, this.pendingOperations.get(id));
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[27]++;
    if (!operation) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[1][0]++;
      cov_1ws59xrqcx().s[28]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'handleWorkerMessage', `Unknown operation ID: ${id}`, 'warning');
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[29]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[1][1]++;
    }
    // Clear timeout et remove operation
    cov_1ws59xrqcx().s[30]++;
    clearTimeout(operation.timeout);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[31]++;
    this.pendingOperations.delete(id);
    // Update performance metrics
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[32]++;
    this.updatePerformanceMetrics(processingTime);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[33]++;
    if (type === 'NEURAL_RESULT') {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[2][0]++;
      cov_1ws59xrqcx().s[34]++;
      operation.resolve(payload);
    } else {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[2][1]++;
      cov_1ws59xrqcx().s[35]++;
      if (type === 'NEURAL_ERROR') {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[3][0]++;
        cov_1ws59xrqcx().s[36]++;
        operation.reject(new Error(payload.message));
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[3][1]++;
      }
    }
  }
  /**
   * Gère les erreurs du worker
   */
  handleWorkerError(event) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[3]++;
    cov_1ws59xrqcx().s[37]++;
    ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'handleWorkerError', `Worker error: ${event.message}`, 'error');
    // Reject all pending operations
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[38]++;
    this.pendingOperations.forEach(({
      reject,
      timeout
    }) => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[4]++;
      cov_1ws59xrqcx().s[39]++;
      clearTimeout(timeout);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[40]++;
      reject(new Error('Worker error occurred'));
    });
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[41]++;
    this.pendingOperations.clear();
  }
  /**
   * Envoie un message au worker avec timeout
   */
  sendWorkerMessage(type, payload, timeoutMs =
  /* istanbul ignore next */
  (cov_1ws59xrqcx().b[4][0]++, 5000)) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[5]++;
    cov_1ws59xrqcx().s[42]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[6]++;
      cov_1ws59xrqcx().s[43]++;
      if (!this.worker) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[5][0]++;
        cov_1ws59xrqcx().s[44]++;
        reject(new Error('Worker not available, using fallback'));
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[45]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[5][1]++;
      }
      const id =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[46]++, `${type}_${Date.now()}_${secureRandom_1.SecureRandom.random().toString(36).substr(2, 9)}`);
      const timeout =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[47]++, setTimeout(() => {
        /* istanbul ignore next */
        cov_1ws59xrqcx().f[7]++;
        cov_1ws59xrqcx().s[48]++;
        this.pendingOperations.delete(id);
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[49]++;
        reject(new Error(`Worker operation timeout: ${type}`));
      }, timeoutMs));
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[50]++;
      this.pendingOperations.set(id, {
        resolve,
        reject,
        timeout
      });
      const message =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[51]++, {
        type,
        id,
        payload
      });
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[52]++;
      this.worker.postMessage(message);
    });
  }
  /**
   * Met à jour les métriques de performance
   */
  updatePerformanceMetrics(processingTime) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[8]++;
    cov_1ws59xrqcx().s[53]++;
    this.operationCount++;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[54]++;
    this.lastPropagationTime = processingTime;
    // Moving average
    const weight =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[55]++, 0.1);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[56]++;
    this.averageProcessingTime = this.averageProcessingTime * (1 - weight) + processingTime * weight;
  }
  /**
   * Ajoute un nœud au réseau
   */
  addNode(id, type, bias =
  /* istanbul ignore next */
  (cov_1ws59xrqcx().b[6][0]++, 0)) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[9]++;
    const node =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[57]++, {
      id,
      type,
      activation: 0,
      bias
    });
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[58]++;
    this.nodes.set(id, node);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[59]++;
    this.activations.set(id, 0);
  }
  /**
   * Ajoute une connexion entre deux nœuds
   */
  addConnection(fromId, toId, weight) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[10]++;
    cov_1ws59xrqcx().s[60]++;
    if (
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[8][0]++, !this.nodes.has(fromId)) ||
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[8][1]++, !this.nodes.has(toId))) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[7][0]++;
      cov_1ws59xrqcx().s[61]++;
      throw new Error(`Cannot connect non-existent nodes: ${fromId} -> ${toId}`);
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[7][1]++;
    }
    const connection =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[62]++, {
      from: fromId,
      to: toId,
      weight,
      active: true
    });
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[63]++;
    if (!this.connections.has(fromId)) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[9][0]++;
      cov_1ws59xrqcx().s[64]++;
      this.connections.set(fromId, []);
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[9][1]++;
    }
    cov_1ws59xrqcx().s[65]++;
    this.connections.get(fromId).push(connection);
  }
  /**
   * Stimule un nœud d'entrée
   */
  stimulate(nodeId, value) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[11]++;
    const node =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[66]++, this.nodes.get(nodeId));
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[67]++;
    if (
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[11][0]++, !node) ||
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[11][1]++, node.type !== 'input')) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[10][0]++;
      cov_1ws59xrqcx().s[68]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'stimulate', `Cannot stimulate non-input node: ${nodeId}`, 'warning');
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[69]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[10][1]++;
    }
    cov_1ws59xrqcx().s[70]++;
    this.activations.set(nodeId, value);
  }
  /**
   * Propagation des signaux dans le réseau
   */
  async propagate() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[12]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[71]++, performance.now());
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[72]++;
    ErrorHandler_1.errorHandler.safeExecute(() => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[13]++;
      cov_1ws59xrqcx().s[73]++;
      // Increment operation count
      this.operationCount++;
      // Try worker first if available
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[74]++;
      if (
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[13][0]++, this.worker) &&
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[13][1]++, this.workerReady)) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[12][0]++;
        cov_1ws59xrqcx().s[75]++;
        this.sendWorkerMessage('NEURAL_PROPAGATE', {
          networkId: this.networkId,
          activations: Object.fromEntries(this.activations)
        }).catch(error => {
          /* istanbul ignore next */
          cov_1ws59xrqcx().f[14]++;
          cov_1ws59xrqcx().s[76]++;
          ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'propagate', error, 'warning');
          // Fallback to sync
          /* istanbul ignore next */
          cov_1ws59xrqcx().s[77]++;
          this.propagateSync();
        });
      } else {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[12][1]++;
        cov_1ws59xrqcx().s[78]++;
        // Fallback to synchronous propagation
        this.propagateSync();
      }
      // Update performance metrics
      const processingTime =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[79]++, performance.now() - startTime);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[80]++;
      this.updatePerformanceMetrics(processingTime);
    }, undefined, {
      component: 'NeuralMeshAsync',
      method: 'propagate'
    });
  }
  /**
   * Propagation synchrone (fallback)
   */
  propagateSync() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[15]++;
    cov_1ws59xrqcx().s[81]++;
    // Reset non-input activations
    for (const [nodeId, node] of this.nodes) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[82]++;
      if (node.type !== 'input') {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[14][0]++;
        cov_1ws59xrqcx().s[83]++;
        this.activations.set(nodeId, node.bias);
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[14][1]++;
      }
    }
    // Propagate through connections
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[84]++;
    for (const [fromId, connections] of this.connections) {
      const fromActivation =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[85]++,
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[15][0]++, this.activations.get(fromId)) ||
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[15][1]++, 0));
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[86]++;
      for (const connection of connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[87]++;
        if (!connection.active) {
          /* istanbul ignore next */
          cov_1ws59xrqcx().b[16][0]++;
          cov_1ws59xrqcx().s[88]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1ws59xrqcx().b[16][1]++;
        }
        const currentActivation =
        /* istanbul ignore next */
        (cov_1ws59xrqcx().s[89]++,
        /* istanbul ignore next */
        (cov_1ws59xrqcx().b[17][0]++, this.activations.get(connection.to)) ||
        /* istanbul ignore next */
        (cov_1ws59xrqcx().b[17][1]++, 0));
        const newActivation =
        /* istanbul ignore next */
        (cov_1ws59xrqcx().s[90]++, currentActivation + fromActivation * connection.weight);
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[91]++;
        this.activations.set(connection.to, this.sigmoid(newActivation));
      }
    }
  }
  /**
   * Fonction d'activation sigmoïde
   */
  sigmoid(x) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[16]++;
    cov_1ws59xrqcx().s[92]++;
    return 1 / (1 + Math.exp(-x));
  }
  /**
   * Récupère l'activation d'un nœud
   */
  getActivation(nodeId) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[17]++;
    cov_1ws59xrqcx().s[93]++;
    return /* istanbul ignore next */(cov_1ws59xrqcx().b[18][0]++, this.activations.get(nodeId)) ||
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[18][1]++, 0);
  }
  /**
   * Applique une mutation aléatoire au réseau (version async)
   */
  async mutate(rate =
  /* istanbul ignore next */
  (cov_1ws59xrqcx().b[19][0]++, 0.05)) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[18]++;
    cov_1ws59xrqcx().s[94]++;
    try {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[95]++;
      if (
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[21][0]++, this.worker) &&
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[21][1]++, this.workerReady)) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[20][0]++;
        cov_1ws59xrqcx().s[96]++;
        await this.sendWorkerMessage('NEURAL_MUTATE', {
          networkId: this.networkId,
          rate
        });
        // Sync back the mutations to local state
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[97]++;
        await this.syncNetworkFromWorker();
      } else {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[20][1]++;
        cov_1ws59xrqcx().s[98]++;
        this.mutateSync(rate);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[99]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'mutate', error, 'warning');
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[100]++;
      this.mutateSync(rate);
    }
  }
  /**
   * Mutation synchrone (fallback)
   */
  mutateSync(rate) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[19]++;
    cov_1ws59xrqcx().s[101]++;
    // Mutate connection weights
    for (const connections of this.connections.values()) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[102]++;
      for (const connection of connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[103]++;
        if (secureRandom_1.SecureRandom.random() < rate) {
          /* istanbul ignore next */
          cov_1ws59xrqcx().b[22][0]++;
          cov_1ws59xrqcx().s[104]++;
          connection.weight += (secureRandom_1.SecureRandom.random() - 0.5) * 0.2;
          /* istanbul ignore next */
          cov_1ws59xrqcx().s[105]++;
          connection.weight = Math.max(-2, Math.min(2, connection.weight));
        } else
        /* istanbul ignore next */
        {
          cov_1ws59xrqcx().b[22][1]++;
        }
      }
    }
    // Mutate node biases
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[106]++;
    for (const node of this.nodes.values()) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[107]++;
      if (secureRandom_1.SecureRandom.random() < rate) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[23][0]++;
        cov_1ws59xrqcx().s[108]++;
        node.bias += (secureRandom_1.SecureRandom.random() - 0.5) * 0.1;
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[109]++;
        node.bias = Math.max(-1, Math.min(1, node.bias));
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[23][1]++;
      }
    }
  }
  /**
   * Synchronise l'état du réseau depuis le worker
   */
  async syncNetworkFromWorker() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[20]++;
  } // Implementation would sync worker state back to local state
  // For now, we'll skip this complex synchronization
  /**
   * Mesure l'activité neurale globale - implémentation unifiée
   */
  getNeuralActivity() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[21]++;
    // Synchronous fallback implementation
    let totalActivity =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[110]++, 0);
    let nodeCount =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[111]++, 0);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[112]++;
    for (const activation of this.activations.values()) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[113]++;
      totalActivity += Math.abs(activation);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[114]++;
      nodeCount++;
    }
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[115]++;
    return nodeCount > 0 ?
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[24][0]++, totalActivity / nodeCount) :
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[24][1]++, 0);
  }
  /**
   * Version asynchrone de getNeuralActivity pour calculs avancés
   */
  async getNeuralActivityAsync() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[22]++;
    cov_1ws59xrqcx().s[116]++;
    try {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[117]++;
      if (
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[26][0]++, this.worker) &&
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[26][1]++, this.workerReady)) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[25][0]++;
        const result =
        /* istanbul ignore next */
        (cov_1ws59xrqcx().s[118]++, await this.sendWorkerMessage('NEURAL_ACTIVITY', {
          networkId: this.networkId
        }));
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[119]++;
        return result.activity;
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[25][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[120]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'getNeuralActivityAsync', error, 'warning');
    }
    // Fallback synchrone
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[121]++;
    return this.getNeuralActivity();
  }
  /**
   * Mesure la force moyenne des connexions
   */
  getConnectionStrength() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[23]++;
    let totalWeight =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[122]++, 0);
    let connectionCount =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[123]++, 0);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[124]++;
    for (const connections of this.connections.values()) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[125]++;
      for (const connection of connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[126]++;
        if (connection.active) {
          /* istanbul ignore next */
          cov_1ws59xrqcx().b[27][0]++;
          cov_1ws59xrqcx().s[127]++;
          totalWeight += Math.abs(connection.weight);
          /* istanbul ignore next */
          cov_1ws59xrqcx().s[128]++;
          connectionCount++;
        } else
        /* istanbul ignore next */
        {
          cov_1ws59xrqcx().b[27][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[129]++;
    return connectionCount > 0 ?
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[28][0]++, totalWeight / connectionCount) :
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[28][1]++, 0);
  }
  /**
   * Export JSON pour debug/sauvegarde
   */
  toJSON() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[24]++;
    cov_1ws59xrqcx().s[130]++;
    return {
      nodes: Array.from(this.nodes.values()),
      connections: Array.from(this.connections.values()).flat(),
      activations: Object.fromEntries(this.activations),
      performance: {
        lastPropagationTime: this.lastPropagationTime,
        averageProcessingTime: this.averageProcessingTime,
        operationCount: this.operationCount,
        workerReady: this.workerReady
      }
    };
  }
  /**
   * Initialise le réseau neuronal
   */
  async initialize() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[25]++;
    cov_1ws59xrqcx().s[131]++;
    // Setup default network if empty
    if (this.nodes.size === 0) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[29][0]++;
      cov_1ws59xrqcx().s[132]++;
      this.setupDefaultNetwork();
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[29][1]++;
    }
    // Initialize worker network
    cov_1ws59xrqcx().s[133]++;
    if (this.worker) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[30][0]++;
      cov_1ws59xrqcx().s[134]++;
      try {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[135]++;
        await this.sendWorkerMessage('NEURAL_INIT', {
          networkId: this.networkId,
          nodes: Array.from(this.nodes.values()),
          connections: Array.from(this.connections.values()).flat()
        });
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[136]++;
        this.workerReady = true;
      } catch (error) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[137]++;
        ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'initialize', error, 'warning');
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[138]++;
        this.workerReady = false;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[30][1]++;
    }
    // Perform initial propagation
    cov_1ws59xrqcx().s[139]++;
    await this.propagate();
  }
  /**
   * Configure un réseau par défaut pour les tests
   */
  setupDefaultNetwork() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[26]++;
    cov_1ws59xrqcx().s[140]++;
    // Add input nodes
    this.addNode('sensory_input', 'input');
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[141]++;
    this.addNode('memory_input', 'input');
    // Add hidden nodes
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[142]++;
    this.addNode('processing_1', 'hidden', 0.1);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[143]++;
    this.addNode('processing_2', 'hidden', -0.1);
    // Add output nodes
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[144]++;
    this.addNode('motor_output', 'output');
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[145]++;
    this.addNode('emotion_output', 'output');
    // Connect the network
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[146]++;
    this.addConnection('sensory_input', 'processing_1', 0.8);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[147]++;
    this.addConnection('memory_input', 'processing_2', 0.6);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[148]++;
    this.addConnection('processing_1', 'motor_output', 0.9);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[149]++;
    this.addConnection('processing_2', 'emotion_output', 0.7);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[150]++;
    this.addConnection('processing_1', 'processing_2', 0.3);
  }
  /**
   * Suspend neural processing
   */
  async suspend() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[27]++;
    cov_1ws59xrqcx().s[151]++;
    // Clear activations but keep structure
    this.activations.clear();
    // Terminate worker if needed
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[152]++;
    if (this.worker) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[31][0]++;
      cov_1ws59xrqcx().s[153]++;
      this.worker.terminate();
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[154]++;
      this.worker = null;
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[155]++;
      this.workerReady = false;
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[31][1]++;
    }
    cov_1ws59xrqcx().s[156]++;
    secureLogger_1.logger.info('Neural mesh suspended');
  }
  /**
   * Get CPU usage estimation
   */
  async getCPUUsage() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[28]++;
    // Calculate based on processing time and operation frequency
    const baseLoad =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[157]++, this.averageProcessingTime / 16.67); // Compare to 60fps frame time
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[158]++;
    return Math.min(1, baseLoad);
  }
  /**
   * Get memory usage estimation
   */
  async getMemoryUsage() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[29]++;
    const localMemory =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[159]++, (this.nodes.size + Array.from(this.connections.values()).length) * 64);
    // Add worker memory if available
    let workerMemory =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[160]++, 0);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[161]++;
    if (
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[33][0]++, this.worker) &&
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[33][1]++, this.workerReady)) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[32][0]++;
      cov_1ws59xrqcx().s[162]++;
      try {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[163]++;
        // Would get actual worker stats, simplified for now
        workerMemory = localMemory; // Estimate
      } catch (error) {
        // Ignore worker memory calculation error
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[32][1]++;
    }
    const totalMemory =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[164]++, localMemory + workerMemory);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[165]++;
    return Math.min(1, totalMemory / (1024 * 1024)); // Convert to MB ratio
  }
  /**
   * Get performance metrics
   */
  getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[30]++;
    cov_1ws59xrqcx().s[166]++;
    return {
      lastPropagationTime: this.lastPropagationTime,
      averageProcessingTime: this.averageProcessingTime,
      operationCount: this.operationCount,
      workerReady: this.workerReady
    };
  }
  /**
   * Save current state for persistence
   */
  saveState() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[31]++;
    cov_1ws59xrqcx().s[167]++;
    return {
      nodes: Array.from(this.nodes.entries()),
      connections: Array.from(this.connections.entries()).map(([key, connections]) => {
        /* istanbul ignore next */
        cov_1ws59xrqcx().f[32]++;
        cov_1ws59xrqcx().s[168]++;
        return [key, connections];
      }),
      activations: Object.fromEntries(this.activations),
      performance: this.getPerformanceMetrics()
    };
  }
  /**
   * Load state from saved data
   */
  loadState(state) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[33]++;
    cov_1ws59xrqcx().s[169]++;
    if (state.nodes) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[34][0]++;
      cov_1ws59xrqcx().s[170]++;
      this.nodes.clear();
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[171]++;
      for (const [id, node] of state.nodes) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[172]++;
        this.nodes.set(id, node);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[34][1]++;
    }
    cov_1ws59xrqcx().s[173]++;
    if (state.connections) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[35][0]++;
      cov_1ws59xrqcx().s[174]++;
      this.connections.clear();
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[175]++;
      for (const [fromId, connections] of state.connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[176]++;
        this.connections.set(fromId, connections);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[35][1]++;
    }
    cov_1ws59xrqcx().s[177]++;
    if (state.activations) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[36][0]++;
      cov_1ws59xrqcx().s[178]++;
      this.activations.clear();
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[179]++;
      for (const [id, activation] of Object.entries(state.activations)) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[180]++;
        this.activations.set(id, activation);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[36][1]++;
    }
    cov_1ws59xrqcx().s[181]++;
    if (state.performance) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[37][0]++;
      cov_1ws59xrqcx().s[182]++;
      this.lastPropagationTime =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[38][0]++, state.performance.lastPropagationTime) ||
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[38][1]++, 0);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[183]++;
      this.averageProcessingTime =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[39][0]++, state.performance.averageProcessingTime) ||
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[39][1]++, 0);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[184]++;
      this.operationCount =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[40][0]++, state.performance.operationCount) ||
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[40][1]++, 0);
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[37][1]++;
    }
  }
  /**
   * Reset neural mesh to initial state
   */
  reset() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[34]++;
    cov_1ws59xrqcx().s[185]++;
    this.nodes.clear();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[186]++;
    this.connections.clear();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[187]++;
    this.activations.clear();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[188]++;
    this.lastPropagationTime = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[189]++;
    this.averageProcessingTime = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[190]++;
    this.operationCount = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[191]++;
    this.setupDefaultNetwork();
  }
  /**
   * Health check for neural mesh
   */
  healthCheck() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[35]++;
    const issues =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[192]++, []);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[193]++;
    if (this.nodes.size === 0) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[41][0]++;
      cov_1ws59xrqcx().s[194]++;
      issues.push('No nodes in neural mesh');
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[41][1]++;
    }
    cov_1ws59xrqcx().s[195]++;
    if (this.connections.size === 0) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[42][0]++;
      cov_1ws59xrqcx().s[196]++;
      issues.push('No connections in neural mesh');
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[42][1]++;
    }
    cov_1ws59xrqcx().s[197]++;
    if (this.pendingOperations.size > 10) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[43][0]++;
      cov_1ws59xrqcx().s[198]++;
      issues.push(`Too many pending operations: ${this.pendingOperations.size}`);
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[43][1]++;
    }
    cov_1ws59xrqcx().s[199]++;
    if (
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[45][0]++, this.worker) &&
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[45][1]++, !this.workerReady)) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[44][0]++;
      cov_1ws59xrqcx().s[200]++;
      issues.push('Worker is not ready');
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[44][1]++;
    }
    // Check for orphaned nodes
    const connectedNodes =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[201]++, new Set());
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[202]++;
    for (const [fromId, connections] of this.connections) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[203]++;
      connectedNodes.add(fromId);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[204]++;
      for (const connection of connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[205]++;
        connectedNodes.add(connection.to);
      }
    }
    const orphanedNodes =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[206]++, Array.from(this.nodes.keys()).filter(nodeId => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[36]++;
      cov_1ws59xrqcx().s[207]++;
      return !connectedNodes.has(nodeId);
    }));
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[208]++;
    if (orphanedNodes.length > 0) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[46][0]++;
      cov_1ws59xrqcx().s[209]++;
      issues.push(`Orphaned nodes: ${orphanedNodes.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[46][1]++;
    }
    cov_1ws59xrqcx().s[210]++;
    return {
      healthy: issues.length === 0,
      issues
    };
  }
  /**
   * Cleanup resources
   */
  cleanup() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[37]++;
    cov_1ws59xrqcx().s[211]++;
    // Clean up pending operations
    this.pendingOperations.forEach(({
      timeout
    }) => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[38]++;
      cov_1ws59xrqcx().s[212]++;
      clearTimeout(timeout);
    });
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[213]++;
    this.pendingOperations.clear();
    // Terminate worker
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[214]++;
    if (this.worker) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[47][0]++;
      cov_1ws59xrqcx().s[215]++;
      this.worker.terminate();
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[216]++;
      this.worker = null;
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[47][1]++;
    }
    // Clear all data
    cov_1ws59xrqcx().s[217]++;
    this.nodes.clear();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[218]++;
    this.connections.clear();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[219]++;
    this.activations.clear();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[220]++;
    this.workerReady = false;
  }
}
/* istanbul ignore next */
cov_1ws59xrqcx().s[221]++;
exports.NeuralMeshAsync = NeuralMeshAsync;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,