{"version":3,"names":["cov_g66crfv1p","actualCoverage","s","PatternAnalyzer_1","require","BehaviorPredictor_1","SessionTracker","track","data","f","console","log","BehavioralEngine","constructor","patterns","PatternAnalyzer","analyzer","predictor","BehaviorPredictor","sessionTracker","storage","Map","getInstance","instance","b","analyzeBehavior","event","score","pattern","details","analyzeNavigation","processBehavior","prediction","predict","timestamp","Date","now","analyze","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/BehavioralEngine.ts"],"sourcesContent":["// Moteur d'analyse comportementale\r\nimport { PatternAnalyzer } from './PatternAnalyzer';\r\nimport { BehaviorPredictor } from './BehaviorPredictor';\r\nimport { BehaviorAnalysis, NavigationEvent } from '../../types/behavioral';\r\n\r\nclass SessionTracker {\r\n  // @ts-expect-error Paramètre réservé pour usage futur\r\n  track(data: any): void {\r\n    // Simplified tracking\r\n    console.log('Tracking behavior');\r\n  }\r\n}\r\n\r\nexport class BehavioralEngine {\r\n  private static instance: BehavioralEngine;\r\n  // @ts-expect-error Propriété réservée pour usage futur\r\n  private patterns: PatternAnalyzer;\r\n  private analyzer: PatternAnalyzer;\r\n  private predictor: BehaviorPredictor;\r\n  // @ts-expect-error Propriété réservée pour usage futur\r\n  private sessionTracker: SessionTracker;\r\n  // @ts-expect-error Propriété réservée pour usage futur\r\n  private storage: Map<string, any>;\r\n  \r\n  private constructor() {\r\n    this.patterns = new PatternAnalyzer();\r\n    this.analyzer = new PatternAnalyzer();\r\n    this.predictor = new BehaviorPredictor();\r\n    this.sessionTracker = new SessionTracker();\r\n    this.storage = new Map();\r\n    \r\n    // this.initialize(); // TODO: Méthode manquante\r\n  }\r\n  \r\n  public static getInstance(): BehavioralEngine {\r\n    if (!BehavioralEngine.instance) {\r\n      BehavioralEngine.instance = new BehavioralEngine();\r\n    }\r\n    return BehavioralEngine.instance;\r\n  }\r\n  \r\n  public async analyzeBehavior(event: NavigationEvent): Promise<BehaviorAnalysis> {\r\n    // Code d'analyse comportementale factice\r\n    return {\r\n      score: 1,\r\n      pattern: 'default',\r\n      details: event\r\n    };\r\n  }\r\n\r\n  public analyzeNavigation(event: NavigationEvent): BehaviorAnalysis {\r\n    // Exemple d'analyse simple\r\n    return {\r\n      score: 1,\r\n      pattern: 'default',\r\n      details: event\r\n    };\r\n  }\r\n\r\n  processBehavior(data: any): any {\r\n    // Process behavior data\r\n    const pattern = this.analyzer.analyzeBehavior([data]);\r\n    const prediction = this.predictor.predict([data]);\r\n    \r\n    return {\r\n      pattern,\r\n      prediction,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n\r\n  analyze(): BehaviorAnalysis {\r\n    // Simplified analysis\r\n    return { \r\n      score: 0.5, \r\n      pattern: 'default',\r\n      details: {}\r\n    };\r\n  }\r\n\r\n  // Suite de l'implémentation...\r\n}"],"mappings":"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","ignoreList":[]}