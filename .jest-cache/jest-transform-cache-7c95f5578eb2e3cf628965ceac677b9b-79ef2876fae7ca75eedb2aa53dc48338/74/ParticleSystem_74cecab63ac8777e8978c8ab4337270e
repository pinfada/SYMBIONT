85744ce6fd93a0cc8f95236e4f25061f
"use strict";

/* istanbul ignore next */
function cov_1tda99wewy() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/ParticleSystem.ts";
  var hash = "7fdd61383e5e579d9ee7e11541312e779706375f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/ParticleSystem.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "4": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 51
        }
      },
      "5": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 48
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 28
        }
      },
      "7": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 28
        }
      },
      "8": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "9": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 30
        }
      },
      "10": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "11": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "12": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 31
        }
      },
      "13": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "14": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "15": {
        start: {
          line: 23,
          column: 29
        },
        end: {
          line: 68,
          column: 2
        }
      },
      "16": {
        start: {
          line: 69,
          column: 31
        },
        end: {
          line: 98,
          column: 2
        }
      },
      "17": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 92
        }
      },
      "18": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 53
        }
      },
      "19": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "20": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 35
        }
      },
      "21": {
        start: {
          line: 109,
          column: 22
        },
        end: {
          line: 109,
          column: 72
        }
      },
      "22": {
        start: {
          line: 110,
          column: 22
        },
        end: {
          line: 110,
          column: 71
        }
      },
      "23": {
        start: {
          line: 111,
          column: 25
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "24": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 38
        }
      },
      "25": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "26": {
        start: {
          line: 124,
          column: 21
        },
        end: {
          line: 124,
          column: 46
        }
      },
      "27": {
        start: {
          line: 125,
          column: 29
        },
        end: {
          line: 125,
          column: 46
        }
      },
      "28": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 38
        }
      },
      "29": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "30": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 44
        }
      },
      "31": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 25
        }
      },
      "32": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 50
        }
      },
      "33": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 50
        }
      },
      "34": {
        start: {
          line: 137,
          column: 28
        },
        end: {
          line: 137,
          column: 45
        }
      },
      "35": {
        start: {
          line: 138,
          column: 38
        },
        end: {
          line: 138,
          column: 69
        }
      },
      "36": {
        start: {
          line: 139,
          column: 32
        },
        end: {
          line: 139,
          column: 100
        }
      },
      "37": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "38": {
        start: {
          line: 140,
          column: 21
        },
        end: {
          line: 140,
          column: 22
        }
      },
      "39": {
        start: {
          line: 141,
          column: 26
        },
        end: {
          line: 141,
          column: 76
        }
      },
      "40": {
        start: {
          line: 142,
          column: 27
        },
        end: {
          line: 142,
          column: 75
        }
      },
      "41": {
        start: {
          line: 143,
          column: 22
        },
        end: {
          line: 143,
          column: 56
        }
      },
      "42": {
        start: {
          line: 144,
          column: 22
        },
        end: {
          line: 144,
          column: 56
        }
      },
      "43": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 50
        }
      },
      "44": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "45": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 44
        }
      },
      "46": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 153,
          column: 19
        }
      },
      "47": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 19
        }
      },
      "48": {
        start: {
          line: 154,
          column: 19
        },
        end: {
          line: 154,
          column: 26
        }
      },
      "49": {
        start: {
          line: 156,
          column: 29
        },
        end: {
          line: 156,
          column: 31
        }
      },
      "50": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 163,
          column: 11
        }
      },
      "51": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 162,
          column: 14
        }
      },
      "52": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "53": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 64
        }
      },
      "54": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 92
        }
      },
      "55": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 44
        }
      },
      "56": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 172,
          column: 28
        }
      },
      "57": {
        start: {
          line: 173,
          column: 33
        },
        end: {
          line: 173,
          column: 70
        }
      },
      "58": {
        start: {
          line: 174,
          column: 28
        },
        end: {
          line: 174,
          column: 60
        }
      },
      "59": {
        start: {
          line: 175,
          column: 31
        },
        end: {
          line: 175,
          column: 66
        }
      },
      "60": {
        start: {
          line: 176,
          column: 33
        },
        end: {
          line: 176,
          column: 70
        }
      },
      "61": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "62": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 57
        }
      },
      "63": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 84
        }
      },
      "64": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "65": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 52
        }
      },
      "66": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 79
        }
      },
      "67": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "68": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 55
        }
      },
      "69": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 83
        }
      },
      "70": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "71": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 57
        }
      },
      "72": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 85
        }
      },
      "73": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 80
        }
      },
      "74": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 96
        }
      },
      "75": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 98
        }
      },
      "76": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 94
        }
      },
      "77": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 59
        }
      },
      "78": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "79": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 56
        }
      },
      "80": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "81": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 54
        }
      },
      "82": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 28
        }
      },
      "83": {
        start: {
          line: 211,
          column: 0
        },
        end: {
          line: 211,
          column: 40
        }
      },
      "84": {
        start: {
          line: 212,
          column: 0
        },
        end: {
          line: 212,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 40
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 101
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        loc: {
          start: {
            line: 104,
            column: 31
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 104
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        loc: {
          start: {
            line: 122,
            column: 54
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 122
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 151,
            column: 4
          },
          end: {
            line: 151,
            column: 5
          }
        },
        loc: {
          start: {
            line: 151,
            column: 31
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 151
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 157,
            column: 31
          },
          end: {
            line: 157,
            column: 32
          }
        },
        loc: {
          start: {
            line: 157,
            column: 43
          },
          end: {
            line: 163,
            column: 9
          }
        },
        line: 157
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        loc: {
          start: {
            line: 201,
            column: 14
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 201
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 11,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 35
          },
          end: {
            line: 11,
            column: 38
          }
        }],
        line: 11
      },
      "4": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "5": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "6": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "7": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 153,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 153,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "8": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 152,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 152,
            column: 25
          }
        }, {
          start: {
            line: 152,
            column: 29
          },
          end: {
            line: 152,
            column: 56
          }
        }],
        line: 152
      },
      "9": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "10": {
        loc: {
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "11": {
        loc: {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 177,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 177,
            column: 42
          }
        }, {
          start: {
            line: 177,
            column: 46
          },
          end: {
            line: 177,
            column: 67
          }
        }],
        line: 177
      },
      "12": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "13": {
        loc: {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 181,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 181,
            column: 37
          }
        }, {
          start: {
            line: 181,
            column: 41
          },
          end: {
            line: 181,
            column: 57
          }
        }],
        line: 181
      },
      "14": {
        loc: {
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "15": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 185,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 185,
            column: 40
          }
        }, {
          start: {
            line: 185,
            column: 44
          },
          end: {
            line: 185,
            column: 63
          }
        }],
        line: 185
      },
      "16": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "17": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 42
          }
        }, {
          start: {
            line: 189,
            column: 46
          },
          end: {
            line: 189,
            column: 67
          }
        }],
        line: 189
      },
      "18": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "19": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 202,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 202,
            column: 19
          }
        }, {
          start: {
            line: 202,
            column: 23
          },
          end: {
            line: 202,
            column: 35
          }
        }],
        line: 202
      },
      "20": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "21": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 205,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 205,
            column: 19
          }
        }, {
          start: {
            line: 205,
            column: 23
          },
          end: {
            line: 205,
            column: 42
          }
        }],
        line: 205
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/ParticleSystem.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/ParticleSystem.ts"],
      sourcesContent: ["// src/shared/utils/ParticleSystem.ts\r\nimport WebGLUtils, { ShaderProgram } from './webgl';\r\nimport { SecureRandom } from './secureRandom';\r\n\r\ninterface Particle {\r\n  x: number;\r\n  y: number;\r\n  vx: number;\r\n  vy: number;\r\n  energy: number;\r\n  age: number;\r\n  maxAge: number;\r\n}\r\n\r\nexport class ParticleSystem {\r\n  private gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n  private program: ShaderProgram | null = null;\r\n  private particles: Particle[] = [];\r\n  private particleBuffer: WebGLBuffer | null = null;\r\n  private maxParticles: number;\r\n  private emissionRate: number;\r\n  private lastEmission: number = 0;\r\n\r\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext, maxParticles = 100) {\r\n    this.gl = gl;\r\n    this.maxParticles = maxParticles;\r\n    this.emissionRate = 20; // particules par seconde\r\n    this.initializeShaders();\r\n    this.createBuffers();\r\n  }\r\n\r\n  private initializeShaders(): void {\r\n    const vertexShader = `precision highp float;\r\n\r\nattribute vec2 a_position;\r\nattribute float a_age;\r\nattribute float a_energy;\r\nattribute vec2 a_velocity;\r\n\r\nuniform float u_time;\r\nuniform float u_globalEnergy;\r\nuniform vec2 u_resolution;\r\n\r\nvarying float v_age;\r\nvarying float v_energy;\r\nvarying float v_alpha;\r\n\r\nfloat noise(vec2 p) {\r\n    return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\r\n}\r\n\r\nvoid main() {\r\n    vec2 pos = a_position;\r\n    \r\n    float lifetime = 3.0;\r\n    float normalizedAge = a_age / lifetime;\r\n    \r\n    // Mouvement des particules\r\n    vec2 drift = a_velocity * a_age;\r\n    pos += drift;\r\n    \r\n    // Oscillation\r\n    float oscillation = sin(u_time * 2.0 + pos.x * 10.0) * 0.02;\r\n    pos.y += oscillation * (1.0 - normalizedAge);\r\n    \r\n    // Attraction vers le centre\r\n    vec2 toCenter = -normalize(pos) * u_globalEnergy * 0.1;\r\n    pos += toCenter * normalizedAge;\r\n    \r\n    float size = a_energy * (1.0 - normalizedAge * 0.7) * 8.0;\r\n    \r\n    v_alpha = (1.0 - normalizedAge) * a_energy;\r\n    v_age = normalizedAge;\r\n    v_energy = a_energy;\r\n    \r\n    gl_Position = vec4(pos, 0.0, 1.0);\r\n    gl_PointSize = size;\r\n}`;\r\n\r\n    const fragmentShader = `precision highp float;\r\n\r\nvarying float v_age;\r\nvarying float v_energy;\r\nvarying float v_alpha;\r\n\r\nuniform float u_time;\r\nuniform vec3 u_energyColor;\r\nuniform vec3 u_coreColor;\r\n\r\nvoid main() {\r\n    vec2 coord = gl_PointCoord - vec2(0.5);\r\n    float dist = length(coord);\r\n    \r\n    float circle = smoothstep(0.5, 0.3, dist);\r\n    float halo = smoothstep(0.5, 0.0, dist);\r\n    \r\n    float pulse = sin(u_time * 4.0 + v_energy * 10.0) * 0.3 + 0.7;\r\n    \r\n    vec3 color = mix(u_coreColor, u_energyColor, v_age);\r\n    color *= pulse;\r\n    \r\n    float twinkle = fract(sin(v_energy * 123.456) * 43758.5453);\r\n    twinkle = step(0.97, twinkle) * 2.0;\r\n    color += vec3(twinkle * 0.5);\r\n    \r\n    float alpha = circle * v_alpha * (0.8 + halo * 0.2);\r\n    \r\n    gl_FragColor = vec4(color, alpha);\r\n}`;\r\n\r\n    this.program = WebGLUtils.createProgram(this.gl, vertexShader, fragmentShader);\r\n  }\r\n\r\n  private createBuffers(): void {\r\n    this.particleBuffer = this.gl.createBuffer();\r\n  }\r\n\r\n  public emitParticle(x: number, y: number, energy: number): void {\r\n    if (this.particles.length >= this.maxParticles) {\r\n      // Remplacer la plus ancienne particule\r\n      this.particles.shift();\r\n    }\r\n\r\n    const angle = SecureRandom.random() * Math.PI * 2;\r\n    const speed = 0.05 + SecureRandom.random() * 0.1;\r\n\r\n    const particle: Particle = {\r\n      x,\r\n      y,\r\n      vx: Math.cos(angle) * speed,\r\n      vy: Math.sin(angle) * speed,\r\n      energy: energy * (0.5 + SecureRandom.random() * 0.5),\r\n      age: 0,\r\n      maxAge: 2 + SecureRandom.random() * 2 // 2-4 secondes\r\n    };\r\n\r\n    this.particles.push(particle);\r\n  }\r\n\r\n  public update(deltaTime: number, globalEnergy: number, centerX: number, centerY: number): void {\r\n    // Mettre \xE0 jour les particules existantes\r\n    for (let i = this.particles.length - 1; i >= 0; i--) {\r\n      const particle = this.particles[i];\r\n      \r\n      particle.age += deltaTime;\r\n      \r\n      // Supprimer les particules trop anciennes\r\n      if (particle.age >= particle.maxAge) {\r\n        this.particles.splice(i, 1);\r\n        continue;\r\n      }\r\n      \r\n      // Mettre \xE0 jour la position\r\n      particle.x += particle.vx * deltaTime;\r\n      particle.y += particle.vy * deltaTime;\r\n    }\r\n\r\n    // \xC9mettre de nouvelles particules\r\n    const currentTime = Date.now() / 1000;\r\n    const timeSinceLastEmission = currentTime - this.lastEmission;\r\n    const particlesToEmit = Math.floor(timeSinceLastEmission * this.emissionRate * globalEnergy);\r\n\r\n    for (let i = 0; i < particlesToEmit; i++) {\r\n      const angle = SecureRandom.random() * Math.PI * 2;\r\n      const radius = 0.1 + SecureRandom.random() * 0.2;\r\n      const x = centerX + Math.cos(angle) * radius;\r\n      const y = centerY + Math.sin(angle) * radius;\r\n      \r\n      this.emitParticle(x, y, globalEnergy);\r\n    }\r\n\r\n    if (particlesToEmit > 0) {\r\n      this.lastEmission = currentTime;\r\n    }\r\n  }\r\n\r\n  public render(time: number, globalEnergy: number): void {\r\n    if (!this.program || this.particles.length === 0) return;\r\n\r\n    const gl = this.gl;\r\n    \r\n    // Pr\xE9parer les donn\xE9es des particules\r\n    const particleData: number[] = [];\r\n    \r\n    this.particles.forEach(particle => {\r\n      particleData.push(\r\n        particle.x, particle.y,           // position\r\n        particle.age,                     // age\r\n        particle.energy,                  // energy\r\n        particle.vx, particle.vy          // velocity\r\n      );\r\n    });\r\n\r\n    // Mettre \xE0 jour le buffer\r\n    if (this.particleBuffer) {\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.particleBuffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(particleData), gl.DYNAMIC_DRAW);\r\n    }\r\n\r\n    // Utiliser le programme\r\n    gl.useProgram(this.program.program);\r\n\r\n    // Setup attributes\r\n    const stride = 6 * 4; // 6 floats par particule\r\n    const positionLocation = this.program.attributes['a_position'];\r\n    const ageLocation = this.program.attributes['a_age'];\r\n    const energyLocation = this.program.attributes['a_energy'];\r\n    const velocityLocation = this.program.attributes['a_velocity'];\r\n\r\n    if (positionLocation !== undefined && positionLocation >= 0) {\r\n      gl.enableVertexAttribArray(positionLocation);\r\n      gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, stride, 0);\r\n    }\r\n\r\n    if (ageLocation !== undefined && ageLocation >= 0) {\r\n      gl.enableVertexAttribArray(ageLocation);\r\n      gl.vertexAttribPointer(ageLocation, 1, gl.FLOAT, false, stride, 8);\r\n    }\r\n\r\n    if (energyLocation !== undefined && energyLocation >= 0) {\r\n      gl.enableVertexAttribArray(energyLocation);\r\n      gl.vertexAttribPointer(energyLocation, 1, gl.FLOAT, false, stride, 12);\r\n    }\r\n\r\n    if (velocityLocation !== undefined && velocityLocation >= 0) {\r\n      gl.enableVertexAttribArray(velocityLocation);\r\n      gl.vertexAttribPointer(velocityLocation, 2, gl.FLOAT, false, stride, 16);\r\n    }\r\n\r\n    // Uniforms\r\n    WebGLUtils.setUniform1f(gl, this.program.uniforms['u_time'], time);\r\n    WebGLUtils.setUniform1f(gl, this.program.uniforms['u_globalEnergy'], globalEnergy);\r\n    WebGLUtils.setUniform3f(gl, this.program.uniforms['u_energyColor'], 0.0, 0.878, 1.0);\r\n    WebGLUtils.setUniform3f(gl, this.program.uniforms['u_coreColor'], 1.0, 1.0, 1.0);\r\n\r\n    // Rendu\r\n    gl.drawArrays(gl.POINTS, 0, this.particles.length);\r\n  }\r\n\r\n  public destroy(): void {\r\n    if (this.gl && this.program) {\r\n      this.gl.deleteProgram(this.program.program);\r\n    }\r\n    if (this.gl && this.particleBuffer) {\r\n      this.gl.deleteBuffer(this.particleBuffer);\r\n    }\r\n    this.particles = [];\r\n  }\r\n}\r\n\r\nexport default ParticleSystem;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7fdd61383e5e579d9ee7e11541312e779706375f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tda99wewy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1tda99wewy();
var __importDefault =
/* istanbul ignore next */
(cov_1tda99wewy().s[0]++,
/* istanbul ignore next */
(cov_1tda99wewy().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1tda99wewy().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1tda99wewy().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1tda99wewy().f[0]++;
  cov_1tda99wewy().s[1]++;
  return /* istanbul ignore next */(cov_1tda99wewy().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1tda99wewy().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1tda99wewy().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1tda99wewy().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1tda99wewy().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1tda99wewy().s[3]++;
exports.ParticleSystem = void 0;
// src/shared/utils/ParticleSystem.ts
const webgl_1 =
/* istanbul ignore next */
(cov_1tda99wewy().s[4]++, __importDefault(require("./webgl")));
const secureRandom_1 =
/* istanbul ignore next */
(cov_1tda99wewy().s[5]++, require("./secureRandom"));
class ParticleSystem {
  constructor(gl, maxParticles =
  /* istanbul ignore next */
  (cov_1tda99wewy().b[3][0]++, 100)) {
    /* istanbul ignore next */
    cov_1tda99wewy().f[1]++;
    cov_1tda99wewy().s[6]++;
    this.program = null;
    /* istanbul ignore next */
    cov_1tda99wewy().s[7]++;
    this.particles = [];
    /* istanbul ignore next */
    cov_1tda99wewy().s[8]++;
    this.particleBuffer = null;
    /* istanbul ignore next */
    cov_1tda99wewy().s[9]++;
    this.lastEmission = 0;
    /* istanbul ignore next */
    cov_1tda99wewy().s[10]++;
    this.gl = gl;
    /* istanbul ignore next */
    cov_1tda99wewy().s[11]++;
    this.maxParticles = maxParticles;
    /* istanbul ignore next */
    cov_1tda99wewy().s[12]++;
    this.emissionRate = 20; // particules par seconde
    /* istanbul ignore next */
    cov_1tda99wewy().s[13]++;
    this.initializeShaders();
    /* istanbul ignore next */
    cov_1tda99wewy().s[14]++;
    this.createBuffers();
  }
  initializeShaders() {
    /* istanbul ignore next */
    cov_1tda99wewy().f[2]++;
    const vertexShader =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[15]++, `precision highp float;

attribute vec2 a_position;
attribute float a_age;
attribute float a_energy;
attribute vec2 a_velocity;

uniform float u_time;
uniform float u_globalEnergy;
uniform vec2 u_resolution;

varying float v_age;
varying float v_energy;
varying float v_alpha;

float noise(vec2 p) {
    return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);
}

void main() {
    vec2 pos = a_position;
    
    float lifetime = 3.0;
    float normalizedAge = a_age / lifetime;
    
    // Mouvement des particules
    vec2 drift = a_velocity * a_age;
    pos += drift;
    
    // Oscillation
    float oscillation = sin(u_time * 2.0 + pos.x * 10.0) * 0.02;
    pos.y += oscillation * (1.0 - normalizedAge);
    
    // Attraction vers le centre
    vec2 toCenter = -normalize(pos) * u_globalEnergy * 0.1;
    pos += toCenter * normalizedAge;
    
    float size = a_energy * (1.0 - normalizedAge * 0.7) * 8.0;
    
    v_alpha = (1.0 - normalizedAge) * a_energy;
    v_age = normalizedAge;
    v_energy = a_energy;
    
    gl_Position = vec4(pos, 0.0, 1.0);
    gl_PointSize = size;
}`);
    const fragmentShader =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[16]++, `precision highp float;

varying float v_age;
varying float v_energy;
varying float v_alpha;

uniform float u_time;
uniform vec3 u_energyColor;
uniform vec3 u_coreColor;

void main() {
    vec2 coord = gl_PointCoord - vec2(0.5);
    float dist = length(coord);
    
    float circle = smoothstep(0.5, 0.3, dist);
    float halo = smoothstep(0.5, 0.0, dist);
    
    float pulse = sin(u_time * 4.0 + v_energy * 10.0) * 0.3 + 0.7;
    
    vec3 color = mix(u_coreColor, u_energyColor, v_age);
    color *= pulse;
    
    float twinkle = fract(sin(v_energy * 123.456) * 43758.5453);
    twinkle = step(0.97, twinkle) * 2.0;
    color += vec3(twinkle * 0.5);
    
    float alpha = circle * v_alpha * (0.8 + halo * 0.2);
    
    gl_FragColor = vec4(color, alpha);
}`);
    /* istanbul ignore next */
    cov_1tda99wewy().s[17]++;
    this.program = webgl_1.default.createProgram(this.gl, vertexShader, fragmentShader);
  }
  createBuffers() {
    /* istanbul ignore next */
    cov_1tda99wewy().f[3]++;
    cov_1tda99wewy().s[18]++;
    this.particleBuffer = this.gl.createBuffer();
  }
  emitParticle(x, y, energy) {
    /* istanbul ignore next */
    cov_1tda99wewy().f[4]++;
    cov_1tda99wewy().s[19]++;
    if (this.particles.length >= this.maxParticles) {
      /* istanbul ignore next */
      cov_1tda99wewy().b[4][0]++;
      cov_1tda99wewy().s[20]++;
      // Remplacer la plus ancienne particule
      this.particles.shift();
    } else
    /* istanbul ignore next */
    {
      cov_1tda99wewy().b[4][1]++;
    }
    const angle =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[21]++, secureRandom_1.SecureRandom.random() * Math.PI * 2);
    const speed =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[22]++, 0.05 + secureRandom_1.SecureRandom.random() * 0.1);
    const particle =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[23]++, {
      x,
      y,
      vx: Math.cos(angle) * speed,
      vy: Math.sin(angle) * speed,
      energy: energy * (0.5 + secureRandom_1.SecureRandom.random() * 0.5),
      age: 0,
      maxAge: 2 + secureRandom_1.SecureRandom.random() * 2 // 2-4 secondes
    });
    /* istanbul ignore next */
    cov_1tda99wewy().s[24]++;
    this.particles.push(particle);
  }
  update(deltaTime, globalEnergy, centerX, centerY) {
    /* istanbul ignore next */
    cov_1tda99wewy().f[5]++;
    cov_1tda99wewy().s[25]++;
    // Mettre à jour les particules existantes
    for (let i =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[26]++, this.particles.length - 1); i >= 0; i--) {
      const particle =
      /* istanbul ignore next */
      (cov_1tda99wewy().s[27]++, this.particles[i]);
      /* istanbul ignore next */
      cov_1tda99wewy().s[28]++;
      particle.age += deltaTime;
      // Supprimer les particules trop anciennes
      /* istanbul ignore next */
      cov_1tda99wewy().s[29]++;
      if (particle.age >= particle.maxAge) {
        /* istanbul ignore next */
        cov_1tda99wewy().b[5][0]++;
        cov_1tda99wewy().s[30]++;
        this.particles.splice(i, 1);
        /* istanbul ignore next */
        cov_1tda99wewy().s[31]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_1tda99wewy().b[5][1]++;
      }
      // Mettre à jour la position
      cov_1tda99wewy().s[32]++;
      particle.x += particle.vx * deltaTime;
      /* istanbul ignore next */
      cov_1tda99wewy().s[33]++;
      particle.y += particle.vy * deltaTime;
    }
    // Émettre de nouvelles particules
    const currentTime =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[34]++, Date.now() / 1000);
    const timeSinceLastEmission =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[35]++, currentTime - this.lastEmission);
    const particlesToEmit =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[36]++, Math.floor(timeSinceLastEmission * this.emissionRate * globalEnergy));
    /* istanbul ignore next */
    cov_1tda99wewy().s[37]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[38]++, 0); i < particlesToEmit; i++) {
      const angle =
      /* istanbul ignore next */
      (cov_1tda99wewy().s[39]++, secureRandom_1.SecureRandom.random() * Math.PI * 2);
      const radius =
      /* istanbul ignore next */
      (cov_1tda99wewy().s[40]++, 0.1 + secureRandom_1.SecureRandom.random() * 0.2);
      const x =
      /* istanbul ignore next */
      (cov_1tda99wewy().s[41]++, centerX + Math.cos(angle) * radius);
      const y =
      /* istanbul ignore next */
      (cov_1tda99wewy().s[42]++, centerY + Math.sin(angle) * radius);
      /* istanbul ignore next */
      cov_1tda99wewy().s[43]++;
      this.emitParticle(x, y, globalEnergy);
    }
    /* istanbul ignore next */
    cov_1tda99wewy().s[44]++;
    if (particlesToEmit > 0) {
      /* istanbul ignore next */
      cov_1tda99wewy().b[6][0]++;
      cov_1tda99wewy().s[45]++;
      this.lastEmission = currentTime;
    } else
    /* istanbul ignore next */
    {
      cov_1tda99wewy().b[6][1]++;
    }
  }
  render(time, globalEnergy) {
    /* istanbul ignore next */
    cov_1tda99wewy().f[6]++;
    cov_1tda99wewy().s[46]++;
    if (
    /* istanbul ignore next */
    (cov_1tda99wewy().b[8][0]++, !this.program) ||
    /* istanbul ignore next */
    (cov_1tda99wewy().b[8][1]++, this.particles.length === 0)) {
      /* istanbul ignore next */
      cov_1tda99wewy().b[7][0]++;
      cov_1tda99wewy().s[47]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1tda99wewy().b[7][1]++;
    }
    const gl =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[48]++, this.gl);
    // Préparer les données des particules
    const particleData =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[49]++, []);
    /* istanbul ignore next */
    cov_1tda99wewy().s[50]++;
    this.particles.forEach(particle => {
      /* istanbul ignore next */
      cov_1tda99wewy().f[7]++;
      cov_1tda99wewy().s[51]++;
      particleData.push(particle.x, particle.y,
      // position
      particle.age,
      // age
      particle.energy,
      // energy
      particle.vx, particle.vy // velocity
      );
    });
    // Mettre à jour le buffer
    /* istanbul ignore next */
    cov_1tda99wewy().s[52]++;
    if (this.particleBuffer) {
      /* istanbul ignore next */
      cov_1tda99wewy().b[9][0]++;
      cov_1tda99wewy().s[53]++;
      gl.bindBuffer(gl.ARRAY_BUFFER, this.particleBuffer);
      /* istanbul ignore next */
      cov_1tda99wewy().s[54]++;
      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(particleData), gl.DYNAMIC_DRAW);
    } else
    /* istanbul ignore next */
    {
      cov_1tda99wewy().b[9][1]++;
    }
    // Utiliser le programme
    cov_1tda99wewy().s[55]++;
    gl.useProgram(this.program.program);
    // Setup attributes
    const stride =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[56]++, 6 * 4); // 6 floats par particule
    const positionLocation =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[57]++, this.program.attributes['a_position']);
    const ageLocation =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[58]++, this.program.attributes['a_age']);
    const energyLocation =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[59]++, this.program.attributes['a_energy']);
    const velocityLocation =
    /* istanbul ignore next */
    (cov_1tda99wewy().s[60]++, this.program.attributes['a_velocity']);
    /* istanbul ignore next */
    cov_1tda99wewy().s[61]++;
    if (
    /* istanbul ignore next */
    (cov_1tda99wewy().b[11][0]++, positionLocation !== undefined) &&
    /* istanbul ignore next */
    (cov_1tda99wewy().b[11][1]++, positionLocation >= 0)) {
      /* istanbul ignore next */
      cov_1tda99wewy().b[10][0]++;
      cov_1tda99wewy().s[62]++;
      gl.enableVertexAttribArray(positionLocation);
      /* istanbul ignore next */
      cov_1tda99wewy().s[63]++;
      gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, stride, 0);
    } else
    /* istanbul ignore next */
    {
      cov_1tda99wewy().b[10][1]++;
    }
    cov_1tda99wewy().s[64]++;
    if (
    /* istanbul ignore next */
    (cov_1tda99wewy().b[13][0]++, ageLocation !== undefined) &&
    /* istanbul ignore next */
    (cov_1tda99wewy().b[13][1]++, ageLocation >= 0)) {
      /* istanbul ignore next */
      cov_1tda99wewy().b[12][0]++;
      cov_1tda99wewy().s[65]++;
      gl.enableVertexAttribArray(ageLocation);
      /* istanbul ignore next */
      cov_1tda99wewy().s[66]++;
      gl.vertexAttribPointer(ageLocation, 1, gl.FLOAT, false, stride, 8);
    } else
    /* istanbul ignore next */
    {
      cov_1tda99wewy().b[12][1]++;
    }
    cov_1tda99wewy().s[67]++;
    if (
    /* istanbul ignore next */
    (cov_1tda99wewy().b[15][0]++, energyLocation !== undefined) &&
    /* istanbul ignore next */
    (cov_1tda99wewy().b[15][1]++, energyLocation >= 0)) {
      /* istanbul ignore next */
      cov_1tda99wewy().b[14][0]++;
      cov_1tda99wewy().s[68]++;
      gl.enableVertexAttribArray(energyLocation);
      /* istanbul ignore next */
      cov_1tda99wewy().s[69]++;
      gl.vertexAttribPointer(energyLocation, 1, gl.FLOAT, false, stride, 12);
    } else
    /* istanbul ignore next */
    {
      cov_1tda99wewy().b[14][1]++;
    }
    cov_1tda99wewy().s[70]++;
    if (
    /* istanbul ignore next */
    (cov_1tda99wewy().b[17][0]++, velocityLocation !== undefined) &&
    /* istanbul ignore next */
    (cov_1tda99wewy().b[17][1]++, velocityLocation >= 0)) {
      /* istanbul ignore next */
      cov_1tda99wewy().b[16][0]++;
      cov_1tda99wewy().s[71]++;
      gl.enableVertexAttribArray(velocityLocation);
      /* istanbul ignore next */
      cov_1tda99wewy().s[72]++;
      gl.vertexAttribPointer(velocityLocation, 2, gl.FLOAT, false, stride, 16);
    } else
    /* istanbul ignore next */
    {
      cov_1tda99wewy().b[16][1]++;
    }
    // Uniforms
    cov_1tda99wewy().s[73]++;
    webgl_1.default.setUniform1f(gl, this.program.uniforms['u_time'], time);
    /* istanbul ignore next */
    cov_1tda99wewy().s[74]++;
    webgl_1.default.setUniform1f(gl, this.program.uniforms['u_globalEnergy'], globalEnergy);
    /* istanbul ignore next */
    cov_1tda99wewy().s[75]++;
    webgl_1.default.setUniform3f(gl, this.program.uniforms['u_energyColor'], 0.0, 0.878, 1.0);
    /* istanbul ignore next */
    cov_1tda99wewy().s[76]++;
    webgl_1.default.setUniform3f(gl, this.program.uniforms['u_coreColor'], 1.0, 1.0, 1.0);
    // Rendu
    /* istanbul ignore next */
    cov_1tda99wewy().s[77]++;
    gl.drawArrays(gl.POINTS, 0, this.particles.length);
  }
  destroy() {
    /* istanbul ignore next */
    cov_1tda99wewy().f[8]++;
    cov_1tda99wewy().s[78]++;
    if (
    /* istanbul ignore next */
    (cov_1tda99wewy().b[19][0]++, this.gl) &&
    /* istanbul ignore next */
    (cov_1tda99wewy().b[19][1]++, this.program)) {
      /* istanbul ignore next */
      cov_1tda99wewy().b[18][0]++;
      cov_1tda99wewy().s[79]++;
      this.gl.deleteProgram(this.program.program);
    } else
    /* istanbul ignore next */
    {
      cov_1tda99wewy().b[18][1]++;
    }
    cov_1tda99wewy().s[80]++;
    if (
    /* istanbul ignore next */
    (cov_1tda99wewy().b[21][0]++, this.gl) &&
    /* istanbul ignore next */
    (cov_1tda99wewy().b[21][1]++, this.particleBuffer)) {
      /* istanbul ignore next */
      cov_1tda99wewy().b[20][0]++;
      cov_1tda99wewy().s[81]++;
      this.gl.deleteBuffer(this.particleBuffer);
    } else
    /* istanbul ignore next */
    {
      cov_1tda99wewy().b[20][1]++;
    }
    cov_1tda99wewy().s[82]++;
    this.particles = [];
  }
}
/* istanbul ignore next */
cov_1tda99wewy().s[83]++;
exports.ParticleSystem = ParticleSystem;
/* istanbul ignore next */
cov_1tda99wewy().s[84]++;
exports.default = ParticleSystem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,