{"version":3,"names":["cov_1tda99wewy","actualCoverage","webgl_1","s","__importDefault","require","secureRandom_1","ParticleSystem","constructor","gl","maxParticles","b","f","program","particles","particleBuffer","lastEmission","emissionRate","initializeShaders","createBuffers","vertexShader","fragmentShader","default","createProgram","createBuffer","emitParticle","x","y","energy","length","shift","angle","SecureRandom","random","Math","PI","speed","particle","vx","cos","vy","sin","age","maxAge","push","update","deltaTime","globalEnergy","centerX","centerY","i","splice","currentTime","Date","now","timeSinceLastEmission","particlesToEmit","floor","radius","render","time","particleData","forEach","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","DYNAMIC_DRAW","useProgram","stride","positionLocation","attributes","ageLocation","energyLocation","velocityLocation","undefined","enableVertexAttribArray","vertexAttribPointer","FLOAT","setUniform1f","uniforms","setUniform3f","drawArrays","POINTS","destroy","deleteProgram","deleteBuffer","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/ParticleSystem.ts"],"sourcesContent":["// src/shared/utils/ParticleSystem.ts\r\nimport WebGLUtils, { ShaderProgram } from './webgl';\r\nimport { SecureRandom } from './secureRandom';\r\n\r\ninterface Particle {\r\n  x: number;\r\n  y: number;\r\n  vx: number;\r\n  vy: number;\r\n  energy: number;\r\n  age: number;\r\n  maxAge: number;\r\n}\r\n\r\nexport class ParticleSystem {\r\n  private gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n  private program: ShaderProgram | null = null;\r\n  private particles: Particle[] = [];\r\n  private particleBuffer: WebGLBuffer | null = null;\r\n  private maxParticles: number;\r\n  private emissionRate: number;\r\n  private lastEmission: number = 0;\r\n\r\n  constructor(gl: WebGLRenderingContext | WebGL2RenderingContext, maxParticles = 100) {\r\n    this.gl = gl;\r\n    this.maxParticles = maxParticles;\r\n    this.emissionRate = 20; // particules par seconde\r\n    this.initializeShaders();\r\n    this.createBuffers();\r\n  }\r\n\r\n  private initializeShaders(): void {\r\n    const vertexShader = `precision highp float;\r\n\r\nattribute vec2 a_position;\r\nattribute float a_age;\r\nattribute float a_energy;\r\nattribute vec2 a_velocity;\r\n\r\nuniform float u_time;\r\nuniform float u_globalEnergy;\r\nuniform vec2 u_resolution;\r\n\r\nvarying float v_age;\r\nvarying float v_energy;\r\nvarying float v_alpha;\r\n\r\nfloat noise(vec2 p) {\r\n    return fract(sin(dot(p, vec2(12.9898, 78.233))) * 43758.5453);\r\n}\r\n\r\nvoid main() {\r\n    vec2 pos = a_position;\r\n    \r\n    float lifetime = 3.0;\r\n    float normalizedAge = a_age / lifetime;\r\n    \r\n    // Mouvement des particules\r\n    vec2 drift = a_velocity * a_age;\r\n    pos += drift;\r\n    \r\n    // Oscillation\r\n    float oscillation = sin(u_time * 2.0 + pos.x * 10.0) * 0.02;\r\n    pos.y += oscillation * (1.0 - normalizedAge);\r\n    \r\n    // Attraction vers le centre\r\n    vec2 toCenter = -normalize(pos) * u_globalEnergy * 0.1;\r\n    pos += toCenter * normalizedAge;\r\n    \r\n    float size = a_energy * (1.0 - normalizedAge * 0.7) * 8.0;\r\n    \r\n    v_alpha = (1.0 - normalizedAge) * a_energy;\r\n    v_age = normalizedAge;\r\n    v_energy = a_energy;\r\n    \r\n    gl_Position = vec4(pos, 0.0, 1.0);\r\n    gl_PointSize = size;\r\n}`;\r\n\r\n    const fragmentShader = `precision highp float;\r\n\r\nvarying float v_age;\r\nvarying float v_energy;\r\nvarying float v_alpha;\r\n\r\nuniform float u_time;\r\nuniform vec3 u_energyColor;\r\nuniform vec3 u_coreColor;\r\n\r\nvoid main() {\r\n    vec2 coord = gl_PointCoord - vec2(0.5);\r\n    float dist = length(coord);\r\n    \r\n    float circle = smoothstep(0.5, 0.3, dist);\r\n    float halo = smoothstep(0.5, 0.0, dist);\r\n    \r\n    float pulse = sin(u_time * 4.0 + v_energy * 10.0) * 0.3 + 0.7;\r\n    \r\n    vec3 color = mix(u_coreColor, u_energyColor, v_age);\r\n    color *= pulse;\r\n    \r\n    float twinkle = fract(sin(v_energy * 123.456) * 43758.5453);\r\n    twinkle = step(0.97, twinkle) * 2.0;\r\n    color += vec3(twinkle * 0.5);\r\n    \r\n    float alpha = circle * v_alpha * (0.8 + halo * 0.2);\r\n    \r\n    gl_FragColor = vec4(color, alpha);\r\n}`;\r\n\r\n    this.program = WebGLUtils.createProgram(this.gl, vertexShader, fragmentShader);\r\n  }\r\n\r\n  private createBuffers(): void {\r\n    this.particleBuffer = this.gl.createBuffer();\r\n  }\r\n\r\n  public emitParticle(x: number, y: number, energy: number): void {\r\n    if (this.particles.length >= this.maxParticles) {\r\n      // Remplacer la plus ancienne particule\r\n      this.particles.shift();\r\n    }\r\n\r\n    const angle = SecureRandom.random() * Math.PI * 2;\r\n    const speed = 0.05 + SecureRandom.random() * 0.1;\r\n\r\n    const particle: Particle = {\r\n      x,\r\n      y,\r\n      vx: Math.cos(angle) * speed,\r\n      vy: Math.sin(angle) * speed,\r\n      energy: energy * (0.5 + SecureRandom.random() * 0.5),\r\n      age: 0,\r\n      maxAge: 2 + SecureRandom.random() * 2 // 2-4 secondes\r\n    };\r\n\r\n    this.particles.push(particle);\r\n  }\r\n\r\n  public update(deltaTime: number, globalEnergy: number, centerX: number, centerY: number): void {\r\n    // Mettre à jour les particules existantes\r\n    for (let i = this.particles.length - 1; i >= 0; i--) {\r\n      const particle = this.particles[i];\r\n      \r\n      particle.age += deltaTime;\r\n      \r\n      // Supprimer les particules trop anciennes\r\n      if (particle.age >= particle.maxAge) {\r\n        this.particles.splice(i, 1);\r\n        continue;\r\n      }\r\n      \r\n      // Mettre à jour la position\r\n      particle.x += particle.vx * deltaTime;\r\n      particle.y += particle.vy * deltaTime;\r\n    }\r\n\r\n    // Émettre de nouvelles particules\r\n    const currentTime = Date.now() / 1000;\r\n    const timeSinceLastEmission = currentTime - this.lastEmission;\r\n    const particlesToEmit = Math.floor(timeSinceLastEmission * this.emissionRate * globalEnergy);\r\n\r\n    for (let i = 0; i < particlesToEmit; i++) {\r\n      const angle = SecureRandom.random() * Math.PI * 2;\r\n      const radius = 0.1 + SecureRandom.random() * 0.2;\r\n      const x = centerX + Math.cos(angle) * radius;\r\n      const y = centerY + Math.sin(angle) * radius;\r\n      \r\n      this.emitParticle(x, y, globalEnergy);\r\n    }\r\n\r\n    if (particlesToEmit > 0) {\r\n      this.lastEmission = currentTime;\r\n    }\r\n  }\r\n\r\n  public render(time: number, globalEnergy: number): void {\r\n    if (!this.program || this.particles.length === 0) return;\r\n\r\n    const gl = this.gl;\r\n    \r\n    // Préparer les données des particules\r\n    const particleData: number[] = [];\r\n    \r\n    this.particles.forEach(particle => {\r\n      particleData.push(\r\n        particle.x, particle.y,           // position\r\n        particle.age,                     // age\r\n        particle.energy,                  // energy\r\n        particle.vx, particle.vy          // velocity\r\n      );\r\n    });\r\n\r\n    // Mettre à jour le buffer\r\n    if (this.particleBuffer) {\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.particleBuffer);\r\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(particleData), gl.DYNAMIC_DRAW);\r\n    }\r\n\r\n    // Utiliser le programme\r\n    gl.useProgram(this.program.program);\r\n\r\n    // Setup attributes\r\n    const stride = 6 * 4; // 6 floats par particule\r\n    const positionLocation = this.program.attributes['a_position'];\r\n    const ageLocation = this.program.attributes['a_age'];\r\n    const energyLocation = this.program.attributes['a_energy'];\r\n    const velocityLocation = this.program.attributes['a_velocity'];\r\n\r\n    if (positionLocation !== undefined && positionLocation >= 0) {\r\n      gl.enableVertexAttribArray(positionLocation);\r\n      gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, stride, 0);\r\n    }\r\n\r\n    if (ageLocation !== undefined && ageLocation >= 0) {\r\n      gl.enableVertexAttribArray(ageLocation);\r\n      gl.vertexAttribPointer(ageLocation, 1, gl.FLOAT, false, stride, 8);\r\n    }\r\n\r\n    if (energyLocation !== undefined && energyLocation >= 0) {\r\n      gl.enableVertexAttribArray(energyLocation);\r\n      gl.vertexAttribPointer(energyLocation, 1, gl.FLOAT, false, stride, 12);\r\n    }\r\n\r\n    if (velocityLocation !== undefined && velocityLocation >= 0) {\r\n      gl.enableVertexAttribArray(velocityLocation);\r\n      gl.vertexAttribPointer(velocityLocation, 2, gl.FLOAT, false, stride, 16);\r\n    }\r\n\r\n    // Uniforms\r\n    WebGLUtils.setUniform1f(gl, this.program.uniforms['u_time'], time);\r\n    WebGLUtils.setUniform1f(gl, this.program.uniforms['u_globalEnergy'], globalEnergy);\r\n    WebGLUtils.setUniform3f(gl, this.program.uniforms['u_energyColor'], 0.0, 0.878, 1.0);\r\n    WebGLUtils.setUniform3f(gl, this.program.uniforms['u_coreColor'], 1.0, 1.0, 1.0);\r\n\r\n    // Rendu\r\n    gl.drawArrays(gl.POINTS, 0, this.particles.length);\r\n  }\r\n\r\n  public destroy(): void {\r\n    if (this.gl && this.program) {\r\n      this.gl.deleteProgram(this.program.program);\r\n    }\r\n    if (this.gl && this.particleBuffer) {\r\n      this.gl.deleteBuffer(this.particleBuffer);\r\n    }\r\n    this.particles = [];\r\n  }\r\n}\r\n\r\nexport default ParticleSystem;"],"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","ignoreList":[]}