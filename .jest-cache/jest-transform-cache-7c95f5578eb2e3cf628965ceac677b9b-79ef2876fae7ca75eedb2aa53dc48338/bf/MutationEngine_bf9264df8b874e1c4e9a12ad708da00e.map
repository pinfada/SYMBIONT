{"version":3,"names":["cov_1cb4ix3zf3","actualCoverage","s","MutationEngine","constructor","f","activeMutations","Map","mutationId","currentState","colorShift","patternIntensity","sizeMultiplier","opacity","apply","mutation","includes","type","b","undefined","id","visualMutation","startTime","performance","now","progress","set","update","currentTime","entries","elapsed","Math","min","duration","applyEasing","easing","updateMutationState","delete","t","pow","factor","magnitude","getCurrentState","clearAll","clear","applyMutation","state","lastMutation","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/generative/MutationEngine.ts"],"sourcesContent":["// src/generative/MutationEngine.ts\r\n// Système de mutations harmonisé\r\nimport { OrganismMutation, MutationState } from '../shared/types/organism';\r\n\r\n// Seuls les types visuels sont acceptés par le moteur WebGL\r\n// (visual_evolution est ignoré ici)\r\ntype VisualMutation = Extract<OrganismMutation, { type: 'color_shift' | 'pattern_change' | 'size_fluctuation' | 'opacity_variation' }>;\r\n\r\nexport class MutationEngine {\r\n  // On utilise Map<string, any> car les mutations sont enrichies dynamiquement (startTime, progress)\r\n  private activeMutations: Map<string, any> = new Map();\r\n  private mutationId: number = 0;\r\n  private currentState: MutationState = {\r\n    colorShift: 0,\r\n    patternIntensity: 0,\r\n    sizeMultiplier: 1,\r\n    opacity: 1\r\n  };\r\n\r\n  /**\r\n   * Applique une mutation visuelle (autres types ignorés)\r\n   */\r\n  public apply(mutation: OrganismMutation): string | undefined {\r\n    if (!['color_shift', 'pattern_change', 'size_fluctuation', 'opacity_variation'].includes(mutation.type)) {\r\n      // Ignorer les mutations non visuelles\r\n      return undefined;\r\n    }\r\n    const id = `mutation_${this.mutationId++}`;\r\n    const visualMutation: VisualMutation = mutation as VisualMutation;\r\n    (visualMutation as any).startTime = performance.now();\r\n    (visualMutation as any).progress = 0;\r\n    this.activeMutations.set(id, visualMutation);\r\n    return id;\r\n  }\r\n\r\n  /**\r\n   * Met à jour toutes les mutations actives\r\n   */\r\n  public update(currentTime: number): void {\r\n    for (const [id, mutation] of this.activeMutations.entries()) {\r\n      const elapsed = currentTime - ((mutation as any).startTime || 0);\r\n      const progress = Math.min(elapsed / (mutation as any).duration, 1);\r\n      (mutation as any).progress = this.applyEasing(progress, (mutation as any).easing || 'linear');\r\n      this.updateMutationState(mutation as any);\r\n      if (progress >= 1) {\r\n        this.activeMutations.delete(id);\r\n      }\r\n    }\r\n  }\r\n\r\n  private applyEasing(t: number, easing: string): number {\r\n    switch (easing) {\r\n      case 'ease-in': return t * t;\r\n      case 'ease-out': return t * (2 - t);\r\n      case 'bounce': return t < 0.5 ? 4 * t * t * t : 1 - Math.pow(-2 * t + 2, 3) / 2;\r\n      default: return t;\r\n    }\r\n  }\r\n\r\n  private updateMutationState(mutation: any): void {\r\n    const factor = (mutation.progress || 0) * mutation.magnitude;\r\n    switch (mutation.type) {\r\n      case 'color_shift':\r\n        this.currentState.colorShift = factor;\r\n        break;\r\n      case 'pattern_change':\r\n        this.currentState.patternIntensity = factor;\r\n        break;\r\n      case 'size_fluctuation':\r\n        this.currentState.sizeMultiplier = 1 + factor * 0.5;\r\n        break;\r\n      case 'opacity_variation':\r\n        this.currentState.opacity = 1 - factor * 0.3;\r\n        break;\r\n    }\r\n  }\r\n\r\n  public getCurrentState(): MutationState {\r\n    return { ...this.currentState };\r\n  }\r\n\r\n  public clearAll(): void {\r\n    this.activeMutations.clear();\r\n    this.currentState = {\r\n      colorShift: 0,\r\n      patternIntensity: 0,\r\n      sizeMultiplier: 1,\r\n      opacity: 1\r\n    };\r\n  }\r\n\r\n  applyMutation(state: any, mutation: any) { state.lastMutation = mutation; return state; }\r\n}"],"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","ignoreList":[]}