{"version":3,"names":["react_1","cov_181s9uf1jl","s","__importStar","require","SystemStatusDashboard","f","health","setHealth","useState","api","database","cache","websocket","metrics","setMetrics","activeUsers","totalOrganisms","mutationsPerHour","apiLatency","uptime","version","networkStats","setNetworkStats","totalConnections","activeRituals","dataProcessed","evolutionEvents","isExpanded","setIsExpanded","useEffect","fetchSystemStatus","interval","setInterval","clearInterval","healthResponse","fetch","ok","b","healthData","json","metricsResponse","metricsData","networkResponse","networkData","error","console","prev","getStatusColor","status","getStatusIcon","jsx_runtime_1","jsx","className","children","jsxs","onClick","title","style","color","toUpperCase","process","env","NODE_ENV","window","open","exports","default"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/components/production/SystemStatusDashboard.tsx"],"sourcesContent":["// System Status Dashboard - Production Monitoring\r\nimport React, { useState, useEffect } from 'react';\r\n\r\ninterface SystemHealth {\r\n  api: 'healthy' | 'degraded' | 'down';\r\n  database: 'healthy' | 'degraded' | 'down';\r\n  cache: 'healthy' | 'degraded' | 'down';\r\n  websocket: 'connected' | 'reconnecting' | 'disconnected';\r\n}\r\n\r\ninterface SystemMetrics {\r\n  activeUsers: number;\r\n  totalOrganisms: number;\r\n  mutationsPerHour: number;\r\n  apiLatency: number;\r\n  uptime: string;\r\n  version: string;\r\n}\r\n\r\ninterface NetworkStats {\r\n  totalConnections: number;\r\n  activeRituals: number;\r\n  dataProcessed: string;\r\n  evolutionEvents: number;\r\n}\r\n\r\nexport const SystemStatusDashboard: React.FC = () => {\r\n  const [health, setHealth] = useState<SystemHealth>({\r\n    api: 'healthy',\r\n    database: 'healthy',\r\n    cache: 'healthy',\r\n    websocket: 'connected'\r\n  });\r\n\r\n  const [metrics, setMetrics] = useState<SystemMetrics>({\r\n    activeUsers: 0,\r\n    totalOrganisms: 0,\r\n    mutationsPerHour: 0,\r\n    apiLatency: 0,\r\n    uptime: '0h 0m',\r\n    version: '1.0.0'\r\n  });\r\n\r\n  const [networkStats, setNetworkStats] = useState<NetworkStats>({\r\n    totalConnections: 0,\r\n    activeRituals: 0,\r\n    dataProcessed: '0 MB',\r\n    evolutionEvents: 0\r\n  });\r\n\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchSystemStatus();\r\n    const interval = setInterval(fetchSystemStatus, 5000); // Update every 5s\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const fetchSystemStatus = async () => {\r\n    try {\r\n      // Fetch system health\r\n      const healthResponse = await fetch('/api/system/health');\r\n      if (healthResponse.ok) {\r\n        const healthData = await healthResponse.json();\r\n        setHealth(healthData);\r\n      }\r\n\r\n      // Fetch metrics\r\n      const metricsResponse = await fetch('/api/system/metrics');\r\n      if (metricsResponse.ok) {\r\n        const metricsData = await metricsResponse.json();\r\n        setMetrics(metricsData);\r\n      }\r\n\r\n      // Fetch network stats\r\n      const networkResponse = await fetch('/api/system/network-stats');\r\n      if (networkResponse.ok) {\r\n        const networkData = await networkResponse.json();\r\n        setNetworkStats(networkData);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch system status:', error);\r\n      setHealth(prev => ({ ...prev, api: 'down' }));\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string): string => {\r\n    switch (status) {\r\n      case 'healthy':\r\n      case 'connected':\r\n        return '#00C9DB';\r\n      case 'degraded':\r\n      case 'reconnecting':\r\n        return '#FFB800';\r\n      case 'down':\r\n      case 'disconnected':\r\n        return '#FF6B6B';\r\n      default:\r\n        return '#6B7280';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string): string => {\r\n    switch (status) {\r\n      case 'healthy':\r\n      case 'connected':\r\n        return '‚úÖ';\r\n      case 'degraded':\r\n      case 'reconnecting':\r\n        return '‚ö†Ô∏è';\r\n      case 'down':\r\n      case 'disconnected':\r\n        return '‚ùå';\r\n      default:\r\n        return '‚ö™';\r\n    }\r\n  };\r\n\r\n  if (!isExpanded) {\r\n    return (\r\n      <div className=\"system-status-compact\">\r\n        <button\r\n          onClick={() => setIsExpanded(true)}\r\n          className=\"status-toggle\"\r\n          title=\"Voir le status syst√®me\"\r\n        >\r\n          <span className=\"status-indicator\">\r\n            {getStatusIcon(health.api)} SYMBIONT\r\n          </span>\r\n          <span className=\"metrics-preview\">\r\n            {metrics.activeUsers} utilisateurs ‚Ä¢ {metrics.apiLatency}ms\r\n          </span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"system-status-dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h2>üîç System Status Dashboard</h2>\r\n        <button\r\n          onClick={() => setIsExpanded(false)}\r\n          className=\"close-button\"\r\n        >\r\n          ‚úï\r\n        </button>\r\n      </div>\r\n\r\n      {/* Health Status Grid */}\r\n      <div className=\"health-grid\">\r\n        <div className=\"health-card\">\r\n          <div className=\"health-header\">\r\n            <span className=\"health-icon\">{getStatusIcon(health.api)}</span>\r\n            <h3>API Backend</h3>\r\n          </div>\r\n          <div \r\n            className=\"health-status\"\r\n            style={{ color: getStatusColor(health.api) }}\r\n          >\r\n            {health.api.toUpperCase()}\r\n          </div>\r\n          <div className=\"health-metric\">\r\n            Latence: {metrics.apiLatency}ms\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"health-card\">\r\n          <div className=\"health-header\">\r\n            <span className=\"health-icon\">{getStatusIcon(health.database)}</span>\r\n            <h3>Base de Donn√©es</h3>\r\n          </div>\r\n          <div \r\n            className=\"health-status\"\r\n            style={{ color: getStatusColor(health.database) }}\r\n          >\r\n            {health.database.toUpperCase()}\r\n          </div>\r\n          <div className=\"health-metric\">\r\n            {metrics.totalOrganisms} organismes\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"health-card\">\r\n          <div className=\"health-header\">\r\n            <span className=\"health-icon\">{getStatusIcon(health.cache)}</span>\r\n            <h3>Cache Redis</h3>\r\n          </div>\r\n          <div \r\n            className=\"health-status\"\r\n            style={{ color: getStatusColor(health.cache) }}\r\n          >\r\n            {health.cache.toUpperCase()}\r\n          </div>\r\n          <div className=\"health-metric\">\r\n            Donn√©es: {networkStats.dataProcessed}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"health-card\">\r\n          <div className=\"health-header\">\r\n            <span className=\"health-icon\">{getStatusIcon(health.websocket)}</span>\r\n            <h3>WebSocket</h3>\r\n          </div>\r\n          <div \r\n            className=\"health-status\"\r\n            style={{ color: getStatusColor(health.websocket) }}\r\n          >\r\n            {health.websocket.toUpperCase()}\r\n          </div>\r\n          <div className=\"health-metric\">\r\n            {networkStats.totalConnections} connexions\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Real-time Metrics */}\r\n      <div className=\"metrics-section\">\r\n        <h3>üìä M√©triques Temps R√©el</h3>\r\n        <div className=\"metrics-grid\">\r\n          <div className=\"metric-item\">\r\n            <div className=\"metric-value\">{metrics.activeUsers}</div>\r\n            <div className=\"metric-label\">Utilisateurs Actifs</div>\r\n          </div>\r\n          \r\n          <div className=\"metric-item\">\r\n            <div className=\"metric-value\">{metrics.mutationsPerHour}</div>\r\n            <div className=\"metric-label\">Mutations/heure</div>\r\n          </div>\r\n          \r\n          <div className=\"metric-item\">\r\n            <div className=\"metric-value\">{networkStats.activeRituals}</div>\r\n            <div className=\"metric-label\">Rituels Actifs</div>\r\n          </div>\r\n          \r\n          <div className=\"metric-item\">\r\n            <div className=\"metric-value\">{networkStats.evolutionEvents}</div>\r\n            <div className=\"metric-label\">√âv√®nements Evolution</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* System Info */}\r\n      <div className=\"system-info\">\r\n        <div className=\"info-item\">\r\n          <span className=\"info-label\">Uptime:</span>\r\n          <span className=\"info-value\">{metrics.uptime}</span>\r\n        </div>\r\n        <div className=\"info-item\">\r\n          <span className=\"info-label\">Version:</span>\r\n          <span className=\"info-value\">v{metrics.version}</span>\r\n        </div>\r\n        <div className=\"info-item\">\r\n          <span className=\"info-label\">Environnement:</span>\r\n          <span className=\"info-value\">\r\n            {process.env.NODE_ENV?.toUpperCase() || 'DEVELOPMENT'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"quick-actions\">\r\n        <button \r\n          className=\"action-button\"\r\n          onClick={() => window.open('/api/health', '_blank')}\r\n        >\r\n          üîó API Health\r\n        </button>\r\n        <button \r\n          className=\"action-button\"\r\n          onClick={() => window.open(':3000', '_blank')}\r\n        >\r\n          üìà Grafana\r\n        </button>\r\n        <button \r\n          className=\"action-button\"\r\n          onClick={() => window.open(':9090', '_blank')}\r\n        >\r\n          üéØ Prometheus\r\n        </button>\r\n        <button \r\n          className=\"action-button\"\r\n          onClick={fetchSystemStatus}\r\n        >\r\n          üîÑ Refresh\r\n        </button>\r\n      </div>\r\n\r\n      <style>{`\r\n        .system-status-compact {\r\n          position: fixed;\r\n          bottom: 20px;\r\n          right: 20px;\r\n          z-index: 1000;\r\n        }\r\n\r\n        .status-toggle {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          background: rgba(0, 0, 0, 0.8);\r\n          color: white;\r\n          border: 1px solid var(--cyan);\r\n          border-radius: 25px;\r\n          padding: 8px 16px;\r\n          font-size: 12px;\r\n          backdrop-filter: blur(10px);\r\n          cursor: pointer;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .status-toggle:hover {\r\n          background: rgba(0, 201, 219, 0.1);\r\n          border-color: var(--cyan-bright);\r\n        }\r\n\r\n        .status-indicator {\r\n          font-weight: bold;\r\n        }\r\n\r\n        .metrics-preview {\r\n          opacity: 0.7;\r\n          font-size: 11px;\r\n        }\r\n\r\n        .system-status-dashboard {\r\n          position: fixed;\r\n          top: 50px;\r\n          right: 20px;\r\n          width: 600px;\r\n          background: rgba(0, 0, 0, 0.95);\r\n          border: 1px solid var(--cyan);\r\n          border-radius: 15px;\r\n          backdrop-filter: blur(20px);\r\n          padding: 20px;\r\n          color: white;\r\n          z-index: 1000;\r\n          max-height: 80vh;\r\n          overflow-y: auto;\r\n        }\r\n\r\n        .dashboard-header {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          margin-bottom: 20px;\r\n          padding-bottom: 10px;\r\n          border-bottom: 1px solid rgba(0, 201, 219, 0.3);\r\n        }\r\n\r\n        .dashboard-header h2 {\r\n          margin: 0;\r\n          color: var(--cyan);\r\n        }\r\n\r\n        .close-button {\r\n          background: none;\r\n          border: none;\r\n          color: white;\r\n          font-size: 18px;\r\n          cursor: pointer;\r\n          opacity: 0.7;\r\n          transition: opacity 0.3s;\r\n        }\r\n\r\n        .close-button:hover {\r\n          opacity: 1;\r\n        }\r\n\r\n        .health-grid {\r\n          display: grid;\r\n          grid-template-columns: repeat(2, 1fr);\r\n          gap: 15px;\r\n          margin-bottom: 25px;\r\n        }\r\n\r\n        .health-card {\r\n          background: rgba(255, 255, 255, 0.05);\r\n          border: 1px solid rgba(255, 255, 255, 0.1);\r\n          border-radius: 10px;\r\n          padding: 15px;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .health-card:hover {\r\n          background: rgba(255, 255, 255, 0.1);\r\n          border-color: var(--cyan);\r\n        }\r\n\r\n        .health-header {\r\n          display: flex;\r\n          align-items: center;\r\n          gap: 8px;\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        .health-header h3 {\r\n          margin: 0;\r\n          font-size: 14px;\r\n          color: white;\r\n        }\r\n\r\n        .health-icon {\r\n          font-size: 16px;\r\n        }\r\n\r\n        .health-status {\r\n          font-weight: bold;\r\n          font-size: 12px;\r\n          margin-bottom: 5px;\r\n        }\r\n\r\n        .health-metric {\r\n          font-size: 11px;\r\n          opacity: 0.7;\r\n        }\r\n\r\n        .metrics-section h3 {\r\n          color: var(--cyan);\r\n          margin-bottom: 15px;\r\n          font-size: 16px;\r\n        }\r\n\r\n        .metrics-grid {\r\n          display: grid;\r\n          grid-template-columns: repeat(4, 1fr);\r\n          gap: 15px;\r\n          margin-bottom: 25px;\r\n        }\r\n\r\n        .metric-item {\r\n          text-align: center;\r\n          background: rgba(0, 201, 219, 0.1);\r\n          border-radius: 10px;\r\n          padding: 15px 10px;\r\n        }\r\n\r\n        .metric-value {\r\n          font-size: 24px;\r\n          font-weight: bold;\r\n          color: var(--cyan);\r\n          margin-bottom: 5px;\r\n        }\r\n\r\n        .metric-label {\r\n          font-size: 11px;\r\n          opacity: 0.8;\r\n        }\r\n\r\n        .system-info {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          margin-bottom: 20px;\r\n          padding: 10px;\r\n          background: rgba(255, 255, 255, 0.05);\r\n          border-radius: 8px;\r\n        }\r\n\r\n        .info-item {\r\n          display: flex;\r\n          flex-direction: column;\r\n          text-align: center;\r\n        }\r\n\r\n        .info-label {\r\n          font-size: 11px;\r\n          opacity: 0.7;\r\n          margin-bottom: 3px;\r\n        }\r\n\r\n        .info-value {\r\n          font-size: 12px;\r\n          font-weight: bold;\r\n          color: var(--cyan);\r\n        }\r\n\r\n        .quick-actions {\r\n          display: flex;\r\n          gap: 10px;\r\n          flex-wrap: wrap;\r\n        }\r\n\r\n        .action-button {\r\n          background: rgba(0, 201, 219, 0.2);\r\n          border: 1px solid var(--cyan);\r\n          color: white;\r\n          border-radius: 8px;\r\n          padding: 8px 12px;\r\n          font-size: 11px;\r\n          cursor: pointer;\r\n          transition: all 0.3s ease;\r\n        }\r\n\r\n        .action-button:hover {\r\n          background: rgba(0, 201, 219, 0.4);\r\n          border-color: var(--cyan-bright);\r\n        }\r\n\r\n        /* Responsive */\r\n        @media (max-width: 768px) {\r\n          .system-status-dashboard {\r\n            width: calc(100vw - 40px);\r\n            right: 20px;\r\n            left: 20px;\r\n          }\r\n\r\n          .health-grid {\r\n            grid-template-columns: 1fr;\r\n          }\r\n\r\n          .metrics-grid {\r\n            grid-template-columns: repeat(2, 1fr);\r\n          }\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SystemStatusDashboard; "],"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","ignoreList":[]}