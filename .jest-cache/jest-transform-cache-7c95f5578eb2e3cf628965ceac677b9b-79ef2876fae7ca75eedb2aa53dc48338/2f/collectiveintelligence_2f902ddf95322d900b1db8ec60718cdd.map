{"version":3,"names":["cov_2c31ar482u","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","CollectiveIntelligence","constructor","onCollectiveMutation","proposals","Map","votes","peerId","Math","random","toString","substr","proposeMutation","mutation","proposerId","has","id","set","Set","get","push","vote","console","log","mutationId","voterId","add","aggregateVotes","size","triggerCollectiveMutation","totalPeers","consensus","max","floor","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/social/collective-intelligence.ts"],"sourcesContent":["// social/collective-intelligence.ts\r\n// Intelligence collective émergente (Phase 3)\r\n\r\nexport class CollectiveIntelligence {\r\n  private proposals: Map<string, any[]> = new Map()\r\n  private votes: Map<string, Set<string>> = new Map()\r\n  // @ts-expect-error Peer ID réservé pour usage futur\r\n  private peerId: string\r\n  private onCollectiveMutation: ((mutationId: string) => void) | null = null\r\n\r\n  constructor(onCollectiveMutation?: (mutationId: string) => void) {\r\n    this.peerId = 'peer_' + Math.random().toString(36).substr(2, 8)\r\n    if (onCollectiveMutation) this.onCollectiveMutation = onCollectiveMutation\r\n  }\r\n\r\n  proposeMutation(mutation: any, proposerId: string) {\r\n    if (!this.proposals.has(mutation.id)) {\r\n      this.proposals.set(mutation.id, [])\r\n      this.votes.set(mutation.id, new Set())\r\n    }\r\n    this.proposals.get(mutation.id)!.push({ mutation, proposerId })\r\n    // Vote automatiquement pour sa propre proposition\r\n    this.vote(mutation.id, proposerId)\r\n    console.log(`[Collective] Mutation proposée par ${proposerId}`)\r\n  }\r\n\r\n  vote(mutationId: string, voterId: string) {\r\n    if (!this.votes.has(mutationId)) this.votes.set(mutationId, new Set())\r\n    this.votes.get(mutationId)!.add(voterId)\r\n    console.log(`[Collective] Vote de ${voterId} pour mutation ${mutationId}`)\r\n  }\r\n\r\n  aggregateVotes(mutationId: string): number {\r\n    return this.votes.get(mutationId)?.size || 0\r\n  }\r\n\r\n  triggerCollectiveMutation(mutationId: string, totalPeers: number): boolean {\r\n    const votes = this.aggregateVotes(mutationId)\r\n    const consensus = votes > Math.max(1, Math.floor(totalPeers / 2))\r\n    if (consensus) {\r\n      console.log(`[Collective] Mutation collective déclenchée : ${mutationId}`)\r\n      if (this.onCollectiveMutation) this.onCollectiveMutation(mutationId)\r\n      return true\r\n    } else {\r\n      console.log(`[Collective] Consensus non atteint pour ${mutationId} (${votes}/${totalPeers})`)\r\n      return false\r\n    }\r\n  }\r\n} "],"mappings":";;AAAA;AACA;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UA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","ignoreList":[]}