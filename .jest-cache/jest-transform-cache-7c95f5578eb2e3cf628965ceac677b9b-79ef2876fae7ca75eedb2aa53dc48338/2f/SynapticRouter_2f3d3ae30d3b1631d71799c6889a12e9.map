{"version":3,"names":["cov_1c887z1vvs","actualCoverage","s","SynapticRouter","constructor","f","connections","Map","isConnected","connect","b","chrome","runtime","onMessage","addListener","message","_sender","sendResponse","handleMessage","then","disconnect","clear","registerHandler","route","handler","set","get","payload","sender","Promise","resolve","status","data","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/SynapticRouter.ts"],"sourcesContent":["type MessageHandler = (message: MessageEvent | unknown) => Promise<void>;\r\n\r\nexport class SynapticRouter {\r\n  private connections: Map<string, MessageHandler>;\r\n  private isConnected: boolean;\r\n\r\n  constructor() {\r\n    this.connections = new Map();\r\n    this.isConnected = false;\r\n  }\r\n\r\n  /**\r\n   * Établit les connexions du routeur\r\n   * @returns {Promise<void>}\r\n   */\r\n  async connect(): Promise<void> {\r\n    if (this.isConnected) return;\r\n    \r\n    chrome.runtime.onMessage.addListener((message, _sender, sendResponse) => {\r\n      this.handleMessage(message).then(sendResponse);\r\n      return true;\r\n    });\r\n\r\n    this.isConnected = true;\r\n  }\r\n\r\n  /**\r\n   * Déconnecte le routeur\r\n   * @returns {Promise<void>}\r\n   */\r\n  async disconnect(): Promise<void> {\r\n    this.connections.clear();\r\n    this.isConnected = false;\r\n  }\r\n\r\n  /**\r\n   * Enregistre un gestionnaire de messages\r\n   * @param {string} route - Identifiant de la route\r\n   * @param {MessageHandler} handler - Fonction de traitement\r\n   */\r\n  registerHandler(route: string, handler: MessageHandler): void {\r\n    this.connections.set(route, handler);\r\n  }\r\n\r\n  /**\r\n   * Gère un message entrant\r\n   * @param {any} message - Message à traiter\r\n   * @returns {Promise<void>}\r\n   */\r\n  private async handleMessage(message: MessageEvent | unknown): Promise<void> {\r\n    if (message && typeof message === 'object' && 'route' in message) {\r\n      const handler = this.connections.get((message as any).route);\r\n      if (handler) {\r\n        await handler((message as any).payload);\r\n      }\r\n    }\r\n  }\r\n\r\n  // @ts-expect-error Paramètre réservé pour usage futur\r\n  async route(message: Message, sender?: MessagePort): Promise<unknown> {\r\n    // Simplified routing\r\n    return Promise.resolve({ status: 'routed', data: message });\r\n  }\r\n} "],"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","ignoreList":[]}