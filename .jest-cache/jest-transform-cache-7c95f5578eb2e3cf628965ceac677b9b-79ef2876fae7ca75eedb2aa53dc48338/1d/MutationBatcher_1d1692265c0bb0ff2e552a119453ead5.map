{"version":3,"names":["cov_13hfzteg62","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","ErrorHandler_1","require","MutationBatcher","constructor","onBatchReady","config","pendingMutations","Map","debounceTimer","totalRequests","totalBatches","averageBatchSize","lastBatchTime","debounceMs","maxBatchSize","maxWaitTimeMs","combinationStrategy","addMutation","rate","priority","mutationId","Date","now","Math","random","toString","substr","request","id","max","min","timestamp","set","scheduleBatchProcessing","cancelMutation","delete","flushBatch","clearTimeout","processPendingMutations","shouldProcessImmediately","size","hasHighPriorityMutation","hasOldestMutationExceededMaxWait","catch","error","errorHandler","logSimpleError","setTimeout","Array","from","values","some","m","oldestMutation","reduce","oldest","current","mutations","clear","batchedMutation","combineMutations","updateStatistics","length","forEach","mutation","Error","rates","map","priorities","timestamps","combinedRate","sum","calculateWeightedRate","hasCritical","includes","hasNormal","overallPriority","timespan","requestCount","totalWeight","weightedSum","priorityWeight","age","recencyWeight","exp","totalMutationWeight","batchSize","alpha","getStatistics","compressionRatio","updateConfig","newConfig","dispose","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/utils/MutationBatcher.ts"],"sourcesContent":["// Système de batching et debouncing pour optimiser les mutations\r\n// Évite les mutations trop fréquentes qui peuvent dégrader les performances\r\n\r\nimport { errorHandler } from './ErrorHandler';\r\n\r\nexport interface MutationRequest {\r\n  id: string;\r\n  rate: number;\r\n  timestamp: number;\r\n  priority: 'low' | 'normal' | 'high';\r\n}\r\n\r\nexport interface BatchedMutation {\r\n  combinedRate: number;\r\n  requestCount: number;\r\n  timespan: number;\r\n  priority: 'low' | 'normal' | 'high';\r\n}\r\n\r\nexport interface MutationBatcherConfig {\r\n  debounceMs: number;\r\n  maxBatchSize: number;\r\n  maxWaitTimeMs: number;\r\n  combinationStrategy: 'average' | 'max' | 'sum' | 'weighted';\r\n}\r\n\r\nexport class MutationBatcher {\r\n  private pendingMutations: Map<string, MutationRequest> = new Map();\r\n  private debounceTimer: NodeJS.Timeout | null = null;\r\n  private config: MutationBatcherConfig;\r\n  private onBatchReady: (batch: BatchedMutation) => Promise<void>;\r\n  \r\n  // Statistics\r\n  private totalRequests = 0;\r\n  private totalBatches = 0;\r\n  private averageBatchSize = 0;\r\n  private lastBatchTime = 0;\r\n\r\n  constructor(\r\n    onBatchReady: (batch: BatchedMutation) => Promise<void>,\r\n    config: Partial<MutationBatcherConfig> = {}\r\n  ) {\r\n    this.onBatchReady = onBatchReady;\r\n    this.config = {\r\n      debounceMs: 50, // 50ms debounce by default\r\n      maxBatchSize: 10,\r\n      maxWaitTimeMs: 200, // Max 200ms wait\r\n      combinationStrategy: 'weighted',\r\n      ...config\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Ajoute une requête de mutation au batch\r\n   */\r\n  public addMutation(rate: number, priority: 'low' | 'normal' | 'high' = 'normal'): string {\r\n    const mutationId = `mutation_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    \r\n    const request: MutationRequest = {\r\n      id: mutationId,\r\n      rate: Math.max(0, Math.min(1, rate)), // Clamp to 0-1\r\n      timestamp: Date.now(),\r\n      priority\r\n    };\r\n\r\n    this.pendingMutations.set(mutationId, request);\r\n    this.totalRequests++;\r\n\r\n    // Schedule batch processing\r\n    this.scheduleBatchProcessing();\r\n\r\n    return mutationId;\r\n  }\r\n\r\n  /**\r\n   * Annule une mutation en attente\r\n   */\r\n  public cancelMutation(mutationId: string): boolean {\r\n    return this.pendingMutations.delete(mutationId);\r\n  }\r\n\r\n  /**\r\n   * Force le traitement immédiat du batch\r\n   */\r\n  public async flushBatch(): Promise<void> {\r\n    if (this.debounceTimer) {\r\n      clearTimeout(this.debounceTimer);\r\n      this.debounceTimer = null;\r\n    }\r\n\r\n    await this.processPendingMutations();\r\n  }\r\n\r\n  /**\r\n   * Planifie le traitement du batch avec debouncing\r\n   */\r\n  private scheduleBatchProcessing(): void {\r\n    // Clear existing timer\r\n    if (this.debounceTimer) {\r\n      clearTimeout(this.debounceTimer);\r\n    }\r\n\r\n    // Check if we should process immediately\r\n    const shouldProcessImmediately = \r\n      this.pendingMutations.size >= this.config.maxBatchSize ||\r\n      this.hasHighPriorityMutation() ||\r\n      this.hasOldestMutationExceededMaxWait();\r\n\r\n    if (shouldProcessImmediately) {\r\n      this.processPendingMutations().catch(error => {\r\n        errorHandler.logSimpleError('MutationBatcher', 'scheduleBatchProcessing', error);\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Schedule debounced processing\r\n    this.debounceTimer = setTimeout(() => {\r\n      this.processPendingMutations().catch(error => {\r\n        errorHandler.logSimpleError('MutationBatcher', 'debounceTimer', error);\r\n      });\r\n    }, this.config.debounceMs);\r\n  }\r\n\r\n  /**\r\n   * Vérifie s'il y a des mutations haute priorité\r\n   */\r\n  private hasHighPriorityMutation(): boolean {\r\n    return Array.from(this.pendingMutations.values()).some(m => m.priority === 'high');\r\n  }\r\n\r\n  /**\r\n   * Vérifie si la mutation la plus ancienne dépasse le temps d'attente max\r\n   */\r\n  private hasOldestMutationExceededMaxWait(): boolean {\r\n    const now = Date.now();\r\n    const oldestMutation = Array.from(this.pendingMutations.values())\r\n      .reduce((oldest, current) => \r\n        current.timestamp < oldest.timestamp ? current : oldest\r\n      );\r\n\r\n    return oldestMutation && (now - oldestMutation.timestamp) > this.config.maxWaitTimeMs;\r\n  }\r\n\r\n  /**\r\n   * Traite toutes les mutations en attente\r\n   */\r\n  private async processPendingMutations(): Promise<void> {\r\n    if (this.pendingMutations.size === 0) {\r\n      return;\r\n    }\r\n\r\n    const mutations = Array.from(this.pendingMutations.values());\r\n    this.pendingMutations.clear();\r\n\r\n    try {\r\n      const batchedMutation = this.combineMutations(mutations);\r\n      await this.onBatchReady(batchedMutation);\r\n      \r\n      this.updateStatistics(mutations.length);\r\n      this.lastBatchTime = Date.now();\r\n\r\n    } catch (error) {\r\n      errorHandler.logSimpleError('MutationBatcher', 'processPendingMutations', error);\r\n      \r\n      // Re-add mutations if processing failed\r\n      mutations.forEach(mutation => {\r\n        this.pendingMutations.set(mutation.id, mutation);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Combine plusieurs mutations en une seule selon la stratégie configurée\r\n   */\r\n  private combineMutations(mutations: MutationRequest[]): BatchedMutation {\r\n    if (mutations.length === 0) {\r\n      throw new Error('Cannot combine empty mutations array');\r\n    }\r\n\r\n    const rates = mutations.map(m => m.rate);\r\n    const priorities = mutations.map(m => m.priority);\r\n    const timestamps = mutations.map(m => m.timestamp);\r\n    \r\n    let combinedRate: number;\r\n\r\n    switch (this.config.combinationStrategy) {\r\n      case 'average':\r\n        combinedRate = rates.reduce((sum, rate) => sum + rate, 0) / rates.length;\r\n        break;\r\n\r\n      case 'max':\r\n        combinedRate = Math.max(...rates);\r\n        break;\r\n\r\n      case 'sum':\r\n        combinedRate = Math.min(1, rates.reduce((sum, rate) => sum + rate, 0));\r\n        break;\r\n\r\n      case 'weighted':\r\n        combinedRate = this.calculateWeightedRate(mutations);\r\n        break;\r\n\r\n      default:\r\n        combinedRate = rates.reduce((sum, rate) => sum + rate, 0) / rates.length;\r\n    }\r\n\r\n    // Determine overall priority\r\n    const hasCritical = priorities.includes('high');\r\n    const hasNormal = priorities.includes('normal');\r\n    const overallPriority = hasCritical ? 'high' : hasNormal ? 'normal' : 'low';\r\n\r\n    const timespan = Math.max(...timestamps) - Math.min(...timestamps);\r\n\r\n    return {\r\n      combinedRate: Math.max(0, Math.min(1, combinedRate)),\r\n      requestCount: mutations.length,\r\n      timespan,\r\n      priority: overallPriority\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Calcule un taux pondéré basé sur la priorité et le timing\r\n   */\r\n  private calculateWeightedRate(mutations: MutationRequest[]): number {\r\n    let totalWeight = 0;\r\n    let weightedSum = 0;\r\n    const now = Date.now();\r\n\r\n    mutations.forEach(mutation => {\r\n      // Weight based on priority\r\n      let priorityWeight = 1;\r\n      switch (mutation.priority) {\r\n        case 'high': priorityWeight = 3; break;\r\n        case 'normal': priorityWeight = 2; break;\r\n        case 'low': priorityWeight = 1; break;\r\n      }\r\n\r\n      // Weight based on recency (more recent = higher weight)\r\n      const age = now - mutation.timestamp;\r\n      const recencyWeight = Math.exp(-age / 1000); // Exponential decay\r\n\r\n      const totalMutationWeight = priorityWeight * recencyWeight;\r\n      \r\n      weightedSum += mutation.rate * totalMutationWeight;\r\n      totalWeight += totalMutationWeight;\r\n    });\r\n\r\n    return totalWeight > 0 ? weightedSum / totalWeight : 0;\r\n  }\r\n\r\n  /**\r\n   * Met à jour les statistiques\r\n   */\r\n  private updateStatistics(batchSize: number): void {\r\n    this.totalBatches++;\r\n    \r\n    // Moving average for batch size\r\n    const alpha = 0.1;\r\n    this.averageBatchSize = this.averageBatchSize * (1 - alpha) + batchSize * alpha;\r\n  }\r\n\r\n  /**\r\n   * Récupère les statistiques de performance\r\n   */\r\n  public getStatistics(): {\r\n    totalRequests: number;\r\n    totalBatches: number;\r\n    averageBatchSize: number;\r\n    compressionRatio: number;\r\n    pendingMutations: number;\r\n    lastBatchTime: number;\r\n    config: MutationBatcherConfig;\r\n  } {\r\n    const compressionRatio = this.totalBatches > 0 ? this.totalRequests / this.totalBatches : 1;\r\n\r\n    return {\r\n      totalRequests: this.totalRequests,\r\n      totalBatches: this.totalBatches,\r\n      averageBatchSize: this.averageBatchSize,\r\n      compressionRatio,\r\n      pendingMutations: this.pendingMutations.size,\r\n      lastBatchTime: this.lastBatchTime,\r\n      config: { ...this.config }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Met à jour la configuration\r\n   */\r\n  public updateConfig(newConfig: Partial<MutationBatcherConfig>): void {\r\n    this.config = { ...this.config, ...newConfig };\r\n  }\r\n\r\n  /**\r\n   * Nettoie les ressources\r\n   */\r\n  public dispose(): void {\r\n    if (this.debounceTimer) {\r\n      clearTimeout(this.debounceTimer);\r\n      this.debounceTimer = null;\r\n    }\r\n    this.pendingMutations.clear();\r\n  }\r\n} "],"mappings":"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","ignoreList":[]}