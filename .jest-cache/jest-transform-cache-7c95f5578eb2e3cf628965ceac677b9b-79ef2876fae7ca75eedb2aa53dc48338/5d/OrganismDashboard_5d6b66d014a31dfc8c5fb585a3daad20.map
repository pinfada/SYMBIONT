{"version":3,"names":["react_1","cov_10h0lsa8km","s","__importStar","require","OrganismViewer_1","ConsciousnessGauge_1","TraitsRadarChart_1","DEFAULT_TRAITS","curiosity","focus","rhythm","empathy","creativity","energy","harmony","wisdom","randomDNA","length","b","f","chars","Array","from","Math","floor","random","join","randomTraits","OrganismDashboard","dna","setDNA","useState","traits","setTraits","consciousness","setConsciousness","handleMetrics","metrics","max","min","fps","jsx_runtime_1","jsxs","style","display","flexDirection","alignItems","gap","background","minHeight","padding","children","jsx","color","letterSpacing","fontWeight","OrganismViewer","width","height","onMetrics","ConsciousnessGauge","value","TraitsRadarChart","marginTop","onClick","borderRadius","border","cursor","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/OrganismDashboard.tsx"],"sourcesContent":["// src/ui/OrganismDashboard.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { OrganismViewer } from './OrganismViewer';\r\nimport { ConsciousnessGauge } from './ConsciousnessGauge';\r\nimport { TraitsRadarChart } from './TraitsRadarChart';\r\nimport { OrganismTraits } from '../types';\r\n\r\n/**\r\n * OrganismDashboard - Dashboard principal de visualisation et contrôle\r\n * - Affiche l'organisme, la jauge de conscience, le radar des traits\r\n * - Permet de muter l'ADN et de randomiser les traits\r\n */\r\nconst DEFAULT_TRAITS: OrganismTraits = {\r\n  curiosity: 0.7,\r\n  focus: 0.5,\r\n  rhythm: 0.6,\r\n  empathy: 0.4,\r\n  creativity: 0.8,\r\n  energy: 0.6,\r\n  harmony: 0.5,\r\n  wisdom: 0.2\r\n};\r\n\r\nfunction randomDNA(length = 16) {\r\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  return Array.from({ length }, () => chars[Math.floor(Math.random() * chars.length)]).join('');\r\n}\r\n\r\nfunction randomTraits(): OrganismTraits {\r\n  return {\r\n    curiosity: Math.random(),\r\n    focus: Math.random(),\r\n    rhythm: Math.random(),\r\n    empathy: Math.random(),\r\n    creativity: Math.random(),\r\n    energy: Math.random(),\r\n    harmony: Math.random(),\r\n    wisdom: Math.random()\r\n  };\r\n}\r\n\r\nexport const OrganismDashboard: React.FC = () => {\r\n  const [dna, setDNA] = useState(randomDNA());\r\n  const [traits, setTraits] = useState<OrganismTraits>(DEFAULT_TRAITS);\r\n  const [consciousness, setConsciousness] = useState(0.5);\r\n\r\n  // Callback pour recevoir les métriques (ex : ajuster la conscience)\r\n  const handleMetrics = (metrics: any) => {\r\n    // Exemple : conscience = FPS normalisé (à adapter selon logique réelle)\r\n    setConsciousness(Math.max(0, Math.min(1, metrics.fps / 60)));\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      gap: 24,\r\n      background: '#181c22',\r\n      minHeight: '100vh',\r\n      padding: 32\r\n    }}>\r\n      <h2 style={{ color: '#00e0ff', letterSpacing: 2, fontWeight: 700 }}>SYMBIONT Organism Dashboard</h2>\r\n      <div style={{ display: 'flex', gap: 40, alignItems: 'center' }}>\r\n        <OrganismViewer dna={dna} traits={traits} width={320} height={320} onMetrics={handleMetrics} />\r\n        <div style={{ display: 'flex', flexDirection: 'column', gap: 24, alignItems: 'center' }}>\r\n          <ConsciousnessGauge value={consciousness} />\r\n          <TraitsRadarChart traits={traits} />\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: 32, display: 'flex', gap: 16 }}>\r\n        <button\r\n          onClick={() => setDNA(randomDNA())}\r\n          style={{ padding: '8px 18px', borderRadius: 6, background: '#00e0ff', color: '#111', fontWeight: 600, border: 'none', cursor: 'pointer' }}\r\n        >\r\n          ADN aléatoire\r\n        </button>\r\n        <button\r\n          onClick={() => setTraits(randomTraits())}\r\n          style={{ padding: '8px 18px', borderRadius: 6, background: '#222', color: '#fff', fontWeight: 600, border: 'none', cursor: 'pointer' }}\r\n        >\r\n          Traits aléatoires\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}; "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}