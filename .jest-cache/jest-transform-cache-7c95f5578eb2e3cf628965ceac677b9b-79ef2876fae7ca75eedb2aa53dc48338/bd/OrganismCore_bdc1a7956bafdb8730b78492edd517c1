5fba9c03d90b133d2afd661817bf9b57
"use strict";

/**
 * OrganismCore refactorisé - Architecture hexagonale
 * Version simplifiée utilisant des services spécialisés
 */
/* istanbul ignore next */
function cov_1kgk1e008k() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/OrganismCore.ts";
  var hash = "5503eb154e812ba6579b91e28b9d0d732b02696e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/OrganismCore.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 8,
          column: 1
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 30
        }
      },
      "4": {
        start: {
          line: 11,
          column: 23
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "5": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 12,
          column: 57
        }
      },
      "6": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 13,
          column: 59
        }
      },
      "7": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 59
        }
      },
      "8": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 86
        }
      },
      "9": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 86
        }
      },
      "10": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 26
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "13": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 65
        }
      },
      "14": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "15": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 93
        }
      },
      "16": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "17": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 23
        }
      },
      "18": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 43
        }
      },
      "19": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 73
        }
      },
      "20": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 71
        }
      },
      "21": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 75
        }
      },
      "22": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 68
        }
      },
      "23": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "24": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 92
        }
      },
      "25": {
        start: {
          line: 42,
          column: 35
        },
        end: {
          line: 42,
          column: 58
        }
      },
      "26": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 85
        }
      },
      "27": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 37
        }
      },
      "28": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 87
        }
      },
      "29": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "30": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "31": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "32": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "33": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 88
        }
      },
      "34": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 68,
          column: 55
        }
      },
      "35": {
        start: {
          line: 69,
          column: 33
        },
        end: {
          line: 69,
          column: 78
        }
      },
      "36": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 59
        }
      },
      "37": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 75,
          column: 11
        }
      },
      "38": {
        start: {
          line: 81,
          column: 23
        },
        end: {
          line: 81,
          column: 25
        }
      },
      "39": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "40": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 58
        }
      },
      "41": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "42": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 67
        }
      },
      "43": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "44": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "45": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 92,
          column: 17
        }
      },
      "46": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 91,
          column: 81
        }
      },
      "47": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 56
        }
      },
      "48": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 23
        }
      },
      "49": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 24
        }
      },
      "50": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 48
        }
      },
      "51": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "52": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 67
        }
      },
      "53": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 68
        }
      },
      "54": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 68
        }
      },
      "55": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 51
        }
      },
      "56": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 27
        }
      },
      "57": {
        start: {
          line: 130,
          column: 27
        },
        end: {
          line: 130,
          column: 28
        }
      },
      "58": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "59": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 73
        }
      },
      "60": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 19
        }
      },
      "61": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "62": {
        start: {
          line: 136,
          column: 34
        },
        end: {
          line: 136,
          column: 66
        }
      },
      "63": {
        start: {
          line: 137,
          column: 27
        },
        end: {
          line: 137,
          column: 92
        }
      },
      "64": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "65": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 80
        }
      },
      "66": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 47
        }
      },
      "67": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 144,
          column: 19
        }
      },
      "68": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 58
        }
      },
      "69": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 97
        }
      },
      "70": {
        start: {
          line: 156,
          column: 27
        },
        end: {
          line: 156,
          column: 28
        }
      },
      "71": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "72": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 19
        }
      },
      "73": {
        start: {
          line: 160,
          column: 24
        },
        end: {
          line: 160,
          column: 68
        }
      },
      "74": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "75": {
        start: {
          line: 163,
          column: 34
        },
        end: {
          line: 163,
          column: 70
        }
      },
      "76": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 86
        }
      },
      "77": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 82
        }
      },
      "78": {
        start: {
          line: 172,
          column: 27
        },
        end: {
          line: 172,
          column: 28
        }
      },
      "79": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "80": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 19
        }
      },
      "81": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "82": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 63
        }
      },
      "83": {
        start: {
          line: 190,
          column: 23
        },
        end: {
          line: 190,
          column: 55
        }
      },
      "84": {
        start: {
          line: 191,
          column: 28
        },
        end: {
          line: 191,
          column: 63
        }
      },
      "85": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 203,
          column: 10
        }
      },
      "86": {
        start: {
          line: 209,
          column: 23
        },
        end: {
          line: 209,
          column: 55
        }
      },
      "87": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 221,
          column: 10
        }
      },
      "88": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 236,
          column: 10
        }
      },
      "89": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "90": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 52
        }
      },
      "91": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "92": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 53
        }
      },
      "93": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "94": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 54
        }
      },
      "95": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 41
        }
      },
      "96": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 60
        }
      },
      "97": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 253,
          column: 72
        }
      },
      "98": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 37
        }
      },
      "99": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 36
        }
      },
      "100": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 37
        }
      },
      "101": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 71
        }
      },
      "102": {
        start: {
          line: 268,
          column: 23
        },
        end: {
          line: 268,
          column: 25
        }
      },
      "103": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "104": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 38
        }
      },
      "105": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "106": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 38
        }
      },
      "107": {
        start: {
          line: 275,
          column: 29
        },
        end: {
          line: 275,
          column: 61
        }
      },
      "108": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 278,
          column: 9
        }
      },
      "109": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 48
        }
      },
      "110": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 282,
          column: 10
        }
      },
      "111": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "112": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 50
        }
      },
      "113": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 80
        }
      },
      "114": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 82
        }
      },
      "115": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 24
        }
      },
      "116": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "117": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 50
        }
      },
      "118": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 47
        }
      },
      "119": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 71
        }
      },
      "120": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 87
        }
      },
      "121": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 24
        }
      },
      "122": {
        start: {
          line: 320,
          column: 27
        },
        end: {
          line: 320,
          column: 44
        }
      },
      "123": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 73
        }
      },
      "124": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 45
        }
      },
      "125": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "126": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 74
        }
      },
      "127": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 53
        }
      },
      "128": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 72
        }
      },
      "129": {
        start: {
          line: 342,
          column: 23
        },
        end: {
          line: 342,
          column: 55
        }
      },
      "130": {
        start: {
          line: 343,
          column: 26
        },
        end: {
          line: 343,
          column: 28
        }
      },
      "131": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 352,
          column: 11
        }
      },
      "132": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 351,
          column: 13
        }
      },
      "133": {
        start: {
          line: 347,
          column: 37
        },
        end: {
          line: 347,
          column: 54
        }
      },
      "134": {
        start: {
          line: 348,
          column: 33
        },
        end: {
          line: 348,
          column: 60
        }
      },
      "135": {
        start: {
          line: 349,
          column: 33
        },
        end: {
          line: 349,
          column: 82
        }
      },
      "136": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 48
        }
      },
      "137": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 358,
          column: 9
        }
      },
      "138": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 66
        }
      },
      "139": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 356,
          column: 43
        }
      },
      "140": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 357,
          column: 79
        }
      },
      "141": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 45
        }
      },
      "142": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 68
        }
      },
      "143": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 66
        }
      },
      "144": {
        start: {
          line: 377,
          column: 30
        },
        end: {
          line: 377,
          column: 72
        }
      },
      "145": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 383,
          column: 10
        }
      },
      "146": {
        start: {
          line: 389,
          column: 23
        },
        end: {
          line: 389,
          column: 39
        }
      },
      "147": {
        start: {
          line: 390,
          column: 23
        },
        end: {
          line: 390,
          column: 58
        }
      },
      "148": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 398,
          column: 10
        }
      },
      "149": {
        start: {
          line: 401,
          column: 0
        },
        end: {
          line: 401,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 56
          },
          end: {
            line: 6,
            column: 57
          }
        },
        loc: {
          start: {
            line: 6,
            column: 71
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 50
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 28
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 51
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 49
          },
          end: {
            line: 53,
            column: 50
          }
        },
        loc: {
          start: {
            line: 53,
            column: 60
          },
          end: {
            line: 55,
            column: 9
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 57,
            column: 45
          },
          end: {
            line: 57,
            column: 46
          }
        },
        loc: {
          start: {
            line: 57,
            column: 56
          },
          end: {
            line: 61,
            column: 9
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 26
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 66
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 31
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 80
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 89,
            column: 43
          },
          end: {
            line: 89,
            column: 44
          }
        },
        loc: {
          start: {
            line: 89,
            column: 61
          },
          end: {
            line: 93,
            column: 13
          }
        },
        line: 89
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 104
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 13
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 107
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        loc: {
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 110
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 29
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 113
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 21
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 120
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        loc: {
          start: {
            line: 123,
            column: 16
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 123
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 27
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 129
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 30
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 155
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 30
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 171
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 15
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 189
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 31
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 208
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 226,
            column: 5
          }
        },
        loc: {
          start: {
            line: 226,
            column: 13
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 226
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 19
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 241
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        loc: {
          start: {
            line: 258,
            column: 14
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 258
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 18
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 267
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        },
        loc: {
          start: {
            line: 290,
            column: 17
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 290
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 22
          },
          end: {
            line: 314,
            column: 5
          }
        },
        line: 304
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 318,
            column: 4
          },
          end: {
            line: 318,
            column: 5
          }
        },
        loc: {
          start: {
            line: 318,
            column: 30
          },
          end: {
            line: 329,
            column: 5
          }
        },
        line: 318
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 333,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        },
        loc: {
          start: {
            line: 333,
            column: 30
          },
          end: {
            line: 337,
            column: 5
          }
        },
        line: 333
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        loc: {
          start: {
            line: 341,
            column: 24
          },
          end: {
            line: 359,
            column: 5
          }
        },
        line: 341
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 345,
            column: 36
          },
          end: {
            line: 345,
            column: 37
          }
        },
        loc: {
          start: {
            line: 345,
            column: 49
          },
          end: {
            line: 352,
            column: 9
          }
        },
        line: 345
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 363,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        loc: {
          start: {
            line: 363,
            column: 22
          },
          end: {
            line: 366,
            column: 5
          }
        },
        line: 363
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        },
        loc: {
          start: {
            line: 370,
            column: 22
          },
          end: {
            line: 372,
            column: 5
          }
        },
        line: 370
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 376,
            column: 4
          },
          end: {
            line: 376,
            column: 5
          }
        },
        loc: {
          start: {
            line: 376,
            column: 34
          },
          end: {
            line: 384,
            column: 5
          }
        },
        line: 376
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        loc: {
          start: {
            line: 388,
            column: 26
          },
          end: {
            line: 399,
            column: 5
          }
        },
        line: 388
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 6,
            column: 22
          },
          end: {
            line: 8,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 23
          },
          end: {
            line: 6,
            column: 27
          }
        }, {
          start: {
            line: 6,
            column: 31
          },
          end: {
            line: 6,
            column: 51
          }
        }, {
          start: {
            line: 6,
            column: 56
          },
          end: {
            line: 8,
            column: 1
          }
        }],
        line: 6
      },
      "1": {
        loc: {
          start: {
            line: 7,
            column: 11
          },
          end: {
            line: 7,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 37
          },
          end: {
            line: 7,
            column: 40
          }
        }, {
          start: {
            line: 7,
            column: 43
          },
          end: {
            line: 7,
            column: 61
          }
        }],
        line: 7
      },
      "2": {
        loc: {
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 15
          }
        }, {
          start: {
            line: 7,
            column: 19
          },
          end: {
            line: 7,
            column: 33
          }
        }],
        line: 7
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: 40,
            column: 13
          },
          end: {
            line: 44,
            column: 9
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 44
          }
        }, {
          start: {
            line: 58,
            column: 48
          },
          end: {
            line: 58,
            column: 70
          }
        }],
        line: 58
      },
      "7": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "8": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 16
          }
        }, {
          start: {
            line: 82,
            column: 20
          },
          end: {
            line: 82,
            column: 43
          }
        }],
        line: 82
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 85,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 85,
            column: 15
          }
        }, {
          start: {
            line: 85,
            column: 19
          },
          end: {
            line: 85,
            column: 34
          }
        }],
        line: 85
      },
      "11": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "12": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 92,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 92,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "13": {
        loc: {
          start: {
            line: 90,
            column: 20
          },
          end: {
            line: 90,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 20
          },
          end: {
            line: 90,
            column: 45
          }
        }, {
          start: {
            line: 90,
            column: 49
          },
          end: {
            line: 90,
            column: 58
          }
        }, {
          start: {
            line: 90,
            column: 62
          },
          end: {
            line: 90,
            column: 71
          }
        }],
        line: 90
      },
      "14": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "15": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "16": {
        loc: {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "17": {
        loc: {
          start: {
            line: 138,
            column: 16
          },
          end: {
            line: 138,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 16
          },
          end: {
            line: 138,
            column: 30
          }
        }, {
          start: {
            line: 138,
            column: 34
          },
          end: {
            line: 138,
            column: 76
          }
        }],
        line: 138
      },
      "18": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "19": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "20": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "21": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "22": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "23": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 250,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "24": {
        loc: {
          start: {
            line: 251,
            column: 22
          },
          end: {
            line: 251,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 22
          },
          end: {
            line: 251,
            column: 33
          }
        }, {
          start: {
            line: 251,
            column: 37
          },
          end: {
            line: 251,
            column: 40
          }
        }],
        line: 251
      },
      "25": {
        loc: {
          start: {
            line: 252,
            column: 28
          },
          end: {
            line: 252,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 28
          },
          end: {
            line: 252,
            column: 45
          }
        }, {
          start: {
            line: 252,
            column: 49
          },
          end: {
            line: 252,
            column: 59
          }
        }],
        line: 252
      },
      "26": {
        loc: {
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "27": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "28": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 278,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 278,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "29": {
        loc: {
          start: {
            line: 318,
            column: 11
          },
          end: {
            line: 318,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 318,
            column: 23
          },
          end: {
            line: 318,
            column: 28
          }
        }],
        line: 318
      },
      "30": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "31": {
        loc: {
          start: {
            line: 341,
            column: 11
          },
          end: {
            line: 341,
            column: 22
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 341,
            column: 18
          },
          end: {
            line: 341,
            column: 22
          }
        }],
        line: 341
      },
      "32": {
        loc: {
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 351,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 351,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 346
      },
      "33": {
        loc: {
          start: {
            line: 354,
            column: 8
          },
          end: {
            line: 358,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 8
          },
          end: {
            line: 358,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 354
      },
      "34": {
        loc: {
          start: {
            line: 363,
            column: 9
          },
          end: {
            line: 363,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 363,
            column: 18
          },
          end: {
            line: 363,
            column: 20
          }
        }],
        line: 363
      },
      "35": {
        loc: {
          start: {
            line: 381,
            column: 28
          },
          end: {
            line: 381,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 381,
            column: 28
          },
          end: {
            line: 381,
            column: 57
          }
        }, {
          start: {
            line: 381,
            column: 61
          },
          end: {
            line: 381,
            column: 62
          }
        }],
        line: 381
      },
      "36": {
        loc: {
          start: {
            line: 382,
            column: 32
          },
          end: {
            line: 382,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 382,
            column: 32
          },
          end: {
            line: 382,
            column: 65
          }
        }, {
          start: {
            line: 382,
            column: 69
          },
          end: {
            line: 382,
            column: 70
          }
        }],
        line: 382
      },
      "37": {
        loc: {
          start: {
            line: 394,
            column: 28
          },
          end: {
            line: 394,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 394,
            column: 28
          },
          end: {
            line: 394,
            column: 66
          }
        }, {
          start: {
            line: 394,
            column: 70
          },
          end: {
            line: 394,
            column: 71
          }
        }],
        line: 394
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0],
      "30": [0, 0],
      "31": [0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/OrganismCore.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/OrganismCore.ts"],
      sourcesContent: ["/**\n * OrganismCore refactoris\xE9 - Architecture hexagonale\n * Version simplifi\xE9e utilisant des services sp\xE9cialis\xE9s\n */\n\nimport { OrganismState, OrganismTraits } from '../shared/types/organism';\nimport { IOrganismCore, OrganismJSON, ShaderParameters } from './interfaces/IOrganismCore';\nimport { errorHandler } from './utils/ErrorHandler';\nimport { TraitService, TraitUpdateEvent } from './services/TraitService';\nimport { EnergyService, EnergyEvent } from './services/EnergyService';\nimport { NeuralService, NeuralProcessingResult } from './services/NeuralService';\nimport { INeuralMesh } from './interfaces/INeuralMesh';\nimport RealMetricsService from './services/RealMetricsService';\nimport FeatureFlagService from './services/FeatureFlagService';\nimport { generateSecureUUID } from '../shared/utils/uuid';\n\nexport interface OrganismDependencies {\n  neuralMesh: INeuralMesh;\n  logger?: { debug: Function; info: Function; error: Function };\n}\n\nexport class OrganismCore implements IOrganismCore {\n  private readonly id: string;\n  private readonly dna: string;\n  private health: number = 100;\n  private lastMutation: number = Date.now();\n  \n  // Services sp\xE9cialis\xE9s (injection de d\xE9pendances)\n  private readonly traitService: TraitService;\n  private readonly energyService: EnergyService;\n  private readonly neuralService: NeuralService;\n  private readonly metricsService: RealMetricsService;\n  // @ts-expect-error Service r\xE9serv\xE9 pour usage futur\n  private readonly featureFlags: FeatureFlagService;\n  private readonly logger: { debug: Function; info: Function; error: Function } | undefined;\n\n  constructor(\n    dna: string, \n    initialTraits?: Partial<OrganismTraits>,\n    dependencies?: OrganismDependencies\n  ) {\n    // Validation d'entr\xE9e\n    const validation = this.validateInput(dna, initialTraits);\n    if (!validation.isValid) {\n      throw new Error(`OrganismCore creation failed: ${validation.errors.join(', ')}`);\n    }\n\n    this.id = generateSecureUUID();\n    this.dna = dna;\n    this.logger = dependencies?.logger;\n\n    // Initialisation des services de base\n    this.metricsService = RealMetricsService.getInstance();\n    this.featureFlags = FeatureFlagService.getInstance();\n    \n    // Initialisation des services m\xE9tier\n    this.traitService = new TraitService(initialTraits);\n    this.energyService = new EnergyService(100);\n    \n    // Service neural n\xE9cessite une d\xE9pendance externe\n    if (dependencies?.neuralMesh) {\n      this.neuralService = new NeuralService(dependencies.neuralMesh);\n    } else {\n      // Fallback pour compatibilit\xE9\n      const { NeuralMesh } = require('./NeuralMesh');\n      this.neuralService = new NeuralService(new NeuralMesh());\n    }\n\n    this.setupServiceListeners();\n    this.logger?.debug('OrganismCore initialized', { id: this.id, dna: this.dna });\n  }\n\n  /**\n   * Configuration des listeners entre services\n   */\n  private setupServiceListeners(): void {\n    // \xC9coute les changements de traits pour ajuster l'\xE9nergie\n    this.traitService.addTraitChangeListener((event: TraitUpdateEvent) => {\n      this.onTraitChanged(event);\n    });\n\n    // \xC9coute les \xE9v\xE9nements d'\xE9nergie pour log\n    this.energyService.addEnergyListener((event: EnergyEvent) => {\n      if (event.type === 'consumption' && event.energyAfter < 10) {\n        this.logger?.debug('Low energy warning', { energy: event.energyAfter });\n      }\n    });\n  }\n\n  /**\n   * Gestionnaire de changement de traits\n   */\n  private onTraitChanged(event: TraitUpdateEvent): void {\n    // Ajuste l'efficacit\xE9 m\xE9tabolique bas\xE9e sur les traits\n    const traits = this.traitService.getAllTraits();\n    const efficiencyFactor = (traits.resilience + traits.adaptability) / 2;\n    this.energyService.setEfficiency(efficiencyFactor);\n\n    this.logger?.debug('Trait changed, metabolism adjusted', { \n      trait: event.traitName, \n      newValue: event.newValue,\n      efficiency: efficiencyFactor \n    });\n  }\n\n  /**\n   * Validation des entr\xE9es\n   */\n  private validateInput(dna: string, traits?: Partial<OrganismTraits>): { isValid: boolean; errors: string[] } {\n    const errors: string[] = [];\n\n    if (!dna || typeof dna !== 'string') {\n      errors.push('DNA must be a non-empty string');\n    }\n\n    if (dna && dna.length < 10) {\n      errors.push('DNA must be at least 10 characters long');\n    }\n\n    if (traits) {\n      Object.entries(traits).forEach(([key, value]) => {\n        if (typeof value !== 'number' || value < 0 || value > 1) {\n          errors.push(`Trait ${key} must be a number between 0 and 1`);\n        }\n      });\n    }\n\n    return { isValid: errors.length === 0, errors };\n  }\n\n  /**\n   * G\xE9n\xE8re un ID unique\n   */\n  // generateId() supprim\xE9 - utilise generateSecureUUID() maintenant\n\n  // =============================================================================\n  // API PUBLIQUE - Interface IOrganismCore\n  // =============================================================================\n\n  getId(): string {\n    return this.id;\n  }\n\n  getDNA(): string {\n    return this.dna;\n  }\n\n  getTraits(): OrganismTraits {\n    return this.traitService.getAllTraits();\n  }\n\n  updateTrait(name: keyof OrganismTraits, value: number): void {\n    if (!this.energyService.consumeEnergy(1, `trait_update_${name}`)) {\n      throw new Error('Insufficient energy to update trait');\n    }\n\n    this.traitService.updateTrait(name, value, 'manual_update');\n    this.logger?.debug('Trait updated', { trait: name, value });\n  }\n\n  getEnergyLevel(): number {\n    return this.energyService.getEnergyLevel();\n  }\n\n  getHealth(): number {\n    return this.health;\n  }\n\n  /**\n   * \xC9volution de l'organisme bas\xE9e sur un stimulus\n   */\n  async evolve(stimulus: any): Promise<void> {\n    const energyCost = 5;\n    if (!this.energyService.consumeEnergy(energyCost, 'evolution')) {\n      this.logger?.debug('Evolution skipped: insufficient energy');\n      return;\n    }\n\n    try {\n      const currentTraits = this.traitService.getAllTraits();\n      const result: NeuralProcessingResult = await this.neuralService.processStimulus(stimulus, currentTraits);\n\n      if (result.success && Object.keys(result.adaptations).length > 0) {\n        this.traitService.updateTraits(result.adaptations, 'evolution');\n        this.lastMutation = Date.now();\n        \n        this.logger?.debug('Evolution successful', { \n          adaptations: result.adaptations,\n          confidence: result.confidence \n        });\n      }\n    } catch (error) {\n      this.logger?.error('Evolution failed', error);\n      errorHandler.logSimpleError('OrganismCore', 'evolve', error, 'error');\n    }\n  }\n\n  /**\n   * Apprentissage \xE0 partir de donn\xE9es comportementales\n   */\n  async learn(behaviorData: any): Promise<void> {\n    const energyCost = 2;\n    if (!this.energyService.consumeEnergy(energyCost, 'learning')) {\n      return;\n    }\n\n    const success = await this.neuralService.learn(behaviorData);\n    if (success) {\n      // Am\xE9liore l\xE9g\xE8rement la m\xE9moire lors de l'apprentissage\n      const currentMemory = this.traitService.getTrait('memory');\n      this.traitService.updateTrait('memory', currentMemory + 0.01, 'learning');\n    }\n\n    this.logger?.debug('Learning completed', { success, data: behaviorData });\n  }\n\n  /**\n   * Traitement d'un stimulus simple\n   */\n  processStimulus(stimulus: any): void {\n    const energyCost = 1;\n    if (!this.energyService.consumeEnergy(energyCost, 'stimulus_processing')) {\n      return;\n    }\n\n    // Traitement simplifi\xE9 en arri\xE8re-plan\n    this.neuralService.queuePattern({\n      id: `pattern_${Date.now()}`,\n      type: 'behavioral',\n      data: stimulus,\n      timestamp: Date.now(),\n      confidence: 0.8\n    });\n\n    this.logger?.debug('Stimulus processed', { stimulus });\n  }\n\n  /**\n   * Obtient l'\xE9tat complet de l'organisme\n   */\n  getState(): OrganismState {\n    const traits = this.traitService.getAllTraits();\n    const energyStats = this.energyService.getEnergyStats();\n\n    return {\n      id: this.id,\n      traits,\n      energy: energyStats.current,\n      maxEnergy: energyStats.max,\n      health: this.health,\n      dna: this.dna,\n      lastMutation: this.lastMutation,\n      balance: this.traitService.calculateBalance(),\n      metabolismRate: energyStats.metabolismRate,\n      age: Date.now() - parseInt(this.id.split('_')[1]) // Approximation bas\xE9e sur l'ID\n    };\n  }\n\n  /**\n   * G\xE9n\xE8re les param\xE8tres de shader pour le rendu visuel\n   */\n  generateShaderParameters(): ShaderParameters {\n    const traits = this.traitService.getAllTraits();\n    \n    return {\n      energy: this.energyService.getEnergyPercentage() / 100,\n      health: this.health / 100,\n      neuralActivity: this.neuralService.getNeuralActivity(),\n      creativity: traits.creativity,\n      focus: traits.focus,\n      time: Date.now() / 1000,\n      colorPrimary: [traits.creativity, traits.empathy, traits.intuition],\n      colorSecondary: [traits.focus, traits.resilience, traits.adaptability],\n      morphology: traits.adaptability,\n      complexity: traits.creativity * traits.memory\n    };\n  }\n\n  /**\n   * S\xE9rialisation pour sauvegarde\n   */\n  toJSON(): OrganismJSON {\n    return {\n      mesh: {},\n      dna: this.dna,\n      health: this.health,\n      lastMutation: this.lastMutation,\n      traits: this.traitService.toJSON(),\n      energy: this.energyService.toJSON(),\n      neural: this.neuralService.saveState(),\n      timestamp: Date.now()\n    };\n  }\n\n  /**\n   * Restauration depuis JSON\n   */\n  fromJSON(data: OrganismJSON): void {\n    if (data.traits) {\n      this.traitService.fromJSON(data.traits);\n    }\n    \n    if (data.energy) {\n      this.energyService.fromJSON(data.energy);\n    }\n    \n    if (data.neural) {\n      this.neuralService.loadState(data.neural);\n    }\n\n    this.health = data.health || 100;\n    this.lastMutation = data.lastMutation || Date.now();\n\n    this.logger?.debug('State restored from JSON', { id: this.id });\n  }\n\n  /**\n   * Nettoyage et lib\xE9ration des ressources\n   */\n  cleanup(): void {\n    this.energyService.destroy();\n    this.traitService.cleanup();\n    this.neuralService.cleanup();\n    \n    this.logger?.debug('OrganismCore cleaned up', { id: this.id });\n  }\n\n  /**\n   * V\xE9rification de l'\xE9tat de sant\xE9\n   */\n  healthCheck(): { healthy: boolean; issues: string[] } {\n    const issues: string[] = [];\n\n    if (this.health < 20) {\n      issues.push('Low health');\n    }\n\n    if (this.energyService.getEnergyLevel() < 10) {\n      issues.push('Low energy');\n    }\n\n    const neuralHealth = this.neuralService.healthCheck();\n    if (!neuralHealth.healthy) {\n      issues.push(...neuralHealth.issues);\n    }\n\n    return {\n      healthy: issues.length === 0,\n      issues\n    };\n  }\n\n  // =============================================================================\n  // M\xC9THODES MANQUANTES POUR IOrganismCore\n  // =============================================================================\n\n  /**\n   * Boot the organism\n   */\n  async boot(): Promise<void> {\n    // Initialize neural mesh if needed\n    try {\n      await this.neuralService.initialize();\n      this.logger?.debug('Organism booted successfully', { id: this.id });\n    } catch (error) {\n      this.logger?.error('Failed to boot organism', { id: this.id, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Hibernate the organism\n   */\n  async hibernate(): Promise<void> {\n    try {\n      this.energyService.setEfficiency(0.1); // Reduce energy consumption\n      await this.neuralService.suspend();\n      this.logger?.debug('Organism hibernated', { id: this.id });\n    } catch (error) {\n      this.logger?.error('Failed to hibernate organism', { id: this.id, error });\n      throw error;\n    }\n  }\n\n  /**\n   * Update organism with delta time\n   */\n  update(deltaTime: number = 16.67): void {\n    // Standard frame time processing\n    const timeFactor = deltaTime / 16.67; // Normalize to 60fps\n    \n    // Update energy decay\n    this.energyService.consumeEnergy(0.1 * timeFactor, 'metabolism');\n    \n    // Update neural processing\n    this.neuralService.update(deltaTime);\n    \n    // Health regeneration if high energy\n    if (this.energyService.getEnergyLevel() > 80) {\n      this.health = Math.min(100, this.health + (0.1 * timeFactor));\n    }\n  }\n\n  /**\n   * Stimulate organism input\n   */\n  stimulate(inputId: string, value: number): void {\n    this.neuralService.stimulate(inputId, value);\n    \n    // Consume energy for processing\n    this.energyService.consumeEnergy(0.5, `stimulation_${inputId}`);\n  }\n\n  /**\n   * Mutate organism with given rate\n   */\n  mutate(rate: number = 0.01): void {\n    const traits = this.traitService.getAllTraits();\n    const mutations: { [key: string]: number } = {};\n    \n    // Mutate each trait based on rate\n    Object.keys(traits).forEach(traitName => {\n      if (Math.random() < rate) {\n        const currentValue = traits[traitName as keyof OrganismTraits];\n        const mutation = (Math.random() - 0.5) * 0.1; // \xB15% mutation\n        const newValue = Math.max(0, Math.min(1, currentValue + mutation));\n        mutations[traitName] = newValue;\n      }\n    });\n    \n    // Apply mutations\n    if (Object.keys(mutations).length > 0) {\n      this.traitService.updateTraits(mutations as Partial<OrganismTraits>, 'mutation');\n      this.lastMutation = Date.now();\n      this.logger?.debug('Mutation applied', { id: this.id, mutations });\n    }\n  }\n\n  /**\n   * Feed organism with energy\n   */\n  feed(amount: number = 10): void {\n    this.energyService.addEnergy(amount);\n    this.logger?.debug('Organism fed', { id: this.id, amount });\n  }\n\n  /**\n   * Set traits (partial update)\n   */\n  setTraits(traits: Partial<OrganismTraits>): void {\n    this.traitService.updateTraits(traits, 'external_update');\n  }\n\n  /**\n   * Get performance metrics\n   */\n  async getPerformanceMetrics() {\n    const neuralMetrics = this.neuralService.getPerformanceMetrics();\n    \n    return {\n      cpu: await this.metricsService.getCPUUsage(),\n      memory: await this.metricsService.getMemoryUsage(),\n      neuralActivity: neuralMetrics?.neuralActivity || 0,\n      connectionStrength: neuralMetrics?.connectionStrength || 0\n    };\n  }\n\n  /**\n   * Get shader parameters for WebGL rendering\n   */\n  getShaderParameters(): ShaderParameters {\n    const traits = this.getTraits();\n    const energy = this.energyService.getEnergyLevel();\n    \n    return {\n      energy: energy / 100,\n      health: this.health / 100,\n      neuralActivity: this.neuralService.getNeuralActivity() || 0,\n      creativity: traits.creativity,\n      focus: traits.focus,\n      time: Date.now() / 1000\n    };\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5503eb154e812ba6579b91e28b9d0d732b02696e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kgk1e008k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kgk1e008k();
var __importDefault =
/* istanbul ignore next */
(cov_1kgk1e008k().s[0]++,
/* istanbul ignore next */
(cov_1kgk1e008k().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1kgk1e008k().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1kgk1e008k().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1kgk1e008k().f[0]++;
  cov_1kgk1e008k().s[1]++;
  return /* istanbul ignore next */(cov_1kgk1e008k().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1kgk1e008k().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1kgk1e008k().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1kgk1e008k().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1kgk1e008k().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1kgk1e008k().s[3]++;
exports.OrganismCore = void 0;
const ErrorHandler_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[4]++, require("./utils/ErrorHandler"));
const TraitService_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[5]++, require("./services/TraitService"));
const EnergyService_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[6]++, require("./services/EnergyService"));
const NeuralService_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[7]++, require("./services/NeuralService"));
const RealMetricsService_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[8]++, __importDefault(require("./services/RealMetricsService")));
const FeatureFlagService_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[9]++, __importDefault(require("./services/FeatureFlagService")));
const uuid_1 =
/* istanbul ignore next */
(cov_1kgk1e008k().s[10]++, require("../shared/utils/uuid"));
class OrganismCore {
  constructor(dna, initialTraits, dependencies) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[1]++;
    cov_1kgk1e008k().s[11]++;
    this.health = 100;
    /* istanbul ignore next */
    cov_1kgk1e008k().s[12]++;
    this.lastMutation = Date.now();
    // Validation d'entrée
    const validation =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[13]++, this.validateInput(dna, initialTraits));
    /* istanbul ignore next */
    cov_1kgk1e008k().s[14]++;
    if (!validation.isValid) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[3][0]++;
      cov_1kgk1e008k().s[15]++;
      throw new Error(`OrganismCore creation failed: ${validation.errors.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[3][1]++;
    }
    cov_1kgk1e008k().s[16]++;
    this.id = (0, uuid_1.generateSecureUUID)();
    /* istanbul ignore next */
    cov_1kgk1e008k().s[17]++;
    this.dna = dna;
    /* istanbul ignore next */
    cov_1kgk1e008k().s[18]++;
    this.logger = dependencies?.logger;
    // Initialisation des services de base
    /* istanbul ignore next */
    cov_1kgk1e008k().s[19]++;
    this.metricsService = RealMetricsService_1.default.getInstance();
    /* istanbul ignore next */
    cov_1kgk1e008k().s[20]++;
    this.featureFlags = FeatureFlagService_1.default.getInstance();
    // Initialisation des services métier
    /* istanbul ignore next */
    cov_1kgk1e008k().s[21]++;
    this.traitService = new TraitService_1.TraitService(initialTraits);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[22]++;
    this.energyService = new EnergyService_1.EnergyService(100);
    // Service neural nécessite une dépendance externe
    /* istanbul ignore next */
    cov_1kgk1e008k().s[23]++;
    if (dependencies?.neuralMesh) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[4][0]++;
      cov_1kgk1e008k().s[24]++;
      this.neuralService = new NeuralService_1.NeuralService(dependencies.neuralMesh);
    } else {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[4][1]++;
      // Fallback pour compatibilité
      const {
        NeuralMesh
      } =
      /* istanbul ignore next */
      (cov_1kgk1e008k().s[25]++, require('./NeuralMesh'));
      /* istanbul ignore next */
      cov_1kgk1e008k().s[26]++;
      this.neuralService = new NeuralService_1.NeuralService(new NeuralMesh());
    }
    /* istanbul ignore next */
    cov_1kgk1e008k().s[27]++;
    this.setupServiceListeners();
    /* istanbul ignore next */
    cov_1kgk1e008k().s[28]++;
    this.logger?.debug('OrganismCore initialized', {
      id: this.id,
      dna: this.dna
    });
  }
  /**
   * Configuration des listeners entre services
   */
  setupServiceListeners() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[2]++;
    cov_1kgk1e008k().s[29]++;
    // Écoute les changements de traits pour ajuster l'énergie
    this.traitService.addTraitChangeListener(event => {
      /* istanbul ignore next */
      cov_1kgk1e008k().f[3]++;
      cov_1kgk1e008k().s[30]++;
      this.onTraitChanged(event);
    });
    // Écoute les événements d'énergie pour log
    /* istanbul ignore next */
    cov_1kgk1e008k().s[31]++;
    this.energyService.addEnergyListener(event => {
      /* istanbul ignore next */
      cov_1kgk1e008k().f[4]++;
      cov_1kgk1e008k().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[6][0]++, event.type === 'consumption') &&
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[6][1]++, event.energyAfter < 10)) {
        /* istanbul ignore next */
        cov_1kgk1e008k().b[5][0]++;
        cov_1kgk1e008k().s[33]++;
        this.logger?.debug('Low energy warning', {
          energy: event.energyAfter
        });
      } else
      /* istanbul ignore next */
      {
        cov_1kgk1e008k().b[5][1]++;
      }
    });
  }
  /**
   * Gestionnaire de changement de traits
   */
  onTraitChanged(event) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[5]++;
    // Ajuste l'efficacité métabolique basée sur les traits
    const traits =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[34]++, this.traitService.getAllTraits());
    const efficiencyFactor =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[35]++, (traits.resilience + traits.adaptability) / 2);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[36]++;
    this.energyService.setEfficiency(efficiencyFactor);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[37]++;
    this.logger?.debug('Trait changed, metabolism adjusted', {
      trait: event.traitName,
      newValue: event.newValue,
      efficiency: efficiencyFactor
    });
  }
  /**
   * Validation des entrées
   */
  validateInput(dna, traits) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[6]++;
    const errors =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[38]++, []);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[39]++;
    if (
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[8][0]++, !dna) ||
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[8][1]++, typeof dna !== 'string')) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[7][0]++;
      cov_1kgk1e008k().s[40]++;
      errors.push('DNA must be a non-empty string');
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[7][1]++;
    }
    cov_1kgk1e008k().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[10][0]++, dna) &&
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[10][1]++, dna.length < 10)) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[9][0]++;
      cov_1kgk1e008k().s[42]++;
      errors.push('DNA must be at least 10 characters long');
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[9][1]++;
    }
    cov_1kgk1e008k().s[43]++;
    if (traits) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[11][0]++;
      cov_1kgk1e008k().s[44]++;
      Object.entries(traits).forEach(([key, value]) => {
        /* istanbul ignore next */
        cov_1kgk1e008k().f[7]++;
        cov_1kgk1e008k().s[45]++;
        if (
        /* istanbul ignore next */
        (cov_1kgk1e008k().b[13][0]++, typeof value !== 'number') ||
        /* istanbul ignore next */
        (cov_1kgk1e008k().b[13][1]++, value < 0) ||
        /* istanbul ignore next */
        (cov_1kgk1e008k().b[13][2]++, value > 1)) {
          /* istanbul ignore next */
          cov_1kgk1e008k().b[12][0]++;
          cov_1kgk1e008k().s[46]++;
          errors.push(`Trait ${key} must be a number between 0 and 1`);
        } else
        /* istanbul ignore next */
        {
          cov_1kgk1e008k().b[12][1]++;
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[11][1]++;
    }
    cov_1kgk1e008k().s[47]++;
    return {
      isValid: errors.length === 0,
      errors
    };
  }
  /**
   * Génère un ID unique
   */
  // generateId() supprimé - utilise generateSecureUUID() maintenant
  // =============================================================================
  // API PUBLIQUE - Interface IOrganismCore
  // =============================================================================
  getId() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[8]++;
    cov_1kgk1e008k().s[48]++;
    return this.id;
  }
  getDNA() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[9]++;
    cov_1kgk1e008k().s[49]++;
    return this.dna;
  }
  getTraits() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[10]++;
    cov_1kgk1e008k().s[50]++;
    return this.traitService.getAllTraits();
  }
  updateTrait(name, value) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[11]++;
    cov_1kgk1e008k().s[51]++;
    if (!this.energyService.consumeEnergy(1, `trait_update_${name}`)) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[14][0]++;
      cov_1kgk1e008k().s[52]++;
      throw new Error('Insufficient energy to update trait');
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[14][1]++;
    }
    cov_1kgk1e008k().s[53]++;
    this.traitService.updateTrait(name, value, 'manual_update');
    /* istanbul ignore next */
    cov_1kgk1e008k().s[54]++;
    this.logger?.debug('Trait updated', {
      trait: name,
      value
    });
  }
  getEnergyLevel() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[12]++;
    cov_1kgk1e008k().s[55]++;
    return this.energyService.getEnergyLevel();
  }
  getHealth() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[13]++;
    cov_1kgk1e008k().s[56]++;
    return this.health;
  }
  /**
   * Évolution de l'organisme basée sur un stimulus
   */
  async evolve(stimulus) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[14]++;
    const energyCost =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[57]++, 5);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[58]++;
    if (!this.energyService.consumeEnergy(energyCost, 'evolution')) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[15][0]++;
      cov_1kgk1e008k().s[59]++;
      this.logger?.debug('Evolution skipped: insufficient energy');
      /* istanbul ignore next */
      cov_1kgk1e008k().s[60]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[15][1]++;
    }
    cov_1kgk1e008k().s[61]++;
    try {
      const currentTraits =
      /* istanbul ignore next */
      (cov_1kgk1e008k().s[62]++, this.traitService.getAllTraits());
      const result =
      /* istanbul ignore next */
      (cov_1kgk1e008k().s[63]++, await this.neuralService.processStimulus(stimulus, currentTraits));
      /* istanbul ignore next */
      cov_1kgk1e008k().s[64]++;
      if (
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[17][0]++, result.success) &&
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[17][1]++, Object.keys(result.adaptations).length > 0)) {
        /* istanbul ignore next */
        cov_1kgk1e008k().b[16][0]++;
        cov_1kgk1e008k().s[65]++;
        this.traitService.updateTraits(result.adaptations, 'evolution');
        /* istanbul ignore next */
        cov_1kgk1e008k().s[66]++;
        this.lastMutation = Date.now();
        /* istanbul ignore next */
        cov_1kgk1e008k().s[67]++;
        this.logger?.debug('Evolution successful', {
          adaptations: result.adaptations,
          confidence: result.confidence
        });
      } else
      /* istanbul ignore next */
      {
        cov_1kgk1e008k().b[16][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1kgk1e008k().s[68]++;
      this.logger?.error('Evolution failed', error);
      /* istanbul ignore next */
      cov_1kgk1e008k().s[69]++;
      ErrorHandler_1.errorHandler.logSimpleError('OrganismCore', 'evolve', error, 'error');
    }
  }
  /**
   * Apprentissage à partir de données comportementales
   */
  async learn(behaviorData) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[15]++;
    const energyCost =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[70]++, 2);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[71]++;
    if (!this.energyService.consumeEnergy(energyCost, 'learning')) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[18][0]++;
      cov_1kgk1e008k().s[72]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[18][1]++;
    }
    const success =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[73]++, await this.neuralService.learn(behaviorData));
    /* istanbul ignore next */
    cov_1kgk1e008k().s[74]++;
    if (success) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[19][0]++;
      // Améliore légèrement la mémoire lors de l'apprentissage
      const currentMemory =
      /* istanbul ignore next */
      (cov_1kgk1e008k().s[75]++, this.traitService.getTrait('memory'));
      /* istanbul ignore next */
      cov_1kgk1e008k().s[76]++;
      this.traitService.updateTrait('memory', currentMemory + 0.01, 'learning');
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[19][1]++;
    }
    cov_1kgk1e008k().s[77]++;
    this.logger?.debug('Learning completed', {
      success,
      data: behaviorData
    });
  }
  /**
   * Traitement d'un stimulus simple
   */
  processStimulus(stimulus) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[16]++;
    const energyCost =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[78]++, 1);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[79]++;
    if (!this.energyService.consumeEnergy(energyCost, 'stimulus_processing')) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[20][0]++;
      cov_1kgk1e008k().s[80]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[20][1]++;
    }
    // Traitement simplifié en arrière-plan
    cov_1kgk1e008k().s[81]++;
    this.neuralService.queuePattern({
      id: `pattern_${Date.now()}`,
      type: 'behavioral',
      data: stimulus,
      timestamp: Date.now(),
      confidence: 0.8
    });
    /* istanbul ignore next */
    cov_1kgk1e008k().s[82]++;
    this.logger?.debug('Stimulus processed', {
      stimulus
    });
  }
  /**
   * Obtient l'état complet de l'organisme
   */
  getState() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[17]++;
    const traits =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[83]++, this.traitService.getAllTraits());
    const energyStats =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[84]++, this.energyService.getEnergyStats());
    /* istanbul ignore next */
    cov_1kgk1e008k().s[85]++;
    return {
      id: this.id,
      traits,
      energy: energyStats.current,
      maxEnergy: energyStats.max,
      health: this.health,
      dna: this.dna,
      lastMutation: this.lastMutation,
      balance: this.traitService.calculateBalance(),
      metabolismRate: energyStats.metabolismRate,
      age: Date.now() - parseInt(this.id.split('_')[1]) // Approximation basée sur l'ID
    };
  }
  /**
   * Génère les paramètres de shader pour le rendu visuel
   */
  generateShaderParameters() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[18]++;
    const traits =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[86]++, this.traitService.getAllTraits());
    /* istanbul ignore next */
    cov_1kgk1e008k().s[87]++;
    return {
      energy: this.energyService.getEnergyPercentage() / 100,
      health: this.health / 100,
      neuralActivity: this.neuralService.getNeuralActivity(),
      creativity: traits.creativity,
      focus: traits.focus,
      time: Date.now() / 1000,
      colorPrimary: [traits.creativity, traits.empathy, traits.intuition],
      colorSecondary: [traits.focus, traits.resilience, traits.adaptability],
      morphology: traits.adaptability,
      complexity: traits.creativity * traits.memory
    };
  }
  /**
   * Sérialisation pour sauvegarde
   */
  toJSON() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[19]++;
    cov_1kgk1e008k().s[88]++;
    return {
      mesh: {},
      dna: this.dna,
      health: this.health,
      lastMutation: this.lastMutation,
      traits: this.traitService.toJSON(),
      energy: this.energyService.toJSON(),
      neural: this.neuralService.saveState(),
      timestamp: Date.now()
    };
  }
  /**
   * Restauration depuis JSON
   */
  fromJSON(data) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[20]++;
    cov_1kgk1e008k().s[89]++;
    if (data.traits) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[21][0]++;
      cov_1kgk1e008k().s[90]++;
      this.traitService.fromJSON(data.traits);
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[21][1]++;
    }
    cov_1kgk1e008k().s[91]++;
    if (data.energy) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[22][0]++;
      cov_1kgk1e008k().s[92]++;
      this.energyService.fromJSON(data.energy);
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[22][1]++;
    }
    cov_1kgk1e008k().s[93]++;
    if (data.neural) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[23][0]++;
      cov_1kgk1e008k().s[94]++;
      this.neuralService.loadState(data.neural);
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[23][1]++;
    }
    cov_1kgk1e008k().s[95]++;
    this.health =
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[24][0]++, data.health) ||
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[24][1]++, 100);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[96]++;
    this.lastMutation =
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[25][0]++, data.lastMutation) ||
    /* istanbul ignore next */
    (cov_1kgk1e008k().b[25][1]++, Date.now());
    /* istanbul ignore next */
    cov_1kgk1e008k().s[97]++;
    this.logger?.debug('State restored from JSON', {
      id: this.id
    });
  }
  /**
   * Nettoyage et libération des ressources
   */
  cleanup() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[21]++;
    cov_1kgk1e008k().s[98]++;
    this.energyService.destroy();
    /* istanbul ignore next */
    cov_1kgk1e008k().s[99]++;
    this.traitService.cleanup();
    /* istanbul ignore next */
    cov_1kgk1e008k().s[100]++;
    this.neuralService.cleanup();
    /* istanbul ignore next */
    cov_1kgk1e008k().s[101]++;
    this.logger?.debug('OrganismCore cleaned up', {
      id: this.id
    });
  }
  /**
   * Vérification de l'état de santé
   */
  healthCheck() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[22]++;
    const issues =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[102]++, []);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[103]++;
    if (this.health < 20) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[26][0]++;
      cov_1kgk1e008k().s[104]++;
      issues.push('Low health');
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[26][1]++;
    }
    cov_1kgk1e008k().s[105]++;
    if (this.energyService.getEnergyLevel() < 10) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[27][0]++;
      cov_1kgk1e008k().s[106]++;
      issues.push('Low energy');
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[27][1]++;
    }
    const neuralHealth =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[107]++, this.neuralService.healthCheck());
    /* istanbul ignore next */
    cov_1kgk1e008k().s[108]++;
    if (!neuralHealth.healthy) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[28][0]++;
      cov_1kgk1e008k().s[109]++;
      issues.push(...neuralHealth.issues);
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[28][1]++;
    }
    cov_1kgk1e008k().s[110]++;
    return {
      healthy: issues.length === 0,
      issues
    };
  }
  // =============================================================================
  // MÉTHODES MANQUANTES POUR IOrganismCore
  // =============================================================================
  /**
   * Boot the organism
   */
  async boot() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[23]++;
    cov_1kgk1e008k().s[111]++;
    // Initialize neural mesh if needed
    try {
      /* istanbul ignore next */
      cov_1kgk1e008k().s[112]++;
      await this.neuralService.initialize();
      /* istanbul ignore next */
      cov_1kgk1e008k().s[113]++;
      this.logger?.debug('Organism booted successfully', {
        id: this.id
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1kgk1e008k().s[114]++;
      this.logger?.error('Failed to boot organism', {
        id: this.id,
        error
      });
      /* istanbul ignore next */
      cov_1kgk1e008k().s[115]++;
      throw error;
    }
  }
  /**
   * Hibernate the organism
   */
  async hibernate() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[24]++;
    cov_1kgk1e008k().s[116]++;
    try {
      /* istanbul ignore next */
      cov_1kgk1e008k().s[117]++;
      this.energyService.setEfficiency(0.1); // Reduce energy consumption
      /* istanbul ignore next */
      cov_1kgk1e008k().s[118]++;
      await this.neuralService.suspend();
      /* istanbul ignore next */
      cov_1kgk1e008k().s[119]++;
      this.logger?.debug('Organism hibernated', {
        id: this.id
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1kgk1e008k().s[120]++;
      this.logger?.error('Failed to hibernate organism', {
        id: this.id,
        error
      });
      /* istanbul ignore next */
      cov_1kgk1e008k().s[121]++;
      throw error;
    }
  }
  /**
   * Update organism with delta time
   */
  update(deltaTime =
  /* istanbul ignore next */
  (cov_1kgk1e008k().b[29][0]++, 16.67)) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[25]++;
    // Standard frame time processing
    const timeFactor =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[122]++, deltaTime / 16.67); // Normalize to 60fps
    // Update energy decay
    /* istanbul ignore next */
    cov_1kgk1e008k().s[123]++;
    this.energyService.consumeEnergy(0.1 * timeFactor, 'metabolism');
    // Update neural processing
    /* istanbul ignore next */
    cov_1kgk1e008k().s[124]++;
    this.neuralService.update(deltaTime);
    // Health regeneration if high energy
    /* istanbul ignore next */
    cov_1kgk1e008k().s[125]++;
    if (this.energyService.getEnergyLevel() > 80) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[30][0]++;
      cov_1kgk1e008k().s[126]++;
      this.health = Math.min(100, this.health + 0.1 * timeFactor);
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[30][1]++;
    }
  }
  /**
   * Stimulate organism input
   */
  stimulate(inputId, value) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[26]++;
    cov_1kgk1e008k().s[127]++;
    this.neuralService.stimulate(inputId, value);
    // Consume energy for processing
    /* istanbul ignore next */
    cov_1kgk1e008k().s[128]++;
    this.energyService.consumeEnergy(0.5, `stimulation_${inputId}`);
  }
  /**
   * Mutate organism with given rate
   */
  mutate(rate =
  /* istanbul ignore next */
  (cov_1kgk1e008k().b[31][0]++, 0.01)) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[27]++;
    const traits =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[129]++, this.traitService.getAllTraits());
    const mutations =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[130]++, {});
    // Mutate each trait based on rate
    /* istanbul ignore next */
    cov_1kgk1e008k().s[131]++;
    Object.keys(traits).forEach(traitName => {
      /* istanbul ignore next */
      cov_1kgk1e008k().f[28]++;
      cov_1kgk1e008k().s[132]++;
      if (Math.random() < rate) {
        /* istanbul ignore next */
        cov_1kgk1e008k().b[32][0]++;
        const currentValue =
        /* istanbul ignore next */
        (cov_1kgk1e008k().s[133]++, traits[traitName]);
        const mutation =
        /* istanbul ignore next */
        (cov_1kgk1e008k().s[134]++, (Math.random() - 0.5) * 0.1); // ±5% mutation
        const newValue =
        /* istanbul ignore next */
        (cov_1kgk1e008k().s[135]++, Math.max(0, Math.min(1, currentValue + mutation)));
        /* istanbul ignore next */
        cov_1kgk1e008k().s[136]++;
        mutations[traitName] = newValue;
      } else
      /* istanbul ignore next */
      {
        cov_1kgk1e008k().b[32][1]++;
      }
    });
    // Apply mutations
    /* istanbul ignore next */
    cov_1kgk1e008k().s[137]++;
    if (Object.keys(mutations).length > 0) {
      /* istanbul ignore next */
      cov_1kgk1e008k().b[33][0]++;
      cov_1kgk1e008k().s[138]++;
      this.traitService.updateTraits(mutations, 'mutation');
      /* istanbul ignore next */
      cov_1kgk1e008k().s[139]++;
      this.lastMutation = Date.now();
      /* istanbul ignore next */
      cov_1kgk1e008k().s[140]++;
      this.logger?.debug('Mutation applied', {
        id: this.id,
        mutations
      });
    } else
    /* istanbul ignore next */
    {
      cov_1kgk1e008k().b[33][1]++;
    }
  }
  /**
   * Feed organism with energy
   */
  feed(amount =
  /* istanbul ignore next */
  (cov_1kgk1e008k().b[34][0]++, 10)) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[29]++;
    cov_1kgk1e008k().s[141]++;
    this.energyService.addEnergy(amount);
    /* istanbul ignore next */
    cov_1kgk1e008k().s[142]++;
    this.logger?.debug('Organism fed', {
      id: this.id,
      amount
    });
  }
  /**
   * Set traits (partial update)
   */
  setTraits(traits) {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[30]++;
    cov_1kgk1e008k().s[143]++;
    this.traitService.updateTraits(traits, 'external_update');
  }
  /**
   * Get performance metrics
   */
  async getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[31]++;
    const neuralMetrics =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[144]++, this.neuralService.getPerformanceMetrics());
    /* istanbul ignore next */
    cov_1kgk1e008k().s[145]++;
    return {
      cpu: await this.metricsService.getCPUUsage(),
      memory: await this.metricsService.getMemoryUsage(),
      neuralActivity:
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[35][0]++, neuralMetrics?.neuralActivity) ||
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[35][1]++, 0),
      connectionStrength:
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[36][0]++, neuralMetrics?.connectionStrength) ||
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[36][1]++, 0)
    };
  }
  /**
   * Get shader parameters for WebGL rendering
   */
  getShaderParameters() {
    /* istanbul ignore next */
    cov_1kgk1e008k().f[32]++;
    const traits =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[146]++, this.getTraits());
    const energy =
    /* istanbul ignore next */
    (cov_1kgk1e008k().s[147]++, this.energyService.getEnergyLevel());
    /* istanbul ignore next */
    cov_1kgk1e008k().s[148]++;
    return {
      energy: energy / 100,
      health: this.health / 100,
      neuralActivity:
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[37][0]++, this.neuralService.getNeuralActivity()) ||
      /* istanbul ignore next */
      (cov_1kgk1e008k().b[37][1]++, 0),
      creativity: traits.creativity,
      focus: traits.focus,
      time: Date.now() / 1000
    };
  }
}
/* istanbul ignore next */
cov_1kgk1e008k().s[149]++;
exports.OrganismCore = OrganismCore;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,