ee680ac804fcb01180e50afb3109dbc9
"use strict";

/* istanbul ignore next */
function cov_g66crfv1p() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/BehavioralEngine.ts";
  var hash = "71d4e7edf6e4f1d808675d23cf8e54c4c14e0f39";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/BehavioralEngine.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 34
        }
      },
      "2": {
        start: {
          line: 5,
          column: 26
        },
        end: {
          line: 5,
          column: 54
        }
      },
      "3": {
        start: {
          line: 6,
          column: 28
        },
        end: {
          line: 6,
          column: 58
        }
      },
      "4": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 60
        }
      },
      "5": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 64
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 64
        }
      },
      "8": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 69
        }
      },
      "9": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "10": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 33
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "12": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 63
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "14": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "15": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "16": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 61
        }
      },
      "17": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "18": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 54,
          column: 10
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 62,
          column: 10
        }
      },
      "20": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 65,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 16
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 25
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 29
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 38
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 26
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 46
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 14
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 56
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/BehavioralEngine.ts",
      mappings: ";;;AAAA,mCAAmC;AACnC,uDAAoD;AACpD,2DAAwD;AAExD,6DAAoD;AAEpD,MAAM,cAAc;IAClB,sDAAsD;IACtD,KAAK,CAAC,IAAa;QACjB,sBAAsB;QACtB,qBAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACnC,CAAC;CACF;AAED,MAAa,gBAAgB;IAW3B;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,iCAAe,EAAE,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,iCAAe,EAAE,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,qCAAiB,EAAE,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;QAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;QAEzB,gDAAgD;IAClD,CAAC;IAEM,MAAM,CAAC,WAAW;QACvB,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;YAC/B,gBAAgB,CAAC,QAAQ,GAAG,IAAI,gBAAgB,EAAE,CAAC;QACrD,CAAC;QACD,OAAO,gBAAgB,CAAC,QAAQ,CAAC;IACnC,CAAC;IAEM,KAAK,CAAC,eAAe,CAAC,KAAsB;QACjD,yCAAyC;QACzC,OAAO;YACL,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,SAAS;YAClB,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAEM,iBAAiB,CAAC,KAAsB;QAC7C,2BAA2B;QAC3B,OAAO;YACL,KAAK,EAAE,CAAC;YACR,OAAO,EAAE,SAAS;YAClB,OAAO,EAAE,KAAK;SACf,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,IAAa;QAC3B,wBAAwB;QACxB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACtD,MAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAElD,OAAO;YACL,OAAO;YACP,UAAU;YACV,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;SACtB,CAAC;IACJ,CAAC;IAED,OAAO;QACL,sBAAsB;QACtB,OAAO;YACL,KAAK,EAAE,GAAG;YACV,OAAO,EAAE,SAAS;YAClB,OAAO,EAAE,EAAE;SACZ,CAAC;IACJ,CAAC;CAGF;AApED,4CAoEC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/BehavioralEngine.ts"],
      sourcesContent: ["// Moteur d'analyse comportementale\r\nimport { PatternAnalyzer } from './PatternAnalyzer';\r\nimport { BehaviorPredictor } from './BehaviorPredictor';\r\nimport { BehaviorAnalysis, NavigationEvent } from '../../types/behavioral';\r\nimport { logger } from '@shared/utils/secureLogger';\n\r\nclass SessionTracker {\r\n  // @ts-expect-error Param\xE8tre r\xE9serv\xE9 pour usage futur\r\n  track(data: unknown): void {\r\n    // Simplified tracking\r\n    logger.info('Tracking behavior');\r\n  }\r\n}\r\n\r\nexport class BehavioralEngine {\r\n  private static instance: BehavioralEngine;\r\n  // @ts-expect-error Propri\xE9t\xE9 r\xE9serv\xE9e pour usage futur\r\n  private patterns: PatternAnalyzer;\r\n  private analyzer: PatternAnalyzer;\r\n  private predictor: BehaviorPredictor;\r\n  // @ts-expect-error Propri\xE9t\xE9 r\xE9serv\xE9e pour usage futur\r\n  private sessionTracker: SessionTracker;\r\n  // @ts-expect-error Propri\xE9t\xE9 r\xE9serv\xE9e pour usage futur\r\n  private storage: Map<string, any>;\r\n  \r\n  private constructor() {\r\n    this.patterns = new PatternAnalyzer();\r\n    this.analyzer = new PatternAnalyzer();\r\n    this.predictor = new BehaviorPredictor();\r\n    this.sessionTracker = new SessionTracker();\r\n    this.storage = new Map();\r\n    \r\n    // this.initialize(); // TODO: M\xE9thode manquante\r\n  }\r\n  \r\n  public static getInstance(): BehavioralEngine {\r\n    if (!BehavioralEngine.instance) {\r\n      BehavioralEngine.instance = new BehavioralEngine();\r\n    }\r\n    return BehavioralEngine.instance;\r\n  }\r\n  \r\n  public async analyzeBehavior(event: NavigationEvent): Promise<BehaviorAnalysis> {\r\n    // Code d'analyse comportementale factice\r\n    return {\r\n      score: 1,\r\n      pattern: 'default',\r\n      details: event\r\n    };\r\n  }\r\n\r\n  public analyzeNavigation(event: NavigationEvent): BehaviorAnalysis {\r\n    // Exemple d'analyse simple\r\n    return {\r\n      score: 1,\r\n      pattern: 'default',\r\n      details: event\r\n    };\r\n  }\r\n\r\n  processBehavior(data: unknown): any {\r\n    // Process behavior data\r\n    const pattern = this.analyzer.analyzeBehavior([data]);\r\n    const prediction = this.predictor.predict([data]);\r\n    \r\n    return {\r\n      pattern,\r\n      prediction,\r\n      timestamp: Date.now()\r\n    };\r\n  }\r\n\r\n  analyze(): BehaviorAnalysis {\r\n    // Simplified analysis\r\n    return { \r\n      score: 0.5, \r\n      pattern: 'default',\r\n      details: {}\r\n    };\r\n  }\r\n\r\n  // Suite de l'impl\xE9mentation...\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "71d4e7edf6e4f1d808675d23cf8e54c4c14e0f39"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_g66crfv1p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_g66crfv1p();
cov_g66crfv1p().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_g66crfv1p().s[1]++;
exports.BehavioralEngine = void 0;
// Moteur d'analyse comportementale
const PatternAnalyzer_1 =
/* istanbul ignore next */
(cov_g66crfv1p().s[2]++, require("./PatternAnalyzer"));
const BehaviorPredictor_1 =
/* istanbul ignore next */
(cov_g66crfv1p().s[3]++, require("./BehaviorPredictor"));
const secureLogger_1 =
/* istanbul ignore next */
(cov_g66crfv1p().s[4]++, require("@shared/utils/secureLogger"));
class SessionTracker {
  // @ts-expect-error Paramètre réservé pour usage futur
  track(data) {
    /* istanbul ignore next */
    cov_g66crfv1p().f[0]++;
    cov_g66crfv1p().s[5]++;
    // Simplified tracking
    secureLogger_1.logger.info('Tracking behavior');
  }
}
class BehavioralEngine {
  constructor() {
    /* istanbul ignore next */
    cov_g66crfv1p().f[1]++;
    cov_g66crfv1p().s[6]++;
    this.patterns = new PatternAnalyzer_1.PatternAnalyzer();
    /* istanbul ignore next */
    cov_g66crfv1p().s[7]++;
    this.analyzer = new PatternAnalyzer_1.PatternAnalyzer();
    /* istanbul ignore next */
    cov_g66crfv1p().s[8]++;
    this.predictor = new BehaviorPredictor_1.BehaviorPredictor();
    /* istanbul ignore next */
    cov_g66crfv1p().s[9]++;
    this.sessionTracker = new SessionTracker();
    /* istanbul ignore next */
    cov_g66crfv1p().s[10]++;
    this.storage = new Map();
    // this.initialize(); // TODO: Méthode manquante
  }
  static getInstance() {
    /* istanbul ignore next */
    cov_g66crfv1p().f[2]++;
    cov_g66crfv1p().s[11]++;
    if (!BehavioralEngine.instance) {
      /* istanbul ignore next */
      cov_g66crfv1p().b[0][0]++;
      cov_g66crfv1p().s[12]++;
      BehavioralEngine.instance = new BehavioralEngine();
    } else
    /* istanbul ignore next */
    {
      cov_g66crfv1p().b[0][1]++;
    }
    cov_g66crfv1p().s[13]++;
    return BehavioralEngine.instance;
  }
  async analyzeBehavior(event) {
    /* istanbul ignore next */
    cov_g66crfv1p().f[3]++;
    cov_g66crfv1p().s[14]++;
    // Code d'analyse comportementale factice
    return {
      score: 1,
      pattern: 'default',
      details: event
    };
  }
  analyzeNavigation(event) {
    /* istanbul ignore next */
    cov_g66crfv1p().f[4]++;
    cov_g66crfv1p().s[15]++;
    // Exemple d'analyse simple
    return {
      score: 1,
      pattern: 'default',
      details: event
    };
  }
  processBehavior(data) {
    /* istanbul ignore next */
    cov_g66crfv1p().f[5]++;
    // Process behavior data
    const pattern =
    /* istanbul ignore next */
    (cov_g66crfv1p().s[16]++, this.analyzer.analyzeBehavior([data]));
    const prediction =
    /* istanbul ignore next */
    (cov_g66crfv1p().s[17]++, this.predictor.predict([data]));
    /* istanbul ignore next */
    cov_g66crfv1p().s[18]++;
    return {
      pattern,
      prediction,
      timestamp: Date.now()
    };
  }
  analyze() {
    /* istanbul ignore next */
    cov_g66crfv1p().f[6]++;
    cov_g66crfv1p().s[19]++;
    // Simplified analysis
    return {
      score: 0.5,
      pattern: 'default',
      details: {}
    };
  }
}
/* istanbul ignore next */
cov_g66crfv1p().s[20]++;
exports.BehavioralEngine = BehavioralEngine;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZzY2Y3JmdjFwIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiUGF0dGVybkFuYWx5emVyXzEiLCJyZXF1aXJlIiwiQmVoYXZpb3JQcmVkaWN0b3JfMSIsInNlY3VyZUxvZ2dlcl8xIiwiU2Vzc2lvblRyYWNrZXIiLCJ0cmFjayIsImRhdGEiLCJmIiwibG9nZ2VyIiwiaW5mbyIsIkJlaGF2aW9yYWxFbmdpbmUiLCJjb25zdHJ1Y3RvciIsInBhdHRlcm5zIiwiUGF0dGVybkFuYWx5emVyIiwiYW5hbHl6ZXIiLCJwcmVkaWN0b3IiLCJCZWhhdmlvclByZWRpY3RvciIsInNlc3Npb25UcmFja2VyIiwic3RvcmFnZSIsIk1hcCIsImdldEluc3RhbmNlIiwiaW5zdGFuY2UiLCJiIiwiYW5hbHl6ZUJlaGF2aW9yIiwiZXZlbnQiLCJzY29yZSIsInBhdHRlcm4iLCJkZXRhaWxzIiwiYW5hbHl6ZU5hdmlnYXRpb24iLCJwcm9jZXNzQmVoYXZpb3IiLCJwcmVkaWN0aW9uIiwicHJlZGljdCIsInRpbWVzdGFtcCIsIkRhdGUiLCJub3ciLCJhbmFseXplIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi9tbnQvYy9Vc2Vycy9tX29saS9Qcm9qZXRzL1NZTUJJT05UL3NyYy9iZWhhdmlvcmFsL2NvcmUvQmVoYXZpb3JhbEVuZ2luZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBNb3RldXIgZCdhbmFseXNlIGNvbXBvcnRlbWVudGFsZVxyXG5pbXBvcnQgeyBQYXR0ZXJuQW5hbHl6ZXIgfSBmcm9tICcuL1BhdHRlcm5BbmFseXplcic7XHJcbmltcG9ydCB7IEJlaGF2aW9yUHJlZGljdG9yIH0gZnJvbSAnLi9CZWhhdmlvclByZWRpY3Rvcic7XHJcbmltcG9ydCB7IEJlaGF2aW9yQW5hbHlzaXMsIE5hdmlnYXRpb25FdmVudCB9IGZyb20gJy4uLy4uL3R5cGVzL2JlaGF2aW9yYWwnO1xyXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAc2hhcmVkL3V0aWxzL3NlY3VyZUxvZ2dlcic7XG5cclxuY2xhc3MgU2Vzc2lvblRyYWNrZXIge1xyXG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgUGFyYW3DqHRyZSByw6lzZXJ2w6kgcG91ciB1c2FnZSBmdXR1clxyXG4gIHRyYWNrKGRhdGE6IHVua25vd24pOiB2b2lkIHtcclxuICAgIC8vIFNpbXBsaWZpZWQgdHJhY2tpbmdcclxuICAgIGxvZ2dlci5pbmZvKCdUcmFja2luZyBiZWhhdmlvcicpO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIEJlaGF2aW9yYWxFbmdpbmUge1xyXG4gIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBCZWhhdmlvcmFsRW5naW5lO1xyXG4gIC8vIEB0cy1leHBlY3QtZXJyb3IgUHJvcHJpw6l0w6kgcsOpc2VydsOpZSBwb3VyIHVzYWdlIGZ1dHVyXHJcbiAgcHJpdmF0ZSBwYXR0ZXJuczogUGF0dGVybkFuYWx5emVyO1xyXG4gIHByaXZhdGUgYW5hbHl6ZXI6IFBhdHRlcm5BbmFseXplcjtcclxuICBwcml2YXRlIHByZWRpY3RvcjogQmVoYXZpb3JQcmVkaWN0b3I7XHJcbiAgLy8gQHRzLWV4cGVjdC1lcnJvciBQcm9wcmnDqXTDqSByw6lzZXJ2w6llIHBvdXIgdXNhZ2UgZnV0dXJcclxuICBwcml2YXRlIHNlc3Npb25UcmFja2VyOiBTZXNzaW9uVHJhY2tlcjtcclxuICAvLyBAdHMtZXhwZWN0LWVycm9yIFByb3ByacOpdMOpIHLDqXNlcnbDqWUgcG91ciB1c2FnZSBmdXR1clxyXG4gIHByaXZhdGUgc3RvcmFnZTogTWFwPHN0cmluZywgYW55PjtcclxuICBcclxuICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5wYXR0ZXJucyA9IG5ldyBQYXR0ZXJuQW5hbHl6ZXIoKTtcclxuICAgIHRoaXMuYW5hbHl6ZXIgPSBuZXcgUGF0dGVybkFuYWx5emVyKCk7XHJcbiAgICB0aGlzLnByZWRpY3RvciA9IG5ldyBCZWhhdmlvclByZWRpY3RvcigpO1xyXG4gICAgdGhpcy5zZXNzaW9uVHJhY2tlciA9IG5ldyBTZXNzaW9uVHJhY2tlcigpO1xyXG4gICAgdGhpcy5zdG9yYWdlID0gbmV3IE1hcCgpO1xyXG4gICAgXHJcbiAgICAvLyB0aGlzLmluaXRpYWxpemUoKTsgLy8gVE9ETzogTcOpdGhvZGUgbWFucXVhbnRlXHJcbiAgfVxyXG4gIFxyXG4gIHB1YmxpYyBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogQmVoYXZpb3JhbEVuZ2luZSB7XHJcbiAgICBpZiAoIUJlaGF2aW9yYWxFbmdpbmUuaW5zdGFuY2UpIHtcclxuICAgICAgQmVoYXZpb3JhbEVuZ2luZS5pbnN0YW5jZSA9IG5ldyBCZWhhdmlvcmFsRW5naW5lKCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gQmVoYXZpb3JhbEVuZ2luZS5pbnN0YW5jZTtcclxuICB9XHJcbiAgXHJcbiAgcHVibGljIGFzeW5jIGFuYWx5emVCZWhhdmlvcihldmVudDogTmF2aWdhdGlvbkV2ZW50KTogUHJvbWlzZTxCZWhhdmlvckFuYWx5c2lzPiB7XHJcbiAgICAvLyBDb2RlIGQnYW5hbHlzZSBjb21wb3J0ZW1lbnRhbGUgZmFjdGljZVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc2NvcmU6IDEsXHJcbiAgICAgIHBhdHRlcm46ICdkZWZhdWx0JyxcclxuICAgICAgZGV0YWlsczogZXZlbnRcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYW5hbHl6ZU5hdmlnYXRpb24oZXZlbnQ6IE5hdmlnYXRpb25FdmVudCk6IEJlaGF2aW9yQW5hbHlzaXMge1xyXG4gICAgLy8gRXhlbXBsZSBkJ2FuYWx5c2Ugc2ltcGxlXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBzY29yZTogMSxcclxuICAgICAgcGF0dGVybjogJ2RlZmF1bHQnLFxyXG4gICAgICBkZXRhaWxzOiBldmVudFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIHByb2Nlc3NCZWhhdmlvcihkYXRhOiB1bmtub3duKTogYW55IHtcclxuICAgIC8vIFByb2Nlc3MgYmVoYXZpb3IgZGF0YVxyXG4gICAgY29uc3QgcGF0dGVybiA9IHRoaXMuYW5hbHl6ZXIuYW5hbHl6ZUJlaGF2aW9yKFtkYXRhXSk7XHJcbiAgICBjb25zdCBwcmVkaWN0aW9uID0gdGhpcy5wcmVkaWN0b3IucHJlZGljdChbZGF0YV0pO1xyXG4gICAgXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwYXR0ZXJuLFxyXG4gICAgICBwcmVkaWN0aW9uLFxyXG4gICAgICB0aW1lc3RhbXA6IERhdGUubm93KClcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBhbmFseXplKCk6IEJlaGF2aW9yQW5hbHlzaXMge1xyXG4gICAgLy8gU2ltcGxpZmllZCBhbmFseXNpc1xyXG4gICAgcmV0dXJuIHsgXHJcbiAgICAgIHNjb3JlOiAwLjUsIFxyXG4gICAgICBwYXR0ZXJuOiAnZGVmYXVsdCcsXHJcbiAgICAgIGRldGFpbHM6IHt9XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLy8gU3VpdGUgZGUgbCdpbXBsw6ltZW50YXRpb24uLi5cclxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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