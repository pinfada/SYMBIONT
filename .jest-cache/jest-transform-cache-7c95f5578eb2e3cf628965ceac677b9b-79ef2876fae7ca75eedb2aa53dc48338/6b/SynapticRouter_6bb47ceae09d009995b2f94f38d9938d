0081b1ce7abf2c6a170974953577964c
"use strict";

/* istanbul ignore next */
function cov_1c887z1vvs() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/SynapticRouter.ts";
  var hash = "f678c5660c4b910e34e102cf0b0dc08dd5935b69";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/SynapticRouter.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 37
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 33
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 15,
          column: 19
        }
      },
      "5": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 19
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 20,
          column: 11
        }
      },
      "7": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "8": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 24
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 32
        }
      },
      "10": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "11": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 33
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 45
        }
      },
      "13": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 45,
          column: 59
        }
      },
      "14": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "15": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 43
        }
      },
      "16": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 68
        }
      },
      "17": {
        start: {
          line: 56,
          column: 0
        },
        end: {
          line: 56,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 45
          },
          end: {
            line: 17,
            column: 46
          }
        },
        loc: {
          start: {
            line: 17,
            column: 80
          },
          end: {
            line: 20,
            column: 9
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 36
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 44
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 33
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 51
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 15,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 15,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/SynapticRouter.ts",
      mappings: ";;;AAEA,MAAa,cAAc;IAIzB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,OAAO;QACX,IAAI,IAAI,CAAC,WAAW;YAAE,OAAO;QAE7B,sDAAsD;QACtD,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE;YACrE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC/C,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,UAAU;QACd,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACH,eAAe,CAAC,KAAa,EAAE,OAAuB;QACpD,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACK,KAAK,CAAC,aAAa,CAAC,OAAY;QACtC,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,OAAO,EAAE,CAAC;YACZ,MAAM,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAED,sDAAsD;IACtD,KAAK,CAAC,KAAK,CAAC,OAAgB,EAAE,MAAoB;QAChD,qBAAqB;QACrB,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAC9D,CAAC;CACF;AA5DD,wCA4DC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/SynapticRouter.ts"],
      sourcesContent: ["type MessageHandler = (message: any) => Promise<void>;\r\n\r\nexport class SynapticRouter {\r\n  private connections: Map<string, MessageHandler>;\r\n  private isConnected: boolean;\r\n\r\n  constructor() {\r\n    this.connections = new Map();\r\n    this.isConnected = false;\r\n  }\r\n\r\n  /**\r\n   * \xC9tablit les connexions du routeur\r\n   * @returns {Promise<void>}\r\n   */\r\n  async connect(): Promise<void> {\r\n    if (this.isConnected) return;\r\n    \r\n    // @ts-expect-error Param\xE8tre r\xE9serv\xE9 pour usage futur\r\n    chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n      this.handleMessage(message).then(sendResponse);\r\n      return true;\r\n    });\r\n\r\n    this.isConnected = true;\r\n  }\r\n\r\n  /**\r\n   * D\xE9connecte le routeur\r\n   * @returns {Promise<void>}\r\n   */\r\n  async disconnect(): Promise<void> {\r\n    this.connections.clear();\r\n    this.isConnected = false;\r\n  }\r\n\r\n  /**\r\n   * Enregistre un gestionnaire de messages\r\n   * @param {string} route - Identifiant de la route\r\n   * @param {MessageHandler} handler - Fonction de traitement\r\n   */\r\n  registerHandler(route: string, handler: MessageHandler): void {\r\n    this.connections.set(route, handler);\r\n  }\r\n\r\n  /**\r\n   * G\xE8re un message entrant\r\n   * @param {any} message - Message \xE0 traiter\r\n   * @returns {Promise<void>}\r\n   */\r\n  private async handleMessage(message: any): Promise<void> {\r\n    const handler = this.connections.get(message.route);\r\n    if (handler) {\r\n      await handler(message.payload);\r\n    }\r\n  }\r\n\r\n  // @ts-expect-error Param\xE8tre r\xE9serv\xE9 pour usage futur\r\n  async route(message: Message, sender?: MessagePort): Promise<any> {\r\n    // Simplified routing\r\n    return Promise.resolve({ status: 'routed', data: message });\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f678c5660c4b910e34e102cf0b0dc08dd5935b69"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1c887z1vvs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1c887z1vvs();
cov_1c887z1vvs().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1c887z1vvs().s[1]++;
exports.SynapticRouter = void 0;
class SynapticRouter {
  constructor() {
    /* istanbul ignore next */
    cov_1c887z1vvs().f[0]++;
    cov_1c887z1vvs().s[2]++;
    this.connections = new Map();
    /* istanbul ignore next */
    cov_1c887z1vvs().s[3]++;
    this.isConnected = false;
  }
  /**
   * Établit les connexions du routeur
   * @returns {Promise<void>}
   */
  async connect() {
    /* istanbul ignore next */
    cov_1c887z1vvs().f[1]++;
    cov_1c887z1vvs().s[4]++;
    if (this.isConnected) {
      /* istanbul ignore next */
      cov_1c887z1vvs().b[0][0]++;
      cov_1c887z1vvs().s[5]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1c887z1vvs().b[0][1]++;
    }
    // @ts-expect-error Paramètre réservé pour usage futur
    cov_1c887z1vvs().s[6]++;
    chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
      /* istanbul ignore next */
      cov_1c887z1vvs().f[2]++;
      cov_1c887z1vvs().s[7]++;
      this.handleMessage(message).then(sendResponse);
      /* istanbul ignore next */
      cov_1c887z1vvs().s[8]++;
      return true;
    });
    /* istanbul ignore next */
    cov_1c887z1vvs().s[9]++;
    this.isConnected = true;
  }
  /**
   * Déconnecte le routeur
   * @returns {Promise<void>}
   */
  async disconnect() {
    /* istanbul ignore next */
    cov_1c887z1vvs().f[3]++;
    cov_1c887z1vvs().s[10]++;
    this.connections.clear();
    /* istanbul ignore next */
    cov_1c887z1vvs().s[11]++;
    this.isConnected = false;
  }
  /**
   * Enregistre un gestionnaire de messages
   * @param {string} route - Identifiant de la route
   * @param {MessageHandler} handler - Fonction de traitement
   */
  registerHandler(route, handler) {
    /* istanbul ignore next */
    cov_1c887z1vvs().f[4]++;
    cov_1c887z1vvs().s[12]++;
    this.connections.set(route, handler);
  }
  /**
   * Gère un message entrant
   * @param {any} message - Message à traiter
   * @returns {Promise<void>}
   */
  async handleMessage(message) {
    /* istanbul ignore next */
    cov_1c887z1vvs().f[5]++;
    const handler =
    /* istanbul ignore next */
    (cov_1c887z1vvs().s[13]++, this.connections.get(message.route));
    /* istanbul ignore next */
    cov_1c887z1vvs().s[14]++;
    if (handler) {
      /* istanbul ignore next */
      cov_1c887z1vvs().b[1][0]++;
      cov_1c887z1vvs().s[15]++;
      await handler(message.payload);
    } else
    /* istanbul ignore next */
    {
      cov_1c887z1vvs().b[1][1]++;
    }
  }
  // @ts-expect-error Paramètre réservé pour usage futur
  async route(message, sender) {
    /* istanbul ignore next */
    cov_1c887z1vvs().f[6]++;
    cov_1c887z1vvs().s[16]++;
    // Simplified routing
    return Promise.resolve({
      status: 'routed',
      data: message
    });
  }
}
/* istanbul ignore next */
cov_1c887z1vvs().s[17]++;
exports.SynapticRouter = SynapticRouter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWM4ODd6MXZ2cyIsImFjdHVhbENvdmVyYWdlIiwicyIsIlN5bmFwdGljUm91dGVyIiwiY29uc3RydWN0b3IiLCJmIiwiY29ubmVjdGlvbnMiLCJNYXAiLCJpc0Nvbm5lY3RlZCIsImNvbm5lY3QiLCJiIiwiY2hyb21lIiwicnVudGltZSIsIm9uTWVzc2FnZSIsImFkZExpc3RlbmVyIiwibWVzc2FnZSIsInNlbmRlciIsInNlbmRSZXNwb25zZSIsImhhbmRsZU1lc3NhZ2UiLCJ0aGVuIiwiZGlzY29ubmVjdCIsImNsZWFyIiwicmVnaXN0ZXJIYW5kbGVyIiwicm91dGUiLCJoYW5kbGVyIiwic2V0IiwiZ2V0IiwicGF5bG9hZCIsIlByb21pc2UiLCJyZXNvbHZlIiwic3RhdHVzIiwiZGF0YSIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvbW50L2MvVXNlcnMvbV9vbGkvUHJvamV0cy9TWU1CSU9OVC9zcmMvY29yZS9TeW5hcHRpY1JvdXRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJ0eXBlIE1lc3NhZ2VIYW5kbGVyID0gKG1lc3NhZ2U6IGFueSkgPT4gUHJvbWlzZTx2b2lkPjtcclxuXHJcbmV4cG9ydCBjbGFzcyBTeW5hcHRpY1JvdXRlciB7XHJcbiAgcHJpdmF0ZSBjb25uZWN0aW9uczogTWFwPHN0cmluZywgTWVzc2FnZUhhbmRsZXI+O1xyXG4gIHByaXZhdGUgaXNDb25uZWN0ZWQ6IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgdGhpcy5jb25uZWN0aW9ucyA9IG5ldyBNYXAoKTtcclxuICAgIHRoaXMuaXNDb25uZWN0ZWQgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIMOJdGFibGl0IGxlcyBjb25uZXhpb25zIGR1IHJvdXRldXJcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cclxuICAgKi9cclxuICBhc3luYyBjb25uZWN0KCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgaWYgKHRoaXMuaXNDb25uZWN0ZWQpIHJldHVybjtcclxuICAgIFxyXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciBQYXJhbcOodHJlIHLDqXNlcnbDqSBwb3VyIHVzYWdlIGZ1dHVyXHJcbiAgICBjaHJvbWUucnVudGltZS5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIoKG1lc3NhZ2UsIHNlbmRlciwgc2VuZFJlc3BvbnNlKSA9PiB7XHJcbiAgICAgIHRoaXMuaGFuZGxlTWVzc2FnZShtZXNzYWdlKS50aGVuKHNlbmRSZXNwb25zZSk7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5pc0Nvbm5lY3RlZCA9IHRydWU7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBEw6ljb25uZWN0ZSBsZSByb3V0ZXVyXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8dm9pZD59XHJcbiAgICovXHJcbiAgYXN5bmMgZGlzY29ubmVjdCgpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIHRoaXMuY29ubmVjdGlvbnMuY2xlYXIoKTtcclxuICAgIHRoaXMuaXNDb25uZWN0ZWQgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEVucmVnaXN0cmUgdW4gZ2VzdGlvbm5haXJlIGRlIG1lc3NhZ2VzXHJcbiAgICogQHBhcmFtIHtzdHJpbmd9IHJvdXRlIC0gSWRlbnRpZmlhbnQgZGUgbGEgcm91dGVcclxuICAgKiBAcGFyYW0ge01lc3NhZ2VIYW5kbGVyfSBoYW5kbGVyIC0gRm9uY3Rpb24gZGUgdHJhaXRlbWVudFxyXG4gICAqL1xyXG4gIHJlZ2lzdGVySGFuZGxlcihyb3V0ZTogc3RyaW5nLCBoYW5kbGVyOiBNZXNzYWdlSGFuZGxlcik6IHZvaWQge1xyXG4gICAgdGhpcy5jb25uZWN0aW9ucy5zZXQocm91dGUsIGhhbmRsZXIpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR8OocmUgdW4gbWVzc2FnZSBlbnRyYW50XHJcbiAgICogQHBhcmFtIHthbnl9IG1lc3NhZ2UgLSBNZXNzYWdlIMOgIHRyYWl0ZXJcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn1cclxuICAgKi9cclxuICBwcml2YXRlIGFzeW5jIGhhbmRsZU1lc3NhZ2UobWVzc2FnZTogYW55KTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBjb25zdCBoYW5kbGVyID0gdGhpcy5jb25uZWN0aW9ucy5nZXQobWVzc2FnZS5yb3V0ZSk7XHJcbiAgICBpZiAoaGFuZGxlcikge1xyXG4gICAgICBhd2FpdCBoYW5kbGVyKG1lc3NhZ2UucGF5bG9hZCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBAdHMtZXhwZWN0LWVycm9yIFBhcmFtw6h0cmUgcsOpc2VydsOpIHBvdXIgdXNhZ2UgZnV0dXJcclxuICBhc3luYyByb3V0ZShtZXNzYWdlOiBNZXNzYWdlLCBzZW5kZXI/OiBNZXNzYWdlUG9ydCk6IFByb21pc2U8YW55PiB7XHJcbiAgICAvLyBTaW1wbGlmaWVkIHJvdXRpbmdcclxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoeyBzdGF0dXM6ICdyb3V0ZWQnLCBkYXRhOiBtZXNzYWdlIH0pO1xyXG4gIH1cclxufSAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWtCSTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7OztBQWhCSixNQUFhQyxjQUFjO0VBSXpCQyxZQUFBO0lBQUE7SUFBQUosY0FBQSxHQUFBSyxDQUFBO0lBQUFMLGNBQUEsR0FBQUUsQ0FBQTtJQUNFLElBQUksQ0FBQ0ksV0FBVyxHQUFHLElBQUlDLEdBQUcsRUFBRTtJQUFDO0lBQUFQLGNBQUEsR0FBQUUsQ0FBQTtJQUM3QixJQUFJLENBQUNNLFdBQVcsR0FBRyxLQUFLO0VBQzFCO0VBRUE7Ozs7RUFJQSxNQUFNQyxPQUFPQSxDQUFBO0lBQUE7SUFBQVQsY0FBQSxHQUFBSyxDQUFBO0lBQUFMLGNBQUEsR0FBQUUsQ0FBQTtJQUNYLElBQUksSUFBSSxDQUFDTSxXQUFXLEVBQUU7TUFBQTtNQUFBUixjQUFBLEdBQUFVLENBQUE7TUFBQVYsY0FBQSxHQUFBRSxDQUFBO01BQUE7SUFBQSxDQUFPO0lBQUE7SUFBQTtNQUFBRixjQUFBLEdBQUFVLENBQUE7SUFBQTtJQUU3QjtJQUFBVixjQUFBLEdBQUFFLENBQUE7SUFDQVMsTUFBTSxDQUFDQyxPQUFPLENBQUNDLFNBQVMsQ0FBQ0MsV0FBVyxDQUFDLENBQUNDLE9BQU8sRUFBRUMsTUFBTSxFQUFFQyxZQUFZLEtBQUk7TUFBQTtNQUFBakIsY0FBQSxHQUFBSyxDQUFBO01BQUFMLGNBQUEsR0FBQUUsQ0FBQTtNQUNyRSxJQUFJLENBQUNnQixhQUFhLENBQUNILE9BQU8sQ0FBQyxDQUFDSSxJQUFJLENBQUNGLFlBQVksQ0FBQztNQUFDO01BQUFqQixjQUFBLEdBQUFFLENBQUE7TUFDL0MsT0FBTyxJQUFJO0lBQ2IsQ0FBQyxDQUFDO0lBQUM7SUFBQUYsY0FBQSxHQUFBRSxDQUFBO0lBRUgsSUFBSSxDQUFDTSxXQUFXLEdBQUcsSUFBSTtFQUN6QjtFQUVBOzs7O0VBSUEsTUFBTVksVUFBVUEsQ0FBQTtJQUFBO0lBQUFwQixjQUFBLEdBQUFLLENBQUE7SUFBQUwsY0FBQSxHQUFBRSxDQUFBO0lBQ2QsSUFBSSxDQUFDSSxXQUFXLENBQUNlLEtBQUssRUFBRTtJQUFDO0lBQUFyQixjQUFBLEdBQUFFLENBQUE7SUFDekIsSUFBSSxDQUFDTSxXQUFXLEdBQUcsS0FBSztFQUMxQjtFQUVBOzs7OztFQUtBYyxlQUFlQSxDQUFDQyxLQUFhLEVBQUVDLE9BQXVCO0lBQUE7SUFBQXhCLGNBQUEsR0FBQUssQ0FBQTtJQUFBTCxjQUFBLEdBQUFFLENBQUE7SUFDcEQsSUFBSSxDQUFDSSxXQUFXLENBQUNtQixHQUFHLENBQUNGLEtBQUssRUFBRUMsT0FBTyxDQUFDO0VBQ3RDO0VBRUE7Ozs7O0VBS1EsTUFBTU4sYUFBYUEsQ0FBQ0gsT0FBWTtJQUFBO0lBQUFmLGNBQUEsR0FBQUssQ0FBQTtJQUN0QyxNQUFNbUIsT0FBTztJQUFBO0lBQUEsQ0FBQXhCLGNBQUEsR0FBQUUsQ0FBQSxRQUFHLElBQUksQ0FBQ0ksV0FBVyxDQUFDb0IsR0FBRyxDQUFDWCxPQUFPLENBQUNRLEtBQUssQ0FBQztJQUFDO0lBQUF2QixjQUFBLEdBQUFFLENBQUE7SUFDcEQsSUFBSXNCLE9BQU8sRUFBRTtNQUFBO01BQUF4QixjQUFBLEdBQUFVLENBQUE7TUFBQVYsY0FBQSxHQUFBRSxDQUFBO01BQ1gsTUFBTXNCLE9BQU8sQ0FBQ1QsT0FBTyxDQUFDWSxPQUFPLENBQUM7SUFDaEMsQ0FBQztJQUFBO0lBQUE7TUFBQTNCLGNBQUEsR0FBQVUsQ0FBQTtJQUFBO0VBQ0g7RUFFQTtFQUNBLE1BQU1hLEtBQUtBLENBQUNSLE9BQWdCLEVBQUVDLE1BQW9CO0lBQUE7SUFBQWhCLGNBQUEsR0FBQUssQ0FBQTtJQUFBTCxjQUFBLEdBQUFFLENBQUE7SUFDaEQ7SUFDQSxPQUFPMEIsT0FBTyxDQUFDQyxPQUFPLENBQUM7TUFBRUMsTUFBTSxFQUFFLFFBQVE7TUFBRUMsSUFBSSxFQUFFaEI7SUFBTyxDQUFFLENBQUM7RUFDN0Q7O0FBQ0Q7QUFBQWYsY0FBQSxHQUFBRSxDQUFBO0FBNUREOEIsT0FBQSxDQUFBN0IsY0FBQSxHQUFBQSxjQUFBIiwiaWdub3JlTGlzdCI6W119