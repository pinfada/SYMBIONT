5f99d2462c65a924b91bd78e32f1d7d6
"use strict";

// Factory pattern pour résoudre les dépendances circulaires
/* istanbul ignore next */
function cov_1wfa3ekfto() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/factories/OrganismFactory.ts";
  var hash = "e32ffd7279f2613767ab8e333d16cf1e033bd538";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/factories/OrganismFactory.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 33
        }
      },
      "2": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 33
        }
      },
      "3": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 12,
          column: 9
        }
      },
      "4": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 99
        }
      },
      "5": {
        start: {
          line: 14,
          column: 33
        },
        end: {
          line: 14,
          column: 59
        }
      },
      "6": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 81
        }
      },
      "7": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 19,
          column: 55
        }
      },
      "8": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 32
        }
      },
      "9": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "10": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 39
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 30
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 17
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 8
          },
          end: {
            line: 12,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 8
          },
          end: {
            line: 12,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/factories/OrganismFactory.ts",
      mappings: ";AAAA,4DAA4D;;;AAU5D,MAAa,eAAe;IAG1B,MAAM,CAAC,eAAe,CAAC,IAA0B;QAC/C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,GAAW,EAAE,MAAgC;QACjE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YACvB,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;QACzF,CAAC;QAED,8CAA8C;QAC9C,MAAM,EAAE,YAAY,EAAE,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;QACpD,OAAO,IAAI,YAAY,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC;IAC3E,CAAC;IAED,MAAM,CAAC,gBAAgB;QACrB,8CAA8C;QAC9C,MAAM,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;QAChD,OAAO,IAAI,UAAU,EAAE,CAAC;IAC1B,CAAC;;AArBH,0CAsBC;AArBgB,4BAAY,GAAgC,IAAI,CAAC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/factories/OrganismFactory.ts"],
      sourcesContent: ["// Factory pattern pour r\xE9soudre les d\xE9pendances circulaires\r\n\r\nimport { INeuralMesh } from '../interfaces/INeuralMesh';\r\nimport { IOrganismCore } from '../interfaces/IOrganismCore';\r\nimport { OrganismTraits } from '../../shared/types/organism';\r\n\r\nexport interface OrganismDependencies {\r\n  createNeuralMesh: () => INeuralMesh;\r\n}\r\n\r\nexport class OrganismFactory {\r\n  private static dependencies: OrganismDependencies | null = null;\r\n\r\n  static setDependencies(deps: OrganismDependencies): void {\r\n    this.dependencies = deps;\r\n  }\r\n\r\n  static createOrganism(dna: string, traits?: Partial<OrganismTraits>): IOrganismCore {\r\n    if (!this.dependencies) {\r\n      throw new Error('OrganismFactory dependencies not set. Call setDependencies() first.');\r\n    }\r\n\r\n    // Import dynamique pour \xE9viter la circularit\xE9\r\n    const { OrganismCore } = require('../OrganismCore');\r\n    return new OrganismCore(dna, traits, this.dependencies.createNeuralMesh);\r\n  }\r\n\r\n  static createNeuralMesh(): INeuralMesh {\r\n    // Import dynamique pour \xE9viter la circularit\xE9\r\n    const { NeuralMesh } = require('../NeuralMesh');\r\n    return new NeuralMesh();\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e32ffd7279f2613767ab8e333d16cf1e033bd538"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1wfa3ekfto = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1wfa3ekfto();
cov_1wfa3ekfto().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1wfa3ekfto().s[1]++;
exports.OrganismFactory = void 0;
class OrganismFactory {
  static setDependencies(deps) {
    /* istanbul ignore next */
    cov_1wfa3ekfto().f[0]++;
    cov_1wfa3ekfto().s[2]++;
    this.dependencies = deps;
  }
  static createOrganism(dna, traits) {
    /* istanbul ignore next */
    cov_1wfa3ekfto().f[1]++;
    cov_1wfa3ekfto().s[3]++;
    if (!this.dependencies) {
      /* istanbul ignore next */
      cov_1wfa3ekfto().b[0][0]++;
      cov_1wfa3ekfto().s[4]++;
      throw new Error('OrganismFactory dependencies not set. Call setDependencies() first.');
    } else
    /* istanbul ignore next */
    {
      cov_1wfa3ekfto().b[0][1]++;
    }
    // Import dynamique pour éviter la circularité
    const {
      OrganismCore
    } =
    /* istanbul ignore next */
    (cov_1wfa3ekfto().s[5]++, require('../OrganismCore'));
    /* istanbul ignore next */
    cov_1wfa3ekfto().s[6]++;
    return new OrganismCore(dna, traits, this.dependencies.createNeuralMesh);
  }
  static createNeuralMesh() {
    /* istanbul ignore next */
    cov_1wfa3ekfto().f[2]++;
    // Import dynamique pour éviter la circularité
    const {
      NeuralMesh
    } =
    /* istanbul ignore next */
    (cov_1wfa3ekfto().s[7]++, require('../NeuralMesh'));
    /* istanbul ignore next */
    cov_1wfa3ekfto().s[8]++;
    return new NeuralMesh();
  }
}
/* istanbul ignore next */
cov_1wfa3ekfto().s[9]++;
exports.OrganismFactory = OrganismFactory;
/* istanbul ignore next */
cov_1wfa3ekfto().s[10]++;
OrganismFactory.dependencies = null;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXdmYTNla2Z0byIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIk9yZ2FuaXNtRmFjdG9yeSIsInNldERlcGVuZGVuY2llcyIsImRlcHMiLCJkZXBlbmRlbmNpZXMiLCJjcmVhdGVPcmdhbmlzbSIsImRuYSIsInRyYWl0cyIsIkVycm9yIiwiT3JnYW5pc21Db3JlIiwicmVxdWlyZSIsImNyZWF0ZU5ldXJhbE1lc2giLCJOZXVyYWxNZXNoIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi9tbnQvYy9Vc2Vycy9tX29saS9Qcm9qZXRzL1NZTUJJT05UL3NyYy9jb3JlL2ZhY3Rvcmllcy9PcmdhbmlzbUZhY3RvcnkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmFjdG9yeSBwYXR0ZXJuIHBvdXIgcsOpc291ZHJlIGxlcyBkw6lwZW5kYW5jZXMgY2lyY3VsYWlyZXNcclxuXHJcbmltcG9ydCB7IElOZXVyYWxNZXNoIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9JTmV1cmFsTWVzaCc7XHJcbmltcG9ydCB7IElPcmdhbmlzbUNvcmUgfSBmcm9tICcuLi9pbnRlcmZhY2VzL0lPcmdhbmlzbUNvcmUnO1xyXG5pbXBvcnQgeyBPcmdhbmlzbVRyYWl0cyB9IGZyb20gJy4uLy4uL3NoYXJlZC90eXBlcy9vcmdhbmlzbSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE9yZ2FuaXNtRGVwZW5kZW5jaWVzIHtcclxuICBjcmVhdGVOZXVyYWxNZXNoOiAoKSA9PiBJTmV1cmFsTWVzaDtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIE9yZ2FuaXNtRmFjdG9yeSB7XHJcbiAgcHJpdmF0ZSBzdGF0aWMgZGVwZW5kZW5jaWVzOiBPcmdhbmlzbURlcGVuZGVuY2llcyB8IG51bGwgPSBudWxsO1xyXG5cclxuICBzdGF0aWMgc2V0RGVwZW5kZW5jaWVzKGRlcHM6IE9yZ2FuaXNtRGVwZW5kZW5jaWVzKTogdm9pZCB7XHJcbiAgICB0aGlzLmRlcGVuZGVuY2llcyA9IGRlcHM7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgY3JlYXRlT3JnYW5pc20oZG5hOiBzdHJpbmcsIHRyYWl0cz86IFBhcnRpYWw8T3JnYW5pc21UcmFpdHM+KTogSU9yZ2FuaXNtQ29yZSB7XHJcbiAgICBpZiAoIXRoaXMuZGVwZW5kZW5jaWVzKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignT3JnYW5pc21GYWN0b3J5IGRlcGVuZGVuY2llcyBub3Qgc2V0LiBDYWxsIHNldERlcGVuZGVuY2llcygpIGZpcnN0LicpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEltcG9ydCBkeW5hbWlxdWUgcG91ciDDqXZpdGVyIGxhIGNpcmN1bGFyaXTDqVxyXG4gICAgY29uc3QgeyBPcmdhbmlzbUNvcmUgfSA9IHJlcXVpcmUoJy4uL09yZ2FuaXNtQ29yZScpO1xyXG4gICAgcmV0dXJuIG5ldyBPcmdhbmlzbUNvcmUoZG5hLCB0cmFpdHMsIHRoaXMuZGVwZW5kZW5jaWVzLmNyZWF0ZU5ldXJhbE1lc2gpO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGNyZWF0ZU5ldXJhbE1lc2goKTogSU5ldXJhbE1lc2gge1xyXG4gICAgLy8gSW1wb3J0IGR5bmFtaXF1ZSBwb3VyIMOpdml0ZXIgbGEgY2lyY3VsYXJpdMOpXHJcbiAgICBjb25zdCB7IE5ldXJhbE1lc2ggfSA9IHJlcXVpcmUoJy4uL05ldXJhbE1lc2gnKTtcclxuICAgIHJldHVybiBuZXcgTmV1cmFsTWVzaCgpO1xyXG4gIH1cclxufSAiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFBQTtBQUFBLFNBQUFBLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFB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