9fc8d49f97e2617d83e816a1e31a9dfb
"use strict";

/* istanbul ignore next */
function cov_2h4ribtenw() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/TraitsRadarChart.tsx";
  var hash = "c595471f53877a2754b6bfb5eb192c18b74c390e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/TraitsRadarChart.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 34
        }
      },
      "4": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 49
        }
      },
      "6": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 12,
          column: 1
        }
      },
      "7": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 43,
          column: 1
        }
      },
      "8": {
        start: {
          line: 14,
          column: 19
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "9": {
        start: {
          line: 24,
          column: 14
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "10": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "11": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 32
        }
      },
      "12": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 32,
          column: 6
        }
      },
      "13": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "14": {
        start: {
          line: 30,
          column: 18
        },
        end: {
          line: 30,
          column: 28
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 76
        }
      },
      "16": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 58
        }
      },
      "17": {
        start: {
          line: 33,
          column: 36
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 42,
          column: 27
        }
      },
      "19": {
        start: {
          line: 35,
          column: 34
        },
        end: {
          line: 35,
          column: 69
        }
      },
      "20": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 201
        }
      },
      "21": {
        start: {
          line: 38,
          column: 34
        },
        end: {
          line: 38,
          column: 69
        }
      },
      "22": {
        start: {
          line: 39,
          column: 30
        },
        end: {
          line: 39,
          column: 70
        }
      },
      "23": {
        start: {
          line: 40,
          column: 30
        },
        end: {
          line: 40,
          column: 70
        }
      },
      "24": {
        start: {
          line: 41,
          column: 20
        },
        end: {
          line: 41,
          column: 242
        }
      },
      "25": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 13,
            column: 26
          }
        },
        loc: {
          start: {
            line: 13,
            column: 97
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 30
          },
          end: {
            line: 28,
            column: 31
          }
        },
        loc: {
          start: {
            line: 28,
            column: 40
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 33,
            column: 32
          }
        },
        loc: {
          start: {
            line: 33,
            column: 36
          },
          end: {
            line: 33,
            column: 47
          }
        },
        line: 33
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 194
          },
          end: {
            line: 34,
            column: 195
          }
        },
        loc: {
          start: {
            line: 34,
            column: 204
          },
          end: {
            line: 37,
            column: 17
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 211
          },
          end: {
            line: 37,
            column: 212
          }
        },
        loc: {
          start: {
            line: 37,
            column: 225
          },
          end: {
            line: 42,
            column: 17
          }
        },
        line: 37
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 13,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 45
          },
          end: {
            line: 13,
            column: 59
          }
        }],
        line: 13
      },
      "4": {
        loc: {
          start: {
            line: 13,
            column: 61
          },
          end: {
            line: 13,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 68
          },
          end: {
            line: 13,
            column: 71
          }
        }],
        line: 13
      },
      "5": {
        loc: {
          start: {
            line: 13,
            column: 73
          },
          end: {
            line: 13,
            column: 90
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 81
          },
          end: {
            line: 13,
            column: 90
          }
        }],
        line: 13
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/TraitsRadarChart.tsx",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/TraitsRadarChart.tsx"],
      sourcesContent: ["import React from 'react';\r\nimport { OrganismTraits } from '../types';\r\n\r\n/**\r\n * TraitsRadarChart - Radar chart SVG pour visualiser les traits de l'organisme\r\n * Props :\r\n *   - traits : valeurs des traits (OrganismTraits)\r\n *   - labels : labels personnalis\xE9s (optionnel)\r\n *   - size : taille du chart (d\xE9faut 180)\r\n *   - color : couleur principale (d\xE9faut #00e0ff)\r\n */\r\ninterface TraitsRadarChartProps {\r\n  traits: OrganismTraits;\r\n  labels?: string[];\r\n  size?: number;\r\n  color?: string;\r\n}\r\n\r\nconst DEFAULT_LABELS = [\r\n  'Curiosit\xE9', 'Focus', 'Rythme', 'Empathie',\r\n  'Cr\xE9ativit\xE9', '\xC9nergie', 'Harmonie', 'Sagesse'\r\n];\r\n\r\nexport const TraitsRadarChart: React.FC<TraitsRadarChartProps> = ({\r\n  traits,\r\n  labels = DEFAULT_LABELS,\r\n  size = 180,\r\n  color = '#00e0ff'\r\n}) => {\r\n  const values = [\r\n    traits.curiosity,\r\n    traits.focus,\r\n    traits.rhythm,\r\n    traits.empathy,\r\n    traits.creativity,\r\n    traits.energy,\r\n    traits.harmony,\r\n    traits.wisdom\r\n  ];\r\n  const N = values.length;\r\n  const center = size / 2;\r\n  const radius = size / 2 - 18;\r\n  // Points du polygone\r\n  const points = values.map((v, i) => {\r\n    const angle = (Math.PI * 2 * i) / N - Math.PI / 2;\r\n    const r = radius * v;\r\n    return [center + Math.cos(angle) * r, center + Math.sin(angle) * r];\r\n  });\r\n  const polygon = points.map(p => p.join(',')).join(' ');\r\n\r\n  return (\r\n    <div style={{ display: 'inline-block', position: 'relative' }}>\r\n      <svg width={size} height={size}>\r\n        {/* Axes */}\r\n        {values.map((_, i) => {\r\n          const angle = (Math.PI * 2 * i) / N - Math.PI / 2;\r\n          return (\r\n            <line\r\n              key={i}\r\n              x1={center}\r\n              y1={center}\r\n              x2={center + Math.cos(angle) * radius}\r\n              y2={center + Math.sin(angle) * radius}\r\n              stroke=\"#444\"\r\n              strokeWidth={1}\r\n            />\r\n          );\r\n        })}\r\n        {/* Polygone */}\r\n        <polygon\r\n          points={polygon}\r\n          fill={color}\r\n          fillOpacity={0.18}\r\n          stroke={color}\r\n          strokeWidth={2.5}\r\n          style={{ transition: 'all 0.7s cubic-bezier(.4,2,.3,1)' }}\r\n        />\r\n        {/* Labels */}\r\n        {labels.map((label, i) => {\r\n          const angle = (Math.PI * 2 * i) / N - Math.PI / 2;\r\n          const x = center + Math.cos(angle) * (radius + 14);\r\n          const y = center + Math.sin(angle) * (radius + 14);\r\n          return (\r\n            <text\r\n              key={label}\r\n              x={x}\r\n              y={y}\r\n              textAnchor=\"middle\"\r\n              dominantBaseline=\"central\"\r\n              fontSize={size * 0.11}\r\n              fill=\"#aaa\"\r\n              style={{ pointerEvents: 'none', userSelect: 'none' }}\r\n            >\r\n              {label}\r\n            </text>\r\n          );\r\n        })}\r\n      </svg>\r\n    </div>\r\n  );\r\n}; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c595471f53877a2754b6bfb5eb192c18b74c390e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2h4ribtenw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2h4ribtenw();
var __importDefault =
/* istanbul ignore next */
(cov_2h4ribtenw().s[0]++,
/* istanbul ignore next */
(cov_2h4ribtenw().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2h4ribtenw().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_2h4ribtenw().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_2h4ribtenw().f[0]++;
  cov_2h4ribtenw().s[1]++;
  return /* istanbul ignore next */(cov_2h4ribtenw().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_2h4ribtenw().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_2h4ribtenw().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_2h4ribtenw().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_2h4ribtenw().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2h4ribtenw().s[3]++;
exports.TraitsRadarChart = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_2h4ribtenw().s[4]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_2h4ribtenw().s[5]++, __importDefault(require("react")));
const DEFAULT_LABELS =
/* istanbul ignore next */
(cov_2h4ribtenw().s[6]++, ['Curiosité', 'Focus', 'Rythme', 'Empathie', 'Créativité', 'Énergie', 'Harmonie', 'Sagesse']);
/* istanbul ignore next */
cov_2h4ribtenw().s[7]++;
const TraitsRadarChart = ({
  traits,
  labels =
  /* istanbul ignore next */
  (cov_2h4ribtenw().b[3][0]++, DEFAULT_LABELS),
  size =
  /* istanbul ignore next */
  (cov_2h4ribtenw().b[4][0]++, 180),
  color =
  /* istanbul ignore next */
  (cov_2h4ribtenw().b[5][0]++, '#00e0ff')
}) => {
  /* istanbul ignore next */
  cov_2h4ribtenw().f[1]++;
  const values =
  /* istanbul ignore next */
  (cov_2h4ribtenw().s[8]++, [traits.curiosity, traits.focus, traits.rhythm, traits.empathy, traits.creativity, traits.energy, traits.harmony, traits.wisdom]);
  const N =
  /* istanbul ignore next */
  (cov_2h4ribtenw().s[9]++, values.length);
  const center =
  /* istanbul ignore next */
  (cov_2h4ribtenw().s[10]++, size / 2);
  const radius =
  /* istanbul ignore next */
  (cov_2h4ribtenw().s[11]++, size / 2 - 18);
  // Points du polygone
  const points =
  /* istanbul ignore next */
  (cov_2h4ribtenw().s[12]++, values.map((v, i) => {
    /* istanbul ignore next */
    cov_2h4ribtenw().f[2]++;
    const angle =
    /* istanbul ignore next */
    (cov_2h4ribtenw().s[13]++, Math.PI * 2 * i / N - Math.PI / 2);
    const r =
    /* istanbul ignore next */
    (cov_2h4ribtenw().s[14]++, radius * v);
    /* istanbul ignore next */
    cov_2h4ribtenw().s[15]++;
    return [center + Math.cos(angle) * r, center + Math.sin(angle) * r];
  }));
  const polygon =
  /* istanbul ignore next */
  (cov_2h4ribtenw().s[16]++, points.map(p => {
    /* istanbul ignore next */
    cov_2h4ribtenw().f[3]++;
    cov_2h4ribtenw().s[17]++;
    return p.join(',');
  }).join(' '));
  /* istanbul ignore next */
  cov_2h4ribtenw().s[18]++;
  return (0, jsx_runtime_1.jsx)("div", {
    style: {
      display: 'inline-block',
      position: 'relative'
    },
    children: (0, jsx_runtime_1.jsxs)("svg", {
      width: size,
      height: size,
      children: [values.map((_, i) => {
        /* istanbul ignore next */
        cov_2h4ribtenw().f[4]++;
        const angle =
        /* istanbul ignore next */
        (cov_2h4ribtenw().s[19]++, Math.PI * 2 * i / N - Math.PI / 2);
        /* istanbul ignore next */
        cov_2h4ribtenw().s[20]++;
        return (0, jsx_runtime_1.jsx)("line", {
          x1: center,
          y1: center,
          x2: center + Math.cos(angle) * radius,
          y2: center + Math.sin(angle) * radius,
          stroke: "#444",
          strokeWidth: 1
        }, i);
      }), (0, jsx_runtime_1.jsx)("polygon", {
        points: polygon,
        fill: color,
        fillOpacity: 0.18,
        stroke: color,
        strokeWidth: 2.5,
        style: {
          transition: 'all 0.7s cubic-bezier(.4,2,.3,1)'
        }
      }), labels.map((label, i) => {
        /* istanbul ignore next */
        cov_2h4ribtenw().f[5]++;
        const angle =
        /* istanbul ignore next */
        (cov_2h4ribtenw().s[21]++, Math.PI * 2 * i / N - Math.PI / 2);
        const x =
        /* istanbul ignore next */
        (cov_2h4ribtenw().s[22]++, center + Math.cos(angle) * (radius + 14));
        const y =
        /* istanbul ignore next */
        (cov_2h4ribtenw().s[23]++, center + Math.sin(angle) * (radius + 14));
        /* istanbul ignore next */
        cov_2h4ribtenw().s[24]++;
        return (0, jsx_runtime_1.jsx)("text", {
          x: x,
          y: y,
          textAnchor: "middle",
          dominantBaseline: "central",
          fontSize: size * 0.11,
          fill: "#aaa",
          style: {
            pointerEvents: 'none',
            userSelect: 'none'
          },
          children: label
        }, label);
      })]
    })
  });
};
/* istanbul ignore next */
cov_2h4ribtenw().s[25]++;
exports.TraitsRadarChart = TraitsRadarChart;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,