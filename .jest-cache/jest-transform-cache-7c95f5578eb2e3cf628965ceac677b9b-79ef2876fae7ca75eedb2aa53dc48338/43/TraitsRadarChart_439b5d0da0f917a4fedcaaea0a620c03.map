{"version":3,"names":["cov_2h4ribtenw","actualCoverage","react_1","s","__importDefault","require","DEFAULT_LABELS","TraitsRadarChart","traits","labels","b","size","color","f","values","curiosity","focus","rhythm","empathy","creativity","energy","harmony","wisdom","N","length","center","radius","points","map","v","i","angle","Math","PI","r","cos","sin","polygon","p","join","jsx_runtime_1","jsx","style","display","position","children","jsxs","width","height","_","x1","y1","x2","y2","stroke","strokeWidth","fill","fillOpacity","transition","label","x","y","textAnchor","dominantBaseline","fontSize","pointerEvents","userSelect","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/TraitsRadarChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport { OrganismTraits } from '../types';\r\n\r\n/**\r\n * TraitsRadarChart - Radar chart SVG pour visualiser les traits de l'organisme\r\n * Props :\r\n *   - traits : valeurs des traits (OrganismTraits)\r\n *   - labels : labels personnalisés (optionnel)\r\n *   - size : taille du chart (défaut 180)\r\n *   - color : couleur principale (défaut #00e0ff)\r\n */\r\ninterface TraitsRadarChartProps {\r\n  traits: OrganismTraits;\r\n  labels?: string[];\r\n  size?: number;\r\n  color?: string;\r\n}\r\n\r\nconst DEFAULT_LABELS = [\r\n  'Curiosité', 'Focus', 'Rythme', 'Empathie',\r\n  'Créativité', 'Énergie', 'Harmonie', 'Sagesse'\r\n];\r\n\r\nexport const TraitsRadarChart: React.FC<TraitsRadarChartProps> = ({\r\n  traits,\r\n  labels = DEFAULT_LABELS,\r\n  size = 180,\r\n  color = '#00e0ff'\r\n}) => {\r\n  const values = [\r\n    traits.curiosity,\r\n    traits.focus,\r\n    traits.rhythm,\r\n    traits.empathy,\r\n    traits.creativity,\r\n    traits.energy,\r\n    traits.harmony,\r\n    traits.wisdom\r\n  ];\r\n  const N = values.length;\r\n  const center = size / 2;\r\n  const radius = size / 2 - 18;\r\n  // Points du polygone\r\n  const points = values.map((v, i) => {\r\n    const angle = (Math.PI * 2 * i) / N - Math.PI / 2;\r\n    const r = radius * v;\r\n    return [center + Math.cos(angle) * r, center + Math.sin(angle) * r];\r\n  });\r\n  const polygon = points.map(p => p.join(',')).join(' ');\r\n\r\n  return (\r\n    <div style={{ display: 'inline-block', position: 'relative' }}>\r\n      <svg width={size} height={size}>\r\n        {/* Axes */}\r\n        {values.map((_, i) => {\r\n          const angle = (Math.PI * 2 * i) / N - Math.PI / 2;\r\n          return (\r\n            <line\r\n              key={i}\r\n              x1={center}\r\n              y1={center}\r\n              x2={center + Math.cos(angle) * radius}\r\n              y2={center + Math.sin(angle) * radius}\r\n              stroke=\"#444\"\r\n              strokeWidth={1}\r\n            />\r\n          );\r\n        })}\r\n        {/* Polygone */}\r\n        <polygon\r\n          points={polygon}\r\n          fill={color}\r\n          fillOpacity={0.18}\r\n          stroke={color}\r\n          strokeWidth={2.5}\r\n          style={{ transition: 'all 0.7s cubic-bezier(.4,2,.3,1)' }}\r\n        />\r\n        {/* Labels */}\r\n        {labels.map((label, i) => {\r\n          const angle = (Math.PI * 2 * i) / N - Math.PI / 2;\r\n          const x = center + Math.cos(angle) * (radius + 14);\r\n          const y = center + Math.sin(angle) * (radius + 14);\r\n          return (\r\n            <text\r\n              key={label}\r\n              x={x}\r\n              y={y}\r\n              textAnchor=\"middle\"\r\n              dominantBaseline=\"central\"\r\n              fontSize={size * 0.11}\r\n              fill=\"#aaa\"\r\n              style={{ pointerEvents: 'none', userSelect: 'none' }}\r\n            >\r\n              {label}\r\n            </text>\r\n          );\r\n        })}\r\n      </svg>\r\n    </div>\r\n  );\r\n}; "],"mappingscAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA/BJ,MAAAE,OAAA;AAAA;AAAA,CAAAF,cAAA,GAAAG,CAAA,OAAAC,eAAA,CAAAC,OAAA;AAkBA,MAAMC,cAAc;AAAA;AAAA,CAAAN,cAAA,GAAAG,CAAA,OAAG,CACrB,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAC1C,YAAY,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,CAC/C;AAAC;AAAAH,cAAA,GAAAG,CAAA;AAEK,MAAMI,gBAAgB,GAAoCA,CAAC;EAChEC,MAAM;EACNC,MAAM;EAAA;EAAA,CAAAT,cAAA,GAAAU,CAAA,UAAGJ,cAAc;EACvBK,IAAI;EAAA;EAAA,CAAAX,cAAA,GAAAU,CAAA,UAAG,GAAG;EACVE,KAAK;EAAA;EAAA,CAAAZ,cAAA,GAAAU,CAAA,UAAG,SAAS;AAAA,CAClB,KAAI;EAAA;EAAAV,cAAA,GAAAa,CAAA;EACH,MAAMC,MAAM;EAAA;EAAA,CAAAd,cAAA,GAAAG,CAAA,OAAG,CACbK,MAAM,CAACO,SAAS,EAChBP,MAAM,CAACQ,KAAK,EACZR,MAAM,CAACS,MAAM,EACbT,MAAM,CAACU,OAAO,EACdV,MAAM,CAACW,UAAU,EACjBX,MAAM,CAACY,MAAM,EACbZ,MAAM,CAACa,OAAO,EACdb,MAAM,CAACc,MAAM,CACd;EACD,MAAMC,CAAC;EAAA;EAAA,CAAAvB,cAAA,GAAAG,CAAA,OAAGW,MAAM,CAACU,MAAM;EACvB,MAAMC,MAAM;EAAA;EAAA,CAAAzB,cAAA,GAAAG,CAAA,QAAGQ,IAAI,GAAG,CAAC;EACvB,MAAMe,MAAM;EAAA;EAAA,CAAA1B,cAAA,GAAAG,CAAA,QAAGQ,IAAI,GAAG,CAAC,GAAG,EAAE;EAC5B;EACA,MAAMgB,MAAM;EAAA;EAAA,CAAA3B,cAAA,GAAAG,CAAA,QAAGW,MAAM,CAACc,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;IAAA;IAAA9B,cAAA,GAAAa,CAAA;IACjC,MAAMkB,KAAK;IAAA;IAAA,CAAA/B,cAAA,GAAAG,CAAA,QAAI6B,IAAI,CAACC,EAAE,GAAG,CAAC,GAAGH,CAAC,GAAIP,CAAC,GAAGS,IAAI,CAACC,EAAE,GAAG,CAAC;IACjD,MAAMC,CAAC;IAAA;IAAA,CAAAlC,cAAA,GAAAG,CAAA,QAAGuB,MAAM,GAAGG,CAAC;IAAC;IAAA7B,cAAA,GAAAG,CAAA;IACrB,OAAO,CAACsB,MAAM,GAAGO,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC,GAAGG,CAAC,EAAET,MAAM,GAAGO,IAAI,CAACI,GAAG,CAACL,KAAK,CAAC,GAAGG,CAAC,CAAC;EACrE,CAAC,CAAC;EACF,MAAMG,OAAO;EAAA;EAAA,CAAArC,cAAA,GAAAG,CAAA,QAAGwB,MAAM,CAACC,GAAG,CAACU,CAAC,IAAI;IAAA;IAAAtC,cAAA,GAAAa,CAAA;IAAAb,cAAA,GAAAG,CAAA;IAAA,OAAAmC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAAD,CAAC,CAAC,CAACA,IAAI,CAAC,GAAG,CAAC;EAAC;EAAAvC,cAAA,GAAAG,CAAA;EAEvD,OACE,IAAAqC,aAAA,CAAAC,GAAA;IAAKC,KAAK,EAAE;MAAEC,OAAO,EAAE,cAAc;MAAEC,QAAQ,EAAE;IAAU,CAAE;IAAAC,QAAA,EAC3D,IAAAL,aAAA,CAAAM,IAAA;MAAKC,KAAK,EAAEpC,IAAI;MAAEqC,MAAM,EAAErC,IAAI;MAAAkC,QAAA,GAE3B/B,MAAM,CAACc,GAAG,CAAC,CAACqB,CAAC,EAAEnB,CAAC,KAAI;QAAA;QAAA9B,cAAA,GAAAa,CAAA;QACnB,MAAMkB,KAAK;QAAA;QAAA,CAAA/B,cAAA,GAAAG,CAAA,QAAI6B,IAAI,CAACC,EAAE,GAAG,CAAC,GAAGH,CAAC,GAAIP,CAAC,GAAGS,IAAI,CAACC,EAAE,GAAG,CAAC;QAAC;QAAAjC,cAAA,GAAAG,CAAA;QAClD,OACE,IAAAqC,aAAA,CAAAC,GAAA;UAEES,EAAE,EAAEzB,MAAM;UACV0B,EAAE,EAAE1B,MAAM;UACV2B,EAAE,EAAE3B,MAAM,GAAGO,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC,GAAGL,MAAM;UACrC2B,EAAE,EAAE5B,MAAM,GAAGO,IAAI,CAACI,GAAG,CAACL,KAAK,CAAC,GAAGL,MAAM;UACrC4B,MAAM,EAAC,MAAM;UACbC,WAAW,EAAE;QAAC,GANTzB,CAAC,CAON;MAEN,CAAC,CAAC,EAEF,IAAAU,aAAA,CAAAC,GAAA;QACEd,MAAM,EAAEU,OAAO;QACfmB,IAAI,EAAE5C,KAAK;QACX6C,WAAW,EAAE,IAAI;QACjBH,MAAM,EAAE1C,KAAK;QACb2C,WAAW,EAAE,GAAG;QAChBb,KAAK,EAAE;UAAEgB,UAAU,EAAE;QAAkC;MAAE,EACzD,EAEDjD,MAAM,CAACmB,GAAG,CAAC,CAAC+B,KAAK,EAAE7B,CAAC,KAAI;QAAA;QAAA9B,cAAA,GAAAa,CAAA;QACvB,MAAMkB,KAAK;QAAA;QAAA,CAAA/B,cAAA,GAAAG,CAAA,QAAI6B,IAAI,CAACC,EAAE,GAAG,CAAC,GAAGH,CAAC,GAAIP,CAAC,GAAGS,IAAI,CAACC,EAAE,GAAG,CAAC;QACjD,MAAM2B,CAAC;QAAA;QAAA,CAAA5D,cAAA,GAAAG,CAAA,QAAGsB,MAAM,GAAGO,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC,IAAIL,MAAM,GAAG,EAAE,CAAC;QAClD,MAAMmC,CAAC;QAAA;QAAA,CAAA7D,cAAA,GAAAG,CAAA,QAAGsB,MAAM,GAAGO,IAAI,CAACI,GAAG,CAACL,KAAK,CAAC,IAAIL,MAAM,GAAG,EAAE,CAAC;QAAC;QAAA1B,cAAA,GAAAG,CAAA;QACnD,OACE,IAAAqC,aAAA,CAAAC,GAAA;UAEEmB,CAAC,EAAEA,CAAC;UACJC,CAAC,EAAEA,CAAC;UACJC,UAAU,EAAC,QAAQ;UACnBC,gBAAgB,EAAC,SAAS;UAC1BC,QAAQ,EAAErD,IAAI,GAAG,IAAI;UACrB6C,IAAI,EAAC,MAAM;UACXd,KAAK,EAAE;YAAEuB,aAAa,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAM,CAAE;UAAArB,QAAA,EAEnDc;QAAK,GATDA,KAAK,CAUL;MAEX,CAAC,CAAC;IAAA;EACE,EACF;AAEV,CAAC;AAAC;AAAA3D,cAAA,GAAAG,CAAA;AA7EWgE,OAAA,CAAA5D,gBAAgB,GAAAA,gBAAA","ignoreList":[]}