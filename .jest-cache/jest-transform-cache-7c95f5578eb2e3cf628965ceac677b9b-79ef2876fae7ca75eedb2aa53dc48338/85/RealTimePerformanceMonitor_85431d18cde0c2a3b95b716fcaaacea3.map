{"version":3,"names":["cov_1n02ebmhdc","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","RealTimePerformanceMonitor","constructor","performanceObserver","isMonitoring","budget","maxMemoryUsage","maxCPUUsage","maxFrameTime","maxNetworkLatency","minFrameRate","metrics","initializeMetrics","frameRateTracker","FrameRateTracker","setupPerformanceObserver","memory","used","total","limit","cpu","usage","loadAverage","network","latency","bandwidth","webgl","frameRate","frameTime","droppedFrames","timing","domContentLoaded","loadComplete","navigationStart","vitals","lcp","fid","cls","fcp","ttfb","timestamp","Date","now","PerformanceObserver","console","warn","list","entry","getEntries","processPerformanceEntry","entryTypes","forEach","observe","e","entryType","updateNavigationMetrics","updatePaintMetrics","startTime","processingStart","value","domContentLoadedEventEnd","loadEventEnd","responseStart","requestStart","collectMemoryMetrics","performance","memInfo","usedJSHeapSize","totalJSHeapSize","jsHeapSizeLimit","estimateMemoryUsage","estimate","document","querySelectorAll","length","Object","keys","window","measureCPUUsage","iterations","targetTime","Math","random","actualTime","efficiency","max","min","measureNetworkLatency","response","fetch","method","cache","collectMetrics","Promise","all","then","getMetrics","checkPerformanceBudget","violations","push","toFixed","passed","startMonitoring","setInterval","budgetCheck","stopMonitoring","stop","disconnect","getCurrentMetrics","getWebVitals","exports","frameCount","lastTime","isTracking","animationFrameId","measureFrameRate","cancelAnimationFrame","requestAnimationFrame","deltaTime"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/RealTimePerformanceMonitor.ts"],"sourcesContent":["/**\r\n * RealTimePerformanceMonitor - Monitoring de performance en temps réel\r\n * Remplace les simulations par des métriques réelles\r\n */\r\n\r\ninterface WebVitalsMetrics {\r\n  lcp: number; // Largest Contentful Paint\r\n  fid: number; // First Input Delay\r\n  cls: number; // Cumulative Layout Shift\r\n  fcp: number; // First Contentful Paint\r\n  ttfb: number; // Time To First Byte\r\n  timestamp: number;\r\n}\r\n\r\ninterface PerformanceMetrics {\r\n  memory: {\r\n    used: number;\r\n    total: number;\r\n    limit: number;\r\n  };\r\n  cpu: {\r\n    usage: number;\r\n    loadAverage: number[];\r\n  };\r\n  network: {\r\n    latency: number;\r\n    bandwidth: number;\r\n  };\r\n  webgl: {\r\n    frameRate: number;\r\n    frameTime: number;\r\n    droppedFrames: number;\r\n  };\r\n  timing: {\r\n    domContentLoaded: number;\r\n    loadComplete: number;\r\n    navigationStart: number;\r\n  };\r\n  vitals: WebVitalsMetrics;\r\n}\r\n\r\ninterface PerformanceBudget {\r\n  maxMemoryUsage: number; // 50MB\r\n  maxCPUUsage: number; // 10%\r\n  maxFrameTime: number; // 16.67ms (60 FPS)\r\n  maxNetworkLatency: number; // 100ms\r\n  minFrameRate: number; // 58 FPS\r\n}\r\n\r\nexport class RealTimePerformanceMonitor {\r\n  private performanceObserver: PerformanceObserver | null = null;\r\n  private metrics: PerformanceMetrics;\r\n  private budget: PerformanceBudget;\r\n  private isMonitoring = false;\r\n  private frameRateTracker: FrameRateTracker;\r\n\r\n  constructor() {\r\n    this.budget = {\r\n      maxMemoryUsage: 50 * 1024 * 1024, // 50MB\r\n      maxCPUUsage: 10, // 10%\r\n      maxFrameTime: 16.67, // 60 FPS\r\n      maxNetworkLatency: 100, // 100ms\r\n      minFrameRate: 58 // FPS\r\n    };\r\n\r\n    this.metrics = this.initializeMetrics();\r\n    this.frameRateTracker = new FrameRateTracker();\r\n    this.setupPerformanceObserver();\r\n  }\r\n\r\n  private initializeMetrics(): PerformanceMetrics {\r\n    return {\r\n      memory: { used: 0, total: 0, limit: 0 },\r\n      cpu: { usage: 0, loadAverage: [] },\r\n      network: { latency: 0, bandwidth: 0 },\r\n      webgl: { frameRate: 0, frameTime: 0, droppedFrames: 0 },\r\n      timing: { domContentLoaded: 0, loadComplete: 0, navigationStart: 0 },\r\n      vitals: { lcp: 0, fid: 0, cls: 0, fcp: 0, ttfb: 0, timestamp: Date.now() }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Configuration de l'observateur de performance\r\n   */\r\n  private setupPerformanceObserver(): void {\r\n    if (typeof PerformanceObserver === 'undefined') {\r\n      console.warn('PerformanceObserver non disponible');\r\n      return;\r\n    }\r\n\r\n    this.performanceObserver = new PerformanceObserver((list) => {\r\n      for (const entry of list.getEntries()) {\r\n        this.processPerformanceEntry(entry);\r\n      }\r\n    });\r\n\r\n    // Observer les différents types d'entrées de performance\r\n    const entryTypes = [\r\n      'measure',\r\n      'navigation', \r\n      'paint',\r\n      'largest-contentful-paint',\r\n      'first-input',\r\n      'layout-shift'\r\n    ];\r\n\r\n    entryTypes.forEach(type => {\r\n      try {\r\n        this.performanceObserver!.observe({ entryTypes: [type] });\r\n      } catch (e) {\r\n        console.warn(`Type d'entrée ${type} non supporté:`, e);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Traitement des entrées de performance\r\n   */\r\n  private processPerformanceEntry(entry: PerformanceEntry): void {\r\n    switch (entry.entryType) {\r\n      case 'navigation':\r\n        this.updateNavigationMetrics(entry as PerformanceNavigationTiming);\r\n        break;\r\n      case 'paint':\r\n        this.updatePaintMetrics(entry as PerformancePaintTiming);\r\n        break;\r\n      case 'largest-contentful-paint':\r\n        this.metrics.vitals.lcp = entry.startTime;\r\n        break;\r\n      case 'first-input':\r\n        this.metrics.vitals.fid = (entry as any).processingStart - entry.startTime;\r\n        break;\r\n      case 'layout-shift':\r\n        this.metrics.vitals.cls += (entry as any).value || 0;\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mise à jour des métriques de navigation\r\n   */\r\n  private updateNavigationMetrics(entry: PerformanceNavigationTiming): void {\r\n    this.metrics.timing = {\r\n      navigationStart: entry.navigationStart,\r\n      domContentLoaded: entry.domContentLoadedEventEnd - entry.navigationStart,\r\n      loadComplete: entry.loadEventEnd - entry.navigationStart\r\n    };\r\n\r\n    this.metrics.vitals.ttfb = entry.responseStart - entry.requestStart;\r\n  }\r\n\r\n  /**\r\n   * Mise à jour des métriques de paint\r\n   */\r\n  private updatePaintMetrics(entry: PerformancePaintTiming): void {\r\n    if (entry.name === 'first-contentful-paint') {\r\n      this.metrics.vitals.fcp = entry.startTime;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collecte des métriques mémoire réelles\r\n   */\r\n  private async collectMemoryMetrics(): Promise<void> {\r\n    if ('memory' in performance) {\r\n      const memInfo = (performance as any).memory;\r\n      this.metrics.memory = {\r\n        used: memInfo.usedJSHeapSize,\r\n        total: memInfo.totalJSHeapSize,\r\n        limit: memInfo.jsHeapSizeLimit\r\n      };\r\n    } else {\r\n      // Estimation basée sur les objets JavaScript\r\n      this.metrics.memory = {\r\n        used: this.estimateMemoryUsage(),\r\n        total: 0,\r\n        limit: 0\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Estimation de l'utilisation mémoire\r\n   */\r\n  private estimateMemoryUsage(): number {\r\n    // Estimation approximative basée sur les objets globaux\r\n    let estimate = 0;\r\n    \r\n    try {\r\n      // Taille approximative des objets DOM\r\n      estimate += document.querySelectorAll('*').length * 1000; // ~1KB par élément\r\n      \r\n      // Estimation des variables JavaScript\r\n      estimate += Object.keys(window).length * 100;\r\n      \r\n      return estimate;\r\n    } catch {\r\n      return 1024 * 1024; // 1MB par défaut\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mesure de l'utilisation CPU (approximative)\r\n   */\r\n  private async measureCPUUsage(): Promise<number> {\r\n    const start = performance.now();\r\n    \r\n    // Tâche intensive pour mesurer la latence CPU\r\n    let iterations = 0;\r\n    const targetTime = 10; // 10ms\r\n    \r\n    while (performance.now() - start < targetTime) {\r\n      iterations++;\r\n      Math.random(); // Opération simple\r\n    }\r\n    \r\n    const actualTime = performance.now() - start;\r\n    const efficiency = targetTime / actualTime;\r\n    \r\n    // Conversion en pourcentage d'utilisation (inverse de l'efficacité)\r\n    return Math.max(0, Math.min(100, (1 - efficiency) * 100));\r\n  }\r\n\r\n  /**\r\n   * Mesure de la latence réseau\r\n   */\r\n  private async measureNetworkLatency(): Promise<number> {\r\n    const start = performance.now();\r\n    \r\n    try {\r\n      // Ping vers une ressource locale ou API\r\n      const response = await fetch('data:text/plain,ping', { \r\n        method: 'GET',\r\n        cache: 'no-cache'\r\n      });\r\n      \r\n      return performance.now() - start;\r\n    } catch {\r\n      return 999; // Valeur élevée en cas d'erreur\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collecte complète des métriques\r\n   */\r\n  async collectMetrics(): Promise<PerformanceMetrics> {\r\n    await Promise.all([\r\n      this.collectMemoryMetrics(),\r\n      this.measureCPUUsage().then(cpu => { this.metrics.cpu.usage = cpu; }),\r\n      this.measureNetworkLatency().then(latency => { this.metrics.network.latency = latency; })\r\n    ]);\r\n\r\n    // Mise à jour des métriques WebGL si disponibles\r\n    this.metrics.webgl = this.frameRateTracker.getMetrics();\r\n    \r\n    // Mise à jour du timestamp\r\n    this.metrics.vitals.timestamp = Date.now();\r\n    \r\n    return { ...this.metrics };\r\n  }\r\n\r\n  /**\r\n   * Vérification du budget de performance\r\n   */\r\n  checkPerformanceBudget(): { passed: boolean; violations: string[] } {\r\n    const violations: string[] = [];\r\n\r\n    if (this.metrics.memory.used > this.budget.maxMemoryUsage) {\r\n      violations.push(`Mémoire: ${(this.metrics.memory.used / 1024 / 1024).toFixed(1)}MB > ${this.budget.maxMemoryUsage / 1024 / 1024}MB`);\r\n    }\r\n\r\n    if (this.metrics.cpu.usage > this.budget.maxCPUUsage) {\r\n      violations.push(`CPU: ${this.metrics.cpu.usage.toFixed(1)}% > ${this.budget.maxCPUUsage}%`);\r\n    }\r\n\r\n    if (this.metrics.webgl.frameTime > this.budget.maxFrameTime) {\r\n      violations.push(`Frame Time: ${this.metrics.webgl.frameTime.toFixed(1)}ms > ${this.budget.maxFrameTime}ms`);\r\n    }\r\n\r\n    if (this.metrics.network.latency > this.budget.maxNetworkLatency) {\r\n      violations.push(`Latence: ${this.metrics.network.latency.toFixed(1)}ms > ${this.budget.maxNetworkLatency}ms`);\r\n    }\r\n\r\n    if (this.metrics.webgl.frameRate < this.budget.minFrameRate) {\r\n      violations.push(`FPS: ${this.metrics.webgl.frameRate.toFixed(1)} < ${this.budget.minFrameRate}`);\r\n    }\r\n\r\n    return {\r\n      passed: violations.length === 0,\r\n      violations\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Démarrage du monitoring continu\r\n   */\r\n  startMonitoring(): void {\r\n    if (this.isMonitoring) return;\r\n\r\n    this.isMonitoring = true;\r\n    this.frameRateTracker.start();\r\n\r\n    // Collecte périodique des métriques\r\n    setInterval(async () => {\r\n      if (this.isMonitoring) {\r\n        await this.collectMetrics();\r\n        \r\n        // Vérification du budget\r\n        const budgetCheck = this.checkPerformanceBudget();\r\n        if (!budgetCheck.passed) {\r\n          console.warn('Budget de performance dépassé:', budgetCheck.violations);\r\n        }\r\n      }\r\n    }, 5000); // Toutes les 5 secondes\r\n  }\r\n\r\n  /**\r\n   * Arrêt du monitoring\r\n   */\r\n  stopMonitoring(): void {\r\n    this.isMonitoring = false;\r\n    this.frameRateTracker.stop();\r\n    \r\n    if (this.performanceObserver) {\r\n      this.performanceObserver.disconnect();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtient les métriques actuelles\r\n   */\r\n  getCurrentMetrics(): PerformanceMetrics {\r\n    return { ...this.metrics };\r\n  }\r\n\r\n  /**\r\n   * Obtient les Web Vitals\r\n   */\r\n  getWebVitals(): WebVitalsMetrics {\r\n    return { ...this.metrics.vitals };\r\n  }\r\n}\r\n\r\n/**\r\n * Tracker de frame rate pour WebGL\r\n */\r\nclass FrameRateTracker {\r\n  private frameCount = 0;\r\n  private lastTime = 0;\r\n  private frameRate = 0;\r\n  private frameTime = 0;\r\n  private droppedFrames = 0;\r\n  private isTracking = false;\r\n  private animationFrameId: number | null = null;\r\n\r\n  start(): void {\r\n    if (this.isTracking) return;\r\n    \r\n    this.isTracking = true;\r\n    this.lastTime = performance.now();\r\n    this.frameCount = 0;\r\n    this.measureFrameRate();\r\n  }\r\n\r\n  stop(): void {\r\n    this.isTracking = false;\r\n    \r\n    if (this.animationFrameId) {\r\n      cancelAnimationFrame(this.animationFrameId);\r\n      this.animationFrameId = null;\r\n    }\r\n  }\r\n\r\n  private measureFrameRate(): void {\r\n    if (!this.isTracking) return;\r\n\r\n    this.animationFrameId = requestAnimationFrame((timestamp) => {\r\n      this.frameCount++;\r\n      \r\n      const deltaTime = timestamp - this.lastTime;\r\n      this.frameTime = deltaTime;\r\n      \r\n      // Calcul du frame rate toutes les secondes\r\n      if (deltaTime >= 1000) {\r\n        this.frameRate = (this.frameCount * 1000) / deltaTime;\r\n        \r\n        // Détection des frames perdues (< 58 FPS)\r\n        if (this.frameRate < 58) {\r\n          this.droppedFrames += 60 - this.frameRate;\r\n        }\r\n        \r\n        this.frameCount = 0;\r\n        this.lastTime = timestamp;\r\n      }\r\n      \r\n      this.measureFrameRate();\r\n    });\r\n  }\r\n\r\n  getMetrics(): { frameRate: number; frameTime: number; droppedFrames: number } {\r\n    return {\r\n      frameRate: this.frameRate,\r\n      frameTime: this.frameTime,\r\n      droppedFrames: this.droppedFrames\r\n    };\r\n  }\r\n}\r\n\r\nexport { PerformanceMetrics, WebVitalsMetrics, PerformanceBudget };"],"mappings":"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","ignoreList":[]}