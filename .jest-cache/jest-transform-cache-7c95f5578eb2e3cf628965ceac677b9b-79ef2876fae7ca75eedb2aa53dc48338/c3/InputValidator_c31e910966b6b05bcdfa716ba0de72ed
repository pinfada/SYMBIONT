88f0d7569440fe91a00159311f4007b0
"use strict";

/* istanbul ignore next */
function cov_14u5qd5l88() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/InputValidator.ts";
  var hash = "d405a7228b3c997bcc14c2f19aa0b813b34ecd8d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/InputValidator.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 155
        }
      },
      "2": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 61
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 23
        }
      },
      "4": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 27
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "7": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "8": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "9": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 22
        }
      },
      "10": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 26,
          column: 44
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "12": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 58
        }
      },
      "13": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 33,
          column: 35
        }
      },
      "14": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 79
        }
      },
      "15": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 44,
          column: 38
        }
      },
      "16": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "17": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 25
        }
      },
      "19": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "20": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 86
        }
      },
      "21": {
        start: {
          line: 58,
          column: 26
        },
        end: {
          line: 58,
          column: 58
        }
      },
      "22": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "23": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 109
        }
      },
      "24": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "25": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 102
        }
      },
      "26": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 25
        }
      },
      "27": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "28": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 80
        }
      },
      "29": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 74,
          column: 60
        }
      },
      "30": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "31": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 82
        }
      },
      "32": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "33": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 106
        }
      },
      "34": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 39
        }
      },
      "35": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "36": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 95
        }
      },
      "37": {
        start: {
          line: 91,
          column: 25
        },
        end: {
          line: 91,
          column: 29
        }
      },
      "38": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "39": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 95
        }
      },
      "40": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 96,
          column: 91
        }
      },
      "41": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "42": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 86
        }
      },
      "43": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "44": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 107
        }
      },
      "45": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "46": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 114
        }
      },
      "47": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "48": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "49": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 105
        }
      },
      "50": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 66
        }
      },
      "51": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 119,
          column: 10
        }
      },
      "52": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "53": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 82
        }
      },
      "54": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "55": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "56": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 91
        }
      },
      "57": {
        start: {
          line: 135,
          column: 24
        },
        end: {
          line: 135,
          column: 57
        }
      },
      "58": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 66
        }
      },
      "59": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "60": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 92
        }
      },
      "61": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 25
        }
      },
      "62": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "63": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 89
        }
      },
      "64": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "65": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 155,
          column: 13
        }
      },
      "66": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 100
        }
      },
      "67": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "68": {
        start: {
          line: 158,
          column: 27
        },
        end: {
          line: 158,
          column: 49
        }
      },
      "69": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 52
        }
      },
      "70": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 26
        }
      },
      "71": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 81
        }
      },
      "72": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "73": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 77
        }
      },
      "74": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "75": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 75
        }
      },
      "76": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 34
        }
      },
      "77": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "78": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 93
        }
      },
      "79": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "80": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 91
        }
      },
      "81": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "82": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 121
        }
      },
      "83": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 39
        }
      },
      "84": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 200,
          column: 9
        }
      },
      "85": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 92
        }
      },
      "86": {
        start: {
          line: 201,
          column: 26
        },
        end: {
          line: 201,
          column: 28
        }
      },
      "87": {
        start: {
          line: 202,
          column: 26
        },
        end: {
          line: 202,
          column: 32
        }
      },
      "88": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "89": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 207,
          column: 13
        }
      },
      "90": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 205,
          column: 111
        }
      },
      "91": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 25
        }
      },
      "92": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "93": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 63
        }
      },
      "94": {
        start: {
          line: 212,
          column: 17
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "95": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 215,
          column: 17
        }
      },
      "96": {
        start: {
          line: 214,
          column: 20
        },
        end: {
          line: 214,
          column: 102
        }
      },
      "97": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 39
        }
      },
      "98": {
        start: {
          line: 218,
          column: 17
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "99": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 219,
          column: 39
        }
      },
      "100": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 95
        }
      },
      "101": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 25
        }
      },
      "102": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "103": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 104
        }
      },
      "104": {
        start: {
          line: 234,
          column: 22
        },
        end: {
          line: 234,
          column: 33
        }
      },
      "105": {
        start: {
          line: 235,
          column: 26
        },
        end: {
          line: 235,
          column: 28
        }
      },
      "106": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "107": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "108": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 90
        }
      },
      "109": {
        start: {
          line: 241,
          column: 32
        },
        end: {
          line: 241,
          column: 57
        }
      },
      "110": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 244,
          column: 13
        }
      },
      "111": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 87
        }
      },
      "112": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 42
        }
      },
      "113": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "114": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "115": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 123
        }
      },
      "116": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 58
        }
      },
      "117": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "118": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "119": {
        start: {
          line: 257,
          column: 16
        },
        end: {
          line: 257,
          column: 99
        }
      },
      "120": {
        start: {
          line: 259,
          column: 35
        },
        end: {
          line: 259,
          column: 65
        }
      },
      "121": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 262,
          column: 13
        }
      },
      "122": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 261,
          column: 95
        }
      },
      "123": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 48
        }
      },
      "124": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 25
        }
      },
      "125": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "126": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 80
        }
      },
      "127": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "128": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 294,
          column: 13
        }
      },
      "129": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 282,
          column: 17
        }
      },
      "130": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 281,
          column: 21
        }
      },
      "131": {
        start: {
          line: 280,
          column: 24
        },
        end: {
          line: 280,
          column: 112
        }
      },
      "132": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 293,
          column: 17
        }
      },
      "133": {
        start: {
          line: 285,
          column: 20
        },
        end: {
          line: 289,
          column: 21
        }
      },
      "134": {
        start: {
          line: 286,
          column: 24
        },
        end: {
          line: 288,
          column: 25
        }
      },
      "135": {
        start: {
          line: 287,
          column: 28
        },
        end: {
          line: 287,
          column: 115
        }
      },
      "136": {
        start: {
          line: 291,
          column: 21
        },
        end: {
          line: 293,
          column: 17
        }
      },
      "137": {
        start: {
          line: 292,
          column: 20
        },
        end: {
          line: 292,
          column: 70
        }
      },
      "138": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "139": {
        start: {
          line: 302,
          column: 26
        },
        end: {
          line: 302,
          column: 45
        }
      },
      "140": {
        start: {
          line: 303,
          column: 26
        },
        end: {
          line: 303,
          column: 36
        }
      },
      "141": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 30
        }
      },
      "142": {
        start: {
          line: 305,
          column: 29
        },
        end: {
          line: 305,
          column: 47
        }
      },
      "143": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 313,
          column: 13
        }
      },
      "144": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 311,
          column: 39
        }
      },
      "145": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 312,
          column: 29
        }
      },
      "146": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 24
        }
      },
      "147": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 113
        }
      },
      "148": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 25
        }
      },
      "149": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 325,
          column: 61
        }
      },
      "150": {
        start: {
          line: 332,
          column: 20
        },
        end: {
          line: 332,
          column: 30
        }
      },
      "151": {
        start: {
          line: 333,
          column: 20
        },
        end: {
          line: 333,
          column: 46
        }
      },
      "152": {
        start: {
          line: 335,
          column: 25
        },
        end: {
          line: 335,
          column: 66
        }
      },
      "153": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 344,
          column: 9
        }
      },
      "154": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 342,
          column: 35
        }
      },
      "155": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 25
        }
      },
      "156": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 42
        }
      },
      "157": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 20
        }
      },
      "158": {
        start: {
          line: 349,
          column: 25
        },
        end: {
          line: 349,
          column: 59
        }
      },
      "159": {
        start: {
          line: 351,
          column: 30
        },
        end: {
          line: 351,
          column: 86
        }
      },
      "160": {
        start: {
          line: 351,
          column: 59
        },
        end: {
          line: 351,
          column: 85
        }
      },
      "161": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 52
        }
      },
      "162": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 36
        }
      },
      "163": {
        start: {
          line: 356,
          column: 25
        },
        end: {
          line: 356,
          column: 59
        }
      },
      "164": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 27
        }
      },
      "165": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 47
        }
      },
      "166": {
        start: {
          line: 361,
          column: 0
        },
        end: {
          line: 361,
          column: 40
        }
      },
      "167": {
        start: {
          line: 362,
          column: 0
        },
        end: {
          line: 362,
          column: 58
        }
      },
      "168": {
        start: {
          line: 363,
          column: 0
        },
        end: {
          line: 363,
          column: 64
        }
      },
      "169": {
        start: {
          line: 364,
          column: 0
        },
        end: {
          line: 364,
          column: 94
        }
      },
      "170": {
        start: {
          line: 365,
          column: 0
        },
        end: {
          line: 365,
          column: 53
        }
      },
      "171": {
        start: {
          line: 366,
          column: 0
        },
        end: {
          line: 366,
          column: 56
        }
      },
      "172": {
        start: {
          line: 368,
          column: 0
        },
        end: {
          line: 379,
          column: 2
        }
      },
      "173": {
        start: {
          line: 381,
          column: 0
        },
        end: {
          line: 392,
          column: 2
        }
      },
      "174": {
        start: {
          line: 394,
          column: 0
        },
        end: {
          line: 404,
          column: 2
        }
      },
      "175": {
        start: {
          line: 405,
          column: 0
        },
        end: {
          line: 405,
          column: 42
        }
      },
      "176": {
        start: {
          line: 407,
          column: 0
        },
        end: {
          line: 407,
          column: 52
        }
      },
      "177": {
        start: {
          line: 408,
          column: 0
        },
        end: {
          line: 408,
          column: 53
        }
      },
      "178": {
        start: {
          line: 409,
          column: 0
        },
        end: {
          line: 409,
          column: 51
        }
      },
      "179": {
        start: {
          line: 410,
          column: 0
        },
        end: {
          line: 410,
          column: 67
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 39
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 54
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 38
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 54
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 32
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 70
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 38
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 87
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 34
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 124
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        loc: {
          start: {
            line: 147,
            column: 36
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 147
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 30
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 170
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 40
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 182
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 52
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 197
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 48
          },
          end: {
            line: 266,
            column: 5
          }
        },
        line: 230
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        loc: {
          start: {
            line: 270,
            column: 54
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 270
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        loc: {
          start: {
            line: 300,
            column: 64
          },
          end: {
            line: 320,
            column: 5
          }
        },
        line: 300
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        },
        loc: {
          start: {
            line: 324,
            column: 31
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 324
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 330,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        loc: {
          start: {
            line: 330,
            column: 78
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 330
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        },
        loc: {
          start: {
            line: 348,
            column: 48
          },
          end: {
            line: 354,
            column: 5
          }
        },
        line: 348
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 351,
            column: 46
          },
          end: {
            line: 351,
            column: 47
          }
        },
        loc: {
          start: {
            line: 351,
            column: 59
          },
          end: {
            line: 351,
            column: 85
          }
        },
        line: 351
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 355,
            column: 4
          },
          end: {
            line: 355,
            column: 5
          }
        },
        loc: {
          start: {
            line: 355,
            column: 40
          },
          end: {
            line: 359,
            column: 5
          }
        },
        line: 355
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 36
          },
          end: {
            line: 22,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 22,
            column: 48
          },
          end: {
            line: 22,
            column: 52
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 26
          }
        }, {
          start: {
            line: 23,
            column: 30
          },
          end: {
            line: 23,
            column: 49
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "5": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "9": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "10": {
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 79,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 79,
            column: 45
          }
        }, {
          start: {
            line: 79,
            column: 49
          },
          end: {
            line: 79,
            column: 79
          }
        }],
        line: 79
      },
      "11": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "12": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 17
          }
        }, {
          start: {
            line: 88,
            column: 21
          },
          end: {
            line: 88,
            column: 45
          }
        }],
        line: 88
      },
      "13": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "14": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "15": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "16": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "17": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 104,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 104,
            column: 33
          }
        }, {
          start: {
            line: 104,
            column: 37
          },
          end: {
            line: 104,
            column: 58
          }
        }],
        line: 104
      },
      "18": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "19": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "20": {
        loc: {
          start: {
            line: 118,
            column: 20
          },
          end: {
            line: 118,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 20
          },
          end: {
            line: 118,
            column: 26
          }
        }, {
          start: {
            line: 118,
            column: 30
          },
          end: {
            line: 118,
            column: 32
          }
        }],
        line: 118
      },
      "21": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "22": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "23": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "24": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "25": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "26": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "27": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "28": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "29": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "30": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "31": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 33
          }
        }, {
          start: {
            line: 189,
            column: 37
          },
          end: {
            line: 189,
            column: 59
          }
        }],
        line: 189
      },
      "32": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "33": {
        loc: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 198,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 198,
            column: 19
          }
        }, {
          start: {
            line: 198,
            column: 23
          },
          end: {
            line: 198,
            column: 49
          }
        }],
        line: 198
      },
      "34": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 207,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "35": {
        loc: {
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        }, {
          start: {
            line: 212,
            column: 17
          },
          end: {
            line: 223,
            column: 13
          }
        }],
        line: 209
      },
      "36": {
        loc: {
          start: {
            line: 212,
            column: 17
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 17
          },
          end: {
            line: 223,
            column: 13
          }
        }, {
          start: {
            line: 218,
            column: 17
          },
          end: {
            line: 223,
            column: 13
          }
        }],
        line: 212
      },
      "37": {
        loc: {
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 215,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 215,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "38": {
        loc: {
          start: {
            line: 218,
            column: 17
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 17
          },
          end: {
            line: 223,
            column: 13
          }
        }, {
          start: {
            line: 221,
            column: 17
          },
          end: {
            line: 223,
            column: 13
          }
        }],
        line: 218
      },
      "39": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      },
      "40": {
        loc: {
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 12
          },
          end: {
            line: 231,
            column: 24
          }
        }, {
          start: {
            line: 231,
            column: 28
          },
          end: {
            line: 231,
            column: 59
          }
        }],
        line: 231
      },
      "41": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "42": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "43": {
        loc: {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "44": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "45": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "46": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 264,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "47": {
        loc: {
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "48": {
        loc: {
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 262,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 12
          },
          end: {
            line: 262,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "49": {
        loc: {
          start: {
            line: 270,
            column: 43
          },
          end: {
            line: 270,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 270,
            column: 51
          },
          end: {
            line: 270,
            column: 52
          }
        }],
        line: 270
      },
      "50": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "51": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "52": {
        loc: {
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 275,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 275,
            column: 15
          }
        }, {
          start: {
            line: 275,
            column: 19
          },
          end: {
            line: 275,
            column: 42
          }
        }],
        line: 275
      },
      "53": {
        loc: {
          start: {
            line: 279,
            column: 20
          },
          end: {
            line: 281,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 279,
            column: 20
          },
          end: {
            line: 281,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 279
      },
      "54": {
        loc: {
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 293,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 16
          },
          end: {
            line: 293,
            column: 17
          }
        }, {
          start: {
            line: 291,
            column: 21
          },
          end: {
            line: 293,
            column: 17
          }
        }],
        line: 284
      },
      "55": {
        loc: {
          start: {
            line: 286,
            column: 24
          },
          end: {
            line: 288,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 24
          },
          end: {
            line: 288,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "56": {
        loc: {
          start: {
            line: 291,
            column: 21
          },
          end: {
            line: 293,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 21
          },
          end: {
            line: 293,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "57": {
        loc: {
          start: {
            line: 291,
            column: 25
          },
          end: {
            line: 291,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 25
          },
          end: {
            line: 291,
            column: 50
          }
        }, {
          start: {
            line: 291,
            column: 54
          },
          end: {
            line: 291,
            column: 68
          }
        }],
        line: 291
      },
      "58": {
        loc: {
          start: {
            line: 300,
            column: 47
          },
          end: {
            line: 300,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 300,
            column: 59
          },
          end: {
            line: 300,
            column: 62
          }
        }],
        line: 300
      },
      "59": {
        loc: {
          start: {
            line: 306,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 12
          },
          end: {
            line: 313,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "60": {
        loc: {
          start: {
            line: 330,
            column: 41
          },
          end: {
            line: 330,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 330,
            column: 55
          },
          end: {
            line: 330,
            column: 58
          }
        }],
        line: 330
      },
      "61": {
        loc: {
          start: {
            line: 330,
            column: 60
          },
          end: {
            line: 330,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 330,
            column: 71
          },
          end: {
            line: 330,
            column: 76
          }
        }],
        line: 330
      },
      "62": {
        loc: {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "63": {
        loc: {
          start: {
            line: 349,
            column: 25
          },
          end: {
            line: 349,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 349,
            column: 25
          },
          end: {
            line: 349,
            column: 53
          }
        }, {
          start: {
            line: 349,
            column: 57
          },
          end: {
            line: 349,
            column: 59
          }
        }],
        line: 349
      },
      "64": {
        loc: {
          start: {
            line: 356,
            column: 25
          },
          end: {
            line: 356,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 25
          },
          end: {
            line: 356,
            column: 53
          }
        }, {
          start: {
            line: 356,
            column: 57
          },
          end: {
            line: 356,
            column: 59
          }
        }],
        line: 356
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0],
      "59": [0, 0],
      "60": [0],
      "61": [0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/InputValidator.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/InputValidator.ts"],
      sourcesContent: ["/**\r\n * Validation et sanitisation centralis\xE9e des inputs utilisateur\r\n * Am\xE9liore la s\xE9curit\xE9 selon les recommandations d'audit\r\n */\r\nimport { logger } from '@/shared/utils/secureLogger';\r\n\r\nexport class ValidationError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public field?: string,\r\n    public value?: unknown\r\n  ) {\r\n    super(message);\r\n    this.name = 'ValidationError';\r\n  }\r\n}\r\n\r\nexport class InputValidator {\r\n  private static readonly EMAIL_REGEX = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  private static readonly ORGANISM_NAME_REGEX = /^[a-zA-Z0-9\\s\\-_]{3,50}$/;\r\n  private static readonly UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\n  private static readonly SESSION_ID_REGEX = /^[a-f0-9]{32,}$/i;\r\n  private static readonly SAFE_PATH_REGEX = /^[a-zA-Z0-9._\\-\\/]+$/;\r\n  \r\n  // XSS patterns to detect and remove\r\n  private static readonly XSS_PATTERNS = [\r\n    /<script[^>]*>.*?<\\/script>/gi,\r\n    /<iframe[^>]*>.*?<\\/iframe>/gi,\r\n    /<object[^>]*>.*?<\\/object>/gi,\r\n    /<embed[^>]*>/gi,\r\n    /<form[^>]*>.*?<\\/form>/gi,\r\n    /javascript:/gi,\r\n    /vbscript:/gi,\r\n    /data:text\\/html/gi,\r\n    /on\\w+\\s*=/gi,\r\n    /<[^>]*\\s+on\\w+[^>]*>/gi\r\n  ];\r\n  \r\n  // NoSQL injection patterns\r\n  private static readonly NOSQL_PATTERNS = [\r\n    /\\$ne\\b/gi,\r\n    /\\$gt\\b/gi,\r\n    /\\$lt\\b/gi,\r\n    /\\$in\\b/gi,\r\n    /\\$nin\\b/gi,\r\n    /\\$regex\\b/gi,\r\n    /\\$where\\b/gi,\r\n    /\\$exists\\b/gi,\r\n    /\\$or\\b/gi,\r\n    /\\$and\\b/gi\r\n  ];\r\n  \r\n  // Path traversal patterns\r\n  private static readonly PATH_TRAVERSAL_PATTERNS = [\r\n    /\\.\\./g,\r\n    /%2e%2e/gi,\r\n    /%252e%252e/gi,\r\n    /\\.%2e/gi,\r\n    /%2e\\./gi,\r\n    /\\.\\\\\\./g,\r\n    /%5c\\.\\./gi,\r\n    /\\.\\.\\//g,\r\n    /\\.\\.%2f/gi\r\n  ];\r\n\r\n  /**\r\n   * Sanitise les inputs de base en supprimant les caract\xE8res dangereux\r\n   */\r\n  static sanitizeUserInput(input: unknown, maxLength: number = 1000): string {\r\n    if (input === null || input === undefined) {\r\n      return '';\r\n    }\r\n\r\n    let sanitized = String(input).trim();\r\n\r\n    // Limiter la longueur pour \xE9viter les attaques par buffer overflow\r\n    if (sanitized.length > maxLength) {\r\n      sanitized = sanitized.substring(0, maxLength);\r\n      logger.warn('Input truncated due to length limit', { \r\n        originalLength: String(input).length, \r\n        maxLength \r\n      }, 'input-validation');\r\n    }\r\n\r\n    // Supprimer les caract\xE8res de contr\xF4le potentiellement dangereux\r\n    sanitized = sanitized.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, '');\r\n\r\n    // Encoder les caract\xE8res HTML de base\r\n    sanitized = sanitized\r\n      .replace(/&/g, '&amp;')\r\n      .replace(/</g, '&lt;')\r\n      .replace(/>/g, '&gt;')\r\n      .replace(/\"/g, '&quot;')\r\n      .replace(/'/g, '&#x27;')\r\n      .replace(/\\//g, '&#x2F;');\r\n\r\n    // Supprimer les patterns XSS\r\n    for (const pattern of this.XSS_PATTERNS) {\r\n      sanitized = sanitized.replace(pattern, '');\r\n    }\r\n\r\n    return sanitized;\r\n  }\r\n\r\n  /**\r\n   * Valide et sanitise les noms d'organismes\r\n   */\r\n  static validateOrganismName(name: unknown): string {\r\n    if (typeof name !== 'string') {\r\n      throw new ValidationError('Organism name must be a string', 'name', name);\r\n    }\r\n\r\n    const sanitized = this.sanitizeUserInput(name, 50);\r\n    \r\n    if (sanitized.length < 3) {\r\n      throw new ValidationError('Organism name must be at least 3 characters long', 'name', sanitized);\r\n    }\r\n\r\n    if (!this.ORGANISM_NAME_REGEX.test(sanitized)) {\r\n      throw new ValidationError('Organism name contains invalid characters', 'name', sanitized);\r\n    }\r\n\r\n    return sanitized;\r\n  }\r\n\r\n  /**\r\n   * Valide les adresses email\r\n   */\r\n  static validateEmail(email: unknown): string {\r\n    if (typeof email !== 'string') {\r\n      throw new ValidationError('Email must be a string', 'email', email);\r\n    }\r\n\r\n    const sanitized = this.sanitizeUserInput(email, 254);\r\n    \r\n    if (!this.EMAIL_REGEX.test(sanitized)) {\r\n      throw new ValidationError('Invalid email format', 'email', sanitized);\r\n    }\r\n\r\n    // V\xE9rifications de s\xE9curit\xE9 suppl\xE9mentaires\r\n    if (sanitized.includes('javascript:') || sanitized.includes('<script>')) {\r\n      throw new ValidationError('Email contains potentially malicious content', 'email', sanitized);\r\n    }\r\n\r\n    return sanitized.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Valide les donn\xE9es de mutation d'organisme\r\n   */\r\n  static validateMutationData(data: unknown): MutationData {\r\n    if (!data || typeof data !== 'object') {\r\n      throw new ValidationError('Mutation data must be an object', 'mutationData', data);\r\n    }\r\n\r\n    const mutation = data as any;\r\n\r\n    // Valider le type\r\n    if (typeof mutation.type !== 'string') {\r\n      throw new ValidationError('Mutation type must be a string', 'type', mutation.type);\r\n    }\r\n    \r\n    const validTypes = ['genetic', 'behavioral', 'neural', 'adaptive', 'environmental'];\r\n    if (!validTypes.includes(mutation.type)) {\r\n      throw new ValidationError('Invalid mutation type', 'type', mutation.type);\r\n    }\r\n\r\n    // Valider la force\r\n    if (typeof mutation.strength !== 'number') {\r\n      throw new ValidationError('Mutation strength must be a number', 'strength', mutation.strength);\r\n    }\r\n    \r\n    if (mutation.strength < 0 || mutation.strength > 1) {\r\n      throw new ValidationError('Mutation strength must be between 0 and 1', 'strength', mutation.strength);\r\n    }\r\n\r\n    // Valider la cible (optionnelle)\r\n    let target: string | undefined;\r\n    if (mutation.target !== undefined) {\r\n      if (typeof mutation.target !== 'string') {\r\n        throw new ValidationError('Mutation target must be a string', 'target', mutation.target);\r\n      }\r\n      target = this.sanitizeUserInput(mutation.target, 100);\r\n    }\r\n\r\n    return {\r\n      type: mutation.type,\r\n      strength: mutation.strength,\r\n      target: target || ''\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Valide et sanitise les chemins de fichiers\r\n   */\r\n  static validateFilePath(path: unknown): string {\r\n    if (typeof path !== 'string') {\r\n      throw new ValidationError('File path must be a string', 'path', path);\r\n    }\r\n\r\n    // D\xE9tecter les tentatives de path traversal\r\n    for (const pattern of this.PATH_TRAVERSAL_PATTERNS) {\r\n      if (pattern.test(path)) {\r\n        throw new ValidationError('Path traversal attempt detected', 'path', path);\r\n      }\r\n    }\r\n\r\n    // Sanitiser le chemin\r\n    let sanitized = this.sanitizeUserInput(path, 500);\r\n\r\n    // Supprimer les caract\xE8res potentiellement dangereux pour les syst\xE8mes de fichiers\r\n    sanitized = sanitized.replace(/[<>:\"|?*\\x00-\\x1f]/g, '_');\r\n\r\n    // V\xE9rifier que le chemin est dans la liste des caract\xE8res s\xFBrs\r\n    if (!this.SAFE_PATH_REGEX.test(sanitized)) {\r\n      throw new ValidationError('Path contains unsafe characters', 'path', sanitized);\r\n    }\r\n\r\n    return sanitized;\r\n  }\r\n\r\n  /**\r\n   * Valide les objets JSON en d\xE9tectant les injections NoSQL\r\n   */\r\n  static validateJSON(jsonString: unknown): any {\r\n    if (typeof jsonString !== 'string') {\r\n      throw new ValidationError('JSON input must be a string', 'json', jsonString);\r\n    }\r\n\r\n    // D\xE9tecter les patterns d'injection NoSQL\r\n    for (const pattern of this.NOSQL_PATTERNS) {\r\n      if (pattern.test(jsonString)) {\r\n        throw new ValidationError('Potential NoSQL injection detected', 'json', jsonString);\r\n      }\r\n    }\r\n\r\n    try {\r\n      const parsed = JSON.parse(jsonString);\r\n      \r\n      // V\xE9rifier r\xE9cursivement les objets pars\xE9s\r\n      this.validateObjectForInjection(parsed);\r\n      \r\n      return parsed;\r\n    } catch (_error) {\r\n      throw new ValidationError('Invalid JSON format', 'json', jsonString);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Valide les UUIDs\r\n   */\r\n  static validateUUID(uuid: unknown): string {\r\n    if (typeof uuid !== 'string') {\r\n      throw new ValidationError('UUID must be a string', 'uuid', uuid);\r\n    }\r\n\r\n    if (!this.UUID_REGEX.test(uuid)) {\r\n      throw new ValidationError('Invalid UUID format', 'uuid', uuid);\r\n    }\r\n\r\n    return uuid.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Valide les IDs de session\r\n   */\r\n  static validateSessionId(sessionId: unknown): string {\r\n    if (typeof sessionId !== 'string') {\r\n      throw new ValidationError('Session ID must be a string', 'sessionId', sessionId);\r\n    }\r\n\r\n    if (!this.SESSION_ID_REGEX.test(sessionId)) {\r\n      throw new ValidationError('Invalid session ID format', 'sessionId', sessionId);\r\n    }\r\n\r\n    if (sessionId.length < 32 || sessionId.length > 128) {\r\n      throw new ValidationError('Session ID length must be between 32 and 128 characters', 'sessionId', sessionId);\r\n    }\r\n\r\n    return sessionId.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Valide les param\xE8tres d'API avec whitelist\r\n   */\r\n  static validateApiParams(params: unknown, allowedParams: string[]): Record<string, any> {\r\n    if (!params || typeof params !== 'object') {\r\n      throw new ValidationError('API parameters must be an object', 'params', params);\r\n    }\r\n\r\n    const validated: Record<string, any> = {};\r\n    const paramsObj = params as Record<string, any>;\r\n\r\n    for (const [key, value] of Object.entries(paramsObj)) {\r\n      if (!allowedParams.includes(key)) {\r\n        logger.warn('Unauthorized parameter filtered out', { key }, 'input-validation');\r\n        continue;\r\n      }\r\n\r\n      // Sanitiser la valeur selon son type\r\n      if (typeof value === 'string') {\r\n        validated[key] = this.sanitizeUserInput(value);\r\n      } else if (typeof value === 'number') {\r\n        if (!Number.isFinite(value)) {\r\n          throw new ValidationError(`Parameter ${key} must be a finite number`, key, value);\r\n        }\r\n        validated[key] = value;\r\n      } else if (typeof value === 'boolean') {\r\n        validated[key] = value;\r\n      } else {\r\n        throw new ValidationError(`Parameter ${key} has unsupported type`, key, value);\r\n      }\r\n    }\r\n\r\n    return validated;\r\n  }\r\n\r\n  /**\r\n   * Valide les donn\xE9es de configuration utilisateur\r\n   */\r\n  static validateUserPreferences(preferences: unknown): UserPreferences {\r\n    if (!preferences || typeof preferences !== 'object') {\r\n      throw new ValidationError('User preferences must be an object', 'preferences', preferences);\r\n    }\r\n\r\n    const prefs = preferences as any;\r\n    const validated: UserPreferences = {};\r\n\r\n    // Th\xE8me\r\n    if (prefs.theme !== undefined) {\r\n      if (typeof prefs.theme !== 'string') {\r\n        throw new ValidationError('Theme must be a string', 'theme', prefs.theme);\r\n      }\r\n      const validThemes = ['light', 'dark', 'auto'];\r\n      if (!validThemes.includes(prefs.theme)) {\r\n        throw new ValidationError('Invalid theme value', 'theme', prefs.theme);\r\n      }\r\n      validated.theme = prefs.theme;\r\n    }\r\n\r\n    // Notifications\r\n    if (prefs.notifications !== undefined) {\r\n      if (typeof prefs.notifications !== 'boolean') {\r\n        throw new ValidationError('Notifications setting must be a boolean', 'notifications', prefs.notifications);\r\n      }\r\n      validated.notifications = prefs.notifications;\r\n    }\r\n\r\n    // Langue\r\n    if (prefs.language !== undefined) {\r\n      if (typeof prefs.language !== 'string') {\r\n        throw new ValidationError('Language must be a string', 'language', prefs.language);\r\n      }\r\n      const validLanguages = ['en', 'fr', 'es', 'de', 'it'];\r\n      if (!validLanguages.includes(prefs.language)) {\r\n        throw new ValidationError('Invalid language code', 'language', prefs.language);\r\n      }\r\n      validated.language = prefs.language;\r\n    }\r\n\r\n    return validated;\r\n  }\r\n\r\n  /**\r\n   * Recherche r\xE9cursive d'injections dans les objets\r\n   */\r\n  private static validateObjectForInjection(obj: Record<string, unknown>, depth: number = 0): void {\r\n    // Limiter la profondeur pour \xE9viter les attaques par r\xE9cursion\r\n    if (depth > 10) {\r\n      throw new ValidationError('Object nesting too deep', 'object', obj);\r\n    }\r\n\r\n    if (obj && typeof obj === 'object') {\r\n      for (const [key, value] of Object.entries(obj)) {\r\n        // V\xE9rifier les cl\xE9s pour les op\xE9rateurs NoSQL\r\n        for (const pattern of this.NOSQL_PATTERNS) {\r\n          if (pattern.test(key)) {\r\n            throw new ValidationError('NoSQL injection pattern detected in object key', 'key', key);\r\n          }\r\n        }\r\n\r\n        // V\xE9rifier r\xE9cursivement les valeurs\r\n        if (typeof value === 'string') {\r\n          for (const pattern of this.NOSQL_PATTERNS) {\r\n            if (pattern.test(value)) {\r\n              throw new ValidationError('NoSQL injection pattern detected in value', 'value', value);\r\n            }\r\n          }\r\n        } else if (typeof value === 'object' && value !== null) {\r\n          this.validateObjectForInjection(value as Record<string, unknown>, depth + 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Valide la s\xE9curit\xE9 des regex pour \xE9viter ReDoS\r\n   */\r\n  static validateRegexSafety(pattern: string, input: string, timeoutMs: number = 100): boolean {\r\n    try {\r\n      const regex = new RegExp(pattern);\r\n      const start = Date.now();\r\n      \r\n      regex.test(input);\r\n      \r\n      const duration = Date.now() - start;\r\n      \r\n      if (duration > timeoutMs) {\r\n        logger.warn('Potential ReDoS detected', { \r\n          pattern, \r\n          inputLength: input.length, \r\n          duration \r\n        }, 'input-validation');\r\n        return false;\r\n      }\r\n      \r\n      return true;\r\n    } catch (_error) {\r\n      logger.error('Invalid regex pattern', { pattern, error: _error }, 'input-validation');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \xC9chappe les caract\xE8res sp\xE9ciaux pour utilisation dans regex\r\n   */\r\n  static escapeRegex(string: string): string {\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n  }\r\n\r\n  /**\r\n   * Valide les limites de taux (rate limiting)\r\n   */\r\n  static validateRateLimit(\r\n    identifier: string, \r\n    maxRequests: number = 100, \r\n    windowMs: number = 60000\r\n  ): boolean {\r\n    // Cette impl\xE9mentation basique pourrait \xEAtre \xE9tendue avec Redis\r\n    const now = Date.now();\r\n    const key = `rate_limit_${identifier}`;\r\n    \r\n    // Simulation d'un stockage en m\xE9moire (\xE0 remplacer par Redis en production)\r\n    const requests = this.getRateLimitData(key, now, windowMs);\r\n    \r\n    if (requests >= maxRequests) {\r\n      logger.warn('Rate limit exceeded', { \r\n        identifier: this.sanitizeUserInput(identifier, 50),\r\n        requests,\r\n        maxRequests,\r\n        windowMs\r\n      }, 'input-validation');\r\n      return false;\r\n    }\r\n    \r\n    this.incrementRateLimit(key, now);\r\n    return true;\r\n  }\r\n\r\n  private static rateLimitCache = new Map<string, number[]>();\r\n\r\n  private static getRateLimitData(key: string, now: number, windowMs: number): number {\r\n    const requests = this.rateLimitCache.get(key) || [];\r\n    // Nettoyer les anciennes requ\xEAtes\r\n    const validRequests = requests.filter(timestamp => now - timestamp < windowMs);\r\n    this.rateLimitCache.set(key, validRequests);\r\n    return validRequests.length;\r\n  }\r\n\r\n  private static incrementRateLimit(key: string, now: number): void {\r\n    const requests = this.rateLimitCache.get(key) || [];\r\n    requests.push(now);\r\n    this.rateLimitCache.set(key, requests);\r\n  }\r\n}\r\n\r\n// Types d'interface\r\nexport interface MutationData {\r\n  type: string;\r\n  strength: number;\r\n  target?: string;\r\n}\r\n\r\nexport interface UserPreferences {\r\n  theme?: 'light' | 'dark' | 'auto';\r\n  notifications?: boolean;\r\n  language?: string;\r\n}\r\n\r\n// Fonctions utilitaires export\xE9es\r\nexport const sanitize = InputValidator.sanitizeUserInput;\r\nexport const validateEmail = InputValidator.validateEmail;\r\nexport const validateJSON = InputValidator.validateJSON;\r\nexport const validateOrganismName = InputValidator.validateOrganismName;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d405a7228b3c997bcc14c2f19aa0b813b34ecd8d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14u5qd5l88 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14u5qd5l88();
cov_14u5qd5l88().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_14u5qd5l88().s[1]++;
exports.validateOrganismName = exports.validateJSON = exports.validateEmail = exports.sanitize = exports.InputValidator = exports.ValidationError = void 0;
/**
 * Validation et sanitisation centralisée des inputs utilisateur
 * Améliore la sécurité selon les recommandations d'audit
 */
const secureLogger_1 =
/* istanbul ignore next */
(cov_14u5qd5l88().s[2]++, require("@/shared/utils/secureLogger"));
class ValidationError extends Error {
  constructor(message, field, value) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[0]++;
    cov_14u5qd5l88().s[3]++;
    super(message);
    /* istanbul ignore next */
    cov_14u5qd5l88().s[4]++;
    this.field = field;
    /* istanbul ignore next */
    cov_14u5qd5l88().s[5]++;
    this.value = value;
    /* istanbul ignore next */
    cov_14u5qd5l88().s[6]++;
    this.name = 'ValidationError';
  }
}
/* istanbul ignore next */
cov_14u5qd5l88().s[7]++;
exports.ValidationError = ValidationError;
class InputValidator {
  /**
   * Sanitise les inputs de base en supprimant les caractères dangereux
   */
  static sanitizeUserInput(input, maxLength =
  /* istanbul ignore next */
  (cov_14u5qd5l88().b[0][0]++, 1000)) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[1]++;
    cov_14u5qd5l88().s[8]++;
    if (
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[2][0]++, input === null) ||
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[2][1]++, input === undefined)) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[1][0]++;
      cov_14u5qd5l88().s[9]++;
      return '';
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[1][1]++;
    }
    let sanitized =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[10]++, String(input).trim());
    // Limiter la longueur pour éviter les attaques par buffer overflow
    /* istanbul ignore next */
    cov_14u5qd5l88().s[11]++;
    if (sanitized.length > maxLength) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[3][0]++;
      cov_14u5qd5l88().s[12]++;
      sanitized = sanitized.substring(0, maxLength);
      /* istanbul ignore next */
      cov_14u5qd5l88().s[13]++;
      secureLogger_1.logger.warn('Input truncated due to length limit', {
        originalLength: String(input).length,
        maxLength
      }, 'input-validation');
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[3][1]++;
    }
    // Supprimer les caractères de contrôle potentiellement dangereux
    cov_14u5qd5l88().s[14]++;
    sanitized = sanitized.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/g, '');
    // Encoder les caractères HTML de base
    /* istanbul ignore next */
    cov_14u5qd5l88().s[15]++;
    sanitized = sanitized.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g, '&#x2F;');
    // Supprimer les patterns XSS
    /* istanbul ignore next */
    cov_14u5qd5l88().s[16]++;
    for (const pattern of this.XSS_PATTERNS) {
      /* istanbul ignore next */
      cov_14u5qd5l88().s[17]++;
      sanitized = sanitized.replace(pattern, '');
    }
    /* istanbul ignore next */
    cov_14u5qd5l88().s[18]++;
    return sanitized;
  }
  /**
   * Valide et sanitise les noms d'organismes
   */
  static validateOrganismName(name) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[2]++;
    cov_14u5qd5l88().s[19]++;
    if (typeof name !== 'string') {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[4][0]++;
      cov_14u5qd5l88().s[20]++;
      throw new ValidationError('Organism name must be a string', 'name', name);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[4][1]++;
    }
    const sanitized =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[21]++, this.sanitizeUserInput(name, 50));
    /* istanbul ignore next */
    cov_14u5qd5l88().s[22]++;
    if (sanitized.length < 3) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[5][0]++;
      cov_14u5qd5l88().s[23]++;
      throw new ValidationError('Organism name must be at least 3 characters long', 'name', sanitized);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[5][1]++;
    }
    cov_14u5qd5l88().s[24]++;
    if (!this.ORGANISM_NAME_REGEX.test(sanitized)) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[6][0]++;
      cov_14u5qd5l88().s[25]++;
      throw new ValidationError('Organism name contains invalid characters', 'name', sanitized);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[6][1]++;
    }
    cov_14u5qd5l88().s[26]++;
    return sanitized;
  }
  /**
   * Valide les adresses email
   */
  static validateEmail(email) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[3]++;
    cov_14u5qd5l88().s[27]++;
    if (typeof email !== 'string') {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[7][0]++;
      cov_14u5qd5l88().s[28]++;
      throw new ValidationError('Email must be a string', 'email', email);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[7][1]++;
    }
    const sanitized =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[29]++, this.sanitizeUserInput(email, 254));
    /* istanbul ignore next */
    cov_14u5qd5l88().s[30]++;
    if (!this.EMAIL_REGEX.test(sanitized)) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[8][0]++;
      cov_14u5qd5l88().s[31]++;
      throw new ValidationError('Invalid email format', 'email', sanitized);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[8][1]++;
    }
    // Vérifications de sécurité supplémentaires
    cov_14u5qd5l88().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[10][0]++, sanitized.includes('javascript:')) ||
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[10][1]++, sanitized.includes('<script>'))) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[9][0]++;
      cov_14u5qd5l88().s[33]++;
      throw new ValidationError('Email contains potentially malicious content', 'email', sanitized);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[9][1]++;
    }
    cov_14u5qd5l88().s[34]++;
    return sanitized.toLowerCase();
  }
  /**
   * Valide les données de mutation d'organisme
   */
  static validateMutationData(data) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[4]++;
    cov_14u5qd5l88().s[35]++;
    if (
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[12][0]++, !data) ||
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[12][1]++, typeof data !== 'object')) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[11][0]++;
      cov_14u5qd5l88().s[36]++;
      throw new ValidationError('Mutation data must be an object', 'mutationData', data);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[11][1]++;
    }
    const mutation =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[37]++, data);
    // Valider le type
    /* istanbul ignore next */
    cov_14u5qd5l88().s[38]++;
    if (typeof mutation.type !== 'string') {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[13][0]++;
      cov_14u5qd5l88().s[39]++;
      throw new ValidationError('Mutation type must be a string', 'type', mutation.type);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[13][1]++;
    }
    const validTypes =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[40]++, ['genetic', 'behavioral', 'neural', 'adaptive', 'environmental']);
    /* istanbul ignore next */
    cov_14u5qd5l88().s[41]++;
    if (!validTypes.includes(mutation.type)) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[14][0]++;
      cov_14u5qd5l88().s[42]++;
      throw new ValidationError('Invalid mutation type', 'type', mutation.type);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[14][1]++;
    }
    // Valider la force
    cov_14u5qd5l88().s[43]++;
    if (typeof mutation.strength !== 'number') {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[15][0]++;
      cov_14u5qd5l88().s[44]++;
      throw new ValidationError('Mutation strength must be a number', 'strength', mutation.strength);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[15][1]++;
    }
    cov_14u5qd5l88().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[17][0]++, mutation.strength < 0) ||
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[17][1]++, mutation.strength > 1)) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[16][0]++;
      cov_14u5qd5l88().s[46]++;
      throw new ValidationError('Mutation strength must be between 0 and 1', 'strength', mutation.strength);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[16][1]++;
    }
    // Valider la cible (optionnelle)
    let target;
    /* istanbul ignore next */
    cov_14u5qd5l88().s[47]++;
    if (mutation.target !== undefined) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[18][0]++;
      cov_14u5qd5l88().s[48]++;
      if (typeof mutation.target !== 'string') {
        /* istanbul ignore next */
        cov_14u5qd5l88().b[19][0]++;
        cov_14u5qd5l88().s[49]++;
        throw new ValidationError('Mutation target must be a string', 'target', mutation.target);
      } else
      /* istanbul ignore next */
      {
        cov_14u5qd5l88().b[19][1]++;
      }
      cov_14u5qd5l88().s[50]++;
      target = this.sanitizeUserInput(mutation.target, 100);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[18][1]++;
    }
    cov_14u5qd5l88().s[51]++;
    return {
      type: mutation.type,
      strength: mutation.strength,
      target:
      /* istanbul ignore next */
      (cov_14u5qd5l88().b[20][0]++, target) ||
      /* istanbul ignore next */
      (cov_14u5qd5l88().b[20][1]++, '')
    };
  }
  /**
   * Valide et sanitise les chemins de fichiers
   */
  static validateFilePath(path) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[5]++;
    cov_14u5qd5l88().s[52]++;
    if (typeof path !== 'string') {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[21][0]++;
      cov_14u5qd5l88().s[53]++;
      throw new ValidationError('File path must be a string', 'path', path);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[21][1]++;
    }
    // Détecter les tentatives de path traversal
    cov_14u5qd5l88().s[54]++;
    for (const pattern of this.PATH_TRAVERSAL_PATTERNS) {
      /* istanbul ignore next */
      cov_14u5qd5l88().s[55]++;
      if (pattern.test(path)) {
        /* istanbul ignore next */
        cov_14u5qd5l88().b[22][0]++;
        cov_14u5qd5l88().s[56]++;
        throw new ValidationError('Path traversal attempt detected', 'path', path);
      } else
      /* istanbul ignore next */
      {
        cov_14u5qd5l88().b[22][1]++;
      }
    }
    // Sanitiser le chemin
    let sanitized =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[57]++, this.sanitizeUserInput(path, 500));
    // Supprimer les caractères potentiellement dangereux pour les systèmes de fichiers
    /* istanbul ignore next */
    cov_14u5qd5l88().s[58]++;
    sanitized = sanitized.replace(/[<>:"|?*\x00-\x1f]/g, '_');
    // Vérifier que le chemin est dans la liste des caractères sûrs
    /* istanbul ignore next */
    cov_14u5qd5l88().s[59]++;
    if (!this.SAFE_PATH_REGEX.test(sanitized)) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[23][0]++;
      cov_14u5qd5l88().s[60]++;
      throw new ValidationError('Path contains unsafe characters', 'path', sanitized);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[23][1]++;
    }
    cov_14u5qd5l88().s[61]++;
    return sanitized;
  }
  /**
   * Valide les objets JSON en détectant les injections NoSQL
   */
  static validateJSON(jsonString) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[6]++;
    cov_14u5qd5l88().s[62]++;
    if (typeof jsonString !== 'string') {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[24][0]++;
      cov_14u5qd5l88().s[63]++;
      throw new ValidationError('JSON input must be a string', 'json', jsonString);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[24][1]++;
    }
    // Détecter les patterns d'injection NoSQL
    cov_14u5qd5l88().s[64]++;
    for (const pattern of this.NOSQL_PATTERNS) {
      /* istanbul ignore next */
      cov_14u5qd5l88().s[65]++;
      if (pattern.test(jsonString)) {
        /* istanbul ignore next */
        cov_14u5qd5l88().b[25][0]++;
        cov_14u5qd5l88().s[66]++;
        throw new ValidationError('Potential NoSQL injection detected', 'json', jsonString);
      } else
      /* istanbul ignore next */
      {
        cov_14u5qd5l88().b[25][1]++;
      }
    }
    /* istanbul ignore next */
    cov_14u5qd5l88().s[67]++;
    try {
      const parsed =
      /* istanbul ignore next */
      (cov_14u5qd5l88().s[68]++, JSON.parse(jsonString));
      // Vérifier récursivement les objets parsés
      /* istanbul ignore next */
      cov_14u5qd5l88().s[69]++;
      this.validateObjectForInjection(parsed);
      /* istanbul ignore next */
      cov_14u5qd5l88().s[70]++;
      return parsed;
    } catch (_error) {
      /* istanbul ignore next */
      cov_14u5qd5l88().s[71]++;
      throw new ValidationError('Invalid JSON format', 'json', jsonString);
    }
  }
  /**
   * Valide les UUIDs
   */
  static validateUUID(uuid) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[7]++;
    cov_14u5qd5l88().s[72]++;
    if (typeof uuid !== 'string') {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[26][0]++;
      cov_14u5qd5l88().s[73]++;
      throw new ValidationError('UUID must be a string', 'uuid', uuid);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[26][1]++;
    }
    cov_14u5qd5l88().s[74]++;
    if (!this.UUID_REGEX.test(uuid)) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[27][0]++;
      cov_14u5qd5l88().s[75]++;
      throw new ValidationError('Invalid UUID format', 'uuid', uuid);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[27][1]++;
    }
    cov_14u5qd5l88().s[76]++;
    return uuid.toLowerCase();
  }
  /**
   * Valide les IDs de session
   */
  static validateSessionId(sessionId) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[8]++;
    cov_14u5qd5l88().s[77]++;
    if (typeof sessionId !== 'string') {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[28][0]++;
      cov_14u5qd5l88().s[78]++;
      throw new ValidationError('Session ID must be a string', 'sessionId', sessionId);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[28][1]++;
    }
    cov_14u5qd5l88().s[79]++;
    if (!this.SESSION_ID_REGEX.test(sessionId)) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[29][0]++;
      cov_14u5qd5l88().s[80]++;
      throw new ValidationError('Invalid session ID format', 'sessionId', sessionId);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[29][1]++;
    }
    cov_14u5qd5l88().s[81]++;
    if (
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[31][0]++, sessionId.length < 32) ||
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[31][1]++, sessionId.length > 128)) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[30][0]++;
      cov_14u5qd5l88().s[82]++;
      throw new ValidationError('Session ID length must be between 32 and 128 characters', 'sessionId', sessionId);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[30][1]++;
    }
    cov_14u5qd5l88().s[83]++;
    return sessionId.toLowerCase();
  }
  /**
   * Valide les paramètres d'API avec whitelist
   */
  static validateApiParams(params, allowedParams) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[9]++;
    cov_14u5qd5l88().s[84]++;
    if (
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[33][0]++, !params) ||
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[33][1]++, typeof params !== 'object')) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[32][0]++;
      cov_14u5qd5l88().s[85]++;
      throw new ValidationError('API parameters must be an object', 'params', params);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[32][1]++;
    }
    const validated =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[86]++, {});
    const paramsObj =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[87]++, params);
    /* istanbul ignore next */
    cov_14u5qd5l88().s[88]++;
    for (const [key, value] of Object.entries(paramsObj)) {
      /* istanbul ignore next */
      cov_14u5qd5l88().s[89]++;
      if (!allowedParams.includes(key)) {
        /* istanbul ignore next */
        cov_14u5qd5l88().b[34][0]++;
        cov_14u5qd5l88().s[90]++;
        secureLogger_1.logger.warn('Unauthorized parameter filtered out', {
          key
        }, 'input-validation');
        /* istanbul ignore next */
        cov_14u5qd5l88().s[91]++;
        continue;
      } else
      /* istanbul ignore next */
      {
        cov_14u5qd5l88().b[34][1]++;
      }
      // Sanitiser la valeur selon son type
      cov_14u5qd5l88().s[92]++;
      if (typeof value === 'string') {
        /* istanbul ignore next */
        cov_14u5qd5l88().b[35][0]++;
        cov_14u5qd5l88().s[93]++;
        validated[key] = this.sanitizeUserInput(value);
      } else {
        /* istanbul ignore next */
        cov_14u5qd5l88().b[35][1]++;
        cov_14u5qd5l88().s[94]++;
        if (typeof value === 'number') {
          /* istanbul ignore next */
          cov_14u5qd5l88().b[36][0]++;
          cov_14u5qd5l88().s[95]++;
          if (!Number.isFinite(value)) {
            /* istanbul ignore next */
            cov_14u5qd5l88().b[37][0]++;
            cov_14u5qd5l88().s[96]++;
            throw new ValidationError(`Parameter ${key} must be a finite number`, key, value);
          } else
          /* istanbul ignore next */
          {
            cov_14u5qd5l88().b[37][1]++;
          }
          cov_14u5qd5l88().s[97]++;
          validated[key] = value;
        } else {
          /* istanbul ignore next */
          cov_14u5qd5l88().b[36][1]++;
          cov_14u5qd5l88().s[98]++;
          if (typeof value === 'boolean') {
            /* istanbul ignore next */
            cov_14u5qd5l88().b[38][0]++;
            cov_14u5qd5l88().s[99]++;
            validated[key] = value;
          } else {
            /* istanbul ignore next */
            cov_14u5qd5l88().b[38][1]++;
            cov_14u5qd5l88().s[100]++;
            throw new ValidationError(`Parameter ${key} has unsupported type`, key, value);
          }
        }
      }
    }
    /* istanbul ignore next */
    cov_14u5qd5l88().s[101]++;
    return validated;
  }
  /**
   * Valide les données de configuration utilisateur
   */
  static validateUserPreferences(preferences) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[10]++;
    cov_14u5qd5l88().s[102]++;
    if (
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[40][0]++, !preferences) ||
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[40][1]++, typeof preferences !== 'object')) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[39][0]++;
      cov_14u5qd5l88().s[103]++;
      throw new ValidationError('User preferences must be an object', 'preferences', preferences);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[39][1]++;
    }
    const prefs =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[104]++, preferences);
    const validated =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[105]++, {});
    // Thème
    /* istanbul ignore next */
    cov_14u5qd5l88().s[106]++;
    if (prefs.theme !== undefined) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[41][0]++;
      cov_14u5qd5l88().s[107]++;
      if (typeof prefs.theme !== 'string') {
        /* istanbul ignore next */
        cov_14u5qd5l88().b[42][0]++;
        cov_14u5qd5l88().s[108]++;
        throw new ValidationError('Theme must be a string', 'theme', prefs.theme);
      } else
      /* istanbul ignore next */
      {
        cov_14u5qd5l88().b[42][1]++;
      }
      const validThemes =
      /* istanbul ignore next */
      (cov_14u5qd5l88().s[109]++, ['light', 'dark', 'auto']);
      /* istanbul ignore next */
      cov_14u5qd5l88().s[110]++;
      if (!validThemes.includes(prefs.theme)) {
        /* istanbul ignore next */
        cov_14u5qd5l88().b[43][0]++;
        cov_14u5qd5l88().s[111]++;
        throw new ValidationError('Invalid theme value', 'theme', prefs.theme);
      } else
      /* istanbul ignore next */
      {
        cov_14u5qd5l88().b[43][1]++;
      }
      cov_14u5qd5l88().s[112]++;
      validated.theme = prefs.theme;
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[41][1]++;
    }
    // Notifications
    cov_14u5qd5l88().s[113]++;
    if (prefs.notifications !== undefined) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[44][0]++;
      cov_14u5qd5l88().s[114]++;
      if (typeof prefs.notifications !== 'boolean') {
        /* istanbul ignore next */
        cov_14u5qd5l88().b[45][0]++;
        cov_14u5qd5l88().s[115]++;
        throw new ValidationError('Notifications setting must be a boolean', 'notifications', prefs.notifications);
      } else
      /* istanbul ignore next */
      {
        cov_14u5qd5l88().b[45][1]++;
      }
      cov_14u5qd5l88().s[116]++;
      validated.notifications = prefs.notifications;
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[44][1]++;
    }
    // Langue
    cov_14u5qd5l88().s[117]++;
    if (prefs.language !== undefined) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[46][0]++;
      cov_14u5qd5l88().s[118]++;
      if (typeof prefs.language !== 'string') {
        /* istanbul ignore next */
        cov_14u5qd5l88().b[47][0]++;
        cov_14u5qd5l88().s[119]++;
        throw new ValidationError('Language must be a string', 'language', prefs.language);
      } else
      /* istanbul ignore next */
      {
        cov_14u5qd5l88().b[47][1]++;
      }
      const validLanguages =
      /* istanbul ignore next */
      (cov_14u5qd5l88().s[120]++, ['en', 'fr', 'es', 'de', 'it']);
      /* istanbul ignore next */
      cov_14u5qd5l88().s[121]++;
      if (!validLanguages.includes(prefs.language)) {
        /* istanbul ignore next */
        cov_14u5qd5l88().b[48][0]++;
        cov_14u5qd5l88().s[122]++;
        throw new ValidationError('Invalid language code', 'language', prefs.language);
      } else
      /* istanbul ignore next */
      {
        cov_14u5qd5l88().b[48][1]++;
      }
      cov_14u5qd5l88().s[123]++;
      validated.language = prefs.language;
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[46][1]++;
    }
    cov_14u5qd5l88().s[124]++;
    return validated;
  }
  /**
   * Recherche récursive d'injections dans les objets
   */
  static validateObjectForInjection(obj, depth =
  /* istanbul ignore next */
  (cov_14u5qd5l88().b[49][0]++, 0)) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[11]++;
    cov_14u5qd5l88().s[125]++;
    // Limiter la profondeur pour éviter les attaques par récursion
    if (depth > 10) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[50][0]++;
      cov_14u5qd5l88().s[126]++;
      throw new ValidationError('Object nesting too deep', 'object', obj);
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[50][1]++;
    }
    cov_14u5qd5l88().s[127]++;
    if (
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[52][0]++, obj) &&
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[52][1]++, typeof obj === 'object')) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[51][0]++;
      cov_14u5qd5l88().s[128]++;
      for (const [key, value] of Object.entries(obj)) {
        /* istanbul ignore next */
        cov_14u5qd5l88().s[129]++;
        // Vérifier les clés pour les opérateurs NoSQL
        for (const pattern of this.NOSQL_PATTERNS) {
          /* istanbul ignore next */
          cov_14u5qd5l88().s[130]++;
          if (pattern.test(key)) {
            /* istanbul ignore next */
            cov_14u5qd5l88().b[53][0]++;
            cov_14u5qd5l88().s[131]++;
            throw new ValidationError('NoSQL injection pattern detected in object key', 'key', key);
          } else
          /* istanbul ignore next */
          {
            cov_14u5qd5l88().b[53][1]++;
          }
        }
        // Vérifier récursivement les valeurs
        /* istanbul ignore next */
        cov_14u5qd5l88().s[132]++;
        if (typeof value === 'string') {
          /* istanbul ignore next */
          cov_14u5qd5l88().b[54][0]++;
          cov_14u5qd5l88().s[133]++;
          for (const pattern of this.NOSQL_PATTERNS) {
            /* istanbul ignore next */
            cov_14u5qd5l88().s[134]++;
            if (pattern.test(value)) {
              /* istanbul ignore next */
              cov_14u5qd5l88().b[55][0]++;
              cov_14u5qd5l88().s[135]++;
              throw new ValidationError('NoSQL injection pattern detected in value', 'value', value);
            } else
            /* istanbul ignore next */
            {
              cov_14u5qd5l88().b[55][1]++;
            }
          }
        } else {
          /* istanbul ignore next */
          cov_14u5qd5l88().b[54][1]++;
          cov_14u5qd5l88().s[136]++;
          if (
          /* istanbul ignore next */
          (cov_14u5qd5l88().b[57][0]++, typeof value === 'object') &&
          /* istanbul ignore next */
          (cov_14u5qd5l88().b[57][1]++, value !== null)) {
            /* istanbul ignore next */
            cov_14u5qd5l88().b[56][0]++;
            cov_14u5qd5l88().s[137]++;
            this.validateObjectForInjection(value, depth + 1);
          } else
          /* istanbul ignore next */
          {
            cov_14u5qd5l88().b[56][1]++;
          }
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[51][1]++;
    }
  }
  /**
   * Valide la sécurité des regex pour éviter ReDoS
   */
  static validateRegexSafety(pattern, input, timeoutMs =
  /* istanbul ignore next */
  (cov_14u5qd5l88().b[58][0]++, 100)) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[12]++;
    cov_14u5qd5l88().s[138]++;
    try {
      const regex =
      /* istanbul ignore next */
      (cov_14u5qd5l88().s[139]++, new RegExp(pattern));
      const start =
      /* istanbul ignore next */
      (cov_14u5qd5l88().s[140]++, Date.now());
      /* istanbul ignore next */
      cov_14u5qd5l88().s[141]++;
      regex.test(input);
      const duration =
      /* istanbul ignore next */
      (cov_14u5qd5l88().s[142]++, Date.now() - start);
      /* istanbul ignore next */
      cov_14u5qd5l88().s[143]++;
      if (duration > timeoutMs) {
        /* istanbul ignore next */
        cov_14u5qd5l88().b[59][0]++;
        cov_14u5qd5l88().s[144]++;
        secureLogger_1.logger.warn('Potential ReDoS detected', {
          pattern,
          inputLength: input.length,
          duration
        }, 'input-validation');
        /* istanbul ignore next */
        cov_14u5qd5l88().s[145]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_14u5qd5l88().b[59][1]++;
      }
      cov_14u5qd5l88().s[146]++;
      return true;
    } catch (_error) {
      /* istanbul ignore next */
      cov_14u5qd5l88().s[147]++;
      secureLogger_1.logger.error('Invalid regex pattern', {
        pattern,
        error: _error
      }, 'input-validation');
      /* istanbul ignore next */
      cov_14u5qd5l88().s[148]++;
      return false;
    }
  }
  /**
   * Échappe les caractères spéciaux pour utilisation dans regex
   */
  static escapeRegex(string) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[13]++;
    cov_14u5qd5l88().s[149]++;
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
  }
  /**
   * Valide les limites de taux (rate limiting)
   */
  static validateRateLimit(identifier, maxRequests =
  /* istanbul ignore next */
  (cov_14u5qd5l88().b[60][0]++, 100), windowMs =
  /* istanbul ignore next */
  (cov_14u5qd5l88().b[61][0]++, 60000)) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[14]++;
    // Cette implémentation basique pourrait être étendue avec Redis
    const now =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[150]++, Date.now());
    const key =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[151]++, `rate_limit_${identifier}`);
    // Simulation d'un stockage en mémoire (à remplacer par Redis en production)
    const requests =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[152]++, this.getRateLimitData(key, now, windowMs));
    /* istanbul ignore next */
    cov_14u5qd5l88().s[153]++;
    if (requests >= maxRequests) {
      /* istanbul ignore next */
      cov_14u5qd5l88().b[62][0]++;
      cov_14u5qd5l88().s[154]++;
      secureLogger_1.logger.warn('Rate limit exceeded', {
        identifier: this.sanitizeUserInput(identifier, 50),
        requests,
        maxRequests,
        windowMs
      }, 'input-validation');
      /* istanbul ignore next */
      cov_14u5qd5l88().s[155]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_14u5qd5l88().b[62][1]++;
    }
    cov_14u5qd5l88().s[156]++;
    this.incrementRateLimit(key, now);
    /* istanbul ignore next */
    cov_14u5qd5l88().s[157]++;
    return true;
  }
  static getRateLimitData(key, now, windowMs) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[15]++;
    const requests =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[158]++,
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[63][0]++, this.rateLimitCache.get(key)) ||
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[63][1]++, []));
    // Nettoyer les anciennes requêtes
    const validRequests =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[159]++, requests.filter(timestamp => {
      /* istanbul ignore next */
      cov_14u5qd5l88().f[16]++;
      cov_14u5qd5l88().s[160]++;
      return now - timestamp < windowMs;
    }));
    /* istanbul ignore next */
    cov_14u5qd5l88().s[161]++;
    this.rateLimitCache.set(key, validRequests);
    /* istanbul ignore next */
    cov_14u5qd5l88().s[162]++;
    return validRequests.length;
  }
  static incrementRateLimit(key, now) {
    /* istanbul ignore next */
    cov_14u5qd5l88().f[17]++;
    const requests =
    /* istanbul ignore next */
    (cov_14u5qd5l88().s[163]++,
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[64][0]++, this.rateLimitCache.get(key)) ||
    /* istanbul ignore next */
    (cov_14u5qd5l88().b[64][1]++, []));
    /* istanbul ignore next */
    cov_14u5qd5l88().s[164]++;
    requests.push(now);
    /* istanbul ignore next */
    cov_14u5qd5l88().s[165]++;
    this.rateLimitCache.set(key, requests);
  }
}
/* istanbul ignore next */
cov_14u5qd5l88().s[166]++;
exports.InputValidator = InputValidator;
/* istanbul ignore next */
cov_14u5qd5l88().s[167]++;
InputValidator.EMAIL_REGEX = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
/* istanbul ignore next */
cov_14u5qd5l88().s[168]++;
InputValidator.ORGANISM_NAME_REGEX = /^[a-zA-Z0-9\s\-_]{3,50}$/;
/* istanbul ignore next */
cov_14u5qd5l88().s[169]++;
InputValidator.UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
/* istanbul ignore next */
cov_14u5qd5l88().s[170]++;
InputValidator.SESSION_ID_REGEX = /^[a-f0-9]{32,}$/i;
/* istanbul ignore next */
cov_14u5qd5l88().s[171]++;
InputValidator.SAFE_PATH_REGEX = /^[a-zA-Z0-9._\-\/]+$/;
// XSS patterns to detect and remove
/* istanbul ignore next */
cov_14u5qd5l88().s[172]++;
InputValidator.XSS_PATTERNS = [/<script[^>]*>.*?<\/script>/gi, /<iframe[^>]*>.*?<\/iframe>/gi, /<object[^>]*>.*?<\/object>/gi, /<embed[^>]*>/gi, /<form[^>]*>.*?<\/form>/gi, /javascript:/gi, /vbscript:/gi, /data:text\/html/gi, /on\w+\s*=/gi, /<[^>]*\s+on\w+[^>]*>/gi];
// NoSQL injection patterns
/* istanbul ignore next */
cov_14u5qd5l88().s[173]++;
InputValidator.NOSQL_PATTERNS = [/\$ne\b/gi, /\$gt\b/gi, /\$lt\b/gi, /\$in\b/gi, /\$nin\b/gi, /\$regex\b/gi, /\$where\b/gi, /\$exists\b/gi, /\$or\b/gi, /\$and\b/gi];
// Path traversal patterns
/* istanbul ignore next */
cov_14u5qd5l88().s[174]++;
InputValidator.PATH_TRAVERSAL_PATTERNS = [/\.\./g, /%2e%2e/gi, /%252e%252e/gi, /\.%2e/gi, /%2e\./gi, /\.\\\./g, /%5c\.\./gi, /\.\.\//g, /\.\.%2f/gi];
/* istanbul ignore next */
cov_14u5qd5l88().s[175]++;
InputValidator.rateLimitCache = new Map();
// Fonctions utilitaires exportées
/* istanbul ignore next */
cov_14u5qd5l88().s[176]++;
exports.sanitize = InputValidator.sanitizeUserInput;
/* istanbul ignore next */
cov_14u5qd5l88().s[177]++;
exports.validateEmail = InputValidator.validateEmail;
/* istanbul ignore next */
cov_14u5qd5l88().s[178]++;
exports.validateJSON = InputValidator.validateJSON;
/* istanbul ignore next */
cov_14u5qd5l88().s[179]++;
exports.validateOrganismName = InputValidator.validateOrganismName;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,