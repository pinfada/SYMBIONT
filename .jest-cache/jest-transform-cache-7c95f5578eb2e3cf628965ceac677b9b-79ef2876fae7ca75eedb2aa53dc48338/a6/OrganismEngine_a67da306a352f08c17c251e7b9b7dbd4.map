{"version":3,"names":["cov_3r9ftkoz4","actualCoverage","s","DNAInterpreter_1","require","MutationEngine_1","ProceduralGenerator_1","PerformanceMonitor_1","secureLogger_1","vertexShaderSource","fragmentShaderSource","OrganismEngine","constructor","canvas","dna","f","program","vertexBuffer","indexBuffer","frameCount","elapsedTime","lastGeometryComplexity","fractalTexture","b","Error","gl","getContext","addEventListener","e","preventDefault","cleanup","dnaInterpreter","DNAInterpreter","mutationEngine","MutationEngine","generator","ProceduralGenerator","getCurrentParameters","performanceMonitor","PerformanceMonitor","traits","curiosity","focus","rhythm","empathy","creativity","resilience","adaptability","memory","intuition","visualProperties","primaryColor","h","l","secondaryColor","currentState","id","generation","health","energy","visualDNA","lastMutation","Date","now","mutations","createdAt","birthTime","socialConnections","memoryFragments","geometry","generateBaseForm","fractal","generateFractalPattern","createGLTexture","setupGL","setupShaders","setupBuffers","clearColor","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DEPTH_TEST","depthFunc","LEQUAL","resizeCanvas","window","bind","devicePixelRatio","displayWidth","clientWidth","displayHeight","clientHeight","width","height","viewport","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","vertices","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","indices","vert","compileShader","VERTEX_SHADER","frag","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","source","type","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","SecureLogger","error","getShaderInfoLog","render","state","params","complexity","patternDensity","colorVariance","symmetry","fluidity","Math","abs","startFrame","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","useProgram","setupAttributes","setupUniforms","drawElements","TRIANGLES","length","UNSIGNED_SHORT","endFrame","posLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","timeLoc","getUniformLocation","uniform1f","uniform3fv","update","performance","mutationState","getCurrentState","colorShift","fractalLoc","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","uniform1i","mutate","mutation","includes","apply","getPerformanceMetrics","getMetrics","deleteBuffer","deleteProgram","removeEventListener","info","isInitialized","textureData","tex","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","data","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/generative/OrganismEngine.ts"],"sourcesContent":["// src/generative/OrganismEngine.ts\r\n// Moteur WebGL principal harmonisé\r\nimport { DNAInterpreter } from './DNAInterpreter';\r\nimport { MutationEngine } from './MutationEngine';\r\nimport { ProceduralGenerator } from './ProceduralGenerator';\r\nimport { PerformanceMonitor } from '../monitoring/PerformanceMonitor';\r\nimport { SecureLogger } from '@shared/utils/secureLogger';\r\nimport {\r\n  OrganismState,\r\n  OrganismMutation,\r\n  OrganismTraits\r\n} from '../shared/types/organism';\r\nimport {\r\n  VisualProperties,\r\n  Geometry\r\n} from '@shared/types';\r\n\r\n// Importer les shaders via raw-loader (Webpack)\r\nconst vertexShaderSource = '';\r\nconst fragmentShaderSource = '';\r\n\r\n/**\r\n * OrganismEngine - Moteur WebGL pour le rendu de l'organisme\r\n */\r\nexport class OrganismEngine {\r\n  private canvas: HTMLCanvasElement;\r\n  private gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n  private program: WebGLProgram | null = null;\r\n  private dnaInterpreter: DNAInterpreter;\r\n  private mutationEngine: MutationEngine;\r\n  private generator: ProceduralGenerator;\r\n  private performanceMonitor: PerformanceMonitor;\r\n  \r\n  // Buffers\r\n  private vertexBuffer: WebGLBuffer | null = null;\r\n  private indexBuffer: WebGLBuffer | null = null;\r\n  \r\n  // État\r\n  private frameCount = 0;\r\n  // @ts-expect-error Temps réservé pour usage futur\r\n  private elapsedTime = 0;\r\n  private geometry: Geometry;\r\n  private traits: OrganismTraits;\r\n  // @ts-expect-error Propriétés réservées pour usage futur\r\n  private visualProperties: VisualProperties;\r\n  // @ts-expect-error État réservé pour usage futur\r\n  private currentState: OrganismState;\r\n  private lastGeometryComplexity: number = 0;\r\n  private fractalTexture: WebGLTexture | null = null;\r\n  \r\n  /**\r\n   * Constructeur\r\n   */\r\n  constructor(canvas: HTMLCanvasElement, dna: string) {\r\n    this.canvas = canvas;\r\n    if (!this.canvas) {\r\n      throw new Error('Canvas element is required');\r\n    }\r\n    // Initialisation WebGL (WebGL2 si possible)\r\n    const gl = this.canvas.getContext('webgl2') || this.canvas.getContext('webgl');\r\n    if (!gl) throw new Error('WebGL not supported');\r\n    this.gl = gl;\r\n    \r\n    // Gestion du contexte perdu\r\n    this.canvas.addEventListener('webglcontextlost', (e) => {\r\n      e.preventDefault();\r\n      this.cleanup();\r\n    });\r\n    \r\n    // Initialisation des modules\r\n    this.dnaInterpreter = new DNAInterpreter(dna);\r\n    this.mutationEngine = new MutationEngine();\r\n    this.generator = new ProceduralGenerator(this.dnaInterpreter.getCurrentParameters());\r\n    this.performanceMonitor = new PerformanceMonitor(0.3);\r\n    \r\n    // Propriétés initiales\r\n    this.traits = {\r\n      curiosity: 0.5, focus: 0.5, rhythm: 0.5, empathy: 0.5,\r\n      creativity: 0.5, resilience: 0.5, adaptability: 0.5, \r\n      memory: 0.5, intuition: 0.5\r\n    };\r\n    this.visualProperties = {\r\n      primaryColor: { h: 200, s: 80, l: 60 },\r\n      secondaryColor: { h: 340, s: 60, l: 40 }\r\n    };\r\n    this.currentState = {\r\n      id: 'engine',\r\n      generation: 1,\r\n      health: 1,\r\n      energy: 1,\r\n      traits: this.traits,\r\n      visualDNA: dna,\r\n      lastMutation: Date.now(),\r\n      mutations: [],\r\n      createdAt: Date.now(),\r\n      dna: dna,\r\n      birthTime: Date.now(),\r\n      socialConnections: [],\r\n      memoryFragments: []\r\n    };\r\n    \r\n    // Génération de la géométrie initiale\r\n    this.geometry = this.generator.generateBaseForm(this.dnaInterpreter.getCurrentParameters());\r\n    // Génération et upload de la texture fractale\r\n    const fractal = this.generator.generateFractalPattern(Date.now());\r\n    this.fractalTexture = this.createGLTexture(fractal);\r\n    this.setupGL();\r\n    this.setupShaders();\r\n    this.setupBuffers();\r\n  }\r\n  \r\n  /**\r\n   * Configuration WebGL\r\n   */\r\n  private setupGL(): void {\r\n    const gl = this.gl;\r\n    \r\n    // Configuration de base\r\n    gl.clearColor(0, 0, 0, 0);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.depthFunc(gl.LEQUAL);\r\n    \r\n    // Configuration du viewport\r\n    this.resizeCanvas();\r\n    \r\n    // Event listener pour redimensionnement\r\n    window.addEventListener('resize', this.resizeCanvas.bind(this));\r\n  }\r\n  \r\n  /**\r\n   * Mise à jour du viewport canvas\r\n   */\r\n  private resizeCanvas(): void {\r\n    // Ajustement pour la densité de pixels\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n    \r\n    // Taille affichée\r\n    const displayWidth = this.canvas.clientWidth;\r\n    const displayHeight = this.canvas.clientHeight;\r\n    \r\n    // Vérifier si le redimensionnement est nécessaire\r\n    if (this.canvas.width !== displayWidth * devicePixelRatio ||\r\n        this.canvas.height !== displayHeight * devicePixelRatio) {\r\n        \r\n      // Ajuster le buffer canvas\r\n      this.canvas.width = displayWidth * devicePixelRatio;\r\n      this.canvas.height = displayHeight * devicePixelRatio;\r\n      \r\n      // Mettre à jour le viewport\r\n      this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Préparation des buffers WebGL\r\n   */\r\n  private setupBuffers(): void {\r\n    const gl = this.gl;\r\n    \r\n    // Vertex buffer\r\n    this.vertexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, this.geometry.vertices, gl.STATIC_DRAW);\r\n    \r\n    // Index buffer\r\n    this.indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.geometry.indices, gl.STATIC_DRAW);\r\n  }\r\n  \r\n  /**\r\n   * Compilation et linkage des shaders\r\n   */\r\n  private setupShaders(): void {\r\n    const gl = this.gl;\r\n    const vert = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\r\n    const frag = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\r\n    if (!vert || !frag) throw new Error('Shader compilation failed');\r\n    this.program = gl.createProgram();\r\n    if (!this.program) throw new Error('Program creation failed');\r\n    gl.attachShader(this.program, vert);\r\n    gl.attachShader(this.program, frag);\r\n    gl.linkProgram(this.program);\r\n    if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\r\n      throw new Error('Shader program linking failed: ' + gl.getProgramInfoLog(this.program));\r\n    }\r\n    gl.deleteShader(vert);\r\n    gl.deleteShader(frag);\r\n  }\r\n  \r\n  private compileShader(source: string, type: number): WebGLShader | null {\r\n    const gl = this.gl;\r\n    const shader = gl.createShader(type);\r\n    if (!shader) return null;\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      SecureLogger.error('Shader compilation error:', gl.getShaderInfoLog(shader));\r\n      gl.deleteShader(shader);\r\n      return null;\r\n    }\r\n    return shader;\r\n  }\r\n  \r\n  /**\r\n   * Rendu principal\r\n   */\r\n  public render(state?: OrganismState): void {\r\n    if (state) {\r\n      this.currentState = state;\r\n      // Adapter dynamiquement les paramètres selon les traits\r\n      const traits = state.traits || this.traits;\r\n      const params = this.dnaInterpreter.getCurrentParameters();\r\n      // Influence des traits sur les paramètres visuels\r\n      params.complexity = 0.3 + 0.7 * (traits.curiosity ?? 0.5); // curiosité → complexité\r\n      params.patternDensity = 0.2 + 0.8 * (traits.creativity ?? 0.5); // créativité → densité\r\n      params.colorVariance = 0.1 + 0.7 * (traits.creativity ?? 0.5); // créativité → variance chromatique\r\n      params.symmetry = 0.2 + 0.7 * (traits.focus ?? 0.5); // focus → symétrie\r\n      params.fluidity = 0.2 + 0.7 * (traits.energy ?? 0.5); // énergie → fluidité\r\n      // Régénérer la géométrie si la complexité change beaucoup\r\n      if (Math.abs(params.complexity - this.lastGeometryComplexity) > 0.2) {\r\n        this.geometry = this.generator.generateBaseForm(params);\r\n        this.setupBuffers();\r\n        this.lastGeometryComplexity = params.complexity;\r\n      }\r\n    }\r\n    this.performanceMonitor.startFrame();\r\n    const gl = this.gl;\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n    if (!this.program) return;\r\n    gl.useProgram(this.program);\r\n    this.setupAttributes();\r\n    this.setupUniforms();\r\n    gl.drawElements(gl.TRIANGLES, this.geometry.indices.length, gl.UNSIGNED_SHORT, 0);\r\n    this.frameCount++;\r\n    this.performanceMonitor.endFrame();\r\n  }\r\n  \r\n  /**\r\n   * Configuration des attributs du shader\r\n   */\r\n  private setupAttributes(): void {\r\n    const gl = this.gl;\r\n    if (!this.program) return;\r\n    // a_position\r\n    const posLoc = gl.getAttribLocation(this.program, 'a_position');\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n    gl.enableVertexAttribArray(posLoc);\r\n    gl.vertexAttribPointer(posLoc, 3, gl.FLOAT, false, 0, 0);\r\n    // (ajouter a_texCoord si besoin)\r\n    // Index buffer déjà bindé\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n  }\r\n  \r\n  /**\r\n   * Configuration des uniforms du shader\r\n   */\r\n  private setupUniforms(): void {\r\n    const gl = this.gl;\r\n    if (!this.program) return;\r\n    // Temps\r\n    const timeLoc = gl.getUniformLocation(this.program, 'u_time');\r\n    gl.uniform1f(timeLoc, this.frameCount * 0.016);\r\n    // Paramètres DNA\r\n    const params = this.dnaInterpreter.getCurrentParameters();\r\n    gl.uniform3fv(gl.getUniformLocation(this.program, 'u_primaryColor'), params.primaryColor);\r\n    gl.uniform3fv(gl.getUniformLocation(this.program, 'u_secondaryColor'), params.secondaryColor);\r\n    gl.uniform1f(gl.getUniformLocation(this.program, 'u_complexity'), params.complexity);\r\n    gl.uniform1f(gl.getUniformLocation(this.program, 'u_symmetry'), params.symmetry);\r\n    gl.uniform1f(gl.getUniformLocation(this.program, 'u_fluidity'), params.fluidity);\r\n    gl.uniform1f(gl.getUniformLocation(this.program, 'u_colorVariance'), params.colorVariance);\r\n    gl.uniform1f(gl.getUniformLocation(this.program, 'u_patternDensity'), params.patternDensity);\r\n    // Mutations\r\n    this.mutationEngine.update(performance.now());\r\n    const mutationState = this.mutationEngine.getCurrentState();\r\n    gl.uniform1f(gl.getUniformLocation(this.program, 'u_mutation'), mutationState.colorShift || 0);\r\n    // Texture fractale\r\n    if (this.fractalTexture) {\r\n      const fractalLoc = gl.getUniformLocation(this.program, 'u_fractalTex');\r\n      gl.activeTexture(gl.TEXTURE0);\r\n      gl.bindTexture(gl.TEXTURE_2D, this.fractalTexture);\r\n      gl.uniform1i(fractalLoc, 0);\r\n    }\r\n    // (ajouter d'autres uniforms selon le shader)\r\n  }\r\n  \r\n  /**\r\n   * Application d'une mutation\r\n   */\r\n  public mutate(mutation: OrganismMutation): void {\r\n    // On ignore les mutations non visuelles pour le moteur WebGL\r\n    if (!['visual', 'behavioral', 'cognitive'].includes(mutation.type)) {\r\n      return;\r\n    }\r\n    this.mutationEngine.apply(mutation as any); // Cast sûr car on filtre ci-dessus\r\n  }\r\n  \r\n  /**\r\n   * Récupération des métriques de performance\r\n   */\r\n  public getPerformanceMetrics() {\r\n    return this.performanceMonitor.getMetrics();\r\n  }\r\n  \r\n  /**\r\n   * Nettoyage mémoire et ressources\r\n   */\r\n  public cleanup(): void {\r\n    const gl = this.gl;\r\n    if (this.vertexBuffer) gl.deleteBuffer(this.vertexBuffer);\r\n    if (this.indexBuffer) gl.deleteBuffer(this.indexBuffer);\r\n    if (this.program) gl.deleteProgram(this.program);\r\n    \r\n    // Suppression des event listeners\r\n    window.removeEventListener('resize', this.resizeCanvas.bind(this));\r\n    \r\n    SecureLogger.info('OrganismEngine resources cleaned up');\r\n  }\r\n  \r\n  /**\r\n   * Indique si le moteur est prêt\r\n   */\r\n  public isInitialized(): boolean {\r\n    return !!this.gl && !!this.program;\r\n  }\r\n  \r\n  private createGLTexture(textureData: { data: Uint8Array; width: number; height: number }): WebGLTexture {\r\n    const gl = this.gl;\r\n    const tex = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, tex);\r\n    gl.texImage2D(\r\n      gl.TEXTURE_2D,\r\n      0,\r\n      gl.RGBA,\r\n      textureData.width,\r\n      textureData.height,\r\n      0,\r\n      gl.RGBA,\r\n      gl.UNSIGNED_BYTE,\r\n      textureData.data\r\n    );\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    return tex!;\r\n  }\r\n}"],"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","ignoreList":[]}