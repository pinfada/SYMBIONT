5b340841b8b95ed6267674eea1548c80
"use strict";

/* istanbul ignore next */
function cov_1azo45gbtr() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/basic-health-monitor.ts";
  var hash = "edb96e74f7b7f637e2be811f89cee56b25aa8565";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/basic-health-monitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 23
        },
        end: {
          line: 4,
          column: 60
        }
      },
      "3": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 60
        }
      },
      "4": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 15,
          column: 10
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 36
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 35
        }
      },
      "8": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 20,
          column: 47
        }
      },
      "9": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 47
        }
      },
      "10": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 31
        }
      },
      "11": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 27,
          column: 18
        }
      },
      "12": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 34
        }
      },
      "13": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "14": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 62
        }
      },
      "15": {
        start: {
          line: 32,
          column: 23
        },
        end: {
          line: 32,
          column: 64
        }
      },
      "16": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 64
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "18": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 41
        }
      },
      "19": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 43
        }
      },
      "20": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 38,
          column: 37
        }
      },
      "21": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 37
        }
      },
      "22": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 40,
          column: 40
        }
      },
      "23": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 40
        }
      },
      "24": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 42,
          column: 41
        }
      },
      "25": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 41
        }
      },
      "26": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 45,
          column: 79
        }
      },
      "27": {
        start: {
          line: 45,
          column: 29
        },
        end: {
          line: 45,
          column: 79
        }
      },
      "28": {
        start: {
          line: 45,
          column: 50
        },
        end: {
          line: 45,
          column: 55
        }
      },
      "29": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 46,
          column: 44
        }
      },
      "30": {
        start: {
          line: 47,
          column: 23
        },
        end: {
          line: 47,
          column: 47
        }
      },
      "31": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 48
        }
      },
      "32": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 51,
          column: 59
        }
      },
      "33": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 59
        }
      },
      "34": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 53,
          column: 71
        }
      },
      "35": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 71
        }
      },
      "36": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 55,
          column: 71
        }
      },
      "37": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 71
        }
      },
      "38": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 57,
          column: 69
        }
      },
      "39": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 69
        }
      },
      "40": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 30
        }
      },
      "41": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 63,
          column: 42
        }
      },
      "42": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 64,
          column: 30
        }
      },
      "43": {
        start: {
          line: 65,
          column: 26
        },
        end: {
          line: 65,
          column: 55
        }
      },
      "44": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "45": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 66
        }
      },
      "46": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 47
        }
      },
      "47": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 71,
          column: 40
        }
      },
      "48": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 40
        }
      },
      "49": {
        start: {
          line: 75,
          column: 0
        },
        end: {
          line: 75,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 31
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 22
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 24,
            column: 21
          }
        },
        loc: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 27,
            column: 9
          }
        },
        line: 24
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 21
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 18
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 44
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 45,
            column: 21
          }
        },
        loc: {
          start: {
            line: 45,
            column: 29
          },
          end: {
            line: 45,
            column: 79
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 45,
            column: 40
          },
          end: {
            line: 45,
            column: 41
          }
        },
        loc: {
          start: {
            line: 45,
            column: 50
          },
          end: {
            line: 45,
            column: 55
          }
        },
        line: 45
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 15
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 15
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 62
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 20,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 20,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 38,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 38,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 40,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 40,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 42,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 42,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 63
          },
          end: {
            line: 45,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 63
          },
          end: {
            line: 45,
            column: 73
          }
        }, {
          start: {
            line: 45,
            column: 77
          },
          end: {
            line: 45,
            column: 78
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 51,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 51,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 71
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 55,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 55,
            column: 71
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "8": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 57,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "9": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 22
          }
        }, {
          start: {
            line: 67,
            column: 26
          },
          end: {
            line: 67,
            column: 62
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 71,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 71,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/basic-health-monitor.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/basic-health-monitor.ts"],
      sourcesContent: ["import { SecureRandom } from '@shared/utils/secureRandom';\nimport { logger } from '@shared/utils/secureLogger';\n// monitoring/basic-health-monitor.ts\r\n// Monitoring basique de la sant\xE9 du syst\xE8me (Phase 1)\r\n\r\nexport class BasicHealthMonitor {\r\n  private metrics: any = {\r\n    cpu: [],\r\n    memory: [],\r\n    latency: [],\r\n    errors: 0\r\n  }\r\n  private alertCallback: ((msg: string) => void) | null = null\r\n  private lastAlerts: Map<string, number> = new Map()\r\n  private alertCooldown = 30000 // 30 secondes de cooldown entre alertes similaires\r\n\r\n  constructor(alertCallback?: (msg: string) => void) {\r\n    if (alertCallback) this.alertCallback = alertCallback\r\n    this.setupMonitoring()\r\n  }\r\n\r\n  private setupMonitoring(): void {\r\n    setInterval(() => {\r\n      this.collectMetrics()\r\n      this.checkHealth()\r\n    }, 30000) // Toutes les 30 secondes au lieu de 5\r\n  }\r\n\r\n  private collectMetrics(): void {\r\n    // Simule la collecte CPU/m\xE9moire/latence\r\n    const cpu = SecureRandom.random() * 0.2\r\n    const memory = SecureRandom.random() * 20\r\n    const latency = SecureRandom.random() * 5\r\n    this.metrics.cpu.push(cpu)\r\n    this.metrics.memory.push(memory)\r\n    this.metrics.latency.push(latency)\r\n    if (this.metrics.cpu.length > 20) this.metrics.cpu.shift()\r\n    if (this.metrics.memory.length > 20) this.metrics.memory.shift()\r\n    if (this.metrics.latency.length > 20) this.metrics.latency.shift()\r\n  }\r\n\r\n  private checkHealth(): void {\r\n    const avg = (arr: number[]) => arr.reduce((a, b) => a + b, 0) / (arr.length || 1)\r\n    const cpuAvg = avg(this.metrics.cpu)\r\n    const memAvg = avg(this.metrics.memory)\r\n    const latAvg = avg(this.metrics.latency)\r\n    \r\n    // Seuils plus \xE9lev\xE9s pour \xE9viter les fausses alertes\r\n    if (cpuAvg > 0.5) this.alert('CPU \xE9lev\xE9 : ' + cpuAvg.toFixed(3))\r\n    if (memAvg > 50) this.alert('M\xE9moire \xE9lev\xE9e : ' + memAvg.toFixed(2) + 'MB')\r\n    if (latAvg > 10) this.alert('Latence \xE9lev\xE9e : ' + latAvg.toFixed(2) + 'ms')\r\n    if (this.metrics.errors > 5) this.alert('Erreurs d\xE9tect\xE9es : ' + this.metrics.errors)\r\n  }\r\n\r\n  public logError() {\r\n    this.metrics.errors++\r\n  }\r\n\r\n  private alert(msg: string) {\r\n    const alertKey = msg.split(':')[0]; // Utilise le type d'alerte comme cl\xE9\r\n    const now = Date.now();\r\n    const lastAlert = this.lastAlerts.get(alertKey);\r\n    \r\n    // V\xE9rifie le cooldown\r\n    if (!lastAlert || now - lastAlert > this.alertCooldown) {\r\n      logger.warn('\uD83D\uDED1 [HealthMonitor]', msg)\r\n      this.lastAlerts.set(alertKey, now);\r\n      if (this.alertCallback) this.alertCallback(msg)\r\n    }\r\n  }\r\n}\r\n\r\n// TODO: Exporter/brancher sur le background principal "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "edb96e74f7b7f637e2be811f89cee56b25aa8565"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1azo45gbtr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1azo45gbtr();
cov_1azo45gbtr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1azo45gbtr().s[1]++;
exports.BasicHealthMonitor = void 0;
const secureRandom_1 =
/* istanbul ignore next */
(cov_1azo45gbtr().s[2]++, require("@shared/utils/secureRandom"));
const secureLogger_1 =
/* istanbul ignore next */
(cov_1azo45gbtr().s[3]++, require("@shared/utils/secureLogger"));
// monitoring/basic-health-monitor.ts
// Monitoring basique de la santé du système (Phase 1)
class BasicHealthMonitor {
  constructor(alertCallback) {
    /* istanbul ignore next */
    cov_1azo45gbtr().f[0]++;
    cov_1azo45gbtr().s[4]++;
    this.metrics = {
      cpu: [],
      memory: [],
      latency: [],
      errors: 0
    };
    /* istanbul ignore next */
    cov_1azo45gbtr().s[5]++;
    this.alertCallback = null;
    /* istanbul ignore next */
    cov_1azo45gbtr().s[6]++;
    this.lastAlerts = new Map();
    /* istanbul ignore next */
    cov_1azo45gbtr().s[7]++;
    this.alertCooldown = 30000; // 30 secondes de cooldown entre alertes similaires
    /* istanbul ignore next */
    cov_1azo45gbtr().s[8]++;
    if (alertCallback) {
      /* istanbul ignore next */
      cov_1azo45gbtr().b[0][0]++;
      cov_1azo45gbtr().s[9]++;
      this.alertCallback = alertCallback;
    } else
    /* istanbul ignore next */
    {
      cov_1azo45gbtr().b[0][1]++;
    }
    cov_1azo45gbtr().s[10]++;
    this.setupMonitoring();
  }
  setupMonitoring() {
    /* istanbul ignore next */
    cov_1azo45gbtr().f[1]++;
    cov_1azo45gbtr().s[11]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_1azo45gbtr().f[2]++;
      cov_1azo45gbtr().s[12]++;
      this.collectMetrics();
      /* istanbul ignore next */
      cov_1azo45gbtr().s[13]++;
      this.checkHealth();
    }, 30000); // Toutes les 30 secondes au lieu de 5
  }
  collectMetrics() {
    /* istanbul ignore next */
    cov_1azo45gbtr().f[3]++;
    // Simule la collecte CPU/mémoire/latence
    const cpu =
    /* istanbul ignore next */
    (cov_1azo45gbtr().s[14]++, secureRandom_1.SecureRandom.random() * 0.2);
    const memory =
    /* istanbul ignore next */
    (cov_1azo45gbtr().s[15]++, secureRandom_1.SecureRandom.random() * 20);
    const latency =
    /* istanbul ignore next */
    (cov_1azo45gbtr().s[16]++, secureRandom_1.SecureRandom.random() * 5);
    /* istanbul ignore next */
    cov_1azo45gbtr().s[17]++;
    this.metrics.cpu.push(cpu);
    /* istanbul ignore next */
    cov_1azo45gbtr().s[18]++;
    this.metrics.memory.push(memory);
    /* istanbul ignore next */
    cov_1azo45gbtr().s[19]++;
    this.metrics.latency.push(latency);
    /* istanbul ignore next */
    cov_1azo45gbtr().s[20]++;
    if (this.metrics.cpu.length > 20) {
      /* istanbul ignore next */
      cov_1azo45gbtr().b[1][0]++;
      cov_1azo45gbtr().s[21]++;
      this.metrics.cpu.shift();
    } else
    /* istanbul ignore next */
    {
      cov_1azo45gbtr().b[1][1]++;
    }
    cov_1azo45gbtr().s[22]++;
    if (this.metrics.memory.length > 20) {
      /* istanbul ignore next */
      cov_1azo45gbtr().b[2][0]++;
      cov_1azo45gbtr().s[23]++;
      this.metrics.memory.shift();
    } else
    /* istanbul ignore next */
    {
      cov_1azo45gbtr().b[2][1]++;
    }
    cov_1azo45gbtr().s[24]++;
    if (this.metrics.latency.length > 20) {
      /* istanbul ignore next */
      cov_1azo45gbtr().b[3][0]++;
      cov_1azo45gbtr().s[25]++;
      this.metrics.latency.shift();
    } else
    /* istanbul ignore next */
    {
      cov_1azo45gbtr().b[3][1]++;
    }
  }
  checkHealth() {
    /* istanbul ignore next */
    cov_1azo45gbtr().f[4]++;
    cov_1azo45gbtr().s[26]++;
    const avg = arr => {
      /* istanbul ignore next */
      cov_1azo45gbtr().f[5]++;
      cov_1azo45gbtr().s[27]++;
      return arr.reduce((a, b) => {
        /* istanbul ignore next */
        cov_1azo45gbtr().f[6]++;
        cov_1azo45gbtr().s[28]++;
        return a + b;
      }, 0) / (
      /* istanbul ignore next */
      (cov_1azo45gbtr().b[4][0]++, arr.length) ||
      /* istanbul ignore next */
      (cov_1azo45gbtr().b[4][1]++, 1));
    };
    const cpuAvg =
    /* istanbul ignore next */
    (cov_1azo45gbtr().s[29]++, avg(this.metrics.cpu));
    const memAvg =
    /* istanbul ignore next */
    (cov_1azo45gbtr().s[30]++, avg(this.metrics.memory));
    const latAvg =
    /* istanbul ignore next */
    (cov_1azo45gbtr().s[31]++, avg(this.metrics.latency));
    // Seuils plus élevés pour éviter les fausses alertes
    /* istanbul ignore next */
    cov_1azo45gbtr().s[32]++;
    if (cpuAvg > 0.5) {
      /* istanbul ignore next */
      cov_1azo45gbtr().b[5][0]++;
      cov_1azo45gbtr().s[33]++;
      this.alert('CPU élevé : ' + cpuAvg.toFixed(3));
    } else
    /* istanbul ignore next */
    {
      cov_1azo45gbtr().b[5][1]++;
    }
    cov_1azo45gbtr().s[34]++;
    if (memAvg > 50) {
      /* istanbul ignore next */
      cov_1azo45gbtr().b[6][0]++;
      cov_1azo45gbtr().s[35]++;
      this.alert('Mémoire élevée : ' + memAvg.toFixed(2) + 'MB');
    } else
    /* istanbul ignore next */
    {
      cov_1azo45gbtr().b[6][1]++;
    }
    cov_1azo45gbtr().s[36]++;
    if (latAvg > 10) {
      /* istanbul ignore next */
      cov_1azo45gbtr().b[7][0]++;
      cov_1azo45gbtr().s[37]++;
      this.alert('Latence élevée : ' + latAvg.toFixed(2) + 'ms');
    } else
    /* istanbul ignore next */
    {
      cov_1azo45gbtr().b[7][1]++;
    }
    cov_1azo45gbtr().s[38]++;
    if (this.metrics.errors > 5) {
      /* istanbul ignore next */
      cov_1azo45gbtr().b[8][0]++;
      cov_1azo45gbtr().s[39]++;
      this.alert('Erreurs détectées : ' + this.metrics.errors);
    } else
    /* istanbul ignore next */
    {
      cov_1azo45gbtr().b[8][1]++;
    }
  }
  logError() {
    /* istanbul ignore next */
    cov_1azo45gbtr().f[7]++;
    cov_1azo45gbtr().s[40]++;
    this.metrics.errors++;
  }
  alert(msg) {
    /* istanbul ignore next */
    cov_1azo45gbtr().f[8]++;
    const alertKey =
    /* istanbul ignore next */
    (cov_1azo45gbtr().s[41]++, msg.split(':')[0]); // Utilise le type d'alerte comme clé
    const now =
    /* istanbul ignore next */
    (cov_1azo45gbtr().s[42]++, Date.now());
    const lastAlert =
    /* istanbul ignore next */
    (cov_1azo45gbtr().s[43]++, this.lastAlerts.get(alertKey));
    // Vérifie le cooldown
    /* istanbul ignore next */
    cov_1azo45gbtr().s[44]++;
    if (
    /* istanbul ignore next */
    (cov_1azo45gbtr().b[10][0]++, !lastAlert) ||
    /* istanbul ignore next */
    (cov_1azo45gbtr().b[10][1]++, now - lastAlert > this.alertCooldown)) {
      /* istanbul ignore next */
      cov_1azo45gbtr().b[9][0]++;
      cov_1azo45gbtr().s[45]++;
      secureLogger_1.logger.warn('🛑 [HealthMonitor]', msg);
      /* istanbul ignore next */
      cov_1azo45gbtr().s[46]++;
      this.lastAlerts.set(alertKey, now);
      /* istanbul ignore next */
      cov_1azo45gbtr().s[47]++;
      if (this.alertCallback) {
        /* istanbul ignore next */
        cov_1azo45gbtr().b[11][0]++;
        cov_1azo45gbtr().s[48]++;
        this.alertCallback(msg);
      } else
      /* istanbul ignore next */
      {
        cov_1azo45gbtr().b[11][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1azo45gbtr().b[9][1]++;
    }
  }
}
/* istanbul ignore next */
cov_1azo45gbtr().s[49]++;
exports.BasicHealthMonitor = BasicHealthMonitor;
// TODO: Exporter/brancher sur le background principal
//# sourceMappingURL=data:application/json;charset=utf-8;base64,