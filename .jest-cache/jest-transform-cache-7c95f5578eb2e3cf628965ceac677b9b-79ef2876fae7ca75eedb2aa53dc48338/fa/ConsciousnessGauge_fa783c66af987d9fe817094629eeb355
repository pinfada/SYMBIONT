f87c5f8a2502a1bb3a2ffd4accbcce1c
"use strict";

/* istanbul ignore next */
function cov_mg7v89nd8() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/ConsciousnessGauge.tsx";
  var hash = "33a53f70addf8b901bb890b38e16e21080cc3edc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/ConsciousnessGauge.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 36
        }
      },
      "4": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 50
        }
      },
      "5": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 49
        }
      },
      "6": {
        start: {
          line: 9,
          column: 27
        },
        end: {
          line: 15,
          column: 1
        }
      },
      "7": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 31
        }
      },
      "8": {
        start: {
          line: 11,
          column: 26
        },
        end: {
          line: 11,
          column: 46
        }
      },
      "9": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "10": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "11": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 915
        }
      },
      "12": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 9,
            column: 28
          }
        },
        loc: {
          start: {
            line: 9,
            column: 94
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 9,
            column: 37
          },
          end: {
            line: 9,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 45
          },
          end: {
            line: 9,
            column: 57
          }
        }],
        line: 9
      },
      "4": {
        loc: {
          start: {
            line: 9,
            column: 59
          },
          end: {
            line: 9,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 66
          },
          end: {
            line: 9,
            column: 68
          }
        }],
        line: 9
      },
      "5": {
        loc: {
          start: {
            line: 9,
            column: 70
          },
          end: {
            line: 9,
            column: 87
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 78
          },
          end: {
            line: 9,
            column: 87
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/ConsciousnessGauge.tsx",
      mappings: ";;;;;;;AAAA,kDAA0B;AAiBnB,MAAM,kBAAkB,GAAsC,CAAC,EACpE,KAAK,EACL,KAAK,GAAG,YAAY,EACpB,IAAI,GAAG,EAAE,EACT,KAAK,GAAG,SAAS,EAClB,EAAE,EAAE;IACH,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5B,MAAM,aAAa,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;IAC3C,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACjD,MAAM,MAAM,GAAG,aAAa,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;IAE9C,OAAO,CACL,iCAAK,KAAK,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,SAAS,EAAE,QAAQ,EAAE,aAC1D,iCAAK,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,aAC5B,mCACE,EAAE,EAAE,IAAI,GAAG,CAAC,EACZ,EAAE,EAAE,IAAI,GAAG,CAAC,EACZ,CAAC,EAAE,MAAM,EACT,MAAM,EAAC,MAAM,EACb,WAAW,EAAE,CAAC,EACd,IAAI,EAAC,MAAM,GACX,EACF,mCACE,EAAE,EAAE,IAAI,GAAG,CAAC,EACZ,EAAE,EAAE,IAAI,GAAG,CAAC,EACZ,CAAC,EAAE,MAAM,EACT,MAAM,EAAE,KAAK,EACb,WAAW,EAAE,CAAC,EACd,IAAI,EAAC,MAAM,EACX,eAAe,EAAE,aAAa,EAC9B,gBAAgB,EAAE,MAAM,EACxB,aAAa,EAAC,OAAO,EACrB,KAAK,EAAE,EAAE,UAAU,EAAE,gDAAgD,EAAE,GACvE,EACF,kCACE,CAAC,EAAC,KAAK,EACP,CAAC,EAAC,KAAK,EACP,UAAU,EAAC,QAAQ,EACnB,gBAAgB,EAAC,SAAS,EAC1B,QAAQ,EAAE,IAAI,GAAG,IAAI,EACrB,IAAI,EAAC,MAAM,EACX,UAAU,EAAE,GAAG,aAEd,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SACvB,IACH,EACN,gCAAK,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,GAAG,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,YAAG,KAAK,GAAO,IAC7E,CACP,CAAC;AACJ,CAAC,CAAC;AAjDW,QAAA,kBAAkB,sBAiD7B",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/ui/ConsciousnessGauge.tsx"],
      sourcesContent: ["import React from 'react';\r\n\r\n/**\r\n * ConsciousnessGauge - Jauge de conscience (score 0-1)\r\n * Props :\r\n *   - value : niveau de conscience (0 \xE0 1)\r\n *   - label : texte optionnel\r\n *   - size : diam\xE8tre en px (d\xE9faut 80)\r\n *   - color : couleur principale (d\xE9faut #00e0ff)\r\n */\r\ninterface ConsciousnessGaugeProps {\r\n  value: number;\r\n  label?: string;\r\n  size?: number;\r\n  color?: string;\r\n}\r\n\r\nexport const ConsciousnessGauge: React.FC<ConsciousnessGaugeProps> = ({\r\n  value,\r\n  label = 'Conscience',\r\n  size = 80,\r\n  color = '#00e0ff'\r\n}) => {\r\n  const radius = size / 2 - 8;\r\n  const circumference = 2 * Math.PI * radius;\r\n  const progress = Math.max(0, Math.min(1, value));\r\n  const offset = circumference * (1 - progress);\r\n\r\n  return (\r\n    <div style={{ display: 'inline-block', textAlign: 'center' }}>\r\n      <svg width={size} height={size}>\r\n        <circle\r\n          cx={size / 2}\r\n          cy={size / 2}\r\n          r={radius}\r\n          stroke=\"#222\"\r\n          strokeWidth={8}\r\n          fill=\"none\"\r\n        />\r\n        <circle\r\n          cx={size / 2}\r\n          cy={size / 2}\r\n          r={radius}\r\n          stroke={color}\r\n          strokeWidth={8}\r\n          fill=\"none\"\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={offset}\r\n          strokeLinecap=\"round\"\r\n          style={{ transition: 'stroke-dashoffset 0.6s cubic-bezier(.4,2,.3,1)' }}\r\n        />\r\n        <text\r\n          x=\"50%\"\r\n          y=\"50%\"\r\n          textAnchor=\"middle\"\r\n          dominantBaseline=\"central\"\r\n          fontSize={size * 0.22}\r\n          fill=\"#fff\"\r\n          fontWeight={600}\r\n        >\r\n          {(progress * 100).toFixed(0)}%\r\n        </text>\r\n      </svg>\r\n      <div style={{ color: '#aaa', fontSize: size * 0.18, marginTop: 4 }}>{label}</div>\r\n    </div>\r\n  );\r\n}; "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "33a53f70addf8b901bb890b38e16e21080cc3edc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_mg7v89nd8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_mg7v89nd8();
var __importDefault =
/* istanbul ignore next */
(cov_mg7v89nd8().s[0]++,
/* istanbul ignore next */
(cov_mg7v89nd8().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_mg7v89nd8().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_mg7v89nd8().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_mg7v89nd8().f[0]++;
  cov_mg7v89nd8().s[1]++;
  return /* istanbul ignore next */(cov_mg7v89nd8().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_mg7v89nd8().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_mg7v89nd8().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_mg7v89nd8().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_mg7v89nd8().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_mg7v89nd8().s[3]++;
exports.ConsciousnessGauge = void 0;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_mg7v89nd8().s[4]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_mg7v89nd8().s[5]++, __importDefault(require("react")));
/* istanbul ignore next */
cov_mg7v89nd8().s[6]++;
const ConsciousnessGauge = ({
  value,
  label =
  /* istanbul ignore next */
  (cov_mg7v89nd8().b[3][0]++, 'Conscience'),
  size =
  /* istanbul ignore next */
  (cov_mg7v89nd8().b[4][0]++, 80),
  color =
  /* istanbul ignore next */
  (cov_mg7v89nd8().b[5][0]++, '#00e0ff')
}) => {
  /* istanbul ignore next */
  cov_mg7v89nd8().f[1]++;
  const radius =
  /* istanbul ignore next */
  (cov_mg7v89nd8().s[7]++, size / 2 - 8);
  const circumference =
  /* istanbul ignore next */
  (cov_mg7v89nd8().s[8]++, 2 * Math.PI * radius);
  const progress =
  /* istanbul ignore next */
  (cov_mg7v89nd8().s[9]++, Math.max(0, Math.min(1, value)));
  const offset =
  /* istanbul ignore next */
  (cov_mg7v89nd8().s[10]++, circumference * (1 - progress));
  /* istanbul ignore next */
  cov_mg7v89nd8().s[11]++;
  return (0, jsx_runtime_1.jsxs)("div", {
    style: {
      display: 'inline-block',
      textAlign: 'center'
    },
    children: [(0, jsx_runtime_1.jsxs)("svg", {
      width: size,
      height: size,
      children: [(0, jsx_runtime_1.jsx)("circle", {
        cx: size / 2,
        cy: size / 2,
        r: radius,
        stroke: "#222",
        strokeWidth: 8,
        fill: "none"
      }), (0, jsx_runtime_1.jsx)("circle", {
        cx: size / 2,
        cy: size / 2,
        r: radius,
        stroke: color,
        strokeWidth: 8,
        fill: "none",
        strokeDasharray: circumference,
        strokeDashoffset: offset,
        strokeLinecap: "round",
        style: {
          transition: 'stroke-dashoffset 0.6s cubic-bezier(.4,2,.3,1)'
        }
      }), (0, jsx_runtime_1.jsxs)("text", {
        x: "50%",
        y: "50%",
        textAnchor: "middle",
        dominantBaseline: "central",
        fontSize: size * 0.22,
        fill: "#fff",
        fontWeight: 600,
        children: [(progress * 100).toFixed(0), "%"]
      })]
    }), (0, jsx_runtime_1.jsx)("div", {
      style: {
        color: '#aaa',
        fontSize: size * 0.18,
        marginTop: 4
      },
      children: label
    })]
  });
};
/* istanbul ignore next */
cov_mg7v89nd8().s[12]++;
exports.ConsciousnessGauge = ConsciousnessGauge;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfbWc3djg5bmQ4IiwiYWN0dWFsQ292ZXJhZ2UiLCJyZWFjdF8xIiwicyIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJDb25zY2lvdXNuZXNzR2F1Z2UiLCJ2YWx1ZSIsImxhYmVsIiwiYiIsInNpemUiLCJjb2xvciIsImYiLCJyYWRpdXMiLCJjaXJjdW1mZXJlbmNlIiwiTWF0aCIsIlBJIiwicHJvZ3Jlc3MiLCJtYXgiLCJtaW4iLCJvZmZzZXQiLCJqc3hfcnVudGltZV8xIiwianN4cyIsInN0eWxlIiwiZGlzcGxheSIsInRleHRBbGlnbiIsImNoaWxkcmVuIiwid2lkdGgiLCJoZWlnaHQiLCJqc3giLCJjeCIsImN5IiwiciIsInN0cm9rZSIsInN0cm9rZVdpZHRoIiwiZmlsbCIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VMaW5lY2FwIiwidHJhbnNpdGlvbiIsIngiLCJ5IiwidGV4dEFuY2hvciIsImRvbWluYW50QmFzZWxpbmUiLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJ0b0ZpeGVkIiwibWFyZ2luVG9wIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi9tbnQvYy9Vc2Vycy9tX29saS9Qcm9qZXRzL1NZTUJJT05UL3NyYy91aS9Db25zY2lvdXNuZXNzR2F1Z2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcblxyXG4vKipcclxuICogQ29uc2Npb3VzbmVzc0dhdWdlIC0gSmF1Z2UgZGUgY29uc2NpZW5jZSAoc2NvcmUgMC0xKVxyXG4gKiBQcm9wcyA6XHJcbiAqICAgLSB2YWx1ZSA6IG5pdmVhdSBkZSBjb25zY2llbmNlICgwIMOgIDEpXHJcbiAqICAgLSBsYWJlbCA6IHRleHRlIG9wdGlvbm5lbFxyXG4gKiAgIC0gc2l6ZSA6IGRpYW3DqHRyZSBlbiBweCAoZMOpZmF1dCA4MClcclxuICogICAtIGNvbG9yIDogY291bGV1ciBwcmluY2lwYWxlIChkw6lmYXV0ICMwMGUwZmYpXHJcbiAqL1xyXG5pbnRlcmZhY2UgQ29uc2Npb3VzbmVzc0dhdWdlUHJvcHMge1xyXG4gIHZhbHVlOiBudW1iZXI7XHJcbiAgbGFiZWw/OiBzdHJpbmc7XHJcbiAgc2l6ZT86IG51bWJlcjtcclxuICBjb2xvcj86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IENvbnNjaW91c25lc3NHYXVnZTogUmVhY3QuRkM8Q29uc2Npb3VzbmVzc0dhdWdlUHJvcHM+ID0gKHtcclxuICB2YWx1ZSxcclxuICBsYWJlbCA9ICdDb25zY2llbmNlJyxcclxuICBzaXplID0gODAsXHJcbiAgY29sb3IgPSAnIzAwZTBmZidcclxufSkgPT4ge1xyXG4gIGNvbnN0IHJhZGl1cyA9IHNpemUgLyAyIC0gODtcclxuICBjb25zdCBjaXJjdW1mZXJlbmNlID0gMiAqIE1hdGguUEkgKiByYWRpdXM7XHJcbiAgY29uc3QgcHJvZ3Jlc3MgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCB2YWx1ZSkpO1xyXG4gIGNvbnN0IG9mZnNldCA9IGNpcmN1bWZlcmVuY2UgKiAoMSAtIHByb2dyZXNzKTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXYgc3R5bGU9e3sgZGlzcGxheTogJ2lubGluZS1ibG9jaycsIHRleHRBbGlnbjogJ2NlbnRlcicgfX0+XHJcbiAgICAgIDxzdmcgd2lkdGg9e3NpemV9IGhlaWdodD17c2l6ZX0+XHJcbiAgICAgICAgPGNpcmNsZVxyXG4gICAgICAgICAgY3g9e3NpemUgLyAyfVxyXG4gICAgICAgICAgY3k9e3NpemUgLyAyfVxyXG4gICAgICAgICAgcj17cmFkaXVzfVxyXG4gICAgICAgICAgc3Ryb2tlPVwiIzIyMlwiXHJcbiAgICAgICAgICBzdHJva2VXaWR0aD17OH1cclxuICAgICAgICAgIGZpbGw9XCJub25lXCJcclxuICAgICAgICAvPlxyXG4gICAgICAgIDxjaXJjbGVcclxuICAgICAgICAgIGN4PXtzaXplIC8gMn1cclxuICAgICAgICAgIGN5PXtzaXplIC8gMn1cclxuICAgICAgICAgIHI9e3JhZGl1c31cclxuICAgICAgICAgIHN0cm9rZT17Y29sb3J9XHJcbiAgICAgICAgICBzdHJva2VXaWR0aD17OH1cclxuICAgICAgICAgIGZpbGw9XCJub25lXCJcclxuICAgICAgICAgIHN0cm9rZURhc2hhcnJheT17Y2lyY3VtZmVyZW5jZX1cclxuICAgICAgICAgIHN0cm9rZURhc2hvZmZzZXQ9e29mZnNldH1cclxuICAgICAgICAgIHN0cm9rZUxpbmVjYXA9XCJyb3VuZFwiXHJcbiAgICAgICAgICBzdHlsZT17eyB0cmFuc2l0aW9uOiAnc3Ryb2tlLWRhc2hvZmZzZXQgMC42cyBjdWJpYy1iZXppZXIoLjQsMiwuMywxKScgfX1cclxuICAgICAgICAvPlxyXG4gICAgICAgIDx0ZXh0XHJcbiAgICAgICAgICB4PVwiNTAlXCJcclxuICAgICAgICAgIHk9XCI1MCVcIlxyXG4gICAgICAgICAgdGV4dEFuY2hvcj1cIm1pZGRsZVwiXHJcbiAgICAgICAgICBkb21pbmFudEJhc2VsaW5lPVwiY2VudHJhbFwiXHJcbiAgICAgICAgICBmb250U2l6ZT17c2l6ZSAqIDAuMjJ9XHJcbiAgICAgICAgICBmaWxsPVwiI2ZmZlwiXHJcbiAgICAgICAgICBmb250V2VpZ2h0PXs2MDB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgeyhwcm9ncmVzcyAqIDEwMCkudG9GaXhlZCgwKX0lXHJcbiAgICAgICAgPC90ZXh0PlxyXG4gICAgICA8L3N2Zz5cclxuICAgICAgPGRpdiBzdHlsZT17eyBjb2xvcjogJyNhYWEnLCBmb250U2l6ZTogc2l6ZSAqIDAuMTgsIG1hcmdpblRvcDogNCB9fT57bGFiZWx9PC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59OyAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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