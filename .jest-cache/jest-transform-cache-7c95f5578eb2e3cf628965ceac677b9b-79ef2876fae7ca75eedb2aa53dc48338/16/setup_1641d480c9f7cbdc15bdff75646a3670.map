{"file":"/mnt/c/Users/m_oli/Projets/SYMBIONT/__tests__/setup.ts","mappings":"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","names":[],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/__tests__/setup.ts"],"sourcesContent":["// Jest setup file for SYMBIONT tests\r\nimport '@testing-library/jest-dom';\r\n\r\n// Mock global objects that might not be available in test environment\r\nglobal.performance = global.performance || {};\r\nglobal.performance.now = jest.fn(() => Date.now());\r\nglobal.performance.mark = jest.fn();\r\nglobal.performance.measure = jest.fn();\r\nglobal.performance.clearMarks = jest.fn();\r\nglobal.performance.clearMeasures = jest.fn();\r\nglobal.performance.getEntries = jest.fn(() => []);\r\nglobal.performance.getEntriesByName = jest.fn(() => []);\r\nglobal.performance.getEntriesByType = jest.fn(() => []);\r\n\r\n// Mock PerformanceObserver\r\nglobal.PerformanceObserver = jest.fn().mockImplementation((callback) => ({\r\n  observe: jest.fn(),\r\n  disconnect: jest.fn(),\r\n  takeRecords: jest.fn(() => [])\r\n}));\r\n\r\n// Mock TextEncoder/TextDecoder for Node.js\r\nconst { TextEncoder, TextDecoder } = require('util');\r\nglobal.TextEncoder = TextEncoder;\r\nglobal.TextDecoder = TextDecoder;\r\n\r\n// Mock btoa/atob for Node.js\r\nglobal.btoa = global.btoa || ((str: string) => Buffer.from(str, 'binary').toString('base64'));\r\nglobal.atob = global.atob || ((str: string) => Buffer.from(str, 'base64').toString('binary'));\r\n\r\n// Mock crypto for WebCrypto\r\nconst mockCryptoKey = {\r\n  type: 'secret',\r\n  extractable: true,\r\n  algorithm: { name: 'AES-GCM', length: 256 },\r\n  usages: ['encrypt', 'decrypt']\r\n} as CryptoKey;\r\n\r\n// Create realistic mock data\r\nconst createMockEncryptionResult = (plaintext: string) => {\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(plaintext);\r\n  const iv = new Uint8Array(12);\r\n  const mockEncrypted = new Uint8Array(data.length + 16); // +16 for auth tag\r\n  data.forEach((byte, i) => {\r\n    mockEncrypted[i] = byte ^ 0xAA; // Simple XOR for mock encryption\r\n  });\r\n  return mockEncrypted.buffer;\r\n};\r\n\r\nconst createMockDecryptionResult = (encryptedData: ArrayBuffer) => {\r\n  const data = new Uint8Array(encryptedData);\r\n  const decrypted = new Uint8Array(data.length - 16); // -16 for auth tag\r\n  for (let i = 0; i < decrypted.length; i++) {\r\n    decrypted[i] = data[i] ^ 0xAA; // Reverse XOR\r\n  }\r\n  return decrypted.buffer;\r\n};\r\n\r\n// Enhanced crypto mock with better error handling\r\nconst cryptoSubtle = {\r\n  generateKey: jest.fn().mockImplementation(async (algorithm, extractable, usages) => {\r\n    // Add some validation\r\n    if (!algorithm || !usages) {\r\n      throw new Error('Invalid parameters for generateKey');\r\n    }\r\n    return mockCryptoKey;\r\n  }),\r\n  importKey: jest.fn().mockResolvedValue(mockCryptoKey),\r\n  exportKey: jest.fn().mockResolvedValue(new ArrayBuffer(32)),\r\n  encrypt: jest.fn().mockImplementation(async (algorithm, key, data) => {\r\n    try {\r\n      if (!algorithm || !key || !data) {\r\n        throw new Error('Missing required parameters for encryption');\r\n      }\r\n      const decoder = new TextDecoder();\r\n      const plaintext = decoder.decode(data);\r\n      return createMockEncryptionResult(plaintext);\r\n    } catch (error) {\r\n      throw new Error(`Crypto failure: ${error.message}`);\r\n    }\r\n  }),\r\n  decrypt: jest.fn().mockImplementation(async (algorithm, key, data) => {\r\n    try {\r\n      if (!algorithm || !key || !data) {\r\n        throw new Error('Missing required parameters for decryption');\r\n      }\r\n      return createMockDecryptionResult(data);\r\n    } catch (error) {\r\n      throw new Error(`Decrypt failure: ${error.message}`);\r\n    }\r\n  }),\r\n  digest: jest.fn().mockImplementation(async (algorithm, data) => {\r\n    if (!data) {\r\n      throw new Error('Data is required for digest');\r\n    }\r\n    // Mock SHA-256 hash - create realistic output\r\n    const input = data instanceof ArrayBuffer ? new Uint8Array(data) : new Uint8Array(data);\r\n    const hash = new Uint8Array(32);\r\n    for (let i = 0; i < 32; i++) {\r\n      hash[i] = (input[i % input.length] + i) % 256;\r\n    }\r\n    return hash.buffer;\r\n  })\r\n};\r\n\r\nconst cryptoGetRandomValues = jest.fn((arr) => {\r\n  // Mock crypto-secure values for tests (not cryptographically secure in test env)\r\n  for (let i = 0; i < arr.length; i++) {\r\n    arr[i] = Math.floor(Math.random() * 256);\r\n  }\r\n  return arr;\r\n});\r\n\r\nglobal.crypto = global.crypto || {};\r\nglobal.crypto.subtle = cryptoSubtle;\r\nglobal.crypto.getRandomValues = cryptoGetRandomValues;\r\n\r\n// swCryptoAPI will be mocked globally\r\n\r\n// Mock requestAnimationFrame and cancelAnimationFrame\r\nglobal.requestAnimationFrame = jest.fn((callback) => {\r\n  return setTimeout(callback, 16); // ~60fps\r\n});\r\n\r\nglobal.cancelAnimationFrame = jest.fn((id) => {\r\n  clearTimeout(id);\r\n});\r\n\r\n// Mock URL.createObjectURL for Web Workers\r\nglobal.URL = global.URL || {};\r\nglobal.URL.createObjectURL = jest.fn(() => 'blob:mock-url');\r\nglobal.URL.revokeObjectURL = jest.fn();\r\n\r\n// Mock Worker constructor with improved functionality\r\nglobal.Worker = jest.fn().mockImplementation((scriptURL) => {\r\n  const mockWorker = {\r\n    postMessage: jest.fn().mockImplementation((message) => {\r\n      // Simulate async response\r\n      setTimeout(() => {\r\n        if (mockWorker.onmessage) {\r\n          mockWorker.onmessage({ data: { type: 'response', payload: message } });\r\n        }\r\n      }, 10);\r\n    }),\r\n    terminate: jest.fn(),\r\n    addEventListener: jest.fn().mockImplementation((type, listener) => {\r\n      if (type === 'message') {\r\n        mockWorker.onmessage = listener;\r\n      } else if (type === 'error') {\r\n        mockWorker.onerror = listener;\r\n      }\r\n    }),\r\n    removeEventListener: jest.fn(),\r\n    onmessage: null,\r\n    onerror: null,\r\n    dispatchEvent: jest.fn()\r\n  };\r\n  \r\n  // Simulate worker ready state\r\n  setTimeout(() => {\r\n    if (mockWorker.onmessage) {\r\n      mockWorker.onmessage({ data: { type: 'ready' } });\r\n    }\r\n  }, 5);\r\n  \r\n  return mockWorker;\r\n});\r\n\r\n// Mock WebGL context\r\nconst createMockWebGLContext = () => ({\r\n  // WebGL constants\r\n  TRIANGLES: 4,\r\n  LINES: 1,\r\n  POINTS: 0,\r\n  ARRAY_BUFFER: 34962,\r\n  ELEMENT_ARRAY_BUFFER: 34963,\r\n  DYNAMIC_DRAW: 35048,\r\n  STATIC_DRAW: 35044,\r\n  FLOAT: 5126,\r\n  UNSIGNED_SHORT: 5123,\r\n  \r\n  // Buffer methods\r\n  createBuffer: jest.fn(() => ({ id: Math.random() })),\r\n  deleteBuffer: jest.fn(),\r\n  bindBuffer: jest.fn(),\r\n  bufferData: jest.fn(),\r\n  \r\n  // Vertex attributes\r\n  vertexAttribPointer: jest.fn(),\r\n  enableVertexAttribArray: jest.fn(),\r\n  disableVertexAttribArray: jest.fn(),\r\n  \r\n  // Drawing\r\n  drawArrays: jest.fn(),\r\n  drawElements: jest.fn(),\r\n  \r\n  // Shaders (for future tests)\r\n  createShader: jest.fn(() => ({ id: Math.random() })),\r\n  createProgram: jest.fn(() => ({ id: Math.random() })),\r\n  compileShader: jest.fn(),\r\n  linkProgram: jest.fn(),\r\n  useProgram: jest.fn(),\r\n  \r\n  // State\r\n  viewport: jest.fn(),\r\n  clear: jest.fn(),\r\n  clearColor: jest.fn(),\r\n  enable: jest.fn(),\r\n  disable: jest.fn(),\r\n  \r\n  // Error checking\r\n  getError: jest.fn(() => 0), // GL_NO_ERROR\r\n  \r\n  // Extensions\r\n  getExtension: jest.fn(),\r\n  getSupportedExtensions: jest.fn(() => [])\r\n});\r\n\r\n// Mock canvas and WebGL\r\n(HTMLCanvasElement.prototype.getContext as jest.Mock) = jest.fn((contextType) => {\r\n  if (contextType === 'webgl' || contextType === 'experimental-webgl') {\r\n    return createMockWebGLContext() as unknown as WebGLRenderingContext;\r\n  }\r\n  if (contextType === 'webgl2') {\r\n    return {\r\n      ...createMockWebGLContext(),\r\n      createVertexArray: jest.fn(() => ({ id: Math.random() })),\r\n      deleteVertexArray: jest.fn(),\r\n      bindVertexArray: jest.fn()\r\n    } as unknown as WebGL2RenderingContext;\r\n  }\r\n  return null;\r\n});\r\n\r\n// Mock Chrome APIs for extension testing\r\nconst mockStorageData: { [key: string]: any } = {};\r\n\r\n(global as any).chrome = {\r\n  runtime: {\r\n    onMessage: {\r\n      addListener: jest.fn(),\r\n      removeListener: jest.fn()\r\n    } as Partial<chrome.events.Event<any>>,\r\n    sendMessage: jest.fn(),\r\n    getURL: jest.fn((path: string) => `chrome-extension://mock-id/${path}`)\r\n  } as Partial<typeof chrome.runtime>,\r\n  tabs: {\r\n    query: jest.fn(),\r\n    create: jest.fn(),\r\n    update: jest.fn()\r\n  } as Partial<typeof chrome.tabs>,\r\n  storage: {\r\n    local: {\r\n      get: jest.fn().mockImplementation((keys?: string | string[] | null, callback?: (result: { [key: string]: any }) => void) => {\r\n        const result: { [key: string]: any } = {};\r\n        if (typeof keys === 'string') {\r\n          if (mockStorageData[keys] !== undefined) {\r\n            result[keys] = mockStorageData[keys];\r\n          }\r\n        } else if (Array.isArray(keys)) {\r\n          keys.forEach(key => {\r\n            if (mockStorageData[key] !== undefined) {\r\n              result[key] = mockStorageData[key];\r\n            }\r\n          });\r\n        } else {\r\n          Object.assign(result, mockStorageData);\r\n        }\r\n        if (callback) callback(result);\r\n        return Promise.resolve(result);\r\n      }),\r\n      set: jest.fn().mockImplementation((items: { [key: string]: any }, callback?: () => void) => {\r\n        Object.assign(mockStorageData, items);\r\n        if (callback) callback();\r\n        return Promise.resolve();\r\n      }),\r\n      remove: jest.fn().mockImplementation((keys: string | string[], callback?: () => void) => {\r\n        const keysArray = Array.isArray(keys) ? keys : [keys];\r\n        keysArray.forEach(key => delete mockStorageData[key]);\r\n        if (callback) callback();\r\n        return Promise.resolve();\r\n      }),\r\n      clear: jest.fn().mockImplementation((callback?: () => void) => {\r\n        Object.keys(mockStorageData).forEach(key => delete mockStorageData[key]);\r\n        if (callback) callback();\r\n        return Promise.resolve();\r\n      })\r\n    } as Partial<chrome.storage.LocalStorageArea>,\r\n    sync: {\r\n      get: jest.fn().mockResolvedValue({}),\r\n      set: jest.fn().mockResolvedValue(undefined),\r\n      remove: jest.fn().mockResolvedValue(undefined),\r\n      clear: jest.fn().mockResolvedValue(undefined)\r\n    } as Partial<chrome.storage.SyncStorageArea>\r\n  } as Partial<typeof chrome.storage>\r\n};\r\n\r\n// Console override for test cleanup\r\nconst originalConsole = global.console;\r\nglobal.console = {\r\n  ...originalConsole,\r\n  // Suppress console.log in tests unless explicitly needed\r\n  log: process.env.JEST_VERBOSE === 'true' ? originalConsole.log : jest.fn(),\r\n  info: process.env.JEST_VERBOSE === 'true' ? originalConsole.info : jest.fn(),\r\n  warn: originalConsole.warn,\r\n  error: originalConsole.error,\r\n  debug: process.env.JEST_VERBOSE === 'true' ? originalConsole.debug : jest.fn()\r\n};\r\n\r\n// Increase timeout for integration tests and slower CI environments\r\njest.setTimeout(30000);\r\n\r\n// Global test utilities\r\nglobal.testUtils = {\r\n  // Helper to wait for async operations\r\n  waitFor: (ms: number) => new Promise(resolve => setTimeout(resolve, ms)),\r\n  \r\n  // Helper to create mock DNA sequences\r\n  createMockDNA: (length: number = 16) => {\r\n    const bases = ['A', 'T', 'C', 'G'];\r\n    return Array.from({ length }, () => bases[Math.floor(Math.random() * bases.length)]).join('');\r\n  },\r\n  \r\n  // Helper to create valid organism traits\r\n  createMockTraits: () => ({\r\n    curiosity: Math.random(),\r\n    focus: Math.random(),\r\n    rhythm: Math.random(),\r\n    empathy: Math.random(),\r\n    creativity: Math.random(),\r\n    resilience: Math.random(),\r\n    adaptability: Math.random(),\r\n    memory: Math.random(),\r\n    intuition: Math.random() * 0.2 // Intuition is typically lower\r\n  }),\r\n  \r\n  // Helper to suppress console output during tests\r\n  suppressConsole: () => {\r\n    const spy = {\r\n      log: jest.spyOn(console, 'log').mockImplementation(() => {}),\r\n      info: jest.spyOn(console, 'info').mockImplementation(() => {}),\r\n      warn: jest.spyOn(console, 'warn').mockImplementation(() => {}),\r\n      error: jest.spyOn(console, 'error').mockImplementation(() => {}),\r\n      debug: jest.spyOn(console, 'debug').mockImplementation(() => {})\r\n    };\r\n    \r\n    return () => {\r\n      Object.values(spy).forEach(s => s.mockRestore());\r\n    };\r\n  }\r\n};\r\n\r\n// Clean up after each test\r\nafterEach(() => {\r\n  jest.clearAllMocks();\r\n  jest.clearAllTimers();\r\n  \r\n  // Clear mock storage data\r\n  Object.keys(mockStorageData).forEach(key => delete mockStorageData[key]);\r\n  \r\n  // Reset performance mock if it exists and is a Jest mock\r\n  if (global.performance.now && typeof (global.performance.now as any).mockClear === 'function') {\r\n    (global.performance.now as jest.Mock).mockClear();\r\n  }\r\n  \r\n  // Reset RAF mocks if they exist and are Jest mocks\r\n  if (global.requestAnimationFrame && typeof (global.requestAnimationFrame as any).mockClear === 'function') {\r\n    (global.requestAnimationFrame as jest.Mock).mockClear();\r\n  }\r\n  if (global.cancelAnimationFrame && typeof (global.cancelAnimationFrame as any).mockClear === 'function') {\r\n    (global.cancelAnimationFrame as jest.Mock).mockClear();\r\n  }\r\n});\r\n\r\n// Global mock setup that needs to be done before imports\r\nbeforeAll(() => {\r\n  // Mock the service-worker-adapter module\r\n  jest.doMock('../src/background/service-worker-adapter', () => ({\r\n    swCryptoAPI: {\r\n      subtle: cryptoSubtle,\r\n      getRandomValues: cryptoGetRandomValues\r\n    }\r\n  }));\r\n});\r\n\r\n// TypeScript declarations for global test utilities\r\ndeclare global {\r\n  var testUtils: {\r\n    waitFor: (ms: number) => Promise<void>;\r\n    createMockDNA: (length?: number) => string;\r\n    createMockTraits: () => any;\r\n    suppressConsole: () => () => void;\r\n  };\r\n} "],"version":3}