{"version":3,"names":["cov_fs8f8zkr4","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","service_worker_adapter_1","require","SimpleCircuitBreaker","constructor","failureCount","open","lastFailure","failureThreshold","recoveryTimeout","isOpen","Date","now","recordSuccess","recordFailure","SimplePersistentQueue","key","enqueue","msg","console","log","arr","JSON","parse","swLocalStorage","getItem","push","setItem","stringify","length","dequeue","shift","getAll","ResilientMessageBus","connectionState","messageQueue","failureStrategies","Map","circuitBreaker","failureQueue","isConnected","connectionAttempts","setupFailureStrategies","set","maxRetries","backoffStrategy","fallbackAction","cacheOrganismState","criticalLevel","queueForLaterSync","processLocally","send","message","success","queued","error","retries","strategy","get","simulateSend","call","wait","getBackoff","id","attempt","Math","pow","ms","Promise","res","setTimeout","_attemptConnection","resolve","_processMessage","_message","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/communication/resilient-message-bus.ts"],"sourcesContent":["// communication/resilient-message-bus.ts\r\n// Message Bus résilient avec circuit breaker (Phase 1)\r\n\r\nimport { swLocalStorage } from '../background/service-worker-adapter'\r\n\r\ntype Message = { type: string; payload: any }\r\ntype SendResult = { success: boolean; queued?: boolean; error?: any }\r\n\r\ntype FailureStrategy = {\r\n  maxRetries: number\r\n  backoffStrategy: 'exponential' | 'linear' | 'immediate'\r\n  fallbackAction: (msg: Message) => Promise<void>\r\n  criticalLevel: 'high' | 'medium' | 'low'\r\n}\r\n\r\nclass SimpleCircuitBreaker {\r\n  private failureCount = 0\r\n  private open = false\r\n  private lastFailure = 0\r\n  private readonly failureThreshold = 5\r\n  private readonly recoveryTimeout = 30000\r\n\r\n  isOpen() {\r\n    if (this.open && Date.now() - this.lastFailure > this.recoveryTimeout) {\r\n      this.open = false\r\n      this.failureCount = 0\r\n    }\r\n    return this.open\r\n  }\r\n\r\n  recordSuccess() {\r\n    this.failureCount = 0\r\n    this.open = false\r\n  }\r\n\r\n  recordFailure() {\r\n    this.failureCount++\r\n    this.lastFailure = Date.now()\r\n    if (this.failureCount >= this.failureThreshold) {\r\n      this.open = true\r\n    }\r\n  }\r\n}\r\n\r\nclass SimplePersistentQueue {\r\n  private key = 'symbiont_messages'\r\n  constructor() {}\r\n  async enqueue(msg: Message) {\r\n    console.log('[ResilientMessageBus] enqueue', msg)\r\n    const arr = JSON.parse(await swLocalStorage.getItem(this.key) || '[]')\r\n    arr.push(msg)\r\n    await swLocalStorage.setItem(this.key, JSON.stringify(arr))\r\n    console.log('[ResilientMessageBus] enqueue OK', arr.length)\r\n  }\r\n  async dequeue(): Promise<Message | undefined> {\r\n    const arr = JSON.parse(await swLocalStorage.getItem(this.key) || '[]')\r\n    const msg = arr.shift()\r\n    await swLocalStorage.setItem(this.key, JSON.stringify(arr))\r\n    console.log('[ResilientMessageBus] dequeue', msg)\r\n    return msg\r\n  }\r\n  async getAll(): Promise<Message[]> {\r\n    const arr = JSON.parse(await swLocalStorage.getItem(this.key) || '[]')\r\n    console.log('[ResilientMessageBus] getAll', arr.length)\r\n    return arr\r\n  }\r\n}\r\n\r\nexport class ResilientMessageBus {\r\n  // @ts-expect-error État réservé pour usage futur\r\n  private connectionState: 'connected' | 'degraded' | 'offline' = 'offline'\r\n  private messageQueue = new SimplePersistentQueue()\r\n  private failureStrategies: Map<string, FailureStrategy> = new Map()\r\n  private circuitBreaker = new SimpleCircuitBreaker()\r\n  // @ts-expect-error Queue réservée pour usage futur\r\n  private failureQueue: Message[] = []\r\n  // @ts-expect-error État réservé pour usage futur\r\n  private isConnected: boolean = false;\r\n  // @ts-expect-error Compteur réservé pour usage futur\r\n  private connectionAttempts: number = 0;\r\n\r\n  constructor() {\r\n    this.setupFailureStrategies()\r\n  }\r\n\r\n  private setupFailureStrategies(): void {\r\n    this.failureStrategies.set('ORGANISM_UPDATE', {\r\n      maxRetries: 3,\r\n      backoffStrategy: 'exponential',\r\n      fallbackAction: this.cacheOrganismState,\r\n      criticalLevel: 'high'\r\n    })\r\n    this.failureStrategies.set('INTERACTION_DETECTED', {\r\n      maxRetries: 5,\r\n      backoffStrategy: 'linear',\r\n      fallbackAction: this.queueForLaterSync,\r\n      criticalLevel: 'medium'\r\n    })\r\n    this.failureStrategies.set('PAGE_ANALYSIS_COMPLETE', {\r\n      maxRetries: 2,\r\n      backoffStrategy: 'immediate',\r\n      fallbackAction: this.processLocally,\r\n      criticalLevel: 'low'\r\n    })\r\n  }\r\n\r\n  async send(message: Message): Promise<SendResult> {\r\n    if (this.circuitBreaker.isOpen()) {\r\n      await this.messageQueue.enqueue(message)\r\n      return { success: false, queued: true, error: 'Circuit breaker open' }\r\n    }\r\n    let retries = 0\r\n    const strategy = this.failureStrategies.get(message.type)\r\n    const maxRetries = strategy?.maxRetries || 2\r\n    while (retries <= maxRetries) {\r\n      try {\r\n        // Simule l'envoi (à remplacer par chrome.runtime.sendMessage ou autre)\r\n        await this.simulateSend(message)\r\n        this.circuitBreaker.recordSuccess()\r\n        return { success: true }\r\n      } catch (error) {\r\n        this.circuitBreaker.recordFailure()\r\n        retries++\r\n        if (retries > maxRetries) {\r\n          if (strategy) await strategy.fallbackAction.call(this, message)\r\n          await this.messageQueue.enqueue(message)\r\n          return { success: false, queued: true, error }\r\n        }\r\n        await this.wait(this.getBackoff(strategy?.backoffStrategy, retries))\r\n      }\r\n    }\r\n    return { success: false, queued: true, error: 'Unknown error' }\r\n  }\r\n\r\n  // @ts-expect-error Paramètre réservé pour usage futur\r\n  private async simulateSend(message: Message) {\r\n    return { success: true, id: `sim_${Date.now()}` }\r\n  }\r\n\r\n  private getBackoff(type: string = 'immediate', attempt: number) {\r\n    if (type === 'exponential') return 500 * Math.pow(2, attempt)\r\n    if (type === 'linear') return 500 * attempt\r\n    return 0\r\n  }\r\n  private wait(ms: number) { return new Promise(res => setTimeout(res, ms)) }\r\n\r\n  // Fallbacks simulés\r\n  private async cacheOrganismState(msg: Message) {\r\n    console.log('[ResilientMessageBus] fallback cacheOrganismState', msg)\r\n    await swLocalStorage.setItem('symbiont_organism_cache', JSON.stringify(msg))\r\n  }\r\n  private async queueForLaterSync(msg: Message) {\r\n    console.log('[ResilientMessageBus] fallback queueForLaterSync', msg)\r\n    await this.messageQueue.enqueue(msg)\r\n  }\r\n  private async processLocally(msg: Message) {\r\n    console.log('[ResilientMessageBus] fallback processLocally', msg)\r\n    await swLocalStorage.setItem('symbiont_local_processing', JSON.stringify(msg))\r\n  }\r\n\r\n  // @ts-expect-error Méthode réservée pour usage futur\r\n  private _attemptConnection(): Promise<boolean> {\r\n    return Promise.resolve(true)\r\n  }\r\n\r\n  // @ts-expect-error Méthode réservée pour usage futur\r\n  private _processMessage(_message: Message): void {\r\n    // Traitement du message\r\n  }\r\n}\r\n\r\n// TODO: Exporter/brancher sur le bus de messages principal "],"mappings":"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","ignoreList":[]}