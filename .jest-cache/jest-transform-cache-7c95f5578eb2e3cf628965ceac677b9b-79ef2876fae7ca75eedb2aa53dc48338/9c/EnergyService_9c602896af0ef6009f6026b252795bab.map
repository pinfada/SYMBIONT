{"version":3,"names":["cov_1cbm030evr","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","BoundedCollection_1","require","EnergyService","constructor","initialEnergy","config","listeners","regenerationTimer","baseRegenRate","maxEnergy","decayRate","efficiencyFactor","energy","Math","min","metabolismRate","history","BoundedArray","startMetabolism","setInterval","passiveRegeneration","stopMetabolism","clearInterval","netRegen","oldEnergy","recordEvent","amount","source","timestamp","Date","now","energyBefore","energyAfter","max","abs","consumeEnergy","forceConsumeEnergy","actualConsumption","addEnergy","regenerateEnergy","regenAmount","getEnergyLevel","getEnergyPercentage","getMaxEnergy","hasEnergy","isExhausted","isFullEnergy","setMetabolismRate","rate","setEfficiency","factor","increaseMaxEnergy","event","add","forEach","listener","getEnergyHistory","limit","slice","getEnergyStats","consumptionEvents","filter","e","regenerationEvents","totalConsumed","reduce","sum","totalRegenerated","current","percentage","efficiency","addEnergyListener","push","removeEnergyListener","index","indexOf","splice","cleanup","maxAge","cutoff","filteredEvents","clear","addBatch","toJSON","fromJSON","data","destroy","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/services/EnergyService.ts"],"sourcesContent":["/**\n * EnergyService - Gestion de l'énergie et métabolisme\n * Part du refactoring d'OrganismCore selon l'architecture hexagonale\n */\n\nimport { BoundedArray } from '../../shared/utils/BoundedCollection';\n\nexport interface EnergyEvent {\n  type: 'consumption' | 'regeneration' | 'boost' | 'drain';\n  amount: number;\n  source: string;\n  timestamp: number;\n  energyBefore: number;\n  energyAfter: number;\n}\n\nexport interface MetabolismConfig {\n  baseRegenRate: number;  // Taux de régénération de base\n  maxEnergy: number;      // Énergie maximale\n  decayRate: number;      // Taux de dégradation naturelle\n  efficiencyFactor: number; // Facteur d'efficacité métabolique\n}\n\nexport class EnergyService {\n  private energy: number;\n  private maxEnergy: number;\n  private metabolismRate: number;\n  private config: MetabolismConfig;\n  private history: BoundedArray<EnergyEvent>;\n  private listeners: ((event: EnergyEvent) => void)[] = [];\n  private regenerationTimer: NodeJS.Timeout | null = null;\n\n  constructor(initialEnergy = 100, config?: Partial<MetabolismConfig>) {\n    this.config = {\n      baseRegenRate: 1,     // 1 point par seconde\n      maxEnergy: 100,       // Maximum 100\n      decayRate: 0.1,       // 0.1 point par seconde\n      efficiencyFactor: 1,  // Efficacité normale\n      ...config\n    };\n\n    this.maxEnergy = this.config.maxEnergy;\n    this.energy = Math.min(initialEnergy, this.maxEnergy);\n    this.metabolismRate = this.config.baseRegenRate;\n    \n    // Historique limité à 100 événements pour éviter les fuites mémoire\n    this.history = new BoundedArray<EnergyEvent>(100, 'EnergyHistory');\n    \n    this.startMetabolism();\n  }\n\n  /**\n   * Démarre le processus métabolique automatique\n   */\n  private startMetabolism(): void {\n    if (this.regenerationTimer) return;\n\n    this.regenerationTimer = setInterval(() => {\n      this.passiveRegeneration();\n    }, 1000); // Toutes les secondes\n  }\n\n  /**\n   * Arrête le processus métabolique\n   */\n  stopMetabolism(): void {\n    if (this.regenerationTimer) {\n      clearInterval(this.regenerationTimer);\n      this.regenerationTimer = null;\n    }\n  }\n\n  /**\n   * Régénération passive d'énergie\n   */\n  private passiveRegeneration(): void {\n    const netRegen = this.metabolismRate * this.config.efficiencyFactor - this.config.decayRate;\n    \n    if (netRegen > 0 && this.energy < this.maxEnergy) {\n      const oldEnergy = this.energy;\n      this.energy = Math.min(this.maxEnergy, this.energy + netRegen);\n      \n      this.recordEvent({\n        type: 'regeneration',\n        amount: this.energy - oldEnergy,\n        source: 'passive_metabolism',\n        timestamp: Date.now(),\n        energyBefore: oldEnergy,\n        energyAfter: this.energy\n      });\n    } else if (netRegen < 0) {\n      const oldEnergy = this.energy;\n      this.energy = Math.max(0, this.energy + netRegen);\n      \n      this.recordEvent({\n        type: 'drain',\n        amount: Math.abs(netRegen),\n        source: 'natural_decay',\n        timestamp: Date.now(),\n        energyBefore: oldEnergy,\n        energyAfter: this.energy\n      });\n    }\n  }\n\n  /**\n   * Consomme de l'énergie\n   */\n  consumeEnergy(amount: number, source = 'unknown'): boolean {\n    if (amount <= 0) return true;\n    if (this.energy < amount) return false;\n\n    const oldEnergy = this.energy;\n    this.energy -= amount;\n\n    this.recordEvent({\n      type: 'consumption',\n      amount,\n      source,\n      timestamp: Date.now(),\n      energyBefore: oldEnergy,\n      energyAfter: this.energy\n    });\n\n    return true;\n  }\n\n  /**\n   * Tente de consommer de l'énergie (même si insuffisante)\n   */\n  forceConsumeEnergy(amount: number, source = 'forced'): number {\n    const oldEnergy = this.energy;\n    const actualConsumption = Math.min(amount, this.energy);\n    this.energy -= actualConsumption;\n\n    this.recordEvent({\n      type: 'consumption',\n      amount: actualConsumption,\n      source,\n      timestamp: Date.now(),\n      energyBefore: oldEnergy,\n      energyAfter: this.energy\n    });\n\n    return actualConsumption;\n  }\n\n  /**\n   * Ajoute de l'énergie (boost)\n   */\n  addEnergy(amount: number, source = 'boost'): void {\n    if (amount <= 0) return;\n\n    const oldEnergy = this.energy;\n    this.energy = Math.min(this.maxEnergy, this.energy + amount);\n\n    this.recordEvent({\n      type: 'boost',\n      amount: this.energy - oldEnergy,\n      source,\n      timestamp: Date.now(),\n      energyBefore: oldEnergy,\n      energyAfter: this.energy\n    });\n  }\n\n  /**\n   * Régénération manuelle d'énergie\n   */\n  regenerateEnergy(amount?: number): void {\n    const regenAmount = amount || this.metabolismRate;\n    this.addEnergy(regenAmount, 'manual_regeneration');\n  }\n\n  /**\n   * Obtient le niveau d'énergie actuel\n   */\n  getEnergyLevel(): number {\n    return this.energy;\n  }\n\n  /**\n   * Obtient le niveau d'énergie en pourcentage\n   */\n  getEnergyPercentage(): number {\n    return (this.energy / this.maxEnergy) * 100;\n  }\n\n  /**\n   * Obtient l'énergie maximale\n   */\n  getMaxEnergy(): number {\n    return this.maxEnergy;\n  }\n\n  /**\n   * Vérifie si l'organisme a assez d'énergie\n   */\n  hasEnergy(amount: number): boolean {\n    return this.energy >= amount;\n  }\n\n  /**\n   * Vérifie si l'organisme est épuisé\n   */\n  isExhausted(): boolean {\n    return this.energy === 0;\n  }\n\n  /**\n   * Vérifie si l'organisme est à pleine énergie\n   */\n  isFullEnergy(): boolean {\n    return this.energy === this.maxEnergy;\n  }\n\n  /**\n   * Met à jour le taux de métabolisme\n   */\n  setMetabolismRate(rate: number): void {\n    this.metabolismRate = Math.max(0, rate);\n  }\n\n  /**\n   * Ajuste l'efficacité métabolique\n   */\n  setEfficiency(factor: number): void {\n    this.config.efficiencyFactor = Math.max(0.1, Math.min(2, factor));\n  }\n\n  /**\n   * Augmente l'énergie maximale\n   */\n  increaseMaxEnergy(amount: number): void {\n    this.maxEnergy += amount;\n    this.config.maxEnergy = this.maxEnergy;\n  }\n\n  /**\n   * Enregistre un événement d'énergie\n   */\n  private recordEvent(event: EnergyEvent): void {\n    // BoundedArray gère automatiquement la limitation\n    this.history.add(event);\n\n    // Notifie les listeners\n    this.listeners.forEach(listener => listener(event));\n  }\n\n  /**\n   * Obtient l'historique d'énergie\n   */\n  getEnergyHistory(limit = 50): EnergyEvent[] {\n    return this.history.slice(-limit);\n  }\n\n  /**\n   * Obtient les statistiques d'énergie\n   */\n  getEnergyStats(): {\n    current: number;\n    max: number;\n    percentage: number;\n    metabolismRate: number;\n    efficiency: number;\n    totalConsumed: number;\n    totalRegenerated: number;\n  } {\n    const consumptionEvents = this.history.filter(e => e.type === 'consumption');\n    const regenerationEvents = this.history.filter(e => e.type === 'regeneration' || e.type === 'boost');\n\n    const totalConsumed = consumptionEvents.reduce((sum, e) => sum + e.amount, 0);\n    const totalRegenerated = regenerationEvents.reduce((sum, e) => sum + e.amount, 0);\n\n    return {\n      current: this.energy,\n      max: this.maxEnergy,\n      percentage: this.getEnergyPercentage(),\n      metabolismRate: this.metabolismRate,\n      efficiency: this.config.efficiencyFactor,\n      totalConsumed,\n      totalRegenerated\n    };\n  }\n\n  /**\n   * Ajoute un listener pour les événements d'énergie\n   */\n  addEnergyListener(listener: (event: EnergyEvent) => void): void {\n    this.listeners.push(listener);\n  }\n\n  /**\n   * Supprime un listener\n   */\n  removeEnergyListener(listener: (event: EnergyEvent) => void): void {\n    const index = this.listeners.indexOf(listener);\n    if (index > -1) {\n      this.listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Nettoyage de l'historique ancien\n   */\n  cleanup(maxAge = 24 * 60 * 60 * 1000): void {\n    const cutoff = Date.now() - maxAge;\n    const filteredEvents = this.history.filter((event: EnergyEvent) => event.timestamp > cutoff);\n    this.history.clear();\n    this.history.addBatch(filteredEvents);\n  }\n\n  /**\n   * Sérialisation pour sauvegarde\n   */\n  toJSON(): {\n    energy: number;\n    maxEnergy: number;\n    metabolismRate: number;\n    config: MetabolismConfig;\n    history: EnergyEvent[];\n  } {\n    return {\n      energy: this.energy,\n      maxEnergy: this.maxEnergy,\n      metabolismRate: this.metabolismRate,\n      config: { ...this.config },\n      history: [...this.history]\n    };\n  }\n\n  /**\n   * Restauration depuis JSON\n   */\n  fromJSON(data: {\n    energy: number;\n    maxEnergy: number;\n    metabolismRate: number;\n    config: MetabolismConfig;\n    history: EnergyEvent[];\n  }): void {\n    this.energy = data.energy;\n    this.maxEnergy = data.maxEnergy;\n    this.metabolismRate = data.metabolismRate;\n    this.config = { ...data.config };\n    this.history.clear();\n    this.history.addBatch(data.history);\n  }\n\n  /**\n   * Nettoyage lors de la destruction\n   */\n  destroy(): void {\n    this.stopMetabolism();\n    this.listeners = [];\n    this.history.clear();\n  }\n}"],"mappings":"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","ignoreList":[]}