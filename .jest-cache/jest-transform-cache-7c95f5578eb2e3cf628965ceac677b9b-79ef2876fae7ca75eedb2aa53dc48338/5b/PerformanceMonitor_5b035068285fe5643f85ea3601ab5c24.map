{"version":3,"names":["cov_2hydogfrdk","actualCoverage","s","PerformanceMonitor","constructor","gpuLimit","b","f","samples","sampleSize","lastFrameTime","startFrame","performance","now","endFrame","frameTime","push","length","shift","getCurrentLoad","avgFrameTime","reduce","a","Math","min","isOverloaded","getMetrics","fps","memory","round","gpuLoad","memoryUsage","usedJSHeapSize","drawCalls","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/PerformanceMonitor.ts"],"sourcesContent":["// src/monitoring/PerformanceMonitor.ts\r\nimport { PerformanceMetrics } from '../types';\r\nexport class PerformanceMonitor {\r\n    private gpuLimit: number;\r\n    private samples: number[] = [];\r\n    private sampleSize: number = 30;\r\n    private lastFrameTime: number = 0;\r\n    \r\n    constructor(gpuLimit: number = 0.3) {\r\n      this.gpuLimit = gpuLimit;\r\n    }\r\n    \r\n    public startFrame(): void {\r\n      this.lastFrameTime = performance.now();\r\n    }\r\n    \r\n    public endFrame(): void {\r\n      const frameTime = performance.now() - this.lastFrameTime;\r\n      this.samples.push(frameTime);\r\n      \r\n      if (this.samples.length > this.sampleSize) {\r\n        this.samples.shift();\r\n      }\r\n    }\r\n    \r\n    public getCurrentLoad(): number {\r\n      if (this.samples.length === 0) return 0;\r\n      \r\n      const avgFrameTime = this.samples.reduce((a, b) => a + b, 0) / this.samples.length;\r\n      // Estimation approximative de la charge GPU\r\n      return Math.min(avgFrameTime / 16.67, 1) * 0.7; // 60fps baseline\r\n    }\r\n    \r\n    public isOverloaded(): boolean {\r\n      return this.getCurrentLoad() > this.gpuLimit;\r\n    }\r\n    \r\n    public getMetrics(): PerformanceMetrics {\r\n      const fps = this.samples.length > 0 \r\n        ? 1000 / (this.samples.reduce((a, b) => a + b, 0) / this.samples.length)\r\n        : 0;\r\n        \r\n      const memory = (performance as any).memory;\r\n      return {\r\n        fps: Math.round(fps),\r\n        gpuLoad: this.getCurrentLoad(),\r\n        memoryUsage: memory ? memory.usedJSHeapSize / 1048576 : 0,\r\n        drawCalls: 1 // À implémenter avec compteur réel\r\n      };\r\n    }\r\n}"],"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","ignoreList":[]}