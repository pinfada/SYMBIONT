7965db326216e246c771481077f3c260
"use strict";

/* istanbul ignore next */
function cov_2hydogfrdk() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/PerformanceMonitor.ts";
  var hash = "0f03250c5e228edc349ed5c9d74fae9d294eb73c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/PerformanceMonitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 26
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 29
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 31
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 33
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 47
        }
      },
      "7": {
        start: {
          line: 15,
          column: 26
        },
        end: {
          line: 15,
          column: 64
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 37
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 19,
          column: 9
        }
      },
      "10": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 23,
          column: 21
        }
      },
      "12": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 21
        }
      },
      "13": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 90
        }
      },
      "14": {
        start: {
          line: 24,
          column: 59
        },
        end: {
          line: 24,
          column: 64
        }
      },
      "15": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 55
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 53
        }
      },
      "17": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 34,
          column: 15
        }
      },
      "18": {
        start: {
          line: 33,
          column: 52
        },
        end: {
          line: 33,
          column: 57
        }
      },
      "19": {
        start: {
          line: 35,
          column: 23
        },
        end: {
          line: 35,
          column: 41
        }
      },
      "20": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "21": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 32
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 17
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 14
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 49
          },
          end: {
            line: 24,
            column: 50
          }
        },
        loc: {
          start: {
            line: 24,
            column: 59
          },
          end: {
            line: 24,
            column: 64
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 31
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 42
          },
          end: {
            line: 33,
            column: 43
          }
        },
        loc: {
          start: {
            line: 33,
            column: 52
          },
          end: {
            line: 33,
            column: 57
          }
        },
        line: 33
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 5,
            column: 16
          },
          end: {
            line: 5,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 5,
            column: 27
          },
          end: {
            line: 5,
            column: 30
          }
        }],
        line: 5
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 19,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 23,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 20
          },
          end: {
            line: 34,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 14
          },
          end: {
            line: 33,
            column: 84
          }
        }, {
          start: {
            line: 34,
            column: 14
          },
          end: {
            line: 34,
            column: 15
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 39,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 34
          },
          end: {
            line: 39,
            column: 65
          }
        }, {
          start: {
            line: 39,
            column: 68
          },
          end: {
            line: 39,
            column: 69
          }
        }],
        line: 39
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/PerformanceMonitor.ts",
      mappings: ";;;AAEA,MAAa,kBAAkB;IAM3B,YAAY,WAAmB,GAAG;QAJ1B,YAAO,GAAa,EAAE,CAAC;QACvB,eAAU,GAAW,EAAE,CAAC;QACxB,kBAAa,GAAW,CAAC,CAAC;QAGhC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAEM,UAAU;QACf,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;IACzC,CAAC;IAEM,QAAQ;QACb,MAAM,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;QACzD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE7B,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IAEM,cAAc;QACnB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,CAAC,CAAC;QAExC,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACnF,4CAA4C;QAC5C,OAAO,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,KAAK,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,iBAAiB;IACnE,CAAC;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,cAAc,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC/C,CAAC;IAEM,UAAU;QACf,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;YACjC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YACxE,CAAC,CAAC,CAAC,CAAC;QAEN,MAAM,MAAM,GAAI,WAAmB,CAAC,MAAM,CAAC;QAC3C,OAAO;YACL,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;YACpB,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE;YAC9B,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACzD,SAAS,EAAE,CAAC,CAAC,mCAAmC;SACjD,CAAC;IACJ,CAAC;CACJ;AAhDD,gDAgDC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/monitoring/PerformanceMonitor.ts"],
      sourcesContent: ["// src/monitoring/PerformanceMonitor.ts\r\nimport { PerformanceMetrics } from '../types';\r\nexport class PerformanceMonitor {\r\n    private gpuLimit: number;\r\n    private samples: number[] = [];\r\n    private sampleSize: number = 30;\r\n    private lastFrameTime: number = 0;\r\n    \r\n    constructor(gpuLimit: number = 0.3) {\r\n      this.gpuLimit = gpuLimit;\r\n    }\r\n    \r\n    public startFrame(): void {\r\n      this.lastFrameTime = performance.now();\r\n    }\r\n    \r\n    public endFrame(): void {\r\n      const frameTime = performance.now() - this.lastFrameTime;\r\n      this.samples.push(frameTime);\r\n      \r\n      if (this.samples.length > this.sampleSize) {\r\n        this.samples.shift();\r\n      }\r\n    }\r\n    \r\n    public getCurrentLoad(): number {\r\n      if (this.samples.length === 0) return 0;\r\n      \r\n      const avgFrameTime = this.samples.reduce((a, b) => a + b, 0) / this.samples.length;\r\n      // Estimation approximative de la charge GPU\r\n      return Math.min(avgFrameTime / 16.67, 1) * 0.7; // 60fps baseline\r\n    }\r\n    \r\n    public isOverloaded(): boolean {\r\n      return this.getCurrentLoad() > this.gpuLimit;\r\n    }\r\n    \r\n    public getMetrics(): PerformanceMetrics {\r\n      const fps = this.samples.length > 0 \r\n        ? 1000 / (this.samples.reduce((a, b) => a + b, 0) / this.samples.length)\r\n        : 0;\r\n        \r\n      const memory = (performance as any).memory;\r\n      return {\r\n        fps: Math.round(fps),\r\n        gpuLoad: this.getCurrentLoad(),\r\n        memoryUsage: memory ? memory.usedJSHeapSize / 1048576 : 0,\r\n        drawCalls: 1 // \xC0 impl\xE9menter avec compteur r\xE9el\r\n      };\r\n    }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0f03250c5e228edc349ed5c9d74fae9d294eb73c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hydogfrdk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hydogfrdk();
cov_2hydogfrdk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2hydogfrdk().s[1]++;
exports.PerformanceMonitor = void 0;
class PerformanceMonitor {
  constructor(gpuLimit =
  /* istanbul ignore next */
  (cov_2hydogfrdk().b[0][0]++, 0.3)) {
    /* istanbul ignore next */
    cov_2hydogfrdk().f[0]++;
    cov_2hydogfrdk().s[2]++;
    this.samples = [];
    /* istanbul ignore next */
    cov_2hydogfrdk().s[3]++;
    this.sampleSize = 30;
    /* istanbul ignore next */
    cov_2hydogfrdk().s[4]++;
    this.lastFrameTime = 0;
    /* istanbul ignore next */
    cov_2hydogfrdk().s[5]++;
    this.gpuLimit = gpuLimit;
  }
  startFrame() {
    /* istanbul ignore next */
    cov_2hydogfrdk().f[1]++;
    cov_2hydogfrdk().s[6]++;
    this.lastFrameTime = performance.now();
  }
  endFrame() {
    /* istanbul ignore next */
    cov_2hydogfrdk().f[2]++;
    const frameTime =
    /* istanbul ignore next */
    (cov_2hydogfrdk().s[7]++, performance.now() - this.lastFrameTime);
    /* istanbul ignore next */
    cov_2hydogfrdk().s[8]++;
    this.samples.push(frameTime);
    /* istanbul ignore next */
    cov_2hydogfrdk().s[9]++;
    if (this.samples.length > this.sampleSize) {
      /* istanbul ignore next */
      cov_2hydogfrdk().b[1][0]++;
      cov_2hydogfrdk().s[10]++;
      this.samples.shift();
    } else
    /* istanbul ignore next */
    {
      cov_2hydogfrdk().b[1][1]++;
    }
  }
  getCurrentLoad() {
    /* istanbul ignore next */
    cov_2hydogfrdk().f[3]++;
    cov_2hydogfrdk().s[11]++;
    if (this.samples.length === 0) {
      /* istanbul ignore next */
      cov_2hydogfrdk().b[2][0]++;
      cov_2hydogfrdk().s[12]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_2hydogfrdk().b[2][1]++;
    }
    const avgFrameTime =
    /* istanbul ignore next */
    (cov_2hydogfrdk().s[13]++, this.samples.reduce((a, b) => {
      /* istanbul ignore next */
      cov_2hydogfrdk().f[4]++;
      cov_2hydogfrdk().s[14]++;
      return a + b;
    }, 0) / this.samples.length);
    // Estimation approximative de la charge GPU
    /* istanbul ignore next */
    cov_2hydogfrdk().s[15]++;
    return Math.min(avgFrameTime / 16.67, 1) * 0.7; // 60fps baseline
  }
  isOverloaded() {
    /* istanbul ignore next */
    cov_2hydogfrdk().f[5]++;
    cov_2hydogfrdk().s[16]++;
    return this.getCurrentLoad() > this.gpuLimit;
  }
  getMetrics() {
    /* istanbul ignore next */
    cov_2hydogfrdk().f[6]++;
    const fps =
    /* istanbul ignore next */
    (cov_2hydogfrdk().s[17]++, this.samples.length > 0 ?
    /* istanbul ignore next */
    (cov_2hydogfrdk().b[3][0]++, 1000 / (this.samples.reduce((a, b) => {
      /* istanbul ignore next */
      cov_2hydogfrdk().f[7]++;
      cov_2hydogfrdk().s[18]++;
      return a + b;
    }, 0) / this.samples.length)) :
    /* istanbul ignore next */
    (cov_2hydogfrdk().b[3][1]++, 0));
    const memory =
    /* istanbul ignore next */
    (cov_2hydogfrdk().s[19]++, performance.memory);
    /* istanbul ignore next */
    cov_2hydogfrdk().s[20]++;
    return {
      fps: Math.round(fps),
      gpuLoad: this.getCurrentLoad(),
      memoryUsage: memory ?
      /* istanbul ignore next */
      (cov_2hydogfrdk().b[4][0]++, memory.usedJSHeapSize / 1048576) :
      /* istanbul ignore next */
      (cov_2hydogfrdk().b[4][1]++, 0),
      drawCalls: 1 // À implémenter avec compteur réel
    };
  }
}
/* istanbul ignore next */
cov_2hydogfrdk().s[21]++;
exports.PerformanceMonitor = PerformanceMonitor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmh5ZG9nZnJkayIsImFjdHVhbENvdmVyYWdlIiwicyIsIlBlcmZvcm1hbmNlTW9uaXRvciIsImNvbnN0cnVjdG9yIiwiZ3B1TGltaXQiLCJiIiwiZiIsInNhbXBsZXMiLCJzYW1wbGVTaXplIiwibGFzdEZyYW1lVGltZSIsInN0YXJ0RnJhbWUiLCJwZXJmb3JtYW5jZSIsIm5vdyIsImVuZEZyYW1lIiwiZnJhbWVUaW1lIiwicHVzaCIsImxlbmd0aCIsInNoaWZ0IiwiZ2V0Q3VycmVudExvYWQiLCJhdmdGcmFtZVRpbWUiLCJyZWR1Y2UiLCJhIiwiTWF0aCIsIm1pbiIsImlzT3ZlcmxvYWRlZCIsImdldE1ldHJpY3MiLCJmcHMiLCJtZW1vcnkiLCJyb3VuZCIsImdwdUxvYWQiLCJtZW1vcnlVc2FnZSIsInVzZWRKU0hlYXBTaXplIiwiZHJhd0NhbGxzIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi9tbnQvYy9Vc2Vycy9tX29saS9Qcm9qZXRzL1NZTUJJT05UL3NyYy9tb25pdG9yaW5nL1BlcmZvcm1hbmNlTW9uaXRvci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvbW9uaXRvcmluZy9QZXJmb3JtYW5jZU1vbml0b3IudHNcclxuaW1wb3J0IHsgUGVyZm9ybWFuY2VNZXRyaWNzIH0gZnJvbSAnLi4vdHlwZXMnO1xyXG5leHBvcnQgY2xhc3MgUGVyZm9ybWFuY2VNb25pdG9yIHtcclxuICAgIHByaXZhdGUgZ3B1TGltaXQ6IG51bWJlcjtcclxuICAgIHByaXZhdGUgc2FtcGxlczogbnVtYmVyW10gPSBbXTtcclxuICAgIHByaXZhdGUgc2FtcGxlU2l6ZTogbnVtYmVyID0gMzA7XHJcbiAgICBwcml2YXRlIGxhc3RGcmFtZVRpbWU6IG51bWJlciA9IDA7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKGdwdUxpbWl0OiBudW1iZXIgPSAwLjMpIHtcclxuICAgICAgdGhpcy5ncHVMaW1pdCA9IGdwdUxpbWl0O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBwdWJsaWMgc3RhcnRGcmFtZSgpOiB2b2lkIHtcclxuICAgICAgdGhpcy5sYXN0RnJhbWVUaW1lID0gcGVyZm9ybWFuY2Uubm93KCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHB1YmxpYyBlbmRGcmFtZSgpOiB2b2lkIHtcclxuICAgICAgY29uc3QgZnJhbWVUaW1lID0gcGVyZm9ybWFuY2Uubm93KCkgLSB0aGlzLmxhc3RGcmFtZVRpbWU7XHJcbiAgICAgIHRoaXMuc2FtcGxlcy5wdXNoKGZyYW1lVGltZSk7XHJcbiAgICAgIFxyXG4gICAgICBpZiAodGhpcy5zYW1wbGVzLmxlbmd0aCA+IHRoaXMuc2FtcGxlU2l6ZSkge1xyXG4gICAgICAgIHRoaXMuc2FtcGxlcy5zaGlmdCgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHB1YmxpYyBnZXRDdXJyZW50TG9hZCgpOiBudW1iZXIge1xyXG4gICAgICBpZiAodGhpcy5zYW1wbGVzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIDA7XHJcbiAgICAgIFxyXG4gICAgICBjb25zdCBhdmdGcmFtZVRpbWUgPSB0aGlzLnNhbXBsZXMucmVkdWNlKChhLCBiKSA9PiBhICsgYiwgMCkgLyB0aGlzLnNhbXBsZXMubGVuZ3RoO1xyXG4gICAgICAvLyBFc3RpbWF0aW9uIGFwcHJveGltYXRpdmUgZGUgbGEgY2hhcmdlIEdQVVxyXG4gICAgICByZXR1cm4gTWF0aC5taW4oYXZnRnJhbWVUaW1lIC8gMTYuNjcsIDEpICogMC43OyAvLyA2MGZwcyBiYXNlbGluZVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBwdWJsaWMgaXNPdmVybG9hZGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgICByZXR1cm4gdGhpcy5nZXRDdXJyZW50TG9hZCgpID4gdGhpcy5ncHVMaW1pdDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcHVibGljIGdldE1ldHJpY3MoKTogUGVyZm9ybWFuY2VNZXRyaWNzIHtcclxuICAgICAgY29uc3QgZnBzID0gdGhpcy5zYW1wbGVzLmxlbmd0aCA+IDAgXHJcbiAgICAgICAgPyAxMDAwIC8gKHRoaXMuc2FtcGxlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKSAvIHRoaXMuc2FtcGxlcy5sZW5ndGgpXHJcbiAgICAgICAgOiAwO1xyXG4gICAgICAgIFxyXG4gICAgICBjb25zdCBtZW1vcnkgPSAocGVyZm9ybWFuY2UgYXMgYW55KS5tZW1vcnk7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgZnBzOiBNYXRoLnJvdW5kKGZwcyksXHJcbiAgICAgICAgZ3B1TG9hZDogdGhpcy5nZXRDdXJyZW50TG9hZCgpLFxyXG4gICAgICAgIG1lbW9yeVVzYWdlOiBtZW1vcnkgPyBtZW1vcnkudXNlZEpTSGVhcFNpemUgLyAxMDQ4NTc2IDogMCxcclxuICAgICAgICBkcmF3Q2FsbHM6IDEgLy8gw4AgaW1wbMOpbWVudGVyIGF2ZWMgY29tcHRldXIgcsOpZWxcclxuICAgICAgfTtcclxuICAgIH1cclxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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