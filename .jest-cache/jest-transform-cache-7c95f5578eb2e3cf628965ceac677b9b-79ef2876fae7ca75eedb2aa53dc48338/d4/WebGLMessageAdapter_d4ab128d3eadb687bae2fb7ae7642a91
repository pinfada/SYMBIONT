d48dbb9cdcbaf06b7a90348b443df6b0
"use strict";

/* istanbul ignore next */
function cov_1rrnu3a8n6() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/integration/WebGLMessageAdapter.ts";
  var hash = "43372ffcdd04baf381aba7a93e175d8f093d063e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/integration/WebGLMessageAdapter.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 37
        }
      },
      "2": {
        start: {
          line: 4,
          column: 23
        },
        end: {
          line: 4,
          column: 60
        }
      },
      "3": {
        start: {
          line: 6,
          column: 21
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "4": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 29
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 29,
          column: 11
        }
      },
      "8": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 28,
          column: 13
        }
      },
      "9": {
        start: {
          line: 23,
          column: 37
        },
        end: {
          line: 23,
          column: 52
        }
      },
      "10": {
        start: {
          line: 24,
          column: 16
        },
        end: {
          line: 24,
          column: 45
        }
      },
      "11": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 106
        }
      },
      "12": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "14": {
        start: {
          line: 33,
          column: 34
        },
        end: {
          line: 33,
          column: 49
        }
      },
      "15": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 42
        }
      },
      "16": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 82
        }
      },
      "17": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 52,
          column: 17
        }
      },
      "18": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "19": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 43,
          column: 67
        }
      },
      "20": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "21": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 55,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 36
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 21
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 69
          },
          end: {
            line: 21,
            column: 70
          }
        },
        loc: {
          start: {
            line: 21,
            column: 82
          },
          end: {
            line: 29,
            column: 9
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 75
          },
          end: {
            line: 31,
            column: 76
          }
        },
        loc: {
          start: {
            line: 31,
            column: 88
          },
          end: {
            line: 39,
            column: 9
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 41,
            column: 20
          },
          end: {
            line: 41,
            column: 21
          }
        },
        loc: {
          start: {
            line: 41,
            column: 26
          },
          end: {
            line: 52,
            column: 9
          }
        },
        line: 41
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/integration/WebGLMessageAdapter.ts",
      mappings: ";;;AAGA,6DAAoD;AAEpD,2EAA2E;AAC3E,+DAAyE;AAEzE;;GAEG;AACH,MAAa,mBAAmB;IAI5B,YAAY,MAAsB,EAAE,UAAsB;QACxD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEH;;OAEG;IACO,cAAc;QACpB,uBAAuB;QACzB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,wBAAW,CAAC,eAAe,EAAE,CAAC,OAA+B,EAAE,EAAE;YAClF,IAAI,CAAC;gBACH,MAAM,EAAE,QAAQ,EAAE,GAAI,OAAe,CAAC,OAAO,CAAC;gBAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAA4B,CAAC,CAAC;YACnD,CAAC;YAAC,OAAO,IAAI,EAAE,CAAC;gBACd,qBAAM,CAAC,KAAK,CAAC,sDAAsD,EAAE,IAAI,CAAC,CAAC;YAC7E,CAAC;QACD,CAAC,CAAC,CAAC;QAEH,gCAAgC;QAClC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,wBAAW,CAAC,qBAAqB,EAAE,CAAC,OAA+B,EAAE,EAAE;YACxF,IAAI,CAAC;gBACH,MAAM,EAAE,KAAK,EAAE,GAAI,OAAe,CAAC,OAAO,CAAC;gBAC3C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAsB,CAAC,CAAC;YAC7C,CAAC;YAAC,OAAO,IAAI,EAAE,CAAC;gBACd,qBAAM,CAAC,KAAK,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAC;YACrD,CAAC;QACD,CAAC,CAAC,CAAC;QAEH,8BAA8B;QAC9B,WAAW,CAAC,GAAG,EAAE;YACjB,IAAI,CAAC;gBACH,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;gBACpD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;oBACnB,IAAI,EAAE,wBAAW,CAAC,kBAAkB;oBACpC,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC;YACL,CAAC;YAAC,OAAO,IAAI,EAAE,CAAC;gBACd,oEAAoE;YACtE,CAAC;QACD,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;CACJ;AA/CD,kDA+CC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/integration/WebGLMessageAdapter.ts"],
      sourcesContent: ["// src/integration/WebGLMessageAdapter.ts\r\nimport { OrganismEngine } from '../generative/OrganismEngine';\r\nimport { OrganismState, OrganismMutation } from '../shared/types/organism';\r\nimport { logger } from '@shared/utils/secureLogger';\r\n\r\n// MessageBus et MessageType doivent \xEAtre import\xE9s selon votre architecture\r\nimport { MessageBus, MessageType } from '../shared/messaging/MessageBus';\r\n\r\n/**\r\n * Adaptateur entre le bus de messages et le moteur WebGL\r\n */\r\nexport class WebGLMessageAdapter {\r\n    private engine: OrganismEngine;\r\n    private messageBus: MessageBus;\r\n    \r\n    constructor(engine: OrganismEngine, messageBus: MessageBus) {\r\n      this.engine = engine;\r\n      this.messageBus = messageBus;\r\n      this.setupListeners();\r\n    }\r\n    \r\n  /**\r\n   * Mise en place des listeners sur le bus de messages\r\n   */\r\n    private setupListeners(): void {\r\n      // \xC9coute des mutations\r\n    this.messageBus.on(MessageType.ORGANISM_MUTATE, (message: MessageEvent | unknown) => {\r\n      try {\r\n        const { mutation } = (message as any).payload;\r\n        this.engine.mutate(mutation as OrganismMutation);\r\n      } catch (_err) {\r\n        logger.error('Erreur lors de l\\'application de la mutation WebGL :', _err);\r\n      }\r\n      });\r\n      \r\n      // \xC9coute des changements d'\xE9tat\r\n    this.messageBus.on(MessageType.ORGANISM_STATE_CHANGE, (message: MessageEvent | unknown) => {\r\n      try {\r\n        const { state } = (message as any).payload;\r\n        this.engine.render(state as OrganismState);\r\n      } catch (_err) {\r\n        logger.error('Erreur lors du rendu WebGL :', _err);\r\n      }\r\n      });\r\n      \r\n      // Notification de performance\r\n      setInterval(() => {\r\n      try {\r\n        const metrics = this.engine.getPerformanceMetrics();\r\n        this.messageBus.send({\r\n          type: MessageType.PERFORMANCE_UPDATE,\r\n          payload: metrics\r\n        });\r\n      } catch (_err) {\r\n        // On ignore les erreurs de m\xE9triques pour ne pas polluer la console\r\n      }\r\n      }, 1000);\r\n    }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "43372ffcdd04baf381aba7a93e175d8f093d063e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rrnu3a8n6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rrnu3a8n6();
cov_1rrnu3a8n6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1rrnu3a8n6().s[1]++;
exports.WebGLMessageAdapter = void 0;
const secureLogger_1 =
/* istanbul ignore next */
(cov_1rrnu3a8n6().s[2]++, require("@shared/utils/secureLogger"));
// MessageBus et MessageType doivent être importés selon votre architecture
const MessageBus_1 =
/* istanbul ignore next */
(cov_1rrnu3a8n6().s[3]++, require("../shared/messaging/MessageBus"));
/**
 * Adaptateur entre le bus de messages et le moteur WebGL
 */
class WebGLMessageAdapter {
  constructor(engine, messageBus) {
    /* istanbul ignore next */
    cov_1rrnu3a8n6().f[0]++;
    cov_1rrnu3a8n6().s[4]++;
    this.engine = engine;
    /* istanbul ignore next */
    cov_1rrnu3a8n6().s[5]++;
    this.messageBus = messageBus;
    /* istanbul ignore next */
    cov_1rrnu3a8n6().s[6]++;
    this.setupListeners();
  }
  /**
   * Mise en place des listeners sur le bus de messages
   */
  setupListeners() {
    /* istanbul ignore next */
    cov_1rrnu3a8n6().f[1]++;
    cov_1rrnu3a8n6().s[7]++;
    // Écoute des mutations
    this.messageBus.on(MessageBus_1.MessageType.ORGANISM_MUTATE, message => {
      /* istanbul ignore next */
      cov_1rrnu3a8n6().f[2]++;
      cov_1rrnu3a8n6().s[8]++;
      try {
        const {
          mutation
        } =
        /* istanbul ignore next */
        (cov_1rrnu3a8n6().s[9]++, message.payload);
        /* istanbul ignore next */
        cov_1rrnu3a8n6().s[10]++;
        this.engine.mutate(mutation);
      } catch (_err) {
        /* istanbul ignore next */
        cov_1rrnu3a8n6().s[11]++;
        secureLogger_1.logger.error('Erreur lors de l\'application de la mutation WebGL :', _err);
      }
    });
    // Écoute des changements d'état
    /* istanbul ignore next */
    cov_1rrnu3a8n6().s[12]++;
    this.messageBus.on(MessageBus_1.MessageType.ORGANISM_STATE_CHANGE, message => {
      /* istanbul ignore next */
      cov_1rrnu3a8n6().f[3]++;
      cov_1rrnu3a8n6().s[13]++;
      try {
        const {
          state
        } =
        /* istanbul ignore next */
        (cov_1rrnu3a8n6().s[14]++, message.payload);
        /* istanbul ignore next */
        cov_1rrnu3a8n6().s[15]++;
        this.engine.render(state);
      } catch (_err) {
        /* istanbul ignore next */
        cov_1rrnu3a8n6().s[16]++;
        secureLogger_1.logger.error('Erreur lors du rendu WebGL :', _err);
      }
    });
    // Notification de performance
    /* istanbul ignore next */
    cov_1rrnu3a8n6().s[17]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_1rrnu3a8n6().f[4]++;
      cov_1rrnu3a8n6().s[18]++;
      try {
        const metrics =
        /* istanbul ignore next */
        (cov_1rrnu3a8n6().s[19]++, this.engine.getPerformanceMetrics());
        /* istanbul ignore next */
        cov_1rrnu3a8n6().s[20]++;
        this.messageBus.send({
          type: MessageBus_1.MessageType.PERFORMANCE_UPDATE,
          payload: metrics
        });
      } catch (_err) {
        // On ignore les erreurs de métriques pour ne pas polluer la console
      }
    }, 1000);
  }
}
/* istanbul ignore next */
cov_1rrnu3a8n6().s[21]++;
exports.WebGLMessageAdapter = WebGLMessageAdapter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXJybnUzYThuNiIsImFjdHVhbENvdmVyYWdlIiwicyIsInNlY3VyZUxvZ2dlcl8xIiwicmVxdWlyZSIsIk1lc3NhZ2VCdXNfMSIsIldlYkdMTWVzc2FnZUFkYXB0ZXIiLCJjb25zdHJ1Y3RvciIsImVuZ2luZSIsIm1lc3NhZ2VCdXMiLCJmIiwic2V0dXBMaXN0ZW5lcnMiLCJvbiIsIk1lc3NhZ2VUeXBlIiwiT1JHQU5JU01fTVVUQVRFIiwibWVzc2FnZSIsIm11dGF0aW9uIiwicGF5bG9hZCIsIm11dGF0ZSIsIl9lcnIiLCJsb2dnZXIiLCJlcnJvciIsIk9SR0FOSVNNX1NUQVRFX0NIQU5HRSIsInN0YXRlIiwicmVuZGVyIiwic2V0SW50ZXJ2YWwiLCJtZXRyaWNzIiwiZ2V0UGVyZm9ybWFuY2VNZXRyaWNzIiwic2VuZCIsInR5cGUiLCJQRVJGT1JNQU5DRV9VUERBVEUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL21udC9jL1VzZXJzL21fb2xpL1Byb2pldHMvU1lNQklPTlQvc3JjL2ludGVncmF0aW9uL1dlYkdMTWVzc2FnZUFkYXB0ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2ludGVncmF0aW9uL1dlYkdMTWVzc2FnZUFkYXB0ZXIudHNcclxuaW1wb3J0IHsgT3JnYW5pc21FbmdpbmUgfSBmcm9tICcuLi9nZW5lcmF0aXZlL09yZ2FuaXNtRW5naW5lJztcclxuaW1wb3J0IHsgT3JnYW5pc21TdGF0ZSwgT3JnYW5pc21NdXRhdGlvbiB9IGZyb20gJy4uL3NoYXJlZC90eXBlcy9vcmdhbmlzbSc7XHJcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0BzaGFyZWQvdXRpbHMvc2VjdXJlTG9nZ2VyJztcclxuXHJcbi8vIE1lc3NhZ2VCdXMgZXQgTWVzc2FnZVR5cGUgZG9pdmVudCDDqnRyZSBpbXBvcnTDqXMgc2Vsb24gdm90cmUgYXJjaGl0ZWN0dXJlXHJcbmltcG9ydCB7IE1lc3NhZ2VCdXMsIE1lc3NhZ2VUeXBlIH0gZnJvbSAnLi4vc2hhcmVkL21lc3NhZ2luZy9NZXNzYWdlQnVzJztcclxuXHJcbi8qKlxyXG4gKiBBZGFwdGF0ZXVyIGVudHJlIGxlIGJ1cyBkZSBtZXNzYWdlcyBldCBsZSBtb3RldXIgV2ViR0xcclxuICovXHJcbmV4cG9ydCBjbGFzcyBXZWJHTE1lc3NhZ2VBZGFwdGVyIHtcclxuICAgIHByaXZhdGUgZW5naW5lOiBPcmdhbmlzbUVuZ2luZTtcclxuICAgIHByaXZhdGUgbWVzc2FnZUJ1czogTWVzc2FnZUJ1cztcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IoZW5naW5lOiBPcmdhbmlzbUVuZ2luZSwgbWVzc2FnZUJ1czogTWVzc2FnZUJ1cykge1xyXG4gICAgICB0aGlzLmVuZ2luZSA9IGVuZ2luZTtcclxuICAgICAgdGhpcy5tZXNzYWdlQnVzID0gbWVzc2FnZUJ1cztcclxuICAgICAgdGhpcy5zZXR1cExpc3RlbmVycygpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgLyoqXHJcbiAgICogTWlzZSBlbiBwbGFjZSBkZXMgbGlzdGVuZXJzIHN1ciBsZSBidXMgZGUgbWVzc2FnZXNcclxuICAgKi9cclxuICAgIHByaXZhdGUgc2V0dXBMaXN0ZW5lcnMoKTogdm9pZCB7XHJcbiAgICAgIC8vIMOJY291dGUgZGVzIG11dGF0aW9uc1xyXG4gICAgdGhpcy5tZXNzYWdlQnVzLm9uKE1lc3NhZ2VUeXBlLk9SR0FOSVNNX01VVEFURSwgKG1lc3NhZ2U6IE1lc3NhZ2VFdmVudCB8IHVua25vd24pID0+IHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB7IG11dGF0aW9uIH0gPSAobWVzc2FnZSBhcyBhbnkpLnBheWxvYWQ7XHJcbiAgICAgICAgdGhpcy5lbmdpbmUubXV0YXRlKG11dGF0aW9uIGFzIE9yZ2FuaXNtTXV0YXRpb24pO1xyXG4gICAgICB9IGNhdGNoIChfZXJyKSB7XHJcbiAgICAgICAgbG9nZ2VyLmVycm9yKCdFcnJldXIgbG9ycyBkZSBsXFwnYXBwbGljYXRpb24gZGUgbGEgbXV0YXRpb24gV2ViR0wgOicsIF9lcnIpO1xyXG4gICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgICBcclxuICAgICAgLy8gw4ljb3V0ZSBkZXMgY2hhbmdlbWVudHMgZCfDqXRhdFxyXG4gICAgdGhpcy5tZXNzYWdlQnVzLm9uKE1lc3NhZ2VUeXBlLk9SR0FOSVNNX1NUQVRFX0NIQU5HRSwgKG1lc3NhZ2U6IE1lc3NhZ2VFdmVudCB8IHVua25vd24pID0+IHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB7IHN0YXRlIH0gPSAobWVzc2FnZSBhcyBhbnkpLnBheWxvYWQ7XHJcbiAgICAgICAgdGhpcy5lbmdpbmUucmVuZGVyKHN0YXRlIGFzIE9yZ2FuaXNtU3RhdGUpO1xyXG4gICAgICB9IGNhdGNoIChfZXJyKSB7XHJcbiAgICAgICAgbG9nZ2VyLmVycm9yKCdFcnJldXIgbG9ycyBkdSByZW5kdSBXZWJHTCA6JywgX2Vycik7XHJcbiAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBOb3RpZmljYXRpb24gZGUgcGVyZm9ybWFuY2VcclxuICAgICAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IG1ldHJpY3MgPSB0aGlzLmVuZ2luZS5nZXRQZXJmb3JtYW5jZU1ldHJpY3MoKTtcclxuICAgICAgICB0aGlzLm1lc3NhZ2VCdXMuc2VuZCh7XHJcbiAgICAgICAgICB0eXBlOiBNZXNzYWdlVHlwZS5QRVJGT1JNQU5DRV9VUERBVEUsXHJcbiAgICAgICAgICBwYXlsb2FkOiBtZXRyaWNzXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gY2F0Y2ggKF9lcnIpIHtcclxuICAgICAgICAvLyBPbiBpZ25vcmUgbGVzIGVycmV1cnMgZGUgbcOpdHJpcXVlcyBwb3VyIG5lIHBhcyBwb2xsdWVyIGxhIGNvbnNvbGVcclxuICAgICAgfVxyXG4gICAgICB9LCAxMDAwKTtcclxuICAgIH1cclxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7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