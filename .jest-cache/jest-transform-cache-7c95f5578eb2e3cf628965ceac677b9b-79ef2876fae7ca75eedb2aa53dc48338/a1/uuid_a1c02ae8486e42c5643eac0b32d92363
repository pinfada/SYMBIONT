0c729bf36a645ab7671b40211ebbc4d8
"use strict";

/* istanbul ignore next */
function cov_14aqfnksqn() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/uuid.ts";
  var hash = "de14964b743f784b17896bbee9ec7ec49b44f42c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/uuid.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 36
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 54
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 48
        }
      },
      "4": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 18,
          column: 5
        }
      },
      "5": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 17,
          column: 9
        }
      },
      "6": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 39
        }
      },
      "7": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 77
        }
      },
      "8": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 24,
          column: 7
        }
      },
      "9": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "10": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 49
        }
      },
      "11": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "12": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 31,
          column: 48
        }
      },
      "13": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "14": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 35
        }
      },
      "15": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "16": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 43,
          column: 40
        }
      },
      "17": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 38
        }
      },
      "18": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 44
        }
      },
      "19": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 44
        }
      },
      "20": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 48,
          column: 90
        }
      },
      "21": {
        start: {
          line: 48,
          column: 46
        },
        end: {
          line: 48,
          column: 80
        }
      },
      "22": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 55,
          column: 20
        }
      },
      "23": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 91
        }
      },
      "24": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "generateUUID",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 21
          }
        },
        loc: {
          start: {
            line: 9,
            column: 24
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 67
          },
          end: {
            line: 20,
            column: 68
          }
        },
        loc: {
          start: {
            line: 20,
            column: 80
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "isCryptoUUIDAvailable",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 30
          }
        },
        loc: {
          start: {
            line: 29,
            column: 33
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 29
      },
      "3": {
        name: "generateSecureUUID",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 27
          }
        },
        loc: {
          start: {
            line: 37,
            column: 30
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 37
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 48,
            column: 38
          },
          end: {
            line: 48,
            column: 39
          }
        },
        loc: {
          start: {
            line: 48,
            column: 46
          },
          end: {
            line: 48,
            column: 80
          }
        },
        line: 48
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 11,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 11,
            column: 37
          }
        }, {
          start: {
            line: 11,
            column: 41
          },
          end: {
            line: 11,
            column: 58
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 30
          },
          end: {
            line: 22,
            column: 31
          }
        }, {
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 22,
            column: 48
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 31,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 30,
            column: 40
          }
        }, {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 47
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 37
          }
        }, {
          start: {
            line: 42,
            column: 41
          },
          end: {
            line: 42,
            column: 63
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/uuid.ts",
      mappings: ";;AAGA,oCAgBC;AAKD,sDAGC;AAMD,gDA2BC;AA5DD;;GAEG;AACH,SAAgB,YAAY;IAC1B,kDAAkD;IAClD,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,UAAU,EAAE,CAAC;QACvD,IAAI,CAAC;YACH,OAAO,MAAM,CAAC,UAAU,EAAE,CAAC;QAC7B,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,IAAI,CAAC,2CAA2C,EAAE,KAAK,CAAC,CAAC;QACnE,CAAC;IACH,CAAC;IAED,2EAA2E;IAC3E,OAAO,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,CAAC;QACvE,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACjC,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;QAC1C,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;AACL,CAAC;AAED;;GAEG;AACH,SAAgB,qBAAqB;IACnC,OAAO,OAAO,MAAM,KAAK,WAAW;QAC7B,OAAO,MAAM,CAAC,UAAU,KAAK,UAAU,CAAC;AACjD,CAAC;AAED;;;GAGG;AACH,SAAgB,kBAAkB;IAChC,IAAI,qBAAqB,EAAE,EAAE,CAAC;QAC5B,OAAO,MAAM,CAAC,UAAU,EAAE,CAAC;IAC7B,CAAC;IAED,mEAAmE;IACnE,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,eAAe,EAAE,CAAC;QAC5D,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;QACjC,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAE9B,wBAAwB;QACxB,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,UAAU;QAC/C,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,UAAU;QAE/C,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnF,OAAO;YACL,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YACf,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;YAChB,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;YACjB,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;YACjB,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC;SAClB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,CAAC;IAED,kCAAkC;IAClC,OAAO,CAAC,IAAI,CAAC,wEAAwE,CAAC,CAAC;IACvF,OAAO,YAAY,EAAE,CAAC;AACxB,CAAC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/uuid.ts"],
      sourcesContent: ["/**\r\n * G\xE9n\xE8re un UUID v4 avec fallback pour les environnements sans crypto.randomUUID\r\n */\r\nexport function generateUUID(): string {\r\n  // Essayer d'abord crypto.randomUUID si disponible\r\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\r\n    try {\r\n      return crypto.randomUUID();\r\n    } catch (error) {\r\n      console.warn('crypto.randomUUID failed, using fallback:', error);\r\n    }\r\n  }\r\n\r\n  // Fallback pour les environnements qui ne supportent pas crypto.randomUUID\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n    const r = Math.random() * 16 | 0;\r\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n/**\r\n * V\xE9rifie si crypto.randomUUID est disponible dans l'environnement actuel\r\n */\r\nexport function isCryptoUUIDAvailable(): boolean {\r\n  return typeof crypto !== 'undefined' && \r\n         typeof crypto.randomUUID === 'function';\r\n}\r\n\r\n/**\r\n * G\xE9n\xE8re un UUID v4 cryptographiquement s\xE9curis\xE9 si possible\r\n * Sinon utilise Math.random() comme fallback\r\n */\r\nexport function generateSecureUUID(): string {\r\n  if (isCryptoUUIDAvailable()) {\r\n    return crypto.randomUUID();\r\n  }\r\n\r\n  // Fallback s\xE9curis\xE9 utilisant crypto.getRandomValues si disponible\r\n  if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\r\n    const array = new Uint8Array(16);\r\n    crypto.getRandomValues(array);\r\n    \r\n    // Version 4 UUID format\r\n    array[6] = (array[6] & 0x0f) | 0x40; // version\r\n    array[8] = (array[8] & 0x3f) | 0x80; // variant\r\n    \r\n    const hex = Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('');\r\n    return [\r\n      hex.slice(0, 8),\r\n      hex.slice(8, 12),\r\n      hex.slice(12, 16),\r\n      hex.slice(16, 20),\r\n      hex.slice(20, 32)\r\n    ].join('-');\r\n  }\r\n\r\n  // Dernier recours : Math.random()\r\n  console.warn('Using Math.random() for UUID generation - not cryptographically secure');\r\n  return generateUUID();\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "de14964b743f784b17896bbee9ec7ec49b44f42c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14aqfnksqn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14aqfnksqn();
cov_14aqfnksqn().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_14aqfnksqn().s[1]++;
exports.generateUUID = generateUUID;
/* istanbul ignore next */
cov_14aqfnksqn().s[2]++;
exports.isCryptoUUIDAvailable = isCryptoUUIDAvailable;
/* istanbul ignore next */
cov_14aqfnksqn().s[3]++;
exports.generateSecureUUID = generateSecureUUID;
/**
 * Génère un UUID v4 avec fallback pour les environnements sans crypto.randomUUID
 */
function generateUUID() {
  /* istanbul ignore next */
  cov_14aqfnksqn().f[0]++;
  cov_14aqfnksqn().s[4]++;
  // Essayer d'abord crypto.randomUUID si disponible
  if (
  /* istanbul ignore next */
  (cov_14aqfnksqn().b[1][0]++, typeof crypto !== 'undefined') &&
  /* istanbul ignore next */
  (cov_14aqfnksqn().b[1][1]++, crypto.randomUUID)) {
    /* istanbul ignore next */
    cov_14aqfnksqn().b[0][0]++;
    cov_14aqfnksqn().s[5]++;
    try {
      /* istanbul ignore next */
      cov_14aqfnksqn().s[6]++;
      return crypto.randomUUID();
    } catch (error) {
      /* istanbul ignore next */
      cov_14aqfnksqn().s[7]++;
      console.warn('crypto.randomUUID failed, using fallback:', error);
    }
  } else
  /* istanbul ignore next */
  {
    cov_14aqfnksqn().b[0][1]++;
  }
  // Fallback pour les environnements qui ne supportent pas crypto.randomUUID
  cov_14aqfnksqn().s[8]++;
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    /* istanbul ignore next */
    cov_14aqfnksqn().f[1]++;
    const r =
    /* istanbul ignore next */
    (cov_14aqfnksqn().s[9]++, Math.random() * 16 | 0);
    const v =
    /* istanbul ignore next */
    (cov_14aqfnksqn().s[10]++, c === 'x' ?
    /* istanbul ignore next */
    (cov_14aqfnksqn().b[2][0]++, r) :
    /* istanbul ignore next */
    (cov_14aqfnksqn().b[2][1]++, r & 0x3 | 0x8));
    /* istanbul ignore next */
    cov_14aqfnksqn().s[11]++;
    return v.toString(16);
  });
}
/**
 * Vérifie si crypto.randomUUID est disponible dans l'environnement actuel
 */
function isCryptoUUIDAvailable() {
  /* istanbul ignore next */
  cov_14aqfnksqn().f[2]++;
  cov_14aqfnksqn().s[12]++;
  return /* istanbul ignore next */(cov_14aqfnksqn().b[3][0]++, typeof crypto !== 'undefined') &&
  /* istanbul ignore next */
  (cov_14aqfnksqn().b[3][1]++, typeof crypto.randomUUID === 'function');
}
/**
 * Génère un UUID v4 cryptographiquement sécurisé si possible
 * Sinon utilise Math.random() comme fallback
 */
function generateSecureUUID() {
  /* istanbul ignore next */
  cov_14aqfnksqn().f[3]++;
  cov_14aqfnksqn().s[13]++;
  if (isCryptoUUIDAvailable()) {
    /* istanbul ignore next */
    cov_14aqfnksqn().b[4][0]++;
    cov_14aqfnksqn().s[14]++;
    return crypto.randomUUID();
  } else
  /* istanbul ignore next */
  {
    cov_14aqfnksqn().b[4][1]++;
  }
  // Fallback sécurisé utilisant crypto.getRandomValues si disponible
  cov_14aqfnksqn().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_14aqfnksqn().b[6][0]++, typeof crypto !== 'undefined') &&
  /* istanbul ignore next */
  (cov_14aqfnksqn().b[6][1]++, crypto.getRandomValues)) {
    /* istanbul ignore next */
    cov_14aqfnksqn().b[5][0]++;
    const array =
    /* istanbul ignore next */
    (cov_14aqfnksqn().s[16]++, new Uint8Array(16));
    /* istanbul ignore next */
    cov_14aqfnksqn().s[17]++;
    crypto.getRandomValues(array);
    // Version 4 UUID format
    /* istanbul ignore next */
    cov_14aqfnksqn().s[18]++;
    array[6] = array[6] & 0x0f | 0x40; // version
    /* istanbul ignore next */
    cov_14aqfnksqn().s[19]++;
    array[8] = array[8] & 0x3f | 0x80; // variant
    const hex =
    /* istanbul ignore next */
    (cov_14aqfnksqn().s[20]++, Array.from(array, byte => {
      /* istanbul ignore next */
      cov_14aqfnksqn().f[4]++;
      cov_14aqfnksqn().s[21]++;
      return byte.toString(16).padStart(2, '0');
    }).join(''));
    /* istanbul ignore next */
    cov_14aqfnksqn().s[22]++;
    return [hex.slice(0, 8), hex.slice(8, 12), hex.slice(12, 16), hex.slice(16, 20), hex.slice(20, 32)].join('-');
  } else
  /* istanbul ignore next */
  {
    cov_14aqfnksqn().b[5][1]++;
  }
  // Dernier recours : Math.random()
  cov_14aqfnksqn().s[23]++;
  console.warn('Using Math.random() for UUID generation - not cryptographically secure');
  /* istanbul ignore next */
  cov_14aqfnksqn().s[24]++;
  return generateUUID();
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,