fd21dee12cf8dfdbee9d8873d523d19a
"use strict";

// Version asynchrone de NeuralMesh utilisant Web Workers
// Décharge les calculs intensifs vers un thread séparé
/* istanbul ignore next */
function cov_1ws59xrqcx() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/NeuralMeshAsync.ts";
  var hash = "71245dc6c1a64a3238559e0158204f225b597c33";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/NeuralMeshAsync.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 62
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 33
        }
      },
      "2": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 54
        }
      },
      "3": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "4": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 37
        }
      },
      "5": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "6": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "7": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 27
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 43
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 32
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "14": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 92
        }
      },
      "15": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 32
        }
      },
      "16": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "17": {
        start: {
          line: 38,
          column: 31
        },
        end: {
          line: 44,
          column: 50
        }
      },
      "18": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 70
        }
      },
      "19": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 72
        }
      },
      "20": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 68
        }
      },
      "21": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 112
        }
      },
      "22": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "23": {
        start: {
          line: 59,
          column: 54
        },
        end: {
          line: 59,
          column: 64
        }
      },
      "24": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 60,
          column: 56
        }
      },
      "25": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "26": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 139
        }
      },
      "27": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 19
        }
      },
      "28": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 40
        }
      },
      "29": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 42
        }
      },
      "30": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 54
        }
      },
      "31": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "32": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 39
        }
      },
      "33": {
        start: {
          line: 73,
          column: 13
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "34": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 57
        }
      },
      "35": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 134
        }
      },
      "36": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "37": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 34
        }
      },
      "38": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 55
        }
      },
      "39": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 39
        }
      },
      "40": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "41": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "42": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 74
        }
      },
      "43": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 23
        }
      },
      "44": {
        start: {
          line: 98,
          column: 23
        },
        end: {
          line: 98,
          column: 89
        }
      },
      "45": {
        start: {
          line: 99,
          column: 28
        },
        end: {
          line: 102,
          column: 25
        }
      },
      "46": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 50
        }
      },
      "47": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 71
        }
      },
      "48": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 73
        }
      },
      "49": {
        start: {
          line: 104,
          column: 28
        },
        end: {
          line: 104,
          column: 49
        }
      },
      "50": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 45
        }
      },
      "51": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 30
        }
      },
      "52": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 50
        }
      },
      "53": {
        start: {
          line: 115,
          column: 23
        },
        end: {
          line: 115,
          column: 26
        }
      },
      "54": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 105
        }
      },
      "55": {
        start: {
          line: 122,
          column: 21
        },
        end: {
          line: 122,
          column: 54
        }
      },
      "56": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 33
        }
      },
      "57": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 36
        }
      },
      "58": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "59": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 87
        }
      },
      "60": {
        start: {
          line: 133,
          column: 27
        },
        end: {
          line: 133,
          column: 75
        }
      },
      "61": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "62": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 45
        }
      },
      "63": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 54
        }
      },
      "64": {
        start: {
          line: 143,
          column: 21
        },
        end: {
          line: 143,
          column: 43
        }
      },
      "65": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "66": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 144
        }
      },
      "67": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 19
        }
      },
      "68": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 44
        }
      },
      "69": {
        start: {
          line: 154,
          column: 26
        },
        end: {
          line: 154,
          column: 43
        }
      },
      "70": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 176,
          column: 77
        }
      },
      "71": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 34
        }
      },
      "72": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "73": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 167,
          column: 19
        }
      },
      "74": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 113
        }
      },
      "75": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 166,
          column: 41
        }
      },
      "76": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 37
        }
      },
      "77": {
        start: {
          line: 174,
          column: 35
        },
        end: {
          line: 174,
          column: 64
        }
      },
      "78": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 58
        }
      },
      "79": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "80": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "81": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 56
        }
      },
      "82": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "83": {
        start: {
          line: 190,
          column: 35
        },
        end: {
          line: 190,
          column: 68
        }
      },
      "84": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 197,
          column: 13
        }
      },
      "85": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 193,
          column: 29
        }
      },
      "86": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 193,
          column: 29
        }
      },
      "87": {
        start: {
          line: 194,
          column: 42
        },
        end: {
          line: 194,
          column: 82
        }
      },
      "88": {
        start: {
          line: 195,
          column: 38
        },
        end: {
          line: 195,
          column: 94
        }
      },
      "89": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 81
        }
      },
      "90": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 38
        }
      },
      "91": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 49
        }
      },
      "92": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "93": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 227,
          column: 13
        }
      },
      "94": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 221,
          column: 19
        }
      },
      "95": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 51
        }
      },
      "96": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 38
        }
      },
      "97": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 102
        }
      },
      "98": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 34
        }
      },
      "99": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "100": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 245,
          column: 13
        }
      },
      "101": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 244,
          column: 17
        }
      },
      "102": {
        start: {
          line: 242,
          column: 20
        },
        end: {
          line: 242,
          column: 69
        }
      },
      "103": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 243,
          column: 85
        }
      },
      "104": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "105": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 252,
          column: 13
        }
      },
      "106": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 57
        }
      },
      "107": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 65
        }
      },
      "108": {
        start: {
          line: 267,
          column: 28
        },
        end: {
          line: 267,
          column: 29
        }
      },
      "109": {
        start: {
          line: 268,
          column: 24
        },
        end: {
          line: 268,
          column: 25
        }
      },
      "110": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "111": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 50
        }
      },
      "112": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 24
        }
      },
      "113": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 61
        }
      },
      "114": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "115": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 283,
          column: 13
        }
      },
      "116": {
        start: {
          line: 281,
          column: 31
        },
        end: {
          line: 281,
          column: 109
        }
      },
      "117": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 282,
          column: 39
        }
      },
      "118": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 118
        }
      },
      "119": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 40
        }
      },
      "120": {
        start: {
          line: 295,
          column: 26
        },
        end: {
          line: 295,
          column: 27
        }
      },
      "121": {
        start: {
          line: 296,
          column: 30
        },
        end: {
          line: 296,
          column: 31
        }
      },
      "122": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 304,
          column: 9
        }
      },
      "123": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 303,
          column: 13
        }
      },
      "124": {
        start: {
          line: 299,
          column: 16
        },
        end: {
          line: 302,
          column: 17
        }
      },
      "125": {
        start: {
          line: 300,
          column: 20
        },
        end: {
          line: 300,
          column: 63
        }
      },
      "126": {
        start: {
          line: 301,
          column: 20
        },
        end: {
          line: 301,
          column: 38
        }
      },
      "127": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 71
        }
      },
      "128": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 321,
          column: 10
        }
      },
      "129": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "130": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 39
        }
      },
      "131": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "132": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 344,
          column: 13
        }
      },
      "133": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 338,
          column: 19
        }
      },
      "134": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 40
        }
      },
      "135": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 342,
          column: 110
        }
      },
      "136": {
        start: {
          line: 343,
          column: 16
        },
        end: {
          line: 343,
          column: 41
        }
      },
      "137": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 31
        }
      },
      "138": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 47
        }
      },
      "139": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 46
        }
      },
      "140": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 52
        }
      },
      "141": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 53
        }
      },
      "142": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 47
        }
      },
      "143": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 49
        }
      },
      "144": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 65
        }
      },
      "145": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 64
        }
      },
      "146": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 64
        }
      },
      "147": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 66
        }
      },
      "148": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 64
        }
      },
      "149": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 33
        }
      },
      "150": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 380,
          column: 9
        }
      },
      "151": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 36
        }
      },
      "152": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 31
        }
      },
      "153": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 37
        }
      },
      "154": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 45
        }
      },
      "155": {
        start: {
          line: 388,
          column: 25
        },
        end: {
          line: 388,
          column: 59
        }
      },
      "156": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 37
        }
      },
      "157": {
        start: {
          line: 395,
          column: 28
        },
        end: {
          line: 395,
          column: 97
        }
      },
      "158": {
        start: {
          line: 397,
          column: 27
        },
        end: {
          line: 397,
          column: 28
        }
      },
      "159": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 406,
          column: 9
        }
      },
      "160": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 405,
          column: 13
        }
      },
      "161": {
        start: {
          line: 401,
          column: 16
        },
        end: {
          line: 401,
          column: 43
        }
      },
      "162": {
        start: {
          line: 407,
          column: 28
        },
        end: {
          line: 407,
          column: 54
        }
      },
      "163": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 56
        }
      },
      "164": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 419,
          column: 10
        }
      },
      "165": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 433,
          column: 10
        }
      },
      "166": {
        start: {
          line: 427,
          column: 92
        },
        end: {
          line: 430,
          column: 13
        }
      },
      "167": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 444,
          column: 9
        }
      },
      "168": {
        start: {
          line: 440,
          column: 12
        },
        end: {
          line: 440,
          column: 31
        }
      },
      "169": {
        start: {
          line: 441,
          column: 12
        },
        end: {
          line: 443,
          column: 13
        }
      },
      "170": {
        start: {
          line: 442,
          column: 16
        },
        end: {
          line: 442,
          column: 41
        }
      },
      "171": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 450,
          column: 9
        }
      },
      "172": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 446,
          column: 37
        }
      },
      "173": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 449,
          column: 13
        }
      },
      "174": {
        start: {
          line: 448,
          column: 16
        },
        end: {
          line: 448,
          column: 58
        }
      },
      "175": {
        start: {
          line: 451,
          column: 8
        },
        end: {
          line: 456,
          column: 9
        }
      },
      "176": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 452,
          column: 37
        }
      },
      "177": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 455,
          column: 13
        }
      },
      "178": {
        start: {
          line: 454,
          column: 16
        },
        end: {
          line: 454,
          column: 53
        }
      },
      "179": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 461,
          column: 9
        }
      },
      "180": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 458,
          column: 82
        }
      },
      "181": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 86
        }
      },
      "182": {
        start: {
          line: 460,
          column: 12
        },
        end: {
          line: 460,
          column: 72
        }
      },
      "183": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 467,
          column: 27
        }
      },
      "184": {
        start: {
          line: 468,
          column: 8
        },
        end: {
          line: 468,
          column: 33
        }
      },
      "185": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 469,
          column: 33
        }
      },
      "186": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 470,
          column: 37
        }
      },
      "187": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 471,
          column: 39
        }
      },
      "188": {
        start: {
          line: 472,
          column: 8
        },
        end: {
          line: 472,
          column: 32
        }
      },
      "189": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 473,
          column: 35
        }
      },
      "190": {
        start: {
          line: 479,
          column: 23
        },
        end: {
          line: 479,
          column: 25
        }
      },
      "191": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 482,
          column: 9
        }
      },
      "192": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 481,
          column: 51
        }
      },
      "193": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 485,
          column: 9
        }
      },
      "194": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 484,
          column: 57
        }
      },
      "195": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 488,
          column: 9
        }
      },
      "196": {
        start: {
          line: 487,
          column: 12
        },
        end: {
          line: 487,
          column: 87
        }
      },
      "197": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 491,
          column: 9
        }
      },
      "198": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 490,
          column: 47
        }
      },
      "199": {
        start: {
          line: 493,
          column: 31
        },
        end: {
          line: 493,
          column: 40
        }
      },
      "200": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 499,
          column: 9
        }
      },
      "201": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 495,
          column: 39
        }
      },
      "202": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 498,
          column: 13
        }
      },
      "203": {
        start: {
          line: 497,
          column: 16
        },
        end: {
          line: 497,
          column: 50
        }
      },
      "204": {
        start: {
          line: 500,
          column: 30
        },
        end: {
          line: 500,
          column: 105
        }
      },
      "205": {
        start: {
          line: 500,
          column: 77
        },
        end: {
          line: 500,
          column: 104
        }
      },
      "206": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 503,
          column: 9
        }
      },
      "207": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 502,
          column: 71
        }
      },
      "208": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 507,
          column: 10
        }
      },
      "209": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 516,
          column: 11
        }
      },
      "210": {
        start: {
          line: 515,
          column: 12
        },
        end: {
          line: 515,
          column: 34
        }
      },
      "211": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 39
        }
      },
      "212": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 522,
          column: 9
        }
      },
      "213": {
        start: {
          line: 520,
          column: 12
        },
        end: {
          line: 520,
          column: 36
        }
      },
      "214": {
        start: {
          line: 521,
          column: 12
        },
        end: {
          line: 521,
          column: 31
        }
      },
      "215": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 524,
          column: 27
        }
      },
      "216": {
        start: {
          line: 525,
          column: 8
        },
        end: {
          line: 525,
          column: 33
        }
      },
      "217": {
        start: {
          line: 526,
          column: 8
        },
        end: {
          line: 526,
          column: 33
        }
      },
      "218": {
        start: {
          line: 527,
          column: 8
        },
        end: {
          line: 527,
          column: 33
        }
      },
      "219": {
        start: {
          line: 530,
          column: 0
        },
        end: {
          line: 530,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 29
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 31
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 58
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 29
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 80
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 83,
            column: 39
          },
          end: {
            line: 83,
            column: 40
          }
        },
        loc: {
          start: {
            line: 83,
            column: 64
          },
          end: {
            line: 86,
            column: 9
          }
        },
        line: 83
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 55
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 92
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 93,
            column: 27
          },
          end: {
            line: 93,
            column: 28
          }
        },
        loc: {
          start: {
            line: 93,
            column: 48
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 93
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 99,
            column: 39
          },
          end: {
            line: 99,
            column: 40
          }
        },
        loc: {
          start: {
            line: 99,
            column: 45
          },
          end: {
            line: 102,
            column: 13
          }
        },
        line: 99
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 45
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 111
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 32
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 121
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 40
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 129
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 29
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 142
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 22
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 153
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 155,
            column: 48
          },
          end: {
            line: 155,
            column: 49
          }
        },
        loc: {
          start: {
            line: 155,
            column: 54
          },
          end: {
            line: 176,
            column: 9
          }
        },
        line: 155
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 163,
            column: 25
          },
          end: {
            line: 163,
            column: 26
          }
        },
        loc: {
          start: {
            line: 163,
            column: 34
          },
          end: {
            line: 167,
            column: 17
          }
        },
        line: 163
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 20
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 181
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 15
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 203
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        loc: {
          start: {
            line: 209,
            column: 26
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 209
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 30
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 215
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 21
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 237
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        loc: {
          start: {
            line: 258,
            column: 34
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 258
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 24
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 265
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        loc: {
          start: {
            line: 278,
            column: 35
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 278
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        loc: {
          start: {
            line: 294,
            column: 28
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 294
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 310,
            column: 5
          }
        },
        loc: {
          start: {
            line: 310,
            column: 13
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 310
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 23
          },
          end: {
            line: 348,
            column: 5
          }
        },
        line: 326
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 5
          }
        },
        loc: {
          start: {
            line: 352,
            column: 26
          },
          end: {
            line: 368,
            column: 5
          }
        },
        line: 352
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        loc: {
          start: {
            line: 372,
            column: 20
          },
          end: {
            line: 382,
            column: 5
          }
        },
        line: 372
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 386,
            column: 5
          }
        },
        loc: {
          start: {
            line: 386,
            column: 24
          },
          end: {
            line: 390,
            column: 5
          }
        },
        line: 386
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 394,
            column: 5
          }
        },
        loc: {
          start: {
            line: 394,
            column: 27
          },
          end: {
            line: 409,
            column: 5
          }
        },
        line: 394
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 413,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        },
        loc: {
          start: {
            line: 413,
            column: 28
          },
          end: {
            line: 420,
            column: 5
          }
        },
        line: 413
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 424,
            column: 4
          },
          end: {
            line: 424,
            column: 5
          }
        },
        loc: {
          start: {
            line: 424,
            column: 16
          },
          end: {
            line: 434,
            column: 5
          }
        },
        line: 424
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 427,
            column: 68
          },
          end: {
            line: 427,
            column: 69
          }
        },
        loc: {
          start: {
            line: 427,
            column: 92
          },
          end: {
            line: 430,
            column: 13
          }
        },
        line: 427
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 438,
            column: 4
          },
          end: {
            line: 438,
            column: 5
          }
        },
        loc: {
          start: {
            line: 438,
            column: 21
          },
          end: {
            line: 462,
            column: 5
          }
        },
        line: 438
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 466,
            column: 4
          },
          end: {
            line: 466,
            column: 5
          }
        },
        loc: {
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 474,
            column: 5
          }
        },
        line: 466
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 478,
            column: 4
          },
          end: {
            line: 478,
            column: 5
          }
        },
        loc: {
          start: {
            line: 478,
            column: 18
          },
          end: {
            line: 508,
            column: 5
          }
        },
        line: 478
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 500,
            column: 67
          },
          end: {
            line: 500,
            column: 68
          }
        },
        loc: {
          start: {
            line: 500,
            column: 77
          },
          end: {
            line: 500,
            column: 104
          }
        },
        line: 500
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 512,
            column: 4
          },
          end: {
            line: 512,
            column: 5
          }
        },
        loc: {
          start: {
            line: 512,
            column: 14
          },
          end: {
            line: 528,
            column: 5
          }
        },
        line: 512
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 514,
            column: 39
          },
          end: {
            line: 514,
            column: 40
          }
        },
        loc: {
          start: {
            line: 514,
            column: 56
          },
          end: {
            line: 516,
            column: 9
          }
        },
        line: 514
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 25
          },
          end: {
            line: 8,
            column: 27
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "2": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: 73,
            column: 13
          },
          end: {
            line: 75,
            column: 9
          }
        }],
        line: 70
      },
      "3": {
        loc: {
          start: {
            line: 73,
            column: 13
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 13
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "4": {
        loc: {
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 92,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 92,
            column: 49
          },
          end: {
            line: 92,
            column: 53
          }
        }],
        line: 92
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 121,
            column: 22
          },
          end: {
            line: 121,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 121,
            column: 29
          },
          end: {
            line: 121,
            column: 30
          }
        }],
        line: 121
      },
      "7": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "8": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 130,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 130,
            column: 35
          }
        }, {
          start: {
            line: 130,
            column: 39
          },
          end: {
            line: 130,
            column: 60
          }
        }],
        line: 130
      },
      "9": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "10": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "11": {
        loc: {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 144,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 144,
            column: 17
          }
        }, {
          start: {
            line: 144,
            column: 21
          },
          end: {
            line: 144,
            column: 42
          }
        }],
        line: 144
      },
      "12": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        }, {
          start: {
            line: 169,
            column: 17
          },
          end: {
            line: 172,
            column: 13
          }
        }],
        line: 159
      },
      "13": {
        loc: {
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 159,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 159,
            column: 27
          }
        }, {
          start: {
            line: 159,
            column: 31
          },
          end: {
            line: 159,
            column: 47
          }
        }],
        line: 159
      },
      "14": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 186,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 186,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "15": {
        loc: {
          start: {
            line: 190,
            column: 35
          },
          end: {
            line: 190,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 35
          },
          end: {
            line: 190,
            column: 63
          }
        }, {
          start: {
            line: 190,
            column: 67
          },
          end: {
            line: 190,
            column: 68
          }
        }],
        line: 190
      },
      "16": {
        loc: {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 193,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 193,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "17": {
        loc: {
          start: {
            line: 194,
            column: 42
          },
          end: {
            line: 194,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 42
          },
          end: {
            line: 194,
            column: 77
          }
        }, {
          start: {
            line: 194,
            column: 81
          },
          end: {
            line: 194,
            column: 82
          }
        }],
        line: 194
      },
      "18": {
        loc: {
          start: {
            line: 210,
            column: 15
          },
          end: {
            line: 210,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 15
          },
          end: {
            line: 210,
            column: 43
          }
        }, {
          start: {
            line: 210,
            column: 47
          },
          end: {
            line: 210,
            column: 48
          }
        }],
        line: 210
      },
      "19": {
        loc: {
          start: {
            line: 215,
            column: 17
          },
          end: {
            line: 215,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 215,
            column: 24
          },
          end: {
            line: 215,
            column: 28
          }
        }],
        line: 215
      },
      "20": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 227,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 227,
            column: 13
          }
        }, {
          start: {
            line: 225,
            column: 17
          },
          end: {
            line: 227,
            column: 13
          }
        }],
        line: 217
      },
      "21": {
        loc: {
          start: {
            line: 217,
            column: 16
          },
          end: {
            line: 217,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 16
          },
          end: {
            line: 217,
            column: 27
          }
        }, {
          start: {
            line: 217,
            column: 31
          },
          end: {
            line: 217,
            column: 47
          }
        }],
        line: 217
      },
      "22": {
        loc: {
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 244,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 244,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "23": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "24": {
        loc: {
          start: {
            line: 273,
            column: 15
          },
          end: {
            line: 273,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 273,
            column: 31
          },
          end: {
            line: 273,
            column: 56
          }
        }, {
          start: {
            line: 273,
            column: 59
          },
          end: {
            line: 273,
            column: 60
          }
        }],
        line: 273
      },
      "25": {
        loc: {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "26": {
        loc: {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 27
          }
        }, {
          start: {
            line: 280,
            column: 31
          },
          end: {
            line: 280,
            column: 47
          }
        }],
        line: 280
      },
      "27": {
        loc: {
          start: {
            line: 299,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "28": {
        loc: {
          start: {
            line: 305,
            column: 15
          },
          end: {
            line: 305,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 305,
            column: 37
          },
          end: {
            line: 305,
            column: 66
          }
        }, {
          start: {
            line: 305,
            column: 69
          },
          end: {
            line: 305,
            column: 70
          }
        }],
        line: 305
      },
      "29": {
        loc: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "30": {
        loc: {
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "31": {
        loc: {
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      },
      "32": {
        loc: {
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 398
      },
      "33": {
        loc: {
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 398,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 398,
            column: 23
          }
        }, {
          start: {
            line: 398,
            column: 27
          },
          end: {
            line: 398,
            column: 43
          }
        }],
        line: 398
      },
      "34": {
        loc: {
          start: {
            line: 439,
            column: 8
          },
          end: {
            line: 444,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 439,
            column: 8
          },
          end: {
            line: 444,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 439
      },
      "35": {
        loc: {
          start: {
            line: 445,
            column: 8
          },
          end: {
            line: 450,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 8
          },
          end: {
            line: 450,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "36": {
        loc: {
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 8
          },
          end: {
            line: 456,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "37": {
        loc: {
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 461,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 461,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 457
      },
      "38": {
        loc: {
          start: {
            line: 458,
            column: 39
          },
          end: {
            line: 458,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 458,
            column: 39
          },
          end: {
            line: 458,
            column: 76
          }
        }, {
          start: {
            line: 458,
            column: 80
          },
          end: {
            line: 458,
            column: 81
          }
        }],
        line: 458
      },
      "39": {
        loc: {
          start: {
            line: 459,
            column: 41
          },
          end: {
            line: 459,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 459,
            column: 41
          },
          end: {
            line: 459,
            column: 80
          }
        }, {
          start: {
            line: 459,
            column: 84
          },
          end: {
            line: 459,
            column: 85
          }
        }],
        line: 459
      },
      "40": {
        loc: {
          start: {
            line: 460,
            column: 34
          },
          end: {
            line: 460,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 460,
            column: 34
          },
          end: {
            line: 460,
            column: 66
          }
        }, {
          start: {
            line: 460,
            column: 70
          },
          end: {
            line: 460,
            column: 71
          }
        }],
        line: 460
      },
      "41": {
        loc: {
          start: {
            line: 480,
            column: 8
          },
          end: {
            line: 482,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 480,
            column: 8
          },
          end: {
            line: 482,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 480
      },
      "42": {
        loc: {
          start: {
            line: 483,
            column: 8
          },
          end: {
            line: 485,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 483,
            column: 8
          },
          end: {
            line: 485,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 483
      },
      "43": {
        loc: {
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 488,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 486,
            column: 8
          },
          end: {
            line: 488,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 486
      },
      "44": {
        loc: {
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 8
          },
          end: {
            line: 491,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "45": {
        loc: {
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 489,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 489,
            column: 12
          },
          end: {
            line: 489,
            column: 23
          }
        }, {
          start: {
            line: 489,
            column: 27
          },
          end: {
            line: 489,
            column: 44
          }
        }],
        line: 489
      },
      "46": {
        loc: {
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 503,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 503,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 501
      },
      "47": {
        loc: {
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 519,
            column: 8
          },
          end: {
            line: 522,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 519
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/NeuralMeshAsync.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/NeuralMeshAsync.ts"],
      sourcesContent: ["// Version asynchrone de NeuralMesh utilisant Web Workers\r\n// D\xE9charge les calculs intensifs vers un thread s\xE9par\xE9\r\n\r\nimport { INeuralMesh } from './interfaces/INeuralMesh';\r\nimport { WorkerMessage, WorkerResponse } from '../workers/NeuralWorker';\r\nimport { errorHandler } from './utils/ErrorHandler';\r\n\r\ninterface NeuralNode {\r\n  id: string;\r\n  type: 'input' | 'hidden' | 'output';\r\n  activation: number;\r\n  bias: number;\r\n}\r\n\r\ninterface NeuralConnection {\r\n  from: string;\r\n  to: string;\r\n  weight: number;\r\n  active: boolean;\r\n}\r\n\r\ninterface NeuralMeshAsyncConfig {\r\n  useWorker?: boolean;\r\n  fallbackToMainThread?: boolean;\r\n  maxRetries?: number;\r\n  timeoutMs?: number;\r\n}\r\n\r\nexport class NeuralMeshAsync implements INeuralMesh {\r\n  private nodes: Map<string, NeuralNode> = new Map();\r\n  private connections: Map<string, NeuralConnection[]> = new Map();\r\n  private activations: Map<string, number> = new Map();\r\n  // @ts-expect-error Taux r\xE9serv\xE9 pour usage futur\r\n  private learningRate: number = 0.01;\r\n  \r\n  // Worker management\r\n  private worker: Worker | null = null;\r\n  private networkId: string;\r\n  private workerReady = false;\r\n  private pendingOperations = new Map<string, {\r\n    resolve: (value: any) => void;\r\n    reject: (error: Error) => void;\r\n    timeout: NodeJS.Timeout;\r\n  }>();\r\n\r\n  // Performance tracking\r\n  private lastPropagationTime = 0;\r\n  private averageProcessingTime = 0;\r\n  private operationCount = 0;\r\n\r\n  // @ts-expect-error Configuration r\xE9serv\xE9e pour usage futur\r\n  private config: any;\r\n\r\n  constructor(config: NeuralMeshAsyncConfig = {}) {\r\n    this.config = {\r\n      useWorker: true,\r\n      fallbackToMainThread: true,\r\n      maxRetries: 3,\r\n      timeoutMs: 5000,\r\n      ...config\r\n    };\r\n    this.networkId = `network_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    this.initializeWorker();\r\n  }\r\n\r\n  /**\r\n   * Initialise le Web Worker\r\n   */\r\n  private initializeWorker(): void {\r\n    try {\r\n      // Dans un environnement de navigateur, nous devons cr\xE9er le worker diff\xE9remment\r\n      const workerBlob = new Blob([\r\n        // Contenu du worker en tant que string (pour contourner les limitations)\r\n        `\r\n        // Worker code sera inject\xE9 ici lors du build\r\n        importScripts('./workers/NeuralWorker.js');\r\n        `\r\n      ], { type: 'application/javascript' });\r\n      \r\n      this.worker = new Worker(URL.createObjectURL(workerBlob));\r\n      this.worker.onmessage = this.handleWorkerMessage.bind(this);\r\n      this.worker.onerror = this.handleWorkerError.bind(this);\r\n      \r\n    } catch (error) {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'initializeWorker', error, 'warning');\r\n      // Fallback : mode synchrone\r\n      this.worker = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * G\xE8re les messages du worker\r\n   */\r\n  private handleWorkerMessage(event: MessageEvent<WorkerResponse>): void {\r\n    const { type, id, payload, processingTime } = event.data;\r\n    \r\n    const operation = this.pendingOperations.get(id);\r\n    if (!operation) {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'handleWorkerMessage', \r\n        `Unknown operation ID: ${id}`, 'warning');\r\n      return;\r\n    }\r\n\r\n    // Clear timeout et remove operation\r\n    clearTimeout(operation.timeout);\r\n    this.pendingOperations.delete(id);\r\n\r\n    // Update performance metrics\r\n    this.updatePerformanceMetrics(processingTime);\r\n\r\n    if (type === 'NEURAL_RESULT') {\r\n      operation.resolve(payload);\r\n    } else if (type === 'NEURAL_ERROR') {\r\n      operation.reject(new Error(payload.message));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * G\xE8re les erreurs du worker\r\n   */\r\n  private handleWorkerError(event: ErrorEvent): void {\r\n    errorHandler.logSimpleError('NeuralMeshAsync', 'handleWorkerError', \r\n      `Worker error: ${event.message}`, 'error');\r\n    \r\n    // Reject all pending operations\r\n    this.pendingOperations.forEach(({ reject, timeout }) => {\r\n      clearTimeout(timeout);\r\n      reject(new Error('Worker error occurred'));\r\n    });\r\n    this.pendingOperations.clear();\r\n  }\r\n\r\n  /**\r\n   * Envoie un message au worker avec timeout\r\n   */\r\n  private sendWorkerMessage<T>(\r\n    type: WorkerMessage['type'], \r\n    payload: any, \r\n    timeoutMs: number = 5000\r\n  ): Promise<T> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!this.worker) {\r\n        reject(new Error('Worker not available, using fallback'));\r\n        return;\r\n      }\r\n\r\n      const id = `${type}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n      \r\n      const timeout = setTimeout(() => {\r\n        this.pendingOperations.delete(id);\r\n        reject(new Error(`Worker operation timeout: ${type}`));\r\n      }, timeoutMs);\r\n\r\n      this.pendingOperations.set(id, { resolve, reject, timeout });\r\n\r\n      const message: WorkerMessage = { type, id, payload };\r\n      this.worker.postMessage(message);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Met \xE0 jour les m\xE9triques de performance\r\n   */\r\n  private updatePerformanceMetrics(processingTime: number): void {\r\n    this.operationCount++;\r\n    this.lastPropagationTime = processingTime;\r\n    \r\n    // Moving average\r\n    const weight = 0.1;\r\n    this.averageProcessingTime = this.averageProcessingTime * (1 - weight) + processingTime * weight;\r\n  }\r\n\r\n  /**\r\n   * Ajoute un n\u0153ud au r\xE9seau\r\n   */\r\n  addNode(id: string, type: 'input' | 'hidden' | 'output', bias: number = 0): void {\r\n    const node: NeuralNode = { id, type, activation: 0, bias };\r\n    this.nodes.set(id, node);\r\n    this.activations.set(id, 0);\r\n  }\r\n\r\n  /**\r\n   * Ajoute une connexion entre deux n\u0153uds\r\n   */\r\n  addConnection(fromId: string, toId: string, weight: number): void {\r\n    if (!this.nodes.has(fromId) || !this.nodes.has(toId)) {\r\n      throw new Error(`Cannot connect non-existent nodes: ${fromId} -> ${toId}`);\r\n    }\r\n\r\n    const connection: NeuralConnection = { from: fromId, to: toId, weight, active: true };\r\n\r\n    if (!this.connections.has(fromId)) {\r\n      this.connections.set(fromId, []);\r\n    }\r\n    this.connections.get(fromId)!.push(connection);\r\n  }\r\n\r\n  /**\r\n   * Stimule un n\u0153ud d'entr\xE9e\r\n   */\r\n  stimulate(nodeId: string, value: number): void {\r\n    const node = this.nodes.get(nodeId);\r\n    if (!node || node.type !== 'input') {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'stimulate', \r\n        `Cannot stimulate non-input node: ${nodeId}`, 'warning');\r\n      return;\r\n    }\r\n    this.activations.set(nodeId, value);\r\n  }\r\n\r\n  /**\r\n   * Propagation des signaux dans le r\xE9seau\r\n   */\r\n  async propagate(): Promise<void> {\r\n    const startTime = performance.now();\r\n    \r\n    errorHandler.safeExecute(\r\n      () => {\r\n        // Increment operation count\r\n        this.operationCount++;\r\n        \r\n        // Try worker first if available\r\n        if (this.worker && this.workerReady) {\r\n          this.sendWorkerMessage('NEURAL_PROPAGATE', {\r\n            networkId: this.networkId,\r\n            activations: Object.fromEntries(this.activations)\r\n          }).catch(error => {\r\n            errorHandler.logSimpleError('NeuralMeshAsync', 'propagate', error, 'warning');\r\n            // Fallback to sync\r\n            this.propagateSync();\r\n          });\r\n        } else {\r\n          // Fallback to synchronous propagation\r\n          this.propagateSync();\r\n        }\r\n        \r\n        // Update performance metrics\r\n        const processingTime = performance.now() - startTime;\r\n        this.updatePerformanceMetrics(processingTime);\r\n      },\r\n      undefined,\r\n      { component: 'NeuralMeshAsync', method: 'propagate' }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Propagation synchrone (fallback)\r\n   */\r\n  private propagateSync(): void {\r\n    // Reset non-input activations\r\n    for (const [nodeId, node] of this.nodes) {\r\n      if (node.type !== 'input') {\r\n        this.activations.set(nodeId, node.bias);\r\n      }\r\n    }\r\n\r\n    // Propagate through connections\r\n    for (const [fromId, connections] of this.connections) {\r\n      const fromActivation = this.activations.get(fromId) || 0;\r\n      \r\n      for (const connection of connections) {\r\n        if (!connection.active) continue;\r\n        \r\n        const currentActivation = this.activations.get(connection.to) || 0;\r\n        const newActivation = currentActivation + (fromActivation * connection.weight);\r\n        this.activations.set(connection.to, this.sigmoid(newActivation));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fonction d'activation sigmo\xEFde\r\n   */\r\n  private sigmoid(x: number): number {\r\n    return 1 / (1 + Math.exp(-x));\r\n  }\r\n\r\n  /**\r\n   * R\xE9cup\xE8re l'activation d'un n\u0153ud\r\n   */\r\n  getActivation(nodeId: string): number {\r\n    return this.activations.get(nodeId) || 0;\r\n  }\r\n\r\n  /**\r\n   * Applique une mutation al\xE9atoire au r\xE9seau (version async)\r\n   */\r\n  async mutate(rate: number = 0.05): Promise<void> {\r\n    try {\r\n      if (this.worker && this.workerReady) {\r\n        await this.sendWorkerMessage('NEURAL_MUTATE', {\r\n          networkId: this.networkId,\r\n          rate\r\n        });\r\n        \r\n        // Sync back the mutations to local state\r\n        await this.syncNetworkFromWorker();\r\n      } else {\r\n        this.mutateSync(rate);\r\n      }\r\n    } catch (error) {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'mutate', error, 'warning');\r\n      this.mutateSync(rate);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mutation synchrone (fallback)\r\n   */\r\n  private mutateSync(rate: number): void {\r\n    // Mutate connection weights\r\n    for (const connections of this.connections.values()) {\r\n      for (const connection of connections) {\r\n        if (Math.random() < rate) {\r\n          connection.weight += (Math.random() - 0.5) * 0.2;\r\n          connection.weight = Math.max(-2, Math.min(2, connection.weight));\r\n        }\r\n      }\r\n    }\r\n\r\n    // Mutate node biases\r\n    for (const node of this.nodes.values()) {\r\n      if (Math.random() < rate) {\r\n        node.bias += (Math.random() - 0.5) * 0.1;\r\n        node.bias = Math.max(-1, Math.min(1, node.bias));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Synchronise l'\xE9tat du r\xE9seau depuis le worker\r\n   */\r\n  private async syncNetworkFromWorker(): Promise<void> {\r\n    // Implementation would sync worker state back to local state\r\n    // For now, we'll skip this complex synchronization\r\n  }\r\n\r\n  /**\r\n   * Mesure l'activit\xE9 neurale globale - impl\xE9mentation unifi\xE9e\r\n   */\r\n  getNeuralActivity(): number {\r\n    // Synchronous fallback implementation\r\n    let totalActivity = 0;\r\n    let nodeCount = 0;\r\n\r\n    for (const activation of this.activations.values()) {\r\n      totalActivity += Math.abs(activation);\r\n      nodeCount++;\r\n    }\r\n\r\n    return nodeCount > 0 ? totalActivity / nodeCount : 0;\r\n  }\r\n\r\n  /**\r\n   * Version asynchrone de getNeuralActivity pour calculs avanc\xE9s\r\n   */\r\n  async getNeuralActivityAsync(): Promise<number> {\r\n    try {\r\n      if (this.worker && this.workerReady) {\r\n        const result = await this.sendWorkerMessage<{\r\n          activity: number;\r\n          connectionStrength: number;\r\n          nodeCount: number;\r\n          connectionCount: number;\r\n        }>('NEURAL_ACTIVITY', { networkId: this.networkId });\r\n        \r\n        return result.activity;\r\n      }\r\n    } catch (error) {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'getNeuralActivityAsync', error, 'warning');\r\n    }\r\n\r\n    // Fallback synchrone\r\n    return this.getNeuralActivity();\r\n  }\r\n\r\n  /**\r\n   * Mesure la force moyenne des connexions\r\n   */\r\n  getConnectionStrength(): number {\r\n    let totalWeight = 0;\r\n    let connectionCount = 0;\r\n\r\n    for (const connections of this.connections.values()) {\r\n      for (const connection of connections) {\r\n        if (connection.active) {\r\n          totalWeight += Math.abs(connection.weight);\r\n          connectionCount++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return connectionCount > 0 ? totalWeight / connectionCount : 0;\r\n  }\r\n\r\n  /**\r\n   * Export JSON pour debug/sauvegarde\r\n   */\r\n  toJSON(): any {\r\n    return {\r\n      nodes: Array.from(this.nodes.values()),\r\n      connections: Array.from(this.connections.values()).flat(),\r\n      activations: Object.fromEntries(this.activations),\r\n      performance: {\r\n        lastPropagationTime: this.lastPropagationTime,\r\n        averageProcessingTime: this.averageProcessingTime,\r\n        operationCount: this.operationCount,\r\n        workerReady: this.workerReady\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialise le r\xE9seau neuronal\r\n   */\r\n  async initialize(): Promise<void> {\r\n    // Setup default network if empty\r\n    if (this.nodes.size === 0) {\r\n      this.setupDefaultNetwork();\r\n    }\r\n\r\n    // Initialize worker network\r\n    if (this.worker) {\r\n      try {\r\n        await this.sendWorkerMessage('NEURAL_INIT', {\r\n          networkId: this.networkId,\r\n          nodes: Array.from(this.nodes.values()),\r\n          connections: Array.from(this.connections.values()).flat()\r\n        });\r\n        this.workerReady = true;\r\n      } catch (error) {\r\n        errorHandler.logSimpleError('NeuralMeshAsync', 'initialize', error, 'warning');\r\n        this.workerReady = false;\r\n      }\r\n    }\r\n    \r\n    // Perform initial propagation\r\n    await this.propagate();\r\n  }\r\n\r\n  /**\r\n   * Configure un r\xE9seau par d\xE9faut pour les tests\r\n   */\r\n  private setupDefaultNetwork(): void {\r\n    // Add input nodes\r\n    this.addNode('sensory_input', 'input');\r\n    this.addNode('memory_input', 'input');\r\n    \r\n    // Add hidden nodes\r\n    this.addNode('processing_1', 'hidden', 0.1);\r\n    this.addNode('processing_2', 'hidden', -0.1);\r\n    \r\n    // Add output nodes\r\n    this.addNode('motor_output', 'output');\r\n    this.addNode('emotion_output', 'output');\r\n    \r\n    // Connect the network\r\n    this.addConnection('sensory_input', 'processing_1', 0.8);\r\n    this.addConnection('memory_input', 'processing_2', 0.6);\r\n    this.addConnection('processing_1', 'motor_output', 0.9);\r\n    this.addConnection('processing_2', 'emotion_output', 0.7);\r\n    this.addConnection('processing_1', 'processing_2', 0.3);\r\n  }\r\n\r\n  /**\r\n   * Suspend neural processing\r\n   */\r\n  async suspend(): Promise<void> {\r\n    // Clear activations but keep structure\r\n    this.activations.clear();\r\n    \r\n    // Terminate worker if needed\r\n    if (this.worker) {\r\n      this.worker.terminate();\r\n      this.worker = null;\r\n      this.workerReady = false;\r\n    }\r\n    \r\n    console.log('Neural mesh suspended');\r\n  }\r\n\r\n  /**\r\n   * Get CPU usage estimation\r\n   */\r\n  async getCPUUsage(): Promise<number> {\r\n    // Calculate based on processing time and operation frequency\r\n    const baseLoad = this.averageProcessingTime / 16.67; // Compare to 60fps frame time\r\n    return Math.min(1, baseLoad);\r\n  }\r\n\r\n  /**\r\n   * Get memory usage estimation\r\n   */\r\n  async getMemoryUsage(): Promise<number> {\r\n    const localMemory = (this.nodes.size + Array.from(this.connections.values()).length) * 64;\r\n    \r\n    // Add worker memory if available\r\n    let workerMemory = 0;\r\n    if (this.worker && this.workerReady) {\r\n      try {\r\n        // Would get actual worker stats, simplified for now\r\n        workerMemory = localMemory; // Estimate\r\n      } catch (error) {\r\n        // Ignore worker memory calculation error\r\n      }\r\n    }\r\n    \r\n    const totalMemory = localMemory + workerMemory;\r\n    return Math.min(1, totalMemory / (1024 * 1024)); // Convert to MB ratio\r\n  }\r\n\r\n  /**\r\n   * Get performance metrics\r\n   */\r\n  getPerformanceMetrics(): {\r\n    lastPropagationTime: number;\r\n    averageProcessingTime: number;\r\n    operationCount: number;\r\n    workerReady: boolean;\r\n  } {\r\n    return {\r\n      lastPropagationTime: this.lastPropagationTime,\r\n      averageProcessingTime: this.averageProcessingTime,\r\n      operationCount: this.operationCount,\r\n      workerReady: this.workerReady\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Save current state for persistence\r\n   */\r\n  saveState(): any {\r\n    return {\r\n      nodes: Array.from(this.nodes.entries()),\r\n      connections: Array.from(this.connections.entries()).map(([key, connections]) => [\r\n        key,\r\n        connections\r\n      ]),\r\n      activations: Object.fromEntries(this.activations),\r\n      performance: this.getPerformanceMetrics()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Load state from saved data\r\n   */\r\n  loadState(state: any): void {\r\n    if (state.nodes) {\r\n      this.nodes.clear();\r\n      for (const [id, node] of state.nodes) {\r\n        this.nodes.set(id, node as NeuralNode);\r\n      }\r\n    }\r\n    \r\n    if (state.connections) {\r\n      this.connections.clear();\r\n      for (const [fromId, connections] of state.connections) {\r\n        this.connections.set(fromId, connections as NeuralConnection[]);\r\n      }\r\n    }\r\n    \r\n    if (state.activations) {\r\n      this.activations.clear();\r\n      for (const [id, activation] of Object.entries(state.activations)) {\r\n        this.activations.set(id, activation as number);\r\n      }\r\n    }\r\n\r\n    if (state.performance) {\r\n      this.lastPropagationTime = state.performance.lastPropagationTime || 0;\r\n      this.averageProcessingTime = state.performance.averageProcessingTime || 0;\r\n      this.operationCount = state.performance.operationCount || 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset neural mesh to initial state\r\n   */\r\n  reset(): void {\r\n    this.nodes.clear();\r\n    this.connections.clear();\r\n    this.activations.clear();\r\n    this.lastPropagationTime = 0;\r\n    this.averageProcessingTime = 0;\r\n    this.operationCount = 0;\r\n    this.setupDefaultNetwork();\r\n  }\r\n\r\n  /**\r\n   * Health check for neural mesh\r\n   */\r\n  healthCheck(): { healthy: boolean; issues: string[] } {\r\n    const issues: string[] = [];\r\n    \r\n    if (this.nodes.size === 0) {\r\n      issues.push('No nodes in neural mesh');\r\n    }\r\n    \r\n    if (this.connections.size === 0) {\r\n      issues.push('No connections in neural mesh');\r\n    }\r\n\r\n    if (this.pendingOperations.size > 10) {\r\n      issues.push(`Too many pending operations: ${this.pendingOperations.size}`);\r\n    }\r\n\r\n    if (this.worker && !this.workerReady) {\r\n      issues.push('Worker is not ready');\r\n    }\r\n    \r\n    // Check for orphaned nodes\r\n    const connectedNodes = new Set<string>();\r\n    for (const [fromId, connections] of this.connections) {\r\n      connectedNodes.add(fromId);\r\n      for (const connection of connections) {\r\n        connectedNodes.add(connection.to);\r\n      }\r\n    }\r\n    \r\n    const orphanedNodes = Array.from(this.nodes.keys()).filter(\r\n      nodeId => !connectedNodes.has(nodeId)\r\n    );\r\n    \r\n    if (orphanedNodes.length > 0) {\r\n      issues.push(`Orphaned nodes: ${orphanedNodes.join(', ')}`);\r\n    }\r\n    \r\n    return {\r\n      healthy: issues.length === 0,\r\n      issues\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Cleanup resources\r\n   */\r\n  cleanup(): void {\r\n    // Clean up pending operations\r\n    this.pendingOperations.forEach(({ timeout }) => {\r\n      clearTimeout(timeout);\r\n    });\r\n    this.pendingOperations.clear();\r\n\r\n    // Terminate worker\r\n    if (this.worker) {\r\n      this.worker.terminate();\r\n      this.worker = null;\r\n    }\r\n\r\n    // Clear all data\r\n    this.nodes.clear();\r\n    this.connections.clear();\r\n    this.activations.clear();\r\n    this.workerReady = false;\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "71245dc6c1a64a3238559e0158204f225b597c33"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ws59xrqcx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ws59xrqcx();
cov_1ws59xrqcx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ws59xrqcx().s[1]++;
exports.NeuralMeshAsync = void 0;
const ErrorHandler_1 =
/* istanbul ignore next */
(cov_1ws59xrqcx().s[2]++, require("./utils/ErrorHandler"));
class NeuralMeshAsync {
  constructor(config =
  /* istanbul ignore next */
  (cov_1ws59xrqcx().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[0]++;
    cov_1ws59xrqcx().s[3]++;
    this.nodes = new Map();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[4]++;
    this.connections = new Map();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[5]++;
    this.activations = new Map();
    // @ts-expect-error Taux réservé pour usage futur
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[6]++;
    this.learningRate = 0.01;
    // Worker management
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[7]++;
    this.worker = null;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[8]++;
    this.workerReady = false;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[9]++;
    this.pendingOperations = new Map();
    // Performance tracking
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[10]++;
    this.lastPropagationTime = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[11]++;
    this.averageProcessingTime = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[12]++;
    this.operationCount = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[13]++;
    this.config = {
      useWorker: true,
      fallbackToMainThread: true,
      maxRetries: 3,
      timeoutMs: 5000,
      ...config
    };
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[14]++;
    this.networkId = `network_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[15]++;
    this.initializeWorker();
  }
  /**
   * Initialise le Web Worker
   */
  initializeWorker() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[1]++;
    cov_1ws59xrqcx().s[16]++;
    try {
      // Dans un environnement de navigateur, nous devons créer le worker différemment
      const workerBlob =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[17]++, new Blob([
      // Contenu du worker en tant que string (pour contourner les limitations)
      `
        // Worker code sera injecté ici lors du build
        importScripts('./workers/NeuralWorker.js');
        `], {
        type: 'application/javascript'
      }));
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[18]++;
      this.worker = new Worker(URL.createObjectURL(workerBlob));
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[19]++;
      this.worker.onmessage = this.handleWorkerMessage.bind(this);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[20]++;
      this.worker.onerror = this.handleWorkerError.bind(this);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[21]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'initializeWorker', error, 'warning');
      // Fallback : mode synchrone
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[22]++;
      this.worker = null;
    }
  }
  /**
   * Gère les messages du worker
   */
  handleWorkerMessage(event) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[2]++;
    const {
      type,
      id,
      payload,
      processingTime
    } =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[23]++, event.data);
    const operation =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[24]++, this.pendingOperations.get(id));
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[25]++;
    if (!operation) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[1][0]++;
      cov_1ws59xrqcx().s[26]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'handleWorkerMessage', `Unknown operation ID: ${id}`, 'warning');
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[27]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[1][1]++;
    }
    // Clear timeout et remove operation
    cov_1ws59xrqcx().s[28]++;
    clearTimeout(operation.timeout);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[29]++;
    this.pendingOperations.delete(id);
    // Update performance metrics
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[30]++;
    this.updatePerformanceMetrics(processingTime);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[31]++;
    if (type === 'NEURAL_RESULT') {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[2][0]++;
      cov_1ws59xrqcx().s[32]++;
      operation.resolve(payload);
    } else {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[2][1]++;
      cov_1ws59xrqcx().s[33]++;
      if (type === 'NEURAL_ERROR') {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[3][0]++;
        cov_1ws59xrqcx().s[34]++;
        operation.reject(new Error(payload.message));
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[3][1]++;
      }
    }
  }
  /**
   * Gère les erreurs du worker
   */
  handleWorkerError(event) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[3]++;
    cov_1ws59xrqcx().s[35]++;
    ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'handleWorkerError', `Worker error: ${event.message}`, 'error');
    // Reject all pending operations
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[36]++;
    this.pendingOperations.forEach(({
      reject,
      timeout
    }) => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[4]++;
      cov_1ws59xrqcx().s[37]++;
      clearTimeout(timeout);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[38]++;
      reject(new Error('Worker error occurred'));
    });
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[39]++;
    this.pendingOperations.clear();
  }
  /**
   * Envoie un message au worker avec timeout
   */
  sendWorkerMessage(type, payload, timeoutMs =
  /* istanbul ignore next */
  (cov_1ws59xrqcx().b[4][0]++, 5000)) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[5]++;
    cov_1ws59xrqcx().s[40]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[6]++;
      cov_1ws59xrqcx().s[41]++;
      if (!this.worker) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[5][0]++;
        cov_1ws59xrqcx().s[42]++;
        reject(new Error('Worker not available, using fallback'));
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[43]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[5][1]++;
      }
      const id =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[44]++, `${type}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
      const timeout =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[45]++, setTimeout(() => {
        /* istanbul ignore next */
        cov_1ws59xrqcx().f[7]++;
        cov_1ws59xrqcx().s[46]++;
        this.pendingOperations.delete(id);
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[47]++;
        reject(new Error(`Worker operation timeout: ${type}`));
      }, timeoutMs));
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[48]++;
      this.pendingOperations.set(id, {
        resolve,
        reject,
        timeout
      });
      const message =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[49]++, {
        type,
        id,
        payload
      });
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[50]++;
      this.worker.postMessage(message);
    });
  }
  /**
   * Met à jour les métriques de performance
   */
  updatePerformanceMetrics(processingTime) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[8]++;
    cov_1ws59xrqcx().s[51]++;
    this.operationCount++;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[52]++;
    this.lastPropagationTime = processingTime;
    // Moving average
    const weight =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[53]++, 0.1);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[54]++;
    this.averageProcessingTime = this.averageProcessingTime * (1 - weight) + processingTime * weight;
  }
  /**
   * Ajoute un nœud au réseau
   */
  addNode(id, type, bias =
  /* istanbul ignore next */
  (cov_1ws59xrqcx().b[6][0]++, 0)) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[9]++;
    const node =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[55]++, {
      id,
      type,
      activation: 0,
      bias
    });
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[56]++;
    this.nodes.set(id, node);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[57]++;
    this.activations.set(id, 0);
  }
  /**
   * Ajoute une connexion entre deux nœuds
   */
  addConnection(fromId, toId, weight) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[10]++;
    cov_1ws59xrqcx().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[8][0]++, !this.nodes.has(fromId)) ||
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[8][1]++, !this.nodes.has(toId))) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[7][0]++;
      cov_1ws59xrqcx().s[59]++;
      throw new Error(`Cannot connect non-existent nodes: ${fromId} -> ${toId}`);
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[7][1]++;
    }
    const connection =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[60]++, {
      from: fromId,
      to: toId,
      weight,
      active: true
    });
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[61]++;
    if (!this.connections.has(fromId)) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[9][0]++;
      cov_1ws59xrqcx().s[62]++;
      this.connections.set(fromId, []);
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[9][1]++;
    }
    cov_1ws59xrqcx().s[63]++;
    this.connections.get(fromId).push(connection);
  }
  /**
   * Stimule un nœud d'entrée
   */
  stimulate(nodeId, value) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[11]++;
    const node =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[64]++, this.nodes.get(nodeId));
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[11][0]++, !node) ||
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[11][1]++, node.type !== 'input')) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[10][0]++;
      cov_1ws59xrqcx().s[66]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'stimulate', `Cannot stimulate non-input node: ${nodeId}`, 'warning');
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[67]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[10][1]++;
    }
    cov_1ws59xrqcx().s[68]++;
    this.activations.set(nodeId, value);
  }
  /**
   * Propagation des signaux dans le réseau
   */
  async propagate() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[12]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[69]++, performance.now());
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[70]++;
    ErrorHandler_1.errorHandler.safeExecute(() => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[13]++;
      cov_1ws59xrqcx().s[71]++;
      // Increment operation count
      this.operationCount++;
      // Try worker first if available
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[72]++;
      if (
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[13][0]++, this.worker) &&
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[13][1]++, this.workerReady)) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[12][0]++;
        cov_1ws59xrqcx().s[73]++;
        this.sendWorkerMessage('NEURAL_PROPAGATE', {
          networkId: this.networkId,
          activations: Object.fromEntries(this.activations)
        }).catch(error => {
          /* istanbul ignore next */
          cov_1ws59xrqcx().f[14]++;
          cov_1ws59xrqcx().s[74]++;
          ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'propagate', error, 'warning');
          // Fallback to sync
          /* istanbul ignore next */
          cov_1ws59xrqcx().s[75]++;
          this.propagateSync();
        });
      } else {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[12][1]++;
        cov_1ws59xrqcx().s[76]++;
        // Fallback to synchronous propagation
        this.propagateSync();
      }
      // Update performance metrics
      const processingTime =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[77]++, performance.now() - startTime);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[78]++;
      this.updatePerformanceMetrics(processingTime);
    }, undefined, {
      component: 'NeuralMeshAsync',
      method: 'propagate'
    });
  }
  /**
   * Propagation synchrone (fallback)
   */
  propagateSync() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[15]++;
    cov_1ws59xrqcx().s[79]++;
    // Reset non-input activations
    for (const [nodeId, node] of this.nodes) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[80]++;
      if (node.type !== 'input') {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[14][0]++;
        cov_1ws59xrqcx().s[81]++;
        this.activations.set(nodeId, node.bias);
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[14][1]++;
      }
    }
    // Propagate through connections
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[82]++;
    for (const [fromId, connections] of this.connections) {
      const fromActivation =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[83]++,
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[15][0]++, this.activations.get(fromId)) ||
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[15][1]++, 0));
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[84]++;
      for (const connection of connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[85]++;
        if (!connection.active) {
          /* istanbul ignore next */
          cov_1ws59xrqcx().b[16][0]++;
          cov_1ws59xrqcx().s[86]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1ws59xrqcx().b[16][1]++;
        }
        const currentActivation =
        /* istanbul ignore next */
        (cov_1ws59xrqcx().s[87]++,
        /* istanbul ignore next */
        (cov_1ws59xrqcx().b[17][0]++, this.activations.get(connection.to)) ||
        /* istanbul ignore next */
        (cov_1ws59xrqcx().b[17][1]++, 0));
        const newActivation =
        /* istanbul ignore next */
        (cov_1ws59xrqcx().s[88]++, currentActivation + fromActivation * connection.weight);
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[89]++;
        this.activations.set(connection.to, this.sigmoid(newActivation));
      }
    }
  }
  /**
   * Fonction d'activation sigmoïde
   */
  sigmoid(x) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[16]++;
    cov_1ws59xrqcx().s[90]++;
    return 1 / (1 + Math.exp(-x));
  }
  /**
   * Récupère l'activation d'un nœud
   */
  getActivation(nodeId) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[17]++;
    cov_1ws59xrqcx().s[91]++;
    return /* istanbul ignore next */(cov_1ws59xrqcx().b[18][0]++, this.activations.get(nodeId)) ||
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[18][1]++, 0);
  }
  /**
   * Applique une mutation aléatoire au réseau (version async)
   */
  async mutate(rate =
  /* istanbul ignore next */
  (cov_1ws59xrqcx().b[19][0]++, 0.05)) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[18]++;
    cov_1ws59xrqcx().s[92]++;
    try {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[93]++;
      if (
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[21][0]++, this.worker) &&
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[21][1]++, this.workerReady)) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[20][0]++;
        cov_1ws59xrqcx().s[94]++;
        await this.sendWorkerMessage('NEURAL_MUTATE', {
          networkId: this.networkId,
          rate
        });
        // Sync back the mutations to local state
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[95]++;
        await this.syncNetworkFromWorker();
      } else {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[20][1]++;
        cov_1ws59xrqcx().s[96]++;
        this.mutateSync(rate);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[97]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'mutate', error, 'warning');
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[98]++;
      this.mutateSync(rate);
    }
  }
  /**
   * Mutation synchrone (fallback)
   */
  mutateSync(rate) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[19]++;
    cov_1ws59xrqcx().s[99]++;
    // Mutate connection weights
    for (const connections of this.connections.values()) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[100]++;
      for (const connection of connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[101]++;
        if (Math.random() < rate) {
          /* istanbul ignore next */
          cov_1ws59xrqcx().b[22][0]++;
          cov_1ws59xrqcx().s[102]++;
          connection.weight += (Math.random() - 0.5) * 0.2;
          /* istanbul ignore next */
          cov_1ws59xrqcx().s[103]++;
          connection.weight = Math.max(-2, Math.min(2, connection.weight));
        } else
        /* istanbul ignore next */
        {
          cov_1ws59xrqcx().b[22][1]++;
        }
      }
    }
    // Mutate node biases
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[104]++;
    for (const node of this.nodes.values()) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[105]++;
      if (Math.random() < rate) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[23][0]++;
        cov_1ws59xrqcx().s[106]++;
        node.bias += (Math.random() - 0.5) * 0.1;
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[107]++;
        node.bias = Math.max(-1, Math.min(1, node.bias));
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[23][1]++;
      }
    }
  }
  /**
   * Synchronise l'état du réseau depuis le worker
   */
  async syncNetworkFromWorker() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[20]++;
  } // Implementation would sync worker state back to local state
  // For now, we'll skip this complex synchronization
  /**
   * Mesure l'activité neurale globale - implémentation unifiée
   */
  getNeuralActivity() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[21]++;
    // Synchronous fallback implementation
    let totalActivity =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[108]++, 0);
    let nodeCount =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[109]++, 0);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[110]++;
    for (const activation of this.activations.values()) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[111]++;
      totalActivity += Math.abs(activation);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[112]++;
      nodeCount++;
    }
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[113]++;
    return nodeCount > 0 ?
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[24][0]++, totalActivity / nodeCount) :
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[24][1]++, 0);
  }
  /**
   * Version asynchrone de getNeuralActivity pour calculs avancés
   */
  async getNeuralActivityAsync() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[22]++;
    cov_1ws59xrqcx().s[114]++;
    try {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[115]++;
      if (
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[26][0]++, this.worker) &&
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[26][1]++, this.workerReady)) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[25][0]++;
        const result =
        /* istanbul ignore next */
        (cov_1ws59xrqcx().s[116]++, await this.sendWorkerMessage('NEURAL_ACTIVITY', {
          networkId: this.networkId
        }));
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[117]++;
        return result.activity;
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[25][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[118]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'getNeuralActivityAsync', error, 'warning');
    }
    // Fallback synchrone
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[119]++;
    return this.getNeuralActivity();
  }
  /**
   * Mesure la force moyenne des connexions
   */
  getConnectionStrength() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[23]++;
    let totalWeight =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[120]++, 0);
    let connectionCount =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[121]++, 0);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[122]++;
    for (const connections of this.connections.values()) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[123]++;
      for (const connection of connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[124]++;
        if (connection.active) {
          /* istanbul ignore next */
          cov_1ws59xrqcx().b[27][0]++;
          cov_1ws59xrqcx().s[125]++;
          totalWeight += Math.abs(connection.weight);
          /* istanbul ignore next */
          cov_1ws59xrqcx().s[126]++;
          connectionCount++;
        } else
        /* istanbul ignore next */
        {
          cov_1ws59xrqcx().b[27][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[127]++;
    return connectionCount > 0 ?
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[28][0]++, totalWeight / connectionCount) :
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[28][1]++, 0);
  }
  /**
   * Export JSON pour debug/sauvegarde
   */
  toJSON() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[24]++;
    cov_1ws59xrqcx().s[128]++;
    return {
      nodes: Array.from(this.nodes.values()),
      connections: Array.from(this.connections.values()).flat(),
      activations: Object.fromEntries(this.activations),
      performance: {
        lastPropagationTime: this.lastPropagationTime,
        averageProcessingTime: this.averageProcessingTime,
        operationCount: this.operationCount,
        workerReady: this.workerReady
      }
    };
  }
  /**
   * Initialise le réseau neuronal
   */
  async initialize() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[25]++;
    cov_1ws59xrqcx().s[129]++;
    // Setup default network if empty
    if (this.nodes.size === 0) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[29][0]++;
      cov_1ws59xrqcx().s[130]++;
      this.setupDefaultNetwork();
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[29][1]++;
    }
    // Initialize worker network
    cov_1ws59xrqcx().s[131]++;
    if (this.worker) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[30][0]++;
      cov_1ws59xrqcx().s[132]++;
      try {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[133]++;
        await this.sendWorkerMessage('NEURAL_INIT', {
          networkId: this.networkId,
          nodes: Array.from(this.nodes.values()),
          connections: Array.from(this.connections.values()).flat()
        });
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[134]++;
        this.workerReady = true;
      } catch (error) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[135]++;
        ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'initialize', error, 'warning');
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[136]++;
        this.workerReady = false;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[30][1]++;
    }
    // Perform initial propagation
    cov_1ws59xrqcx().s[137]++;
    await this.propagate();
  }
  /**
   * Configure un réseau par défaut pour les tests
   */
  setupDefaultNetwork() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[26]++;
    cov_1ws59xrqcx().s[138]++;
    // Add input nodes
    this.addNode('sensory_input', 'input');
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[139]++;
    this.addNode('memory_input', 'input');
    // Add hidden nodes
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[140]++;
    this.addNode('processing_1', 'hidden', 0.1);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[141]++;
    this.addNode('processing_2', 'hidden', -0.1);
    // Add output nodes
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[142]++;
    this.addNode('motor_output', 'output');
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[143]++;
    this.addNode('emotion_output', 'output');
    // Connect the network
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[144]++;
    this.addConnection('sensory_input', 'processing_1', 0.8);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[145]++;
    this.addConnection('memory_input', 'processing_2', 0.6);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[146]++;
    this.addConnection('processing_1', 'motor_output', 0.9);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[147]++;
    this.addConnection('processing_2', 'emotion_output', 0.7);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[148]++;
    this.addConnection('processing_1', 'processing_2', 0.3);
  }
  /**
   * Suspend neural processing
   */
  async suspend() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[27]++;
    cov_1ws59xrqcx().s[149]++;
    // Clear activations but keep structure
    this.activations.clear();
    // Terminate worker if needed
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[150]++;
    if (this.worker) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[31][0]++;
      cov_1ws59xrqcx().s[151]++;
      this.worker.terminate();
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[152]++;
      this.worker = null;
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[153]++;
      this.workerReady = false;
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[31][1]++;
    }
    cov_1ws59xrqcx().s[154]++;
    console.log('Neural mesh suspended');
  }
  /**
   * Get CPU usage estimation
   */
  async getCPUUsage() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[28]++;
    // Calculate based on processing time and operation frequency
    const baseLoad =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[155]++, this.averageProcessingTime / 16.67); // Compare to 60fps frame time
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[156]++;
    return Math.min(1, baseLoad);
  }
  /**
   * Get memory usage estimation
   */
  async getMemoryUsage() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[29]++;
    const localMemory =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[157]++, (this.nodes.size + Array.from(this.connections.values()).length) * 64);
    // Add worker memory if available
    let workerMemory =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[158]++, 0);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[159]++;
    if (
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[33][0]++, this.worker) &&
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[33][1]++, this.workerReady)) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[32][0]++;
      cov_1ws59xrqcx().s[160]++;
      try {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[161]++;
        // Would get actual worker stats, simplified for now
        workerMemory = localMemory; // Estimate
      } catch (error) {
        // Ignore worker memory calculation error
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[32][1]++;
    }
    const totalMemory =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[162]++, localMemory + workerMemory);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[163]++;
    return Math.min(1, totalMemory / (1024 * 1024)); // Convert to MB ratio
  }
  /**
   * Get performance metrics
   */
  getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[30]++;
    cov_1ws59xrqcx().s[164]++;
    return {
      lastPropagationTime: this.lastPropagationTime,
      averageProcessingTime: this.averageProcessingTime,
      operationCount: this.operationCount,
      workerReady: this.workerReady
    };
  }
  /**
   * Save current state for persistence
   */
  saveState() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[31]++;
    cov_1ws59xrqcx().s[165]++;
    return {
      nodes: Array.from(this.nodes.entries()),
      connections: Array.from(this.connections.entries()).map(([key, connections]) => {
        /* istanbul ignore next */
        cov_1ws59xrqcx().f[32]++;
        cov_1ws59xrqcx().s[166]++;
        return [key, connections];
      }),
      activations: Object.fromEntries(this.activations),
      performance: this.getPerformanceMetrics()
    };
  }
  /**
   * Load state from saved data
   */
  loadState(state) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[33]++;
    cov_1ws59xrqcx().s[167]++;
    if (state.nodes) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[34][0]++;
      cov_1ws59xrqcx().s[168]++;
      this.nodes.clear();
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[169]++;
      for (const [id, node] of state.nodes) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[170]++;
        this.nodes.set(id, node);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[34][1]++;
    }
    cov_1ws59xrqcx().s[171]++;
    if (state.connections) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[35][0]++;
      cov_1ws59xrqcx().s[172]++;
      this.connections.clear();
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[173]++;
      for (const [fromId, connections] of state.connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[174]++;
        this.connections.set(fromId, connections);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[35][1]++;
    }
    cov_1ws59xrqcx().s[175]++;
    if (state.activations) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[36][0]++;
      cov_1ws59xrqcx().s[176]++;
      this.activations.clear();
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[177]++;
      for (const [id, activation] of Object.entries(state.activations)) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[178]++;
        this.activations.set(id, activation);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[36][1]++;
    }
    cov_1ws59xrqcx().s[179]++;
    if (state.performance) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[37][0]++;
      cov_1ws59xrqcx().s[180]++;
      this.lastPropagationTime =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[38][0]++, state.performance.lastPropagationTime) ||
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[38][1]++, 0);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[181]++;
      this.averageProcessingTime =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[39][0]++, state.performance.averageProcessingTime) ||
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[39][1]++, 0);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[182]++;
      this.operationCount =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[40][0]++, state.performance.operationCount) ||
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[40][1]++, 0);
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[37][1]++;
    }
  }
  /**
   * Reset neural mesh to initial state
   */
  reset() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[34]++;
    cov_1ws59xrqcx().s[183]++;
    this.nodes.clear();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[184]++;
    this.connections.clear();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[185]++;
    this.activations.clear();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[186]++;
    this.lastPropagationTime = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[187]++;
    this.averageProcessingTime = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[188]++;
    this.operationCount = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[189]++;
    this.setupDefaultNetwork();
  }
  /**
   * Health check for neural mesh
   */
  healthCheck() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[35]++;
    const issues =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[190]++, []);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[191]++;
    if (this.nodes.size === 0) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[41][0]++;
      cov_1ws59xrqcx().s[192]++;
      issues.push('No nodes in neural mesh');
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[41][1]++;
    }
    cov_1ws59xrqcx().s[193]++;
    if (this.connections.size === 0) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[42][0]++;
      cov_1ws59xrqcx().s[194]++;
      issues.push('No connections in neural mesh');
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[42][1]++;
    }
    cov_1ws59xrqcx().s[195]++;
    if (this.pendingOperations.size > 10) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[43][0]++;
      cov_1ws59xrqcx().s[196]++;
      issues.push(`Too many pending operations: ${this.pendingOperations.size}`);
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[43][1]++;
    }
    cov_1ws59xrqcx().s[197]++;
    if (
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[45][0]++, this.worker) &&
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[45][1]++, !this.workerReady)) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[44][0]++;
      cov_1ws59xrqcx().s[198]++;
      issues.push('Worker is not ready');
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[44][1]++;
    }
    // Check for orphaned nodes
    const connectedNodes =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[199]++, new Set());
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[200]++;
    for (const [fromId, connections] of this.connections) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[201]++;
      connectedNodes.add(fromId);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[202]++;
      for (const connection of connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[203]++;
        connectedNodes.add(connection.to);
      }
    }
    const orphanedNodes =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[204]++, Array.from(this.nodes.keys()).filter(nodeId => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[36]++;
      cov_1ws59xrqcx().s[205]++;
      return !connectedNodes.has(nodeId);
    }));
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[206]++;
    if (orphanedNodes.length > 0) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[46][0]++;
      cov_1ws59xrqcx().s[207]++;
      issues.push(`Orphaned nodes: ${orphanedNodes.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[46][1]++;
    }
    cov_1ws59xrqcx().s[208]++;
    return {
      healthy: issues.length === 0,
      issues
    };
  }
  /**
   * Cleanup resources
   */
  cleanup() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[37]++;
    cov_1ws59xrqcx().s[209]++;
    // Clean up pending operations
    this.pendingOperations.forEach(({
      timeout
    }) => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[38]++;
      cov_1ws59xrqcx().s[210]++;
      clearTimeout(timeout);
    });
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[211]++;
    this.pendingOperations.clear();
    // Terminate worker
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[212]++;
    if (this.worker) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[47][0]++;
      cov_1ws59xrqcx().s[213]++;
      this.worker.terminate();
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[214]++;
      this.worker = null;
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[47][1]++;
    }
    // Clear all data
    cov_1ws59xrqcx().s[215]++;
    this.nodes.clear();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[216]++;
    this.connections.clear();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[217]++;
    this.activations.clear();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[218]++;
    this.workerReady = false;
  }
}
/* istanbul ignore next */
cov_1ws59xrqcx().s[219]++;
exports.NeuralMeshAsync = NeuralMeshAsync;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,