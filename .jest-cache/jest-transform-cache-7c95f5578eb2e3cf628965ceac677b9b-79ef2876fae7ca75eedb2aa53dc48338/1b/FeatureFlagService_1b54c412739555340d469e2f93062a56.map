{"version":3,"names":["cov_zqn8obsov","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","FeatureFlagService","constructor","overrides","environment","detectEnvironment","flags","initializeFlags","loadOverrides","getInstance","instance","nodeEnv","process","env","NODE_ENV","window","url","location","href","includes","startsWith","baseFlags","USE_REAL_METRICS","USE_REAL_DNA","USE_REAL_BEHAVIOR","USE_BACKEND_API","ENABLE_DEBUG_LOGGING","ENABLE_PERFORMANCE_PROFILING","ENABLE_MOCK_DATA","ENABLE_SECURITY_AUDIT","ENABLE_ADVANCED_ANALYTICS","ENABLE_A_B_TESTING","getEnvBoolean","Object","keys","forEach","flag","envValue","localStorage","storageKey","toLowerCase","storageValue","getItem","isEnabled","setFlag","value","console","warn","setItem","toString","log","resetOverrides","removeItem","getEnvironment","getAllFlags","resolvedFlags","isDevelopment","isStaging","isProduction","runInEnvironment","handlers","handler","default","debugLog","message","args","profileOperation","operation","performance","now","result","duration","toFixed","whenEnabled","key","defaultValue","validateProductionSafety","unsafeFlags","violations","filter","length","Error","join","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/services/FeatureFlagService.ts"],"sourcesContent":["/**\n * FeatureFlagService - Gestion centralis√©e des feature flags\n * S√©pare proprement le comportement dev/staging/production\n */\n\nexport interface FeatureFlags {\n  USE_REAL_METRICS: boolean;\n  USE_REAL_DNA: boolean;\n  USE_REAL_BEHAVIOR: boolean;\n  USE_BACKEND_API: boolean;\n  ENABLE_DEBUG_LOGGING: boolean;\n  ENABLE_PERFORMANCE_PROFILING: boolean;\n  ENABLE_MOCK_DATA: boolean;\n  ENABLE_SECURITY_AUDIT: boolean;\n  ENABLE_ADVANCED_ANALYTICS: boolean;\n  ENABLE_A_B_TESTING: boolean;\n}\n\nexport type Environment = 'development' | 'staging' | 'production';\n\nclass FeatureFlagService {\n  private static instance: FeatureFlagService;\n  private environment: Environment;\n  private flags: FeatureFlags;\n  private overrides: Partial<FeatureFlags> = {};\n\n  private constructor() {\n    this.environment = this.detectEnvironment();\n    this.flags = this.initializeFlags();\n    this.loadOverrides();\n  }\n\n  static getInstance(): FeatureFlagService {\n    if (!FeatureFlagService.instance) {\n      FeatureFlagService.instance = new FeatureFlagService();\n    }\n    return FeatureFlagService.instance;\n  }\n\n  /**\n   * D√©tecte l'environnement actuel\n   */\n  private detectEnvironment(): Environment {\n    // 1. Variable d'environnement explicite\n    const nodeEnv = process.env.NODE_ENV;\n    if (nodeEnv === 'production') return 'production';\n    if (nodeEnv === 'staging') return 'staging';\n    if (nodeEnv === 'development') return 'development';\n\n    // 2. D√©tection par URL (pour extensions)\n    if (typeof window !== 'undefined') {\n      const url = window.location.href;\n      if (url.includes('staging')) return 'staging';\n      if (url.includes('localhost') || url.includes('127.0.0.1')) return 'development';\n      if (url.startsWith('chrome-extension://')) {\n        // Extension en prod si pas de marqueur dev\n        return url.includes('dev') ? 'development' : 'production';\n      }\n    }\n\n    // 3. Fallback d√©veloppement\n    return 'development';\n  }\n\n  /**\n   * Initialise les flags selon l'environnement\n   */\n  private initializeFlags(): FeatureFlags {\n    const baseFlags: FeatureFlags = {\n      USE_REAL_METRICS: false,\n      USE_REAL_DNA: false,\n      USE_REAL_BEHAVIOR: false,\n      USE_BACKEND_API: false,\n      ENABLE_DEBUG_LOGGING: false,\n      ENABLE_PERFORMANCE_PROFILING: false,\n      ENABLE_MOCK_DATA: true,\n      ENABLE_SECURITY_AUDIT: false,\n      ENABLE_ADVANCED_ANALYTICS: false,\n      ENABLE_A_B_TESTING: false\n    };\n\n    switch (this.environment) {\n      case 'development':\n        return {\n          ...baseFlags,\n          ENABLE_DEBUG_LOGGING: true,\n          ENABLE_PERFORMANCE_PROFILING: true,\n          ENABLE_MOCK_DATA: true,\n          ENABLE_SECURITY_AUDIT: true,\n          // Possibilit√© d'activer vraies donn√©es en dev pour tests\n          USE_REAL_METRICS: this.getEnvBoolean('USE_REAL_METRICS', false),\n          USE_REAL_DNA: this.getEnvBoolean('USE_REAL_DNA', false),\n          USE_REAL_BEHAVIOR: this.getEnvBoolean('USE_REAL_BEHAVIOR', false),\n          USE_BACKEND_API: this.getEnvBoolean('USE_BACKEND_API', false)\n        };\n\n      case 'staging':\n        return {\n          ...baseFlags,\n          USE_REAL_METRICS: true,\n          USE_REAL_DNA: true,\n          USE_REAL_BEHAVIOR: true,\n          USE_BACKEND_API: true,\n          ENABLE_DEBUG_LOGGING: false,\n          ENABLE_PERFORMANCE_PROFILING: true,\n          ENABLE_MOCK_DATA: false,\n          ENABLE_SECURITY_AUDIT: true,\n          ENABLE_ADVANCED_ANALYTICS: true,\n          ENABLE_A_B_TESTING: true\n        };\n\n      case 'production':\n        return {\n          ...baseFlags,\n          USE_REAL_METRICS: true,\n          USE_REAL_DNA: true,\n          USE_REAL_BEHAVIOR: true,\n          USE_BACKEND_API: true,\n          ENABLE_DEBUG_LOGGING: false,\n          ENABLE_PERFORMANCE_PROFILING: false,\n          ENABLE_MOCK_DATA: false,\n          ENABLE_SECURITY_AUDIT: false,\n          ENABLE_ADVANCED_ANALYTICS: true,\n          ENABLE_A_B_TESTING: false // D√©sactiv√© par d√©faut en prod\n        };\n\n      default:\n        return baseFlags;\n    }\n  }\n\n  /**\n   * Charge les overrides depuis localStorage et variables d'env\n   */\n  private loadOverrides(): void {\n    // 1. Variables d'environnement\n    Object.keys(this.flags).forEach(flag => {\n      const envValue = process.env[`SYMBIONT_${flag}`];\n      if (envValue !== undefined) {\n        this.overrides[flag as keyof FeatureFlags] = envValue === 'true';\n      }\n    });\n\n    // 2. localStorage (pour tests manuels en dev)\n    if (this.environment === 'development' && typeof localStorage !== 'undefined') {\n      Object.keys(this.flags).forEach(flag => {\n        const storageKey = `symbiont_feature_${flag.toLowerCase()}`;\n        const storageValue = localStorage.getItem(storageKey);\n        if (storageValue !== null) {\n          this.overrides[flag as keyof FeatureFlags] = storageValue === 'true';\n        }\n      });\n    }\n  }\n\n  /**\n   * Obtient la valeur d'un feature flag\n   */\n  isEnabled(flag: keyof FeatureFlags): boolean {\n    // 1. Override explicite\n    if (this.overrides[flag] !== undefined) {\n      return this.overrides[flag]!;\n    }\n\n    // 2. Valeur par d√©faut selon environnement\n    return this.flags[flag];\n  }\n\n  /**\n   * Override temporaire d'un flag (dev uniquement)\n   */\n  setFlag(flag: keyof FeatureFlags, value: boolean): void {\n    if (this.environment !== 'development') {\n      console.warn(`‚ö†Ô∏è Override de feature flag '${flag}' ignor√© en ${this.environment}`);\n      return;\n    }\n\n    this.overrides[flag] = value;\n    \n    // Sauvegarder en localStorage pour persistence\n    if (typeof localStorage !== 'undefined') {\n      const storageKey = `symbiont_feature_${flag.toLowerCase()}`;\n      localStorage.setItem(storageKey, value.toString());\n    }\n\n    console.log(`üîß Feature flag '${flag}' d√©fini √† ${value}`);\n  }\n\n  /**\n   * Remet √† z√©ro tous les overrides\n   */\n  resetOverrides(): void {\n    if (this.environment !== 'development') {\n      console.warn('‚ö†Ô∏è Reset des overrides ignor√© en production');\n      return;\n    }\n\n    this.overrides = {};\n    \n    // Nettoyer localStorage\n    if (typeof localStorage !== 'undefined') {\n      Object.keys(this.flags).forEach(flag => {\n        const storageKey = `symbiont_feature_${flag.toLowerCase()}`;\n        localStorage.removeItem(storageKey);\n      });\n    }\n\n    console.log('üîÑ Tous les feature flags remis aux valeurs par d√©faut');\n  }\n\n  /**\n   * Obtient l'environnement actuel\n   */\n  getEnvironment(): Environment {\n    return this.environment;\n  }\n\n  /**\n   * Obtient tous les flags actuels (pour debug)\n   */\n  getAllFlags(): FeatureFlags & { environment: Environment } {\n    const resolvedFlags: FeatureFlags = {} as FeatureFlags;\n    \n    Object.keys(this.flags).forEach(flag => {\n      resolvedFlags[flag as keyof FeatureFlags] = this.isEnabled(flag as keyof FeatureFlags);\n    });\n\n    return {\n      ...resolvedFlags,\n      environment: this.environment\n    };\n  }\n\n  /**\n   * V√©rifie si on est en mode d√©veloppement\n   */\n  isDevelopment(): boolean {\n    return this.environment === 'development';\n  }\n\n  /**\n   * V√©rifie si on est en mode staging\n   */\n  isStaging(): boolean {\n    return this.environment === 'staging';\n  }\n\n  /**\n   * V√©rifie si on est en mode production\n   */\n  isProduction(): boolean {\n    return this.environment === 'production';\n  }\n\n  /**\n   * Ex√©cute du code conditionnel selon l'environnement\n   */\n  runInEnvironment<T>(\n    handlers: {\n      development?: () => T;\n      staging?: () => T;\n      production?: () => T;\n      default?: () => T;\n    }\n  ): T | undefined {\n    const handler = handlers[this.environment] || handlers.default;\n    return handler?.();\n  }\n\n  /**\n   * Log conditionnel selon les feature flags\n   */\n  debugLog(message: string, ...args: any[]): void {\n    if (this.isEnabled('ENABLE_DEBUG_LOGGING')) {\n      console.log(`üêõ [SYMBIONT Debug] ${message}`, ...args);\n    }\n  }\n\n  /**\n   * Performance profiling conditionnel\n   */\n  profileOperation<T>(name: string, operation: () => T): T {\n    if (!this.isEnabled('ENABLE_PERFORMANCE_PROFILING')) {\n      return operation();\n    }\n\n    const start = performance.now();\n    const result = operation();\n    const duration = performance.now() - start;\n    \n    console.log(`‚è±Ô∏è [SYMBIONT Profile] ${name}: ${duration.toFixed(2)}ms`);\n    \n    return result;\n  }\n\n  /**\n   * Ex√©cution conditionnelle selon feature flag\n   */\n  whenEnabled<T>(flag: keyof FeatureFlags, operation: () => T): T | undefined {\n    return this.isEnabled(flag) ? operation() : undefined;\n  }\n\n  /**\n   * Utilitaire pour lire variables d'environnement boolean\n   */\n  private getEnvBoolean(key: string, defaultValue: boolean): boolean {\n    const value = process.env[key];\n    if (value === undefined) return defaultValue;\n    return value.toLowerCase() === 'true';\n  }\n\n  /**\n   * Validation de s√©curit√© - v√©rifie qu'on n'utilise pas de donn√©es mock en prod\n   */\n  validateProductionSafety(): void {\n    if (!this.isProduction()) return;\n\n    const unsafeFlags = [\n      'ENABLE_MOCK_DATA',\n      'ENABLE_DEBUG_LOGGING'\n    ];\n\n    const violations = unsafeFlags.filter(flag => \n      this.isEnabled(flag as keyof FeatureFlags)\n    );\n\n    if (violations.length > 0) {\n      throw new Error(\n        `üö® S√âCURIT√â: Flags dangereux activ√©s en production: ${violations.join(', ')}`\n      );\n    }\n  }\n}\n\nexport default FeatureFlagService;"],"mappings":"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","ignoreList":[]}