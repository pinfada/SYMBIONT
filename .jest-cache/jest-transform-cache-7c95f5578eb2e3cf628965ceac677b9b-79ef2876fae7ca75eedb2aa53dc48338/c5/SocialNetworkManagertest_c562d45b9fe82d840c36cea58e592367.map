{"file":"/mnt/c/Users/m_oli/Projets/SYMBIONT/__tests__/SocialNetworkManager.test.ts","mappings":";;AAAA,6EAAyE;AACzE,6EAAyE;AACzE,uEAAmE;AAEnE,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,MAAM,QAAQ,GAAG,IAAI,iCAAe,EAAE,CAAA;IACtC,MAAM,MAAM,GAAG,IAAI,uCAAkB,CAAC,QAAQ,CAAC,CAAA;IAC/C,MAAM,MAAM,GAAG,IAAI,2CAAoB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IAEzD,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;QAC7D,MAAM,OAAO,GAAG;YACd,eAAe,EAAE,MAAM;YACvB,eAAe,EAAE,EAAE,GAAG,EAAE,oBAAoB,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,WAAW,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE;YACtH,SAAS,EAAE,SAAS;YACpB,eAAe,EAAE,SAAS;YAC1B,iBAAiB,EAAE,MAAM;SAC1B,CAAA;QACD,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,kBAAkB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;QAC7D,8CAA8C;QAC9C,MAAM,UAAU,GAAI,MAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAA;QAChF,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,CAAA;QAChC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;IACnE,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","names":[],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/__tests__/SocialNetworkManager.test.ts"],"sourcesContent":["import { SocialNetworkManager } from '../src/social/SocialNetworkManager'\r\nimport { OrganismMemoryBank } from '../src/background/OrganismMemoryBank'\r\nimport { SecurityManager } from '../src/background/SecurityManager'\r\n\r\ndescribe('SocialNetworkManager', () => {\r\n  const security = new SecurityManager()\r\n  const memory = new OrganismMemoryBank(security)\r\n  const social = new SocialNetworkManager(memory, security)\r\n\r\n  it('génère une invitation avec contexte anonymisé', async () => {\r\n    const context = {\r\n      websiteCategory: 'news',\r\n      behaviorPattern: { url: 'https://secret.com', interactions: 3, timeSpent: 5, scrollDepth: 0.5, timestamp: Date.now() },\r\n      timeOfDay: 'morning',\r\n      inferredEmotion: 'curious',\r\n      creatorOrganismId: 'org1'\r\n    }\r\n    const code = await social.generateInvitation('org1', context)\r\n    // L'invitation est stockée en mémoire interne\r\n    const invitation = (social as any).invitations.find((i: any) => i.code === code)\r\n    expect(invitation).toBeDefined()\r\n    expect(invitation.context.behaviorPattern.url).toBe('anonymized')\r\n  })\r\n}) "],"version":3}