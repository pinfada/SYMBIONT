4c8893b45801143f94487a98d6319df2
"use strict";

/* istanbul ignore next */
function cov_1rrnu3a8n6() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/integration/WebGLMessageAdapter.ts";
  var hash = "f277bcb98d20f4ba3c35f6bab510a1acfa6f9a35";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/integration/WebGLMessageAdapter.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 37
        }
      },
      "2": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 29
        }
      },
      "4": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 37
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 28,
          column: 11
        }
      },
      "7": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "8": {
        start: {
          line: 22,
          column: 37
        },
        end: {
          line: 22,
          column: 52
        }
      },
      "9": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 45
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 90
        }
      },
      "11": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 38,
          column: 11
        }
      },
      "12": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 37,
          column: 13
        }
      },
      "13": {
        start: {
          line: 32,
          column: 34
        },
        end: {
          line: 32,
          column: 49
        }
      },
      "14": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 42
        }
      },
      "15": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 67
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 51,
          column: 17
        }
      },
      "17": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "18": {
        start: {
          line: 42,
          column: 32
        },
        end: {
          line: 42,
          column: 67
        }
      },
      "19": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 46,
          column: 19
        }
      },
      "20": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 54,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 36
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 21
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 69
          },
          end: {
            line: 20,
            column: 70
          }
        },
        loc: {
          start: {
            line: 20,
            column: 82
          },
          end: {
            line: 28,
            column: 9
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 75
          },
          end: {
            line: 30,
            column: 76
          }
        },
        loc: {
          start: {
            line: 30,
            column: 88
          },
          end: {
            line: 38,
            column: 9
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 40,
            column: 20
          },
          end: {
            line: 40,
            column: 21
          }
        },
        loc: {
          start: {
            line: 40,
            column: 26
          },
          end: {
            line: 51,
            column: 9
          }
        },
        line: 40
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/integration/WebGLMessageAdapter.ts",
      mappings: ";;;AAIA,2EAA2E;AAC3E,+DAAyE;AAEzE;;GAEG;AACH,MAAa,mBAAmB;IAI5B,YAAY,MAAsB,EAAE,UAAsB;QACxD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEH;;OAEG;IACO,cAAc;QACpB,uBAAuB;QACzB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,wBAAW,CAAC,eAAe,EAAE,CAAC,OAAY,EAAE,EAAE;YAC/D,IAAI,CAAC;gBACH,MAAM,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC;gBACrC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAA4B,CAAC,CAAC;YACnD,CAAC;YAAC,OAAO,GAAG,EAAE,CAAC;gBACb,OAAO,CAAC,KAAK,CAAC,qDAAqD,EAAE,GAAG,CAAC,CAAC;YAC5E,CAAC;QACD,CAAC,CAAC,CAAC;QAEH,gCAAgC;QAClC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,wBAAW,CAAC,qBAAqB,EAAE,CAAC,OAAY,EAAE,EAAE;YACrE,IAAI,CAAC;gBACH,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC,OAAO,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAsB,CAAC,CAAC;YAC7C,CAAC;YAAC,OAAO,GAAG,EAAE,CAAC;gBACb,OAAO,CAAC,KAAK,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;YACrD,CAAC;QACD,CAAC,CAAC,CAAC;QAEH,8BAA8B;QAC9B,WAAW,CAAC,GAAG,EAAE;YACjB,IAAI,CAAC;gBACH,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;gBACpD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;oBACnB,IAAI,EAAE,wBAAW,CAAC,kBAAkB;oBACpC,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC;YACL,CAAC;YAAC,OAAO,GAAG,EAAE,CAAC;gBACb,oEAAoE;YACtE,CAAC;QACD,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;CACJ;AA/CD,kDA+CC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/integration/WebGLMessageAdapter.ts"],
      sourcesContent: ["// src/integration/WebGLMessageAdapter.ts\r\nimport { OrganismEngine } from '../generative/OrganismEngine';\r\nimport { OrganismState, OrganismMutation } from '../shared/types/organism';\r\n\r\n// MessageBus et MessageType doivent \xEAtre import\xE9s selon votre architecture\r\nimport { MessageBus, MessageType } from '../shared/messaging/MessageBus';\r\n\r\n/**\r\n * Adaptateur entre le bus de messages et le moteur WebGL\r\n */\r\nexport class WebGLMessageAdapter {\r\n    private engine: OrganismEngine;\r\n    private messageBus: MessageBus;\r\n    \r\n    constructor(engine: OrganismEngine, messageBus: MessageBus) {\r\n      this.engine = engine;\r\n      this.messageBus = messageBus;\r\n      this.setupListeners();\r\n    }\r\n    \r\n  /**\r\n   * Mise en place des listeners sur le bus de messages\r\n   */\r\n    private setupListeners(): void {\r\n      // \xC9coute des mutations\r\n    this.messageBus.on(MessageType.ORGANISM_MUTATE, (message: any) => {\r\n      try {\r\n        const { mutation } = message.payload;\r\n        this.engine.mutate(mutation as OrganismMutation);\r\n      } catch (err) {\r\n        console.error('Erreur lors de l\u2019application de la mutation WebGL :', err);\r\n      }\r\n      });\r\n      \r\n      // \xC9coute des changements d'\xE9tat\r\n    this.messageBus.on(MessageType.ORGANISM_STATE_CHANGE, (message: any) => {\r\n      try {\r\n        const { state } = message.payload;\r\n        this.engine.render(state as OrganismState);\r\n      } catch (err) {\r\n        console.error('Erreur lors du rendu WebGL :', err);\r\n      }\r\n      });\r\n      \r\n      // Notification de performance\r\n      setInterval(() => {\r\n      try {\r\n        const metrics = this.engine.getPerformanceMetrics();\r\n        this.messageBus.send({\r\n          type: MessageType.PERFORMANCE_UPDATE,\r\n          payload: metrics\r\n        });\r\n      } catch (err) {\r\n        // On ignore les erreurs de m\xE9triques pour ne pas polluer la console\r\n      }\r\n      }, 1000);\r\n    }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f277bcb98d20f4ba3c35f6bab510a1acfa6f9a35"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1rrnu3a8n6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1rrnu3a8n6();
cov_1rrnu3a8n6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1rrnu3a8n6().s[1]++;
exports.WebGLMessageAdapter = void 0;
// MessageBus et MessageType doivent être importés selon votre architecture
const MessageBus_1 =
/* istanbul ignore next */
(cov_1rrnu3a8n6().s[2]++, require("../shared/messaging/MessageBus"));
/**
 * Adaptateur entre le bus de messages et le moteur WebGL
 */
class WebGLMessageAdapter {
  constructor(engine, messageBus) {
    /* istanbul ignore next */
    cov_1rrnu3a8n6().f[0]++;
    cov_1rrnu3a8n6().s[3]++;
    this.engine = engine;
    /* istanbul ignore next */
    cov_1rrnu3a8n6().s[4]++;
    this.messageBus = messageBus;
    /* istanbul ignore next */
    cov_1rrnu3a8n6().s[5]++;
    this.setupListeners();
  }
  /**
   * Mise en place des listeners sur le bus de messages
   */
  setupListeners() {
    /* istanbul ignore next */
    cov_1rrnu3a8n6().f[1]++;
    cov_1rrnu3a8n6().s[6]++;
    // Écoute des mutations
    this.messageBus.on(MessageBus_1.MessageType.ORGANISM_MUTATE, message => {
      /* istanbul ignore next */
      cov_1rrnu3a8n6().f[2]++;
      cov_1rrnu3a8n6().s[7]++;
      try {
        const {
          mutation
        } =
        /* istanbul ignore next */
        (cov_1rrnu3a8n6().s[8]++, message.payload);
        /* istanbul ignore next */
        cov_1rrnu3a8n6().s[9]++;
        this.engine.mutate(mutation);
      } catch (err) {
        /* istanbul ignore next */
        cov_1rrnu3a8n6().s[10]++;
        console.error('Erreur lors de l’application de la mutation WebGL :', err);
      }
    });
    // Écoute des changements d'état
    /* istanbul ignore next */
    cov_1rrnu3a8n6().s[11]++;
    this.messageBus.on(MessageBus_1.MessageType.ORGANISM_STATE_CHANGE, message => {
      /* istanbul ignore next */
      cov_1rrnu3a8n6().f[3]++;
      cov_1rrnu3a8n6().s[12]++;
      try {
        const {
          state
        } =
        /* istanbul ignore next */
        (cov_1rrnu3a8n6().s[13]++, message.payload);
        /* istanbul ignore next */
        cov_1rrnu3a8n6().s[14]++;
        this.engine.render(state);
      } catch (err) {
        /* istanbul ignore next */
        cov_1rrnu3a8n6().s[15]++;
        console.error('Erreur lors du rendu WebGL :', err);
      }
    });
    // Notification de performance
    /* istanbul ignore next */
    cov_1rrnu3a8n6().s[16]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_1rrnu3a8n6().f[4]++;
      cov_1rrnu3a8n6().s[17]++;
      try {
        const metrics =
        /* istanbul ignore next */
        (cov_1rrnu3a8n6().s[18]++, this.engine.getPerformanceMetrics());
        /* istanbul ignore next */
        cov_1rrnu3a8n6().s[19]++;
        this.messageBus.send({
          type: MessageBus_1.MessageType.PERFORMANCE_UPDATE,
          payload: metrics
        });
      } catch (err) {
        // On ignore les erreurs de métriques pour ne pas polluer la console
      }
    }, 1000);
  }
}
/* istanbul ignore next */
cov_1rrnu3a8n6().s[20]++;
exports.WebGLMessageAdapter = WebGLMessageAdapter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNZXNzYWdlQnVzXzEiLCJjb3ZfMXJybnUzYThuNiIsInMiLCJyZXF1aXJlIiwiV2ViR0xNZXNzYWdlQWRhcHRlciIsImNvbnN0cnVjdG9yIiwiZW5naW5lIiwibWVzc2FnZUJ1cyIsImYiLCJzZXR1cExpc3RlbmVycyIsIm9uIiwiTWVzc2FnZVR5cGUiLCJPUkdBTklTTV9NVVRBVEUiLCJtZXNzYWdlIiwibXV0YXRpb24iLCJwYXlsb2FkIiwibXV0YXRlIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwiT1JHQU5JU01fU1RBVEVfQ0hBTkdFIiwic3RhdGUiLCJyZW5kZXIiLCJzZXRJbnRlcnZhbCIsIm1ldHJpY3MiLCJnZXRQZXJmb3JtYW5jZU1ldHJpY3MiLCJzZW5kIiwidHlwZSIsIlBFUkZPUk1BTkNFX1VQREFURSIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvbW50L2MvVXNlcnMvbV9vbGkvUHJvamV0cy9TWU1CSU9OVC9zcmMvaW50ZWdyYXRpb24vV2ViR0xNZXNzYWdlQWRhcHRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvaW50ZWdyYXRpb24vV2ViR0xNZXNzYWdlQWRhcHRlci50c1xyXG5pbXBvcnQgeyBPcmdhbmlzbUVuZ2luZSB9IGZyb20gJy4uL2dlbmVyYXRpdmUvT3JnYW5pc21FbmdpbmUnO1xyXG5pbXBvcnQgeyBPcmdhbmlzbVN0YXRlLCBPcmdhbmlzbU11dGF0aW9uIH0gZnJvbSAnLi4vc2hhcmVkL3R5cGVzL29yZ2FuaXNtJztcclxuXHJcbi8vIE1lc3NhZ2VCdXMgZXQgTWVzc2FnZVR5cGUgZG9pdmVudCDDqnRyZSBpbXBvcnTDqXMgc2Vsb24gdm90cmUgYXJjaGl0ZWN0dXJlXHJcbmltcG9ydCB7IE1lc3NhZ2VCdXMsIE1lc3NhZ2VUeXBlIH0gZnJvbSAnLi4vc2hhcmVkL21lc3NhZ2luZy9NZXNzYWdlQnVzJztcclxuXHJcbi8qKlxyXG4gKiBBZGFwdGF0ZXVyIGVudHJlIGxlIGJ1cyBkZSBtZXNzYWdlcyBldCBsZSBtb3RldXIgV2ViR0xcclxuICovXHJcbmV4cG9ydCBjbGFzcyBXZWJHTE1lc3NhZ2VBZGFwdGVyIHtcclxuICAgIHByaXZhdGUgZW5naW5lOiBPcmdhbmlzbUVuZ2luZTtcclxuICAgIHByaXZhdGUgbWVzc2FnZUJ1czogTWVzc2FnZUJ1cztcclxuICAgIFxyXG4gICAgY29uc3RydWN0b3IoZW5naW5lOiBPcmdhbmlzbUVuZ2luZSwgbWVzc2FnZUJ1czogTWVzc2FnZUJ1cykge1xyXG4gICAgICB0aGlzLmVuZ2luZSA9IGVuZ2luZTtcclxuICAgICAgdGhpcy5tZXNzYWdlQnVzID0gbWVzc2FnZUJ1cztcclxuICAgICAgdGhpcy5zZXR1cExpc3RlbmVycygpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgLyoqXHJcbiAgICogTWlzZSBlbiBwbGFjZSBkZXMgbGlzdGVuZXJzIHN1ciBsZSBidXMgZGUgbWVzc2FnZXNcclxuICAgKi9cclxuICAgIHByaXZhdGUgc2V0dXBMaXN0ZW5lcnMoKTogdm9pZCB7XHJcbiAgICAgIC8vIMOJY291dGUgZGVzIG11dGF0aW9uc1xyXG4gICAgdGhpcy5tZXNzYWdlQnVzLm9uKE1lc3NhZ2VUeXBlLk9SR0FOSVNNX01VVEFURSwgKG1lc3NhZ2U6IGFueSkgPT4ge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHsgbXV0YXRpb24gfSA9IG1lc3NhZ2UucGF5bG9hZDtcclxuICAgICAgICB0aGlzLmVuZ2luZS5tdXRhdGUobXV0YXRpb24gYXMgT3JnYW5pc21NdXRhdGlvbik7XHJcbiAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0VycmV1ciBsb3JzIGRlIGzigJlhcHBsaWNhdGlvbiBkZSBsYSBtdXRhdGlvbiBXZWJHTCA6JywgZXJyKTtcclxuICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgXHJcbiAgICAgIC8vIMOJY291dGUgZGVzIGNoYW5nZW1lbnRzIGQnw6l0YXRcclxuICAgIHRoaXMubWVzc2FnZUJ1cy5vbihNZXNzYWdlVHlwZS5PUkdBTklTTV9TVEFURV9DSEFOR0UsIChtZXNzYWdlOiBhbnkpID0+IHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB7IHN0YXRlIH0gPSBtZXNzYWdlLnBheWxvYWQ7XHJcbiAgICAgICAgdGhpcy5lbmdpbmUucmVuZGVyKHN0YXRlIGFzIE9yZ2FuaXNtU3RhdGUpO1xyXG4gICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJldXIgbG9ycyBkdSByZW5kdSBXZWJHTCA6JywgZXJyKTtcclxuICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgICAgXHJcbiAgICAgIC8vIE5vdGlmaWNhdGlvbiBkZSBwZXJmb3JtYW5jZVxyXG4gICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgbWV0cmljcyA9IHRoaXMuZW5naW5lLmdldFBlcmZvcm1hbmNlTWV0cmljcygpO1xyXG4gICAgICAgIHRoaXMubWVzc2FnZUJ1cy5zZW5kKHtcclxuICAgICAgICAgIHR5cGU6IE1lc3NhZ2VUeXBlLlBFUkZPUk1BTkNFX1VQREFURSxcclxuICAgICAgICAgIHBheWxvYWQ6IG1ldHJpY3NcclxuICAgICAgICB9KTtcclxuICAgICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgLy8gT24gaWdub3JlIGxlcyBlcnJldXJzIGRlIG3DqXRyaXF1ZXMgcG91ciBuZSBwYXMgcG9sbHVlciBsYSBjb25zb2xlXHJcbiAgICAgIH1cclxuICAgICAgfSwgMTAwMCk7XHJcbiAgICB9XHJcbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUlBO0FBQ0EsTUFBQUEsWUFBQTtBQUFBO0FBQUEsQ0FBQUMsY0FBQSxHQUFBQyxDQUFBLE9BQUFDLE9BQUE7QUFFQTs7O0FBR0EsTUFBYUMsbUJBQW1CO0VBSTVCQyxZQUFZQyxNQUFzQixFQUFFQyxVQUFzQjtJQUFBO0lBQUFOLGNBQUEsR0FBQU8sQ0FBQTtJQUFBUCxjQUFBLEdBQUFDLENBQUE7SUFDeEQsSUFBSSxDQUFDSSxNQUFNLEdBQUdBLE1BQU07SUFBQztJQUFBTCxjQUFBLEdBQUFDLENBQUE7SUFDckIsSUFBSSxDQUFDSyxVQUFVLEdBQUdBLFVBQVU7SUFBQztJQUFBTixjQUFBLEdBQUFDLENBQUE7SUFDN0IsSUFBSSxDQUFDTyxjQUFjLEVBQUU7RUFDdkI7RUFFRjs7O0VBR1VBLGNBQWNBLENBQUE7SUFBQTtJQUFBUixjQUFBLEdBQUFPLENBQUE7SUFBQVAsY0FBQSxHQUFBQyxDQUFBO0lBQ3BCO0lBQ0YsSUFBSSxDQUFDSyxVQUFVLENBQUNHLEVBQUUsQ0FBQ1YsWUFBQSxDQUFBVyxXQUFXLENBQUNDLGVBQWUsRUFBR0MsT0FBWSxJQUFJO01BQUE7TUFBQVosY0FBQSxHQUFBTyxDQUFBO01BQUFQLGNBQUEsR0FBQUMsQ0FBQTtNQUMvRCxJQUFJO1FBQ0YsTUFBTTtVQUFFWTtRQUFRLENBQUU7UUFBQTtRQUFBLENBQUFiLGNBQUEsR0FBQUMsQ0FBQSxPQUFHVyxPQUFPLENBQUNFLE9BQU87UUFBQztRQUFBZCxjQUFBLEdBQUFDLENBQUE7UUFDckMsSUFBSSxDQUFDSSxNQUFNLENBQUNVLE1BQU0sQ0FBQ0YsUUFBNEIsQ0FBQztNQUNsRCxDQUFDLENBQUMsT0FBT0csR0FBRyxFQUFFO1FBQUE7UUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtRQUNaZ0IsT0FBTyxDQUFDQyxLQUFLLENBQUMscURBQXFELEVBQUVGLEdBQUcsQ0FBQztNQUMzRTtJQUNBLENBQUMsQ0FBQztJQUVGO0lBQUE7SUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtJQUNGLElBQUksQ0FBQ0ssVUFBVSxDQUFDRyxFQUFFLENBQUNWLFlBQUEsQ0FBQVcsV0FBVyxDQUFDUyxxQkFBcUIsRUFBR1AsT0FBWSxJQUFJO01BQUE7TUFBQVosY0FBQSxHQUFBTyxDQUFBO01BQUFQLGNBQUEsR0FBQUMsQ0FBQTtNQUNyRSxJQUFJO1FBQ0YsTUFBTTtVQUFFbUI7UUFBSyxDQUFFO1FBQUE7UUFBQSxDQUFBcEIsY0FBQSxHQUFBQyxDQUFBLFFBQUdXLE9BQU8sQ0FBQ0UsT0FBTztRQUFDO1FBQUFkLGNBQUEsR0FBQUMsQ0FBQTtRQUNsQyxJQUFJLENBQUNJLE1BQU0sQ0FBQ2dCLE1BQU0sQ0FBQ0QsS0FBc0IsQ0FBQztNQUM1QyxDQUFDLENBQUMsT0FBT0osR0FBRyxFQUFFO1FBQUE7UUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtRQUNaZ0IsT0FBTyxDQUFDQyxLQUFLLENBQUMsOEJBQThCLEVBQUVGLEdBQUcsQ0FBQztNQUNwRDtJQUNBLENBQUMsQ0FBQztJQUVGO0lBQUE7SUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtJQUNBcUIsV0FBVyxDQUFDLE1BQUs7TUFBQTtNQUFBdEIsY0FBQSxHQUFBTyxDQUFBO01BQUFQLGNBQUEsR0FBQUMsQ0FBQTtNQUNqQixJQUFJO1FBQ0YsTUFBTXNCLE9BQU87UUFBQTtRQUFBLENBQUF2QixjQUFBLEdBQUFDLENBQUEsUUFBRyxJQUFJLENBQUNJLE1BQU0sQ0FBQ21CLHFCQUFxQixFQUFFO1FBQUM7UUFBQXhCLGNBQUEsR0FBQUMsQ0FBQTtRQUNwRCxJQUFJLENBQUNLLFVBQVUsQ0FBQ21CLElBQUksQ0FBQztVQUNuQkMsSUFBSSxFQUFFM0IsWUFBQSxDQUFBVyxXQUFXLENBQUNpQixrQkFBa0I7VUFDcENiLE9BQU8sRUFBRVM7U0FDVixDQUFDO01BQ0osQ0FBQyxDQUFDLE9BQU9QLEdBQUcsRUFBRTtRQUNaO01BQUE7SUFFRixDQUFDLEVBQUUsSUFBSSxDQUFDO0VBQ1Y7O0FBQ0g7QUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtBQS9DRDJCLE9BQUEsQ0FBQXpCLG1CQUFBLEdBQUFBLG1CQUFBIiwiaWdub3JlTGlzdCI6W119