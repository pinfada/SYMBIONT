cdcf1e55f1538f2a3e153fbdede4fe17
"use strict";

/* istanbul ignore next */
function cov_29cqzzypzs() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/BoundedCollection.ts";
  var hash = "c257220facb0526296dd5f3fad715d2880062824";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/BoundedCollection.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 51
        }
      },
      "2": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 48
        }
      },
      "3": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 24
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 44
        }
      },
      "5": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 25
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "8": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 82
        }
      },
      "9": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 139
        }
      },
      "10": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "12": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 82
        }
      },
      "13": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 99
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 26
        }
      },
      "15": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 69
        }
      },
      "16": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 44
        }
      },
      "17": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 44
        }
      },
      "18": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 59
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 45
        }
      },
      "20": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 33
        }
      },
      "21": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 41
        }
      },
      "22": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 24
        }
      },
      "23": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 78
        }
      },
      "24": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 33
        }
      },
      "25": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 49
        }
      },
      "26": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 70,
          column: 10
        }
      },
      "27": {
        start: {
          line: 73,
          column: 0
        },
        end: {
          line: 73,
          column: 36
        }
      },
      "28": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 31
        }
      },
      "29": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 33
        }
      },
      "30": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 44
        }
      },
      "31": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 27
        }
      },
      "32": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 25
        }
      },
      "33": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "34": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 37
        }
      },
      "35": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 90,
          column: 30
        }
      },
      "36": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 30
        }
      },
      "37": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "38": {
        start: {
          line: 95,
          column: 29
        },
        end: {
          line: 95,
          column: 59
        }
      },
      "39": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "40": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 44
        }
      },
      "41": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 95
        }
      },
      "42": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 55
        }
      },
      "43": {
        start: {
          line: 104,
          column: 21
        },
        end: {
          line: 104,
          column: 40
        }
      },
      "44": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 106,
          column: 29
        }
      },
      "45": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 29
        }
      },
      "46": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "47": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 35
        }
      },
      "48": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 29
        }
      },
      "49": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 26
        }
      },
      "50": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 43
        }
      },
      "51": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 38
        }
      },
      "52": {
        start: {
          line: 121,
          column: 24
        },
        end: {
          line: 121,
          column: 39
        }
      },
      "53": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 27
        }
      },
      "54": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 78
        }
      },
      "55": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 30
        }
      },
      "56": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 31
        }
      },
      "57": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 131,
          column: 19
        }
      },
      "58": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 19
        }
      },
      "59": {
        start: {
          line: 132,
          column: 20
        },
        end: {
          line: 132,
          column: 30
        }
      },
      "60": {
        start: {
          line: 133,
          column: 22
        },
        end: {
          line: 133,
          column: 23
        }
      },
      "61": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "62": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "63": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 39
        }
      },
      "64": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 26
        }
      },
      "65": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "66": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 90
        }
      },
      "67": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 148,
          column: 18
        }
      },
      "68": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 34
        }
      },
      "69": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "70": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 45
        }
      },
      "71": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 37
        }
      },
      "72": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 21
        }
      },
      "73": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 30
        }
      },
      "74": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 163,
          column: 10
        }
      },
      "75": {
        start: {
          line: 166,
          column: 0
        },
        end: {
          line: 166,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 48
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 14
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 20
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 13
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 21
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 22
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 37
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 47
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 17
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 54
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 11
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 13
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 62
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 21
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 65
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 57
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 78
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 20
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 89
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 13
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 103
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 13
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 114
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 117
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 120
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 11
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 125
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 21
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 129
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 24
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 144
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 146,
            column: 40
          },
          end: {
            line: 146,
            column: 41
          }
        },
        loc: {
          start: {
            line: 146,
            column: 46
          },
          end: {
            line: 148,
            column: 9
          }
        },
        line: 146
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 14
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 150
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 21
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 157
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 25
          },
          end: {
            line: 11,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 32
          },
          end: {
            line: 11,
            column: 46
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 78,
            column: 25
          },
          end: {
            line: 78,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 78,
            column: 33
          },
          end: {
            line: 78,
            column: 34
          }
        }],
        line: 78
      },
      "4": {
        loc: {
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 78,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 78,
            column: 43
          },
          end: {
            line: 78,
            column: 55
          }
        }],
        line: 78
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "7": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 43
          }
        }, {
          start: {
            line: 94,
            column: 47
          },
          end: {
            line: 94,
            column: 67
          }
        }],
        line: 94
      },
      "8": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "9": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 106,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 106,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "10": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "11": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 108,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 108,
            column: 26
          }
        }, {
          start: {
            line: 108,
            column: 30
          },
          end: {
            line: 108,
            column: 70
          }
        }],
        line: 108
      },
      "12": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 131,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 131,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "13": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "14": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "15": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/BoundedCollection.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/BoundedCollection.ts"],
      sourcesContent: ["// src/shared/utils/BoundedCollection.ts\r\nimport { logger } from './secureLogger';\r\n\r\n/**\r\n * Collection avec taille limit\xE9e pour \xE9viter les fuites m\xE9moire\r\n * Utilise une strat\xE9gie LRU (Least Recently Used)\r\n */\r\nexport class BoundedArray<T> {\r\n  private items: T[] = [];\r\n  private readonly maxSize: number;\r\n  private readonly name: string;\r\n\r\n  constructor(maxSize: number, name = 'BoundedArray') {\r\n    this.maxSize = Math.max(1, maxSize);\r\n    this.name = name;\r\n  }\r\n\r\n  add(item: T): void {\r\n    this.items.push(item);\r\n    \r\n    if (this.items.length > this.maxSize) {\r\n      const removed = this.items.splice(0, this.items.length - this.maxSize);\r\n      logger.debug(`${this.name}: Cleaned ${removed.length} old items, keeping ${this.items.length}/${this.maxSize}`);\r\n    }\r\n  }\r\n\r\n  addBatch(items: T[]): void {\r\n    this.items.push(...items);\r\n    \r\n    if (this.items.length > this.maxSize) {\r\n      const removed = this.items.splice(0, this.items.length - this.maxSize);\r\n      logger.debug(`${this.name}: Batch cleaned ${removed.length} old items`);\r\n    }\r\n  }\r\n\r\n  getAll(): readonly T[] {\r\n    return this.items;\r\n  }\r\n\r\n  getRecent(count: number): readonly T[] {\r\n    return this.items.slice(-Math.min(count, this.items.length));\r\n  }\r\n\r\n  // Array-like methods for compatibility\r\n  slice(start?: number, end?: number): T[] {\r\n    return this.items.slice(start, end);\r\n  }\r\n\r\n  filter(predicate: (value: T, index: number, array: T[]) => boolean): T[] {\r\n    return this.items.filter(predicate);\r\n  }\r\n\r\n  reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U {\r\n    return this.items.reduce(callbackfn, initialValue);\r\n  }\r\n\r\n  // Iterator support\r\n  [Symbol.iterator](): Iterator<T> {\r\n    return this.items[Symbol.iterator]();\r\n  }\r\n\r\n  // Length getter for array-like behavior\r\n  get length(): number {\r\n    return this.items.length;\r\n  }\r\n\r\n  clear(): void {\r\n    const cleared = this.items.length;\r\n    this.items = [];\r\n    logger.debug(`${this.name}: Cleared ${cleared} items`);\r\n  }\r\n\r\n  size(): number {\r\n    return this.items.length;\r\n  }\r\n\r\n  isFull(): boolean {\r\n    return this.items.length >= this.maxSize;\r\n  }\r\n\r\n  getMemoryUsage(): { count: number; maxSize: number; utilizationPercent: number } {\r\n    return {\r\n      count: this.items.length,\r\n      maxSize: this.maxSize,\r\n      utilizationPercent: (this.items.length / this.maxSize) * 100\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Map avec taille limit\xE9e et TTL (Time To Live)\r\n */\r\nexport class BoundedMap<K, V> {\r\n  private items = new Map<K, { value: V; timestamp: number }>();\r\n  private readonly maxSize: number;\r\n  private readonly ttlMs: number;\r\n  private readonly name: string;\r\n  private cleanupTimer: NodeJS.Timeout | null = null;\r\n\r\n  constructor(maxSize: number, ttlMs = 0, name = 'BoundedMap') {\r\n    this.maxSize = Math.max(1, maxSize);\r\n    this.ttlMs = ttlMs;\r\n    this.name = name;\r\n\r\n    // Nettoyage automatique si TTL configur\xE9\r\n    if (this.ttlMs > 0) {\r\n      this.startCleanupTimer();\r\n    }\r\n  }\r\n\r\n  set(key: K, value: V): void {\r\n    const now = Date.now();\r\n    \r\n    // Nettoie les anciens \xE9l\xE9ments si n\xE9cessaire\r\n    this.cleanupExpired();\r\n    \r\n    // Supprime le plus ancien si taille max atteinte\r\n    if (this.items.size >= this.maxSize && !this.items.has(key)) {\r\n      const firstKey = this.items.keys().next().value;\r\n      if (firstKey !== undefined) {\r\n        this.items.delete(firstKey);\r\n        logger.debug(`${this.name}: Removed oldest item to make space`);\r\n      }\r\n    }\r\n\r\n    this.items.set(key, { value, timestamp: now });\r\n  }\r\n\r\n  get(key: K): V | undefined {\r\n    const item = this.items.get(key);\r\n    if (!item) return undefined;\r\n\r\n    // V\xE9rifie le TTL\r\n    if (this.ttlMs > 0 && Date.now() - item.timestamp > this.ttlMs) {\r\n      this.items.delete(key);\r\n      return undefined;\r\n    }\r\n\r\n    return item.value;\r\n  }\r\n\r\n  has(key: K): boolean {\r\n    return this.get(key) !== undefined;\r\n  }\r\n\r\n  delete(key: K): boolean {\r\n    return this.items.delete(key);\r\n  }\r\n\r\n  clear(): void {\r\n    const cleared = this.items.size;\r\n    this.items.clear();\r\n    logger.debug(`${this.name}: Cleared ${cleared} items`);\r\n  }\r\n\r\n  size(): number {\r\n    this.cleanupExpired();\r\n    return this.items.size;\r\n  }\r\n\r\n  private cleanupExpired(): void {\r\n    if (this.ttlMs <= 0) return;\r\n\r\n    const now = Date.now();\r\n    let cleaned = 0;\r\n\r\n    for (const [key, item] of this.items.entries()) {\r\n      if (now - item.timestamp > this.ttlMs) {\r\n        this.items.delete(key);\r\n        cleaned++;\r\n      }\r\n    }\r\n\r\n    if (cleaned > 0) {\r\n      logger.debug(`${this.name}: Cleaned ${cleaned} expired items`);\r\n    }\r\n  }\r\n\r\n  private startCleanupTimer(): void {\r\n    // Nettoie toutes les minutes\r\n    this.cleanupTimer = setInterval(() => {\r\n      this.cleanupExpired();\r\n    }, 60000);\r\n  }\r\n\r\n  destroy(): void {\r\n    if (this.cleanupTimer) {\r\n      clearInterval(this.cleanupTimer);\r\n      this.cleanupTimer = null;\r\n    }\r\n    this.clear();\r\n  }\r\n\r\n  getMemoryUsage(): { count: number; maxSize: number; utilizationPercent: number } {\r\n    this.cleanupExpired();\r\n    return {\r\n      count: this.items.size,\r\n      maxSize: this.maxSize,\r\n      utilizationPercent: (this.items.size / this.maxSize) * 100\r\n    };\r\n  }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c257220facb0526296dd5f3fad715d2880062824"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29cqzzypzs = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29cqzzypzs();
cov_29cqzzypzs().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_29cqzzypzs().s[1]++;
exports.BoundedMap = exports.BoundedArray = void 0;
// src/shared/utils/BoundedCollection.ts
const secureLogger_1 =
/* istanbul ignore next */
(cov_29cqzzypzs().s[2]++, require("./secureLogger"));
/**
 * Collection avec taille limitée pour éviter les fuites mémoire
 * Utilise une stratégie LRU (Least Recently Used)
 */
class BoundedArray {
  constructor(maxSize, name =
  /* istanbul ignore next */
  (cov_29cqzzypzs().b[0][0]++, 'BoundedArray')) {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[0]++;
    cov_29cqzzypzs().s[3]++;
    this.items = [];
    /* istanbul ignore next */
    cov_29cqzzypzs().s[4]++;
    this.maxSize = Math.max(1, maxSize);
    /* istanbul ignore next */
    cov_29cqzzypzs().s[5]++;
    this.name = name;
  }
  add(item) {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[1]++;
    cov_29cqzzypzs().s[6]++;
    this.items.push(item);
    /* istanbul ignore next */
    cov_29cqzzypzs().s[7]++;
    if (this.items.length > this.maxSize) {
      /* istanbul ignore next */
      cov_29cqzzypzs().b[1][0]++;
      const removed =
      /* istanbul ignore next */
      (cov_29cqzzypzs().s[8]++, this.items.splice(0, this.items.length - this.maxSize));
      /* istanbul ignore next */
      cov_29cqzzypzs().s[9]++;
      secureLogger_1.logger.debug(`${this.name}: Cleaned ${removed.length} old items, keeping ${this.items.length}/${this.maxSize}`);
    } else
    /* istanbul ignore next */
    {
      cov_29cqzzypzs().b[1][1]++;
    }
  }
  addBatch(items) {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[2]++;
    cov_29cqzzypzs().s[10]++;
    this.items.push(...items);
    /* istanbul ignore next */
    cov_29cqzzypzs().s[11]++;
    if (this.items.length > this.maxSize) {
      /* istanbul ignore next */
      cov_29cqzzypzs().b[2][0]++;
      const removed =
      /* istanbul ignore next */
      (cov_29cqzzypzs().s[12]++, this.items.splice(0, this.items.length - this.maxSize));
      /* istanbul ignore next */
      cov_29cqzzypzs().s[13]++;
      secureLogger_1.logger.debug(`${this.name}: Batch cleaned ${removed.length} old items`);
    } else
    /* istanbul ignore next */
    {
      cov_29cqzzypzs().b[2][1]++;
    }
  }
  getAll() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[3]++;
    cov_29cqzzypzs().s[14]++;
    return this.items;
  }
  getRecent(count) {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[4]++;
    cov_29cqzzypzs().s[15]++;
    return this.items.slice(-Math.min(count, this.items.length));
  }
  // Array-like methods for compatibility
  slice(start, end) {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[5]++;
    cov_29cqzzypzs().s[16]++;
    return this.items.slice(start, end);
  }
  filter(predicate) {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[6]++;
    cov_29cqzzypzs().s[17]++;
    return this.items.filter(predicate);
  }
  reduce(callbackfn, initialValue) {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[7]++;
    cov_29cqzzypzs().s[18]++;
    return this.items.reduce(callbackfn, initialValue);
  }
  // Iterator support
  [Symbol.iterator]() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[8]++;
    cov_29cqzzypzs().s[19]++;
    return this.items[Symbol.iterator]();
  }
  // Length getter for array-like behavior
  get length() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[9]++;
    cov_29cqzzypzs().s[20]++;
    return this.items.length;
  }
  clear() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[10]++;
    const cleared =
    /* istanbul ignore next */
    (cov_29cqzzypzs().s[21]++, this.items.length);
    /* istanbul ignore next */
    cov_29cqzzypzs().s[22]++;
    this.items = [];
    /* istanbul ignore next */
    cov_29cqzzypzs().s[23]++;
    secureLogger_1.logger.debug(`${this.name}: Cleared ${cleared} items`);
  }
  size() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[11]++;
    cov_29cqzzypzs().s[24]++;
    return this.items.length;
  }
  isFull() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[12]++;
    cov_29cqzzypzs().s[25]++;
    return this.items.length >= this.maxSize;
  }
  getMemoryUsage() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[13]++;
    cov_29cqzzypzs().s[26]++;
    return {
      count: this.items.length,
      maxSize: this.maxSize,
      utilizationPercent: this.items.length / this.maxSize * 100
    };
  }
}
/* istanbul ignore next */
cov_29cqzzypzs().s[27]++;
exports.BoundedArray = BoundedArray;
/**
 * Map avec taille limitée et TTL (Time To Live)
 */
class BoundedMap {
  constructor(maxSize, ttlMs =
  /* istanbul ignore next */
  (cov_29cqzzypzs().b[3][0]++, 0), name =
  /* istanbul ignore next */
  (cov_29cqzzypzs().b[4][0]++, 'BoundedMap')) {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[14]++;
    cov_29cqzzypzs().s[28]++;
    this.items = new Map();
    /* istanbul ignore next */
    cov_29cqzzypzs().s[29]++;
    this.cleanupTimer = null;
    /* istanbul ignore next */
    cov_29cqzzypzs().s[30]++;
    this.maxSize = Math.max(1, maxSize);
    /* istanbul ignore next */
    cov_29cqzzypzs().s[31]++;
    this.ttlMs = ttlMs;
    /* istanbul ignore next */
    cov_29cqzzypzs().s[32]++;
    this.name = name;
    // Nettoyage automatique si TTL configuré
    /* istanbul ignore next */
    cov_29cqzzypzs().s[33]++;
    if (this.ttlMs > 0) {
      /* istanbul ignore next */
      cov_29cqzzypzs().b[5][0]++;
      cov_29cqzzypzs().s[34]++;
      this.startCleanupTimer();
    } else
    /* istanbul ignore next */
    {
      cov_29cqzzypzs().b[5][1]++;
    }
  }
  set(key, value) {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[15]++;
    const now =
    /* istanbul ignore next */
    (cov_29cqzzypzs().s[35]++, Date.now());
    // Nettoie les anciens éléments si nécessaire
    /* istanbul ignore next */
    cov_29cqzzypzs().s[36]++;
    this.cleanupExpired();
    // Supprime le plus ancien si taille max atteinte
    /* istanbul ignore next */
    cov_29cqzzypzs().s[37]++;
    if (
    /* istanbul ignore next */
    (cov_29cqzzypzs().b[7][0]++, this.items.size >= this.maxSize) &&
    /* istanbul ignore next */
    (cov_29cqzzypzs().b[7][1]++, !this.items.has(key))) {
      /* istanbul ignore next */
      cov_29cqzzypzs().b[6][0]++;
      const firstKey =
      /* istanbul ignore next */
      (cov_29cqzzypzs().s[38]++, this.items.keys().next().value);
      /* istanbul ignore next */
      cov_29cqzzypzs().s[39]++;
      if (firstKey !== undefined) {
        /* istanbul ignore next */
        cov_29cqzzypzs().b[8][0]++;
        cov_29cqzzypzs().s[40]++;
        this.items.delete(firstKey);
        /* istanbul ignore next */
        cov_29cqzzypzs().s[41]++;
        secureLogger_1.logger.debug(`${this.name}: Removed oldest item to make space`);
      } else
      /* istanbul ignore next */
      {
        cov_29cqzzypzs().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_29cqzzypzs().b[6][1]++;
    }
    cov_29cqzzypzs().s[42]++;
    this.items.set(key, {
      value,
      timestamp: now
    });
  }
  get(key) {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[16]++;
    const item =
    /* istanbul ignore next */
    (cov_29cqzzypzs().s[43]++, this.items.get(key));
    /* istanbul ignore next */
    cov_29cqzzypzs().s[44]++;
    if (!item) {
      /* istanbul ignore next */
      cov_29cqzzypzs().b[9][0]++;
      cov_29cqzzypzs().s[45]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_29cqzzypzs().b[9][1]++;
    }
    // Vérifie le TTL
    cov_29cqzzypzs().s[46]++;
    if (
    /* istanbul ignore next */
    (cov_29cqzzypzs().b[11][0]++, this.ttlMs > 0) &&
    /* istanbul ignore next */
    (cov_29cqzzypzs().b[11][1]++, Date.now() - item.timestamp > this.ttlMs)) {
      /* istanbul ignore next */
      cov_29cqzzypzs().b[10][0]++;
      cov_29cqzzypzs().s[47]++;
      this.items.delete(key);
      /* istanbul ignore next */
      cov_29cqzzypzs().s[48]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_29cqzzypzs().b[10][1]++;
    }
    cov_29cqzzypzs().s[49]++;
    return item.value;
  }
  has(key) {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[17]++;
    cov_29cqzzypzs().s[50]++;
    return this.get(key) !== undefined;
  }
  delete(key) {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[18]++;
    cov_29cqzzypzs().s[51]++;
    return this.items.delete(key);
  }
  clear() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[19]++;
    const cleared =
    /* istanbul ignore next */
    (cov_29cqzzypzs().s[52]++, this.items.size);
    /* istanbul ignore next */
    cov_29cqzzypzs().s[53]++;
    this.items.clear();
    /* istanbul ignore next */
    cov_29cqzzypzs().s[54]++;
    secureLogger_1.logger.debug(`${this.name}: Cleared ${cleared} items`);
  }
  size() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[20]++;
    cov_29cqzzypzs().s[55]++;
    this.cleanupExpired();
    /* istanbul ignore next */
    cov_29cqzzypzs().s[56]++;
    return this.items.size;
  }
  cleanupExpired() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[21]++;
    cov_29cqzzypzs().s[57]++;
    if (this.ttlMs <= 0) {
      /* istanbul ignore next */
      cov_29cqzzypzs().b[12][0]++;
      cov_29cqzzypzs().s[58]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_29cqzzypzs().b[12][1]++;
    }
    const now =
    /* istanbul ignore next */
    (cov_29cqzzypzs().s[59]++, Date.now());
    let cleaned =
    /* istanbul ignore next */
    (cov_29cqzzypzs().s[60]++, 0);
    /* istanbul ignore next */
    cov_29cqzzypzs().s[61]++;
    for (const [key, item] of this.items.entries()) {
      /* istanbul ignore next */
      cov_29cqzzypzs().s[62]++;
      if (now - item.timestamp > this.ttlMs) {
        /* istanbul ignore next */
        cov_29cqzzypzs().b[13][0]++;
        cov_29cqzzypzs().s[63]++;
        this.items.delete(key);
        /* istanbul ignore next */
        cov_29cqzzypzs().s[64]++;
        cleaned++;
      } else
      /* istanbul ignore next */
      {
        cov_29cqzzypzs().b[13][1]++;
      }
    }
    /* istanbul ignore next */
    cov_29cqzzypzs().s[65]++;
    if (cleaned > 0) {
      /* istanbul ignore next */
      cov_29cqzzypzs().b[14][0]++;
      cov_29cqzzypzs().s[66]++;
      secureLogger_1.logger.debug(`${this.name}: Cleaned ${cleaned} expired items`);
    } else
    /* istanbul ignore next */
    {
      cov_29cqzzypzs().b[14][1]++;
    }
  }
  startCleanupTimer() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[22]++;
    cov_29cqzzypzs().s[67]++;
    // Nettoie toutes les minutes
    this.cleanupTimer = setInterval(() => {
      /* istanbul ignore next */
      cov_29cqzzypzs().f[23]++;
      cov_29cqzzypzs().s[68]++;
      this.cleanupExpired();
    }, 60000);
  }
  destroy() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[24]++;
    cov_29cqzzypzs().s[69]++;
    if (this.cleanupTimer) {
      /* istanbul ignore next */
      cov_29cqzzypzs().b[15][0]++;
      cov_29cqzzypzs().s[70]++;
      clearInterval(this.cleanupTimer);
      /* istanbul ignore next */
      cov_29cqzzypzs().s[71]++;
      this.cleanupTimer = null;
    } else
    /* istanbul ignore next */
    {
      cov_29cqzzypzs().b[15][1]++;
    }
    cov_29cqzzypzs().s[72]++;
    this.clear();
  }
  getMemoryUsage() {
    /* istanbul ignore next */
    cov_29cqzzypzs().f[25]++;
    cov_29cqzzypzs().s[73]++;
    this.cleanupExpired();
    /* istanbul ignore next */
    cov_29cqzzypzs().s[74]++;
    return {
      count: this.items.size,
      maxSize: this.maxSize,
      utilizationPercent: this.items.size / this.maxSize * 100
    };
  }
}
/* istanbul ignore next */
cov_29cqzzypzs().s[75]++;
exports.BoundedMap = BoundedMap;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,