{"version":3,"names":["cov_24djc257o6","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","secureLogger_1","require","SecurityLevel","exports","UsageContext","XorShift128Plus","constructor","seed1","seed2","state0","state1","random","s1","s0","result","reseed","crypto","getRandomValues","seeds","Uint32Array","RandomPool","poolSize","refillThreshold","pool","isRefilling","totalGenerated","totalConsumed","initialize","fillPool","batchSize","Math","min","length","values","value","push","error","logger","getNext","pop","getStats","hitRate","HybridRandomProvider","configs","Map","CRYPTOGRAPHIC_OPS","securityLevel","CRYPTOGRAPHIC","batchGeneration","metricsEnabled","NEURAL_NETWORK","PERFORMANCE","WEBGL_RENDERING","GENETIC_MUTATIONS","MODERATE","metrics","totalCalls","secureCalls","poolCalls","fastCalls","avgLatencyMs","lastReseedTime","Date","now","securePool","fastPRNG","getInstance","instance","setInterval","context","startTime","performance","config","get","getSecureRandom","getPooledRandom","getFastRandom","latency","array","warn","poolValue","neuralRandom","renderingRandom","cryptoRandom","mutationRandom","generateBatch","count","Array","from","v","getPerformanceMetrics","poolStats","distribution","secure","toFixed","pooled","fast","configureContext","existing","set","shutdown","info","hybridRandom"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/HybridRandomProvider.ts"],"sourcesContent":["/**\n * HybridRandomProvider - Système de génération hybride haute performance\n * \n * Résout le problème de performance critique SecureRandom (284x plus lent)\n * en implémentant une architecture hybride optimisée selon le contexte d'usage.\n */\n\nimport { logger } from '@shared/utils/secureLogger';\n\n/**\n * Niveaux de sécurité pour classification des usages\n */\nexport enum SecurityLevel {\n  CRYPTOGRAPHIC = 'cryptographic',    // UUID, tokens, clés -> SecureRandom obligatoire\n  MODERATE = 'moderate',              // Mutations traits -> SecureRandom par défaut\n  PERFORMANCE = 'performance'         // WebGL, neural weights -> PRNG optimisé\n}\n\n/**\n * Contextes d'utilisation pour optimisation automatique\n */\nexport enum UsageContext {\n  NEURAL_NETWORK = 'neural_network',\n  WEBGL_RENDERING = 'webgl_rendering',\n  GENETIC_MUTATIONS = 'genetic_mutations',\n  SOCIAL_EVENTS = 'social_events',\n  CRYPTOGRAPHIC_OPS = 'cryptographic_ops',\n  MONITORING = 'monitoring'\n}\n\n/**\n * Configuration performance pour différents contextes\n */\ninterface PerformanceConfig {\n  securityLevel: SecurityLevel;\n  poolSize: number;\n  refillThreshold: number;\n  batchGeneration: boolean;\n  metricsEnabled: boolean;\n}\n\n/**\n * PRNG ultra-rapide xorshift128+ pour performance critique\n */\nclass XorShift128Plus {\n  private state0: number;\n  private state1: number;\n\n  constructor(seed1 = 123456789, seed2 = 987654321) {\n    this.state0 = seed1;\n    this.state1 = seed2;\n  }\n\n  random(): number {\n    let s1 = this.state0;\n    const s0 = this.state1;\n    \n    this.state0 = s0;\n    s1 ^= s1 << 23;\n    s1 ^= s1 >>> 17;\n    s1 ^= s0;\n    s1 ^= s0 >>> 26;\n    this.state1 = s1;\n    \n    const result = (s0 + s1) >>> 0;\n    return result / 0x100000000;\n  }\n\n  /**\n   * Re-seed avec valeur cryptographiquement sécurisée périodiquement\n   */\n  reseed(): void {\n    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n      const seeds = new Uint32Array(2);\n      crypto.getRandomValues(seeds);\n      this.state0 = seeds[0];\n      this.state1 = seeds[1];\n    }\n  }\n}\n\n/**\n * Pool de nombres pré-générés pour haute performance\n */\nclass RandomPool {\n  private pool: number[] = [];\n  private poolSize: number;\n  private refillThreshold: number;\n  private isRefilling = false;\n  private totalGenerated = 0;\n  private totalConsumed = 0;\n\n  constructor(poolSize = 10000, refillThreshold = 2000) {\n    this.poolSize = poolSize;\n    this.refillThreshold = refillThreshold;\n  }\n\n  async initialize(): Promise<void> {\n    await this.fillPool();\n  }\n\n  private async fillPool(): Promise<void> {\n    if (this.isRefilling) return;\n    \n    this.isRefilling = true;\n    try {\n      // Génération batch cryptographiquement sécurisée\n      const batchSize = Math.min(5000, this.poolSize - this.pool.length);\n      const values = new Uint32Array(batchSize);\n      \n      if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n        crypto.getRandomValues(values);\n        \n        for (const value of values) {\n          this.pool.push(value / 0x100000000);\n        }\n        \n        this.totalGenerated += batchSize;\n      }\n    } catch (error) {\n      logger.error('RandomPool: Erreur génération batch', { error });\n    } finally {\n      this.isRefilling = false;\n    }\n  }\n\n  getNext(): number | null {\n    if (this.pool.length === 0) return null;\n    \n    const value = this.pool.pop()!;\n    this.totalConsumed++;\n    \n    // Refill asynchrone si nécessaire\n    if (this.pool.length <= this.refillThreshold && !this.isRefilling) {\n      this.fillPool();\n    }\n    \n    return value;\n  }\n\n  getStats() {\n    return {\n      poolSize: this.pool.length,\n      totalGenerated: this.totalGenerated,\n      totalConsumed: this.totalConsumed,\n      hitRate: this.totalConsumed > 0 ? (this.totalConsumed - this.pool.length) / this.totalConsumed : 0,\n      isRefilling: this.isRefilling\n    };\n  }\n}\n\n/**\n * Provider hybride haute performance avec classification automatique\n */\nexport class HybridRandomProvider {\n  private static instance: HybridRandomProvider;\n  \n  // Générateurs spécialisés\n  private securePool: RandomPool;\n  private fastPRNG: XorShift128Plus;\n  \n  // Configuration par contexte\n  private configs = new Map<UsageContext, PerformanceConfig>([\n    [UsageContext.CRYPTOGRAPHIC_OPS, {\n      securityLevel: SecurityLevel.CRYPTOGRAPHIC,\n      poolSize: 1000,\n      refillThreshold: 200,\n      batchGeneration: true,\n      metricsEnabled: true\n    }],\n    [UsageContext.NEURAL_NETWORK, {\n      securityLevel: SecurityLevel.PERFORMANCE,\n      poolSize: 50000,\n      refillThreshold: 10000,\n      batchGeneration: true,\n      metricsEnabled: true\n    }],\n    [UsageContext.WEBGL_RENDERING, {\n      securityLevel: SecurityLevel.PERFORMANCE,\n      poolSize: 10000,\n      refillThreshold: 2000,\n      batchGeneration: true,\n      metricsEnabled: false\n    }],\n    [UsageContext.GENETIC_MUTATIONS, {\n      securityLevel: SecurityLevel.MODERATE,\n      poolSize: 5000,\n      refillThreshold: 1000,\n      batchGeneration: true,\n      metricsEnabled: true\n    }]\n  ]);\n\n  // Métriques performance\n  private metrics = {\n    totalCalls: 0,\n    secureCalls: 0,\n    poolCalls: 0,\n    fastCalls: 0,\n    avgLatencyMs: 0,\n    lastReseedTime: Date.now()\n  };\n\n  private constructor() {\n    this.securePool = new RandomPool(10000, 2000);\n    this.fastPRNG = new XorShift128Plus();\n    this.initialize();\n  }\n\n  static getInstance(): HybridRandomProvider {\n    if (!HybridRandomProvider.instance) {\n      HybridRandomProvider.instance = new HybridRandomProvider();\n    }\n    return HybridRandomProvider.instance;\n  }\n\n  private async initialize(): Promise<void> {\n    await this.securePool.initialize();\n    \n    // Re-seed PRNG périodiquement avec crypto sécurisé\n    setInterval(() => {\n      this.fastPRNG.reseed();\n      this.metrics.lastReseedTime = Date.now();\n    }, 300000); // Toutes les 5 minutes\n  }\n\n  /**\n   * API principale - génération adaptative selon contexte\n   */\n  random(context: UsageContext = UsageContext.GENETIC_MUTATIONS): number {\n    const startTime = performance.now();\n    this.metrics.totalCalls++;\n    \n    const config = this.configs.get(context) || this.configs.get(UsageContext.GENETIC_MUTATIONS)!;\n    let result: number;\n    \n    switch (config.securityLevel) {\n      case SecurityLevel.CRYPTOGRAPHIC:\n        result = this.getSecureRandom();\n        this.metrics.secureCalls++;\n        break;\n        \n      case SecurityLevel.MODERATE:\n        result = this.getPooledRandom();\n        this.metrics.poolCalls++;\n        break;\n        \n      case SecurityLevel.PERFORMANCE:\n        result = this.getFastRandom();\n        this.metrics.fastCalls++;\n        break;\n        \n      default:\n        result = this.getPooledRandom();\n        this.metrics.poolCalls++;\n    }\n    \n    // Mise à jour métriques\n    if (config.metricsEnabled) {\n      const latency = performance.now() - startTime;\n      this.metrics.avgLatencyMs = (this.metrics.avgLatencyMs + latency) / 2;\n    }\n    \n    return result;\n  }\n\n  /**\n   * Génération cryptographiquement sécurisée directe\n   */\n  private getSecureRandom(): number {\n    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n      const array = new Uint32Array(1);\n      crypto.getRandomValues(array);\n      return array[0] / 0x100000000;\n    }\n    \n    logger.warn('HybridRandom: crypto.getRandomValues non disponible, fallback pool');\n    return this.getPooledRandom();\n  }\n\n  /**\n   * Génération depuis pool pré-calculé (équilibre sécurité/performance)\n   */\n  private getPooledRandom(): number {\n    const poolValue = this.securePool.getNext();\n    if (poolValue !== null) {\n      return poolValue;\n    }\n    \n    // Fallback si pool vide\n    logger.warn('HybridRandom: Pool vide, fallback crypto direct');\n    return this.getSecureRandom();\n  }\n\n  /**\n   * Génération ultra-rapide PRNG (performance critique)\n   */\n  private getFastRandom(): number {\n    return this.fastPRNG.random();\n  }\n\n  /**\n   * APIs spécialisées pour différents usages\n   */\n  \n  // Pour neural networks (performance critique)\n  neuralRandom(): number {\n    return this.random(UsageContext.NEURAL_NETWORK);\n  }\n\n  // Pour WebGL rendering (ultra performance)\n  renderingRandom(): number {\n    return this.random(UsageContext.WEBGL_RENDERING);\n  }\n\n  // Pour opérations cryptographiques (sécurité maximale)\n  cryptoRandom(): number {\n    return this.random(UsageContext.CRYPTOGRAPHIC_OPS);\n  }\n\n  // Pour mutations génétiques (équilibré)\n  mutationRandom(): number {\n    return this.random(UsageContext.GENETIC_MUTATIONS);\n  }\n\n  /**\n   * Batch generation pour opérations intensives\n   */\n  async generateBatch(count: number, context: UsageContext): Promise<number[]> {\n    const config = this.configs.get(context);\n    if (!config?.batchGeneration) {\n      // Génération séquentielle si batch non supporté\n      return Array.from({ length: count }, () => this.random(context));\n    }\n\n    // Génération batch optimisée\n    if (config.securityLevel === SecurityLevel.PERFORMANCE) {\n      return Array.from({ length: count }, () => this.fastPRNG.random());\n    } else {\n      // Génération crypto batch\n      const values = new Uint32Array(count);\n      if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n        crypto.getRandomValues(values);\n        return Array.from(values, v => v / 0x100000000);\n      }\n      return Array.from({ length: count }, () => this.getSecureRandom());\n    }\n  }\n\n  /**\n   * Métriques et monitoring\n   */\n  getPerformanceMetrics() {\n    return {\n      ...this.metrics,\n      poolStats: this.securePool.getStats(),\n      distribution: {\n        secure: (this.metrics.secureCalls / this.metrics.totalCalls * 100).toFixed(1) + '%',\n        pooled: (this.metrics.poolCalls / this.metrics.totalCalls * 100).toFixed(1) + '%',\n        fast: (this.metrics.fastCalls / this.metrics.totalCalls * 100).toFixed(1) + '%'\n      }\n    };\n  }\n\n  /**\n   * Configuration dynamique\n   */\n  configureContext(context: UsageContext, config: Partial<PerformanceConfig>): void {\n    const existing = this.configs.get(context) || this.configs.get(UsageContext.GENETIC_MUTATIONS)!;\n    this.configs.set(context, { ...existing, ...config });\n  }\n\n  /**\n   * Nettoyage et arrêt propre\n   */\n  shutdown(): void {\n    logger.info('HybridRandomProvider: Arrêt avec métriques', this.getPerformanceMetrics());\n  }\n}\n\n// Exports pour compatibilité avec SecureRandom\nexport const hybridRandom = HybridRandomProvider.getInstance();\n\n// APIs simplifiées pour remplacement direct\nexport const neuralRandom = () => hybridRandom.neuralRandom();\nexport const renderingRandom = () => hybridRandom.renderingRandom();\nexport const cryptoRandom = () => hybridRandom.cryptoRandom();\nexport const mutationRandom = () => hybridRandom.mutationRandom();\n\n// Export de classe pour tests et instanciation custom\nexport { XorShift128Plus, RandomPool };"],"mappings":"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","ignoreList":[]}