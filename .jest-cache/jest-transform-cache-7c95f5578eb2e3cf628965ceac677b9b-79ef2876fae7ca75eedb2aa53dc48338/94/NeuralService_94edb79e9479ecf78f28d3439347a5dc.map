{"version":3,"names":["cov_995d9zrhv","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","NeuralService","constructor","mesh","processingQueue","isProcessing","processStimulus","stimulus","currentTraits","startTime","Date","now","pattern","convertStimulusToPattern","result","processPattern","adaptations","convertResultToTraitAdaptations","processingTime","success","confidence","error","console","queuePattern","push","processQueue","length","shift","learn","data","intensity","context","timestamp","traitSuggestions","Object","entries","forEach","trait","value","currentValue","maxChange","change","Math","max","min","activityType","curiosity","adjustTrait","adaptability","focus","memory","empathy","collaboration","creativity","intuition","adjustment","behaviorData","getPerformanceMetrics","nodeCount","connectionCount","neuralActivity","connectionStrength","accuracy","memoryUsage","saveState","loadState","state","reset","cleanup","healthCheck","issues","metrics","healthy","initialize","suspend","update","deltaTime","timeFactor","patternsToProcess","ceil","i","catch","stimulate","inputId","getNeuralActivity","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/services/NeuralService.ts"],"sourcesContent":["/**\n * NeuralService - Interface simplifiée pour les opérations neurales\n * Part du refactoring d'OrganismCore selon l'architecture hexagonale\n */\n\nimport { INeuralMesh } from '../interfaces/INeuralMesh';\nimport { OrganismTraits } from '../../shared/types/organism';\n\nexport interface NeuralProcessingResult {\n  success: boolean;\n  adaptations: Partial<OrganismTraits>;\n  confidence: number;\n  processingTime: number;\n}\n\nexport interface NeuralPattern {\n  id: string;\n  type: 'behavioral' | 'environmental' | 'social';\n  data: any;\n  timestamp: number;\n  confidence: number;\n}\n\nexport class NeuralService {\n  private mesh: INeuralMesh;\n  private processingQueue: NeuralPattern[] = [];\n  private isProcessing = false;\n\n  constructor(mesh: INeuralMesh) {\n    this.mesh = mesh;\n  }\n\n  /**\n   * Traite un stimulus et retourne les adaptations suggérées\n   */\n  async processStimulus(stimulus: any, currentTraits: OrganismTraits): Promise<NeuralProcessingResult> {\n    const startTime = Date.now();\n    \n    try {\n      // Conversion du stimulus en pattern neural\n      const pattern = this.convertStimulusToPattern(stimulus);\n      \n      // Traitement par le réseau neural\n      const result = this.mesh.processPattern \n        ? await this.mesh.processPattern(pattern)\n        : {};\n      \n      // Conversion du résultat en adaptations de traits\n      const adaptations = this.convertResultToTraitAdaptations(result, currentTraits);\n      \n      const processingTime = Date.now() - startTime;\n      \n      return {\n        success: true,\n        adaptations,\n        confidence: result.confidence || 0.8,\n        processingTime\n      };\n    } catch (error) {\n      console.error('Erreur de traitement neural:', error);\n      \n      return {\n        success: false,\n        adaptations: {},\n        confidence: 0,\n        processingTime: Date.now() - startTime\n      };\n    }\n  }\n\n  /**\n   * Ajoute un pattern à la queue de traitement\n   */\n  queuePattern(pattern: NeuralPattern): void {\n    this.processingQueue.push(pattern);\n    \n    if (!this.isProcessing) {\n      this.processQueue();\n    }\n  }\n\n  /**\n   * Traite la queue de patterns en arrière-plan\n   */\n  private async processQueue(): Promise<void> {\n    if (this.isProcessing || this.processingQueue.length === 0) return;\n    \n    this.isProcessing = true;\n    \n    while (this.processingQueue.length > 0) {\n      const pattern = this.processingQueue.shift();\n      if (pattern) {\n        try {\n          if (this.mesh.learn) {\n            await this.mesh.learn(pattern.data);\n          }\n        } catch (error) {\n          console.error('Erreur apprentissage neural:', error);\n        }\n      }\n    }\n    \n    this.isProcessing = false;\n  }\n\n  /**\n   * Convertit un stimulus en pattern neural\n   */\n  private convertStimulusToPattern(stimulus: any): any {\n    // Simplification du stimulus pour le réseau neural\n    if (typeof stimulus === 'object' && stimulus !== null) {\n      return {\n        type: stimulus.type || 'unknown',\n        intensity: stimulus.intensity || 0.5,\n        context: stimulus.context || {},\n        timestamp: Date.now()\n      };\n    }\n    \n    return {\n      type: 'simple',\n      intensity: 0.5,\n      data: stimulus,\n      timestamp: Date.now()\n    };\n  }\n\n  /**\n   * Convertit le résultat neural en adaptations de traits\n   */\n  private convertResultToTraitAdaptations(result: any, currentTraits: OrganismTraits): Partial<OrganismTraits> {\n    const adaptations: Partial<OrganismTraits> = {};\n    \n    // Logique de conversion basée sur le type de résultat\n    if (result && typeof result === 'object') {\n      // Si le résultat contient des suggestions directes de traits\n      if (result.traitSuggestions) {\n        Object.entries(result.traitSuggestions).forEach(([trait, value]) => {\n          if (trait in currentTraits && typeof value === 'number') {\n            // Adaptation graduelle (maximum 10% de changement)\n            const currentValue = currentTraits[trait as keyof OrganismTraits];\n            const maxChange = 0.1;\n            const change = Math.max(-maxChange, Math.min(maxChange, value - currentValue));\n            adaptations[trait as keyof OrganismTraits] = currentValue + change;\n          }\n        });\n      }\n      \n      // Adaptations basées sur le type d'activité\n      if (result.activityType) {\n        switch (result.activityType) {\n          case 'exploration':\n            adaptations.curiosity = this.adjustTrait(currentTraits.curiosity, 0.05);\n            adaptations.adaptability = this.adjustTrait(currentTraits.adaptability, 0.03);\n            break;\n          case 'focus':\n            adaptations.focus = this.adjustTrait(currentTraits.focus, 0.05);\n            adaptations.memory = this.adjustTrait(currentTraits.memory, 0.02);\n            break;\n          case 'social':\n            adaptations.empathy = this.adjustTrait(currentTraits.empathy, 0.04);\n            adaptations.collaboration = this.adjustTrait(currentTraits.collaboration, 0.04);\n            break;\n          case 'creative':\n            adaptations.creativity = this.adjustTrait(currentTraits.creativity, 0.05);\n            adaptations.intuition = this.adjustTrait(currentTraits.intuition, 0.03);\n            break;\n        }\n      }\n    }\n    \n    return adaptations;\n  }\n\n  /**\n   * Ajuste un trait avec une limite de changement\n   */\n  private adjustTrait(currentValue: number, adjustment: number): number {\n    return Math.max(0, Math.min(1, currentValue + adjustment));\n  }\n\n  /**\n   * Effectue l'apprentissage à partir de données comportementales\n   */\n  async learn(behaviorData: any): Promise<boolean> {\n    try {\n      if (this.mesh.learn) {\n        await this.mesh.learn(behaviorData);\n      }\n      return true;\n    } catch (error) {\n      console.error('Erreur apprentissage:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Obtient les métriques de performance du réseau neural\n   */\n  getPerformanceMetrics(): any {\n    try {\n      return this.mesh.getPerformanceMetrics \n        ? this.mesh.getPerformanceMetrics()\n        : { nodeCount: 0, connectionCount: 0, neuralActivity: 0, connectionStrength: 0 };\n    } catch (error) {\n      console.error('Erreur métriques:', error);\n      return {\n        processingTime: 0,\n        accuracy: 0,\n        memoryUsage: 0\n      };\n    }\n  }\n\n  /**\n   * Sauvegarde l'état du réseau neural\n   */\n  saveState(): any {\n    try {\n      return this.mesh.saveState();\n    } catch (error) {\n      console.error('Erreur sauvegarde état neural:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Restaure l'état du réseau neural\n   */\n  loadState(state: any): boolean {\n    try {\n      this.mesh.loadState(state);\n      return true;\n    } catch (error) {\n      console.error('Erreur chargement état neural:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Réinitialise le réseau neural\n   */\n  reset(): void {\n    try {\n      this.mesh.reset();\n      this.processingQueue = [];\n      this.isProcessing = false;\n    } catch (error) {\n      console.error('Erreur reset neural:', error);\n    }\n  }\n\n  /**\n   * Nettoyage pour libérer les ressources\n   */\n  cleanup(): void {\n    this.processingQueue = [];\n    this.isProcessing = false;\n    \n    // Si le mesh a une méthode cleanup\n    if (typeof (this.mesh as any).cleanup === 'function') {\n      (this.mesh as any).cleanup();\n    }\n  }\n\n  /**\n   * Vérifie l'état de santé du service neural\n   */\n  healthCheck(): { healthy: boolean; issues: string[] } {\n    const issues: string[] = [];\n    \n    if (!this.mesh) {\n      issues.push('Réseau neural non initialisé');\n    }\n    \n    if (this.processingQueue.length > 1000) {\n      issues.push('Queue de traitement surchargée');\n    }\n    \n    try {\n      const metrics = this.getPerformanceMetrics();\n      if (metrics.processingTime > 1000) {\n        issues.push('Temps de traitement élevé');\n      }\n    } catch {\n      issues.push('Métriques non disponibles');\n    }\n    \n    return {\n      healthy: issues.length === 0,\n      issues\n    };\n  }\n\n  // =============================================================================\n  // MÉTHODES AJOUTÉES POUR COMPATIBILITÉ ORGANISMCORE\n  // =============================================================================\n\n  /**\n   * Initialize neural service\n   */\n  async initialize(): Promise<void> {\n    await this.mesh.initialize();\n  }\n\n  /**\n   * Suspend neural processing\n   */\n  async suspend(): Promise<void> {\n    await this.mesh.suspend();\n  }\n\n  /**\n   * Update neural processing with delta time\n   */\n  update(deltaTime: number): void {\n    // Process pending patterns based on delta time\n    const timeFactor = deltaTime / 16.67; // Normalize to 60fps\n    const patternsToProcess = Math.ceil(timeFactor);\n    \n    for (let i = 0; i < patternsToProcess && this.processingQueue.length > 0; i++) {\n      const pattern = this.processingQueue.shift();\n      if (pattern && this.mesh.learn) {\n        this.mesh.learn(pattern.data).catch(error => {\n          console.error('Neural processing error:', error);\n        });\n      }\n    }\n  }\n\n  /**\n   * Stimulate neural input\n   */\n  stimulate(inputId: string, value: number): void {\n    this.mesh.stimulate(inputId, value);\n  }\n\n  /**\n   * Get neural activity level\n   */\n  getNeuralActivity(): number {\n    return this.mesh.getNeuralActivity();\n  }\n}"],"mappings":"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","ignoreList":[]}