{"version":3,"names":["cov_2bjowya2fx","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","RealMetricsService","constructor","metricsCache","Map","isProduction","process","env","NODE_ENV","getInstance","instance","getMemoryMetrics","performance","memInfo","memory","used","usedJSHeapSize","total","totalJSHeapSize","percentage","jsHeapSizeLimit","estimate","estimateMemoryUsage","error","console","warn","getFallbackMemoryMetrics","getTimingMetrics","navigation","getEntriesByType","paint","firstPaint","find","p","startTime","firstContentfulPaint","loadTime","loadEventEnd","fetchStart","domReady","domContentLoadedEventEnd","getFallbackTimingMetrics","getNetworkMetrics","connection","navigator","mozConnection","webkitConnection","latency","measureNetworkLatency","bandwidth","downlink","connectionType","effectiveType","getFallbackNetworkMetrics","getCPUMetrics","usage","estimateCPUUsage","cores","hardwareConcurrency","getFallbackCPUMetrics","getSystemMetrics","cacheKey","cached","get","Date","now","timestamp","value","network","cpu","Promise","all","frameRate","measureFrameRate","metrics","set","getFallbackSystemMetrics","getWebVitals","lcp","fid","cls","fcp","ttfb","measureLCP","measureFID","measureCLS","measureFCP","measureTTFB","getFallbackWebVitals","fetch","method","resolve","iterations","result","i","Math","sqrt","sin","duration","min","frames","countFrame","requestAnimationFrame","domElements","document","querySelectorAll","length","estimateBytes","lcpEntries","fidEntries","processingStart","clsValue","observer","PerformanceObserver","list","entry","getEntries","hadRecentInput","observe","buffered","setTimeout","disconnect","fcpEntry","getEntriesByName","responseStart","requestStart","getRandomReplacementValue","refreshMetrics","clear","getDevMetrics","getCPUUsage","getMemoryUsage","exports","default"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/services/RealMetricsService.ts"],"sourcesContent":["/**\n * RealMetricsService - Service central pour collecte de vraies métriques\n * Remplace Math.random() par des données de performance réelles\n */\n\nexport interface PerformanceMetrics {\n  memory: {\n    used: number;\n    total: number;\n    percentage: number;\n  };\n  timing: {\n    loadTime: number;\n    domReady: number;\n    firstPaint: number;\n    firstContentfulPaint: number;\n  };\n  network: {\n    latency: number;\n    bandwidth: number;\n    connectionType: string;\n  };\n  cpu: {\n    usage: number;\n    cores: number;\n  };\n  timestamp: number;\n}\n\nexport interface WebVitalsMetrics {\n  lcp: number; // Largest Contentful Paint\n  fid: number; // First Input Delay\n  cls: number; // Cumulative Layout Shift\n  fcp: number; // First Contentful Paint\n  ttfb: number; // Time To First Byte\n}\n\nexport interface SystemMetrics {\n  cpu: number;\n  memory: number;\n  latency: number;\n  frameRate: number;\n  timestamp: number;\n}\n\nclass RealMetricsService {\n  private static instance: RealMetricsService;\n  private isProduction: boolean;\n  private metricsCache: Map<string, { value: any; timestamp: number }> = new Map();\n  \n  private constructor() {\n    this.isProduction = process.env.NODE_ENV === 'production';\n  }\n\n  static getInstance(): RealMetricsService {\n    if (!RealMetricsService.instance) {\n      RealMetricsService.instance = new RealMetricsService();\n    }\n    return RealMetricsService.instance;\n  }\n\n  /**\n   * Collecte des métriques mémoire réelles\n   */\n  async getMemoryMetrics(): Promise<{ used: number; total: number; percentage: number }> {\n    try {\n      // Try Performance Memory API (Chrome)\n      if ('memory' in performance) {\n        const memInfo = (performance as any).memory;\n        return {\n          used: memInfo.usedJSHeapSize,\n          total: memInfo.totalJSHeapSize,\n          percentage: (memInfo.usedJSHeapSize / memInfo.jsHeapSizeLimit) * 100\n        };\n      }\n\n      // Fallback: Estimate via DOM elements count\n      const estimate = this.estimateMemoryUsage();\n      return {\n        used: estimate,\n        total: estimate * 2,\n        percentage: 50\n      };\n    } catch (error) {\n      console.warn('Erreur collecte mémoire, fallback estimation:', error);\n      return this.getFallbackMemoryMetrics();\n    }\n  }\n\n  /**\n   * Collecte des métriques de timing réelles\n   */\n  async getTimingMetrics(): Promise<{ loadTime: number; domReady: number; firstPaint: number; firstContentfulPaint: number }> {\n    try {\n      const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming;\n      const paint = performance.getEntriesByType('paint');\n      \n      const firstPaint = paint.find(p => p.name === 'first-paint')?.startTime || 0;\n      const firstContentfulPaint = paint.find(p => p.name === 'first-contentful-paint')?.startTime || 0;\n\n      return {\n        loadTime: navigation ? navigation.loadEventEnd - navigation.fetchStart : 0,\n        domReady: navigation ? navigation.domContentLoadedEventEnd - navigation.fetchStart : 0,\n        firstPaint,\n        firstContentfulPaint\n      };\n    } catch (error) {\n      console.warn('Erreur collecte timing, fallback estimation:', error);\n      return this.getFallbackTimingMetrics();\n    }\n  }\n\n  /**\n   * Collecte des métriques réseau réelles\n   */\n  async getNetworkMetrics(): Promise<{ latency: number; bandwidth: number; connectionType: string }> {\n    try {\n      const connection = (navigator as any).connection || (navigator as any).mozConnection || (navigator as any).webkitConnection;\n      \n      // Mesure latency via HEAD request vers favicon\n      const latency = await this.measureNetworkLatency();\n      \n      return {\n        latency,\n        bandwidth: connection?.downlink || 0,\n        connectionType: connection?.effectiveType || 'unknown'\n      };\n    } catch (error) {\n      console.warn('Erreur collecte réseau, fallback estimation:', error);\n      return this.getFallbackNetworkMetrics();\n    }\n  }\n\n  /**\n   * Collecte des métriques CPU réelles (estimation)\n   */\n  async getCPUMetrics(): Promise<{ usage: number; cores: number }> {\n    try {\n      const usage = await this.estimateCPUUsage();\n      const cores = navigator.hardwareConcurrency || 4;\n      \n      return { usage, cores };\n    } catch (error) {\n      console.warn('Erreur collecte CPU, fallback estimation:', error);\n      return this.getFallbackCPUMetrics();\n    }\n  }\n\n  /**\n   * Interface principale pour les métriques système (remplace Math.random())\n   */\n  async getSystemMetrics(): Promise<SystemMetrics> {\n    const cacheKey = 'system_metrics';\n    const cached = this.metricsCache.get(cacheKey);\n    \n    // Cache 30 secondes pour éviter overhead\n    if (cached && Date.now() - cached.timestamp < 30000) {\n      return cached.value;\n    }\n\n    try {\n      const [memory, network, cpu] = await Promise.all([\n        this.getMemoryMetrics(),\n        this.getNetworkMetrics(),\n        this.getCPUMetrics()\n      ]);\n\n      const frameRate = this.measureFrameRate();\n\n      const metrics: SystemMetrics = {\n        cpu: cpu.usage,\n        memory: memory.percentage,\n        latency: network.latency,\n        frameRate: await frameRate,\n        timestamp: Date.now()\n      };\n\n      this.metricsCache.set(cacheKey, { value: metrics, timestamp: Date.now() });\n      return metrics;\n    } catch (error) {\n      console.error('Erreur collecte métriques système:', error);\n      return this.getFallbackSystemMetrics();\n    }\n  }\n\n  /**\n   * Collecte Web Vitals pour performance UX\n   */\n  async getWebVitals(): Promise<WebVitalsMetrics> {\n    try {\n      const [lcp, fid, cls, fcp, ttfb] = await Promise.all([\n        this.measureLCP(),\n        this.measureFID(),\n        this.measureCLS(),\n        this.measureFCP(),\n        this.measureTTFB()\n      ]);\n\n      return { lcp, fid, cls, fcp, ttfb };\n    } catch (error) {\n      console.warn('Erreur Web Vitals, fallback defaults:', error);\n      return this.getFallbackWebVitals();\n    }\n  }\n\n  // === MÉTHODES PRIVÉES DE MESURE ===\n\n  private async measureNetworkLatency(): Promise<number> {\n    try {\n      const start = performance.now();\n      await fetch('/favicon.ico', { method: 'HEAD' });\n      return performance.now() - start;\n    } catch {\n      return 50; // Fallback 50ms\n    }\n  }\n\n  private async estimateCPUUsage(): Promise<number> {\n    return new Promise((resolve) => {\n      const start = performance.now();\n      const iterations = 50000;\n      \n      // CPU stress test léger\n      let result = 0;\n      for (let i = 0; i < iterations; i++) {\n        result += Math.sqrt(i) * Math.sin(i);\n      }\n      \n      const duration = performance.now() - start;\n      // Normaliser entre 0 et 1 (plus de 20ms = usage élevé)\n      const usage = Math.min(duration / 20, 1);\n      resolve(usage);\n    });\n  }\n\n  private async measureFrameRate(): Promise<number> {\n    return new Promise((resolve) => {\n      let frames = 0;\n      const start = performance.now();\n      \n      const countFrame = () => {\n        frames++;\n        if (performance.now() - start < 1000) {\n          requestAnimationFrame(countFrame);\n        } else {\n          resolve(frames);\n        }\n      };\n      \n      requestAnimationFrame(countFrame);\n    });\n  }\n\n  private estimateMemoryUsage(): number {\n    // Estimation basée sur le nombre d'éléments DOM\n    const domElements = document.querySelectorAll('*').length;\n    const estimateBytes = domElements * 1000; // ~1KB par élément\n    return estimateBytes;\n  }\n\n  // Web Vitals measurements\n  private async measureLCP(): Promise<number> {\n    try {\n      const lcpEntries = performance.getEntriesByType('largest-contentful-paint') as any[];\n      return lcpEntries.length > 0 ? lcpEntries[lcpEntries.length - 1].startTime : 0;\n    } catch {\n      return 2500; // Fallback LCP\n    }\n  }\n\n  private async measureFID(): Promise<number> {\n    try {\n      const fidEntries = performance.getEntriesByType('first-input') as any[];\n      return fidEntries.length > 0 ? fidEntries[0].processingStart - fidEntries[0].startTime : 0;\n    } catch {\n      return 100; // Fallback FID\n    }\n  }\n\n  private async measureCLS(): Promise<number> {\n    try {\n      let clsValue = 0;\n      const observer = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          if (!(entry as any).hadRecentInput) {\n            clsValue += (entry as any).value;\n          }\n        }\n      });\n      observer.observe({ type: 'layout-shift', buffered: true });\n      \n      // Wait 100ms to collect entries\n      await new Promise(resolve => setTimeout(resolve, 100));\n      observer.disconnect();\n      \n      return clsValue;\n    } catch {\n      return 0.1; // Fallback CLS\n    }\n  }\n\n  private async measureFCP(): Promise<number> {\n    try {\n      const fcpEntry = performance.getEntriesByName('first-contentful-paint')[0];\n      return fcpEntry ? fcpEntry.startTime : 0;\n    } catch {\n      return 1500; // Fallback FCP\n    }\n  }\n\n  private async measureTTFB(): Promise<number> {\n    try {\n      const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming;\n      return navigation ? navigation.responseStart - navigation.requestStart : 0;\n    } catch {\n      return 200; // Fallback TTFB\n    }\n  }\n\n  // === FALLBACKS POUR DÉVELOPPEMENT ===\n\n  private getFallbackMemoryMetrics() {\n    return {\n      used: 25 * 1024 * 1024, // 25MB\n      total: 100 * 1024 * 1024, // 100MB\n      percentage: 25\n    };\n  }\n\n  private getFallbackTimingMetrics() {\n    return {\n      loadTime: 1500,\n      domReady: 800,\n      firstPaint: 1200,\n      firstContentfulPaint: 1400\n    };\n  }\n\n  private getFallbackNetworkMetrics() {\n    return {\n      latency: 50,\n      bandwidth: 10,\n      connectionType: '4g'\n    };\n  }\n\n  private getFallbackCPUMetrics() {\n    return {\n      usage: 0.15, // 15%\n      cores: 4\n    };\n  }\n\n  private getFallbackSystemMetrics(): SystemMetrics {\n    return {\n      cpu: 0.15,\n      memory: 25,\n      latency: 50,\n      frameRate: 60,\n      timestamp: Date.now()\n    };\n  }\n\n  private getFallbackWebVitals(): WebVitalsMetrics {\n    return {\n      lcp: 2500,\n      fid: 100,\n      cls: 0.1,\n      fcp: 1500,\n      ttfb: 200\n    };\n  }\n\n  /**\n   * Utilitaire pour remplacer Math.random() par vraies données\n   */\n  async getRandomReplacementValue(type: 'cpu' | 'memory' | 'latency' | 'generic' = 'generic'): Promise<number> {\n    const metrics = await this.getSystemMetrics();\n    \n    switch (type) {\n      case 'cpu':\n        return metrics.cpu;\n      case 'memory':\n        return metrics.memory / 100; // Normaliser 0-1\n      case 'latency':\n        return metrics.latency / 1000; // Normaliser en secondes\n      default:\n        // Mélange normalisé pour usage générique\n        return (metrics.cpu + metrics.memory / 100 + metrics.latency / 1000) / 3;\n    }\n  }\n\n  /**\n   * Force refresh du cache des métriques\n   */\n  refreshMetrics(): void {\n    this.metricsCache.clear();\n  }\n\n  /**\n   * Obtient des métriques en mode développement avec warnings\n   */\n  async getDevMetrics(): Promise<SystemMetrics> {\n    if (this.isProduction) {\n      return this.getSystemMetrics();\n    }\n\n    console.warn('🚧 MODE DÉVELOPPEMENT: Utilisation métriques simulées pour les tests');\n    return this.getFallbackSystemMetrics();\n  }\n\n  // =============================================================================\n  // MÉTHODES AJOUTÉES POUR COMPATIBILITÉ ORGANISMCORE\n  // =============================================================================\n\n  /**\n   * Get CPU usage as a normalized value (0-1)\n   */\n  async getCPUUsage(): Promise<number> {\n    const metrics = await this.getSystemMetrics();\n    return metrics.cpu;\n  }\n\n  /**\n   * Get memory usage as a normalized value (0-1)\n   */\n  async getMemoryUsage(): Promise<number> {\n    const metrics = await this.getSystemMetrics();\n    return metrics.memory / 100; // Convert percentage to 0-1 range\n  }\n}\n\nexport default RealMetricsService;"],"mappings":"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","ignoreList":[]}