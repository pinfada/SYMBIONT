{"version":3,"names":["cov_10azp4zd3t","actualCoverage","s","DNAInterpreter","constructor","dna","f","cachedParams","mutationAccumulator","interpret","b","hash1","hashDNA","hash2","hash3","params","primaryColor","Float32Array","secondaryColor","complexity","symmetry","fluidity","colorVariance","patternDensity","evolutionRate","seed","hash","i","length","charCodeAt","getCurrentParameters","mutated","Math","sin","cos","evolveDNA","factor","abs","PI","mutateDNA","chars","split","mutationIndex","floor","random","mutationChar","String","fromCharCode","join","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/generative/DNAInterpreter.ts"],"sourcesContent":["// src/generative/DNAInterpreter.ts\r\n// Interpréteur DNA → paramètres visuels harmonisé\r\nimport { ShaderParameters } from '../types';\r\n\r\nexport class DNAInterpreter {\r\n  private dna: string;\r\n  private cachedParams: ShaderParameters | null = null;\r\n  private mutationAccumulator: number = 0;\r\n  \r\n  constructor(dna: string) {\r\n    this.dna = dna;\r\n    this.interpret();\r\n  }\r\n  \r\n  /**\r\n   * Interprète le DNA en paramètres shaders déterministes\r\n   */\r\n  public interpret(dna: string = this.dna): ShaderParameters {\r\n    // DNA string => hash values\r\n    const hash1 = this.hashDNA(dna, 0);\r\n    const hash2 = this.hashDNA(dna, 1);\r\n    const hash3 = this.hashDNA(dna, 2);\r\n    \r\n    // Conversion en paramètres visuels\r\n    const params: ShaderParameters = {\r\n      primaryColor: new Float32Array([\r\n        (hash1 % 256) / 255,\r\n        ((hash1 >> 8) % 256) / 255,\r\n        ((hash1 >> 16) % 256) / 255\r\n      ]),\r\n      secondaryColor: new Float32Array([\r\n        (hash2 % 256) / 255,\r\n        ((hash2 >> 8) % 256) / 255,\r\n        ((hash2 >> 16) % 256) / 255\r\n      ]),\r\n      complexity: (hash1 % 100) / 100,\r\n      symmetry: (hash2 % 100) / 100,\r\n      fluidity: (hash3 % 100) / 100,\r\n      colorVariance: ((hash1 ^ hash2) % 100) / 100,\r\n      patternDensity: ((hash2 ^ hash3) % 100) / 100,\r\n      evolutionRate: ((hash1 ^ hash3) % 100) / 100\r\n    };\r\n    \r\n    this.cachedParams = params;\r\n    return params;\r\n  }\r\n  \r\n  /**\r\n   * Hash FNV-1a pour distribution uniforme\r\n   */\r\n  private hashDNA(dna: string, seed: number): number {\r\n    // FNV-1a hash pour distribution uniforme\r\n    let hash = 2166136261 ^ seed;\r\n    for (let i = 0; i < dna.length; i++) {\r\n      hash ^= dna.charCodeAt(i);\r\n      hash *= 16777619;\r\n    }\r\n    return hash >>> 0;\r\n  }\r\n  \r\n  /**\r\n   * Retourne les paramètres courants, avec mutations accumulées\r\n   */\r\n  public getCurrentParameters(): ShaderParameters {\r\n    if (!this.cachedParams) {\r\n      this.cachedParams = this.interpret();\r\n    }\r\n    \r\n    // Application des mutations accumulées\r\n    const mutated = { ...this.cachedParams };\r\n    mutated.fluidity += Math.sin(this.mutationAccumulator) * 0.1;\r\n    mutated.complexity += Math.cos(this.mutationAccumulator * 0.7) * 0.05;\r\n    \r\n    return mutated;\r\n  }\r\n  \r\n  /**\r\n   * Fait évoluer le DNA (mutation progressive)\r\n   */\r\n  public evolveDNA(factor: number): void {\r\n    this.mutationAccumulator += factor;\r\n    // Mutation progressive du DNA\r\n    if (Math.abs(this.mutationAccumulator) > Math.PI * 2) {\r\n      this.mutateDNA();\r\n      this.mutationAccumulator = 0;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Mutation aléatoire mais contrôlée du DNA\r\n   */\r\n  private mutateDNA(): void {\r\n    // Mutation aléatoire mais contrôlée\r\n    const chars = this.dna.split('');\r\n    const mutationIndex = Math.floor(Math.random() * chars.length);\r\n    const mutationChar = String.fromCharCode(\r\n      33 + Math.floor(Math.random() * 94) // ASCII printable\r\n    );\r\n    chars[mutationIndex] = mutationChar;\r\n    this.dna = chars.join('');\r\n    this.cachedParams = null; // Force recalcul\r\n  }\r\n}"],"mappings":"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","ignoreList":[]}