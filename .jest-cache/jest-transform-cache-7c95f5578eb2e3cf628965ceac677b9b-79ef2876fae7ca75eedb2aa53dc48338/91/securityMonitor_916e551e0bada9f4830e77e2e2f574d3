cb333fa0b463dae8bbed5760c66ab65e
"use strict";

/* istanbul ignore next */
function cov_1ptj6uqfsv() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/securityMonitor.ts";
  var hash = "5c5ec50937146992e1ed19efa185b1be709a2a55";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/securityMonitor.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 30
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 38
        }
      },
      "5": {
        start: {
          line: 8,
          column: 13
        },
        end: {
          line: 8,
          column: 43
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 47
        }
      },
      "7": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 69
        }
      },
      "8": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 19
        }
      },
      "9": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 79
        }
      },
      "10": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 48
        }
      },
      "11": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "12": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "13": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "14": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 97
        }
      },
      "15": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "logAccess",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 18
          }
        },
        loc: {
          start: {
            line: 12,
            column: 38
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "resetAttempts",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 22
          }
        },
        loc: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 23
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 16,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 16,
            column: 36
          }
        }, {
          start: {
            line: 16,
            column: 40
          },
          end: {
            line: 16,
            column: 41
          }
        }],
        line: 16
      },
      "5": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/securityMonitor.ts",
      mappings: ";;;;;AAMA,8BAUC;AAED,sCAEC;AApBD,4CAAoB;AACpB,gDAAwB;AAExB,MAAM,QAAQ,GAAG,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;AAC5D,MAAM,QAAQ,GAA2B,EAAE,CAAC;AAE5C,SAAgB,SAAS,CAAC,EAAU,EAAE,KAAa,EAAE,MAAc;IACjE,MAAM,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE,MAAM,KAAK,MAAM,MAAM,IAAI,CAAC;IAC5E,YAAE,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAClC,IAAI,MAAM,KAAK,GAAG,EAAE,CAAC;QACnB,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC;YACrB,qBAAqB;YACrB,YAAE,CAAC,cAAc,CAAC,QAAQ,EAAE,uCAAuC,EAAE,IAAI,CAAC,CAAC;QAC7E,CAAC;IACH,CAAC;AACH,CAAC;AAED,SAAgB,aAAa,CAAC,EAAU;IACtC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACnB,CAAC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/securityMonitor.ts"],
      sourcesContent: ["import fs from 'fs';\r\nimport path from 'path';\r\n\r\nconst LOG_PATH = path.join(__dirname, '../../security.log');\r\nconst attempts: Record<string, number> = {};\r\n\r\nexport function logAccess(ip: string, route: string, status: number) {\r\n  const line = `${new Date().toISOString()} | ${ip} | ${route} | ${status}\\n`;\r\n  fs.appendFileSync(LOG_PATH, line);\r\n  if (status === 403) {\r\n    attempts[ip] = (attempts[ip] || 0) + 1;\r\n    if (attempts[ip] > 5) {\r\n      // Alerte brute force\r\n      fs.appendFileSync(LOG_PATH, `ALERT: Brute force suspect\xE9e depuis ${ip}\\n`);\r\n    }\r\n  }\r\n}\r\n\r\nexport function resetAttempts(ip: string) {\r\n  attempts[ip] = 0;\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5c5ec50937146992e1ed19efa185b1be709a2a55"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ptj6uqfsv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ptj6uqfsv();
var __importDefault =
/* istanbul ignore next */
(cov_1ptj6uqfsv().s[0]++,
/* istanbul ignore next */
(cov_1ptj6uqfsv().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1ptj6uqfsv().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1ptj6uqfsv().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1ptj6uqfsv().f[0]++;
  cov_1ptj6uqfsv().s[1]++;
  return /* istanbul ignore next */(cov_1ptj6uqfsv().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1ptj6uqfsv().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1ptj6uqfsv().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1ptj6uqfsv().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1ptj6uqfsv().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ptj6uqfsv().s[3]++;
exports.logAccess = logAccess;
/* istanbul ignore next */
cov_1ptj6uqfsv().s[4]++;
exports.resetAttempts = resetAttempts;
const fs_1 =
/* istanbul ignore next */
(cov_1ptj6uqfsv().s[5]++, __importDefault(require("fs")));
const path_1 =
/* istanbul ignore next */
(cov_1ptj6uqfsv().s[6]++, __importDefault(require("path")));
const LOG_PATH =
/* istanbul ignore next */
(cov_1ptj6uqfsv().s[7]++, path_1.default.join(__dirname, '../../security.log'));
const attempts =
/* istanbul ignore next */
(cov_1ptj6uqfsv().s[8]++, {});
function logAccess(ip, route, status) {
  /* istanbul ignore next */
  cov_1ptj6uqfsv().f[1]++;
  const line =
  /* istanbul ignore next */
  (cov_1ptj6uqfsv().s[9]++, `${new Date().toISOString()} | ${ip} | ${route} | ${status}\n`);
  /* istanbul ignore next */
  cov_1ptj6uqfsv().s[10]++;
  fs_1.default.appendFileSync(LOG_PATH, line);
  /* istanbul ignore next */
  cov_1ptj6uqfsv().s[11]++;
  if (status === 403) {
    /* istanbul ignore next */
    cov_1ptj6uqfsv().b[3][0]++;
    cov_1ptj6uqfsv().s[12]++;
    attempts[ip] = (
    /* istanbul ignore next */
    (cov_1ptj6uqfsv().b[4][0]++, attempts[ip]) ||
    /* istanbul ignore next */
    (cov_1ptj6uqfsv().b[4][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_1ptj6uqfsv().s[13]++;
    if (attempts[ip] > 5) {
      /* istanbul ignore next */
      cov_1ptj6uqfsv().b[5][0]++;
      cov_1ptj6uqfsv().s[14]++;
      // Alerte brute force
      fs_1.default.appendFileSync(LOG_PATH, `ALERT: Brute force suspectée depuis ${ip}\n`);
    } else
    /* istanbul ignore next */
    {
      cov_1ptj6uqfsv().b[5][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_1ptj6uqfsv().b[3][1]++;
  }
}
function resetAttempts(ip) {
  /* istanbul ignore next */
  cov_1ptj6uqfsv().f[2]++;
  cov_1ptj6uqfsv().s[15]++;
  attempts[ip] = 0;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXB0ajZ1cWZzdiIsImFjdHVhbENvdmVyYWdlIiwiZXhwb3J0cyIsImxvZ0FjY2VzcyIsInMiLCJyZXNldEF0dGVtcHRzIiwiZnNfMSIsIl9faW1wb3J0RGVmYXVsdCIsInJlcXVpcmUiLCJwYXRoXzEiLCJMT0dfUEFUSCIsImRlZmF1bHQiLCJqb2luIiwiX19kaXJuYW1lIiwiYXR0ZW1wdHMiLCJpcCIsInJvdXRlIiwic3RhdHVzIiwiZiIsImxpbmUiLCJEYXRlIiwidG9JU09TdHJpbmciLCJhcHBlbmRGaWxlU3luYyIsImIiXSwic291cmNlcyI6WyIvbW50L2MvVXNlcnMvbV9vbGkvUHJvamV0cy9TWU1CSU9OVC9zcmMvY29yZS9zZWN1cml0eU1vbml0b3IudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGZzIGZyb20gJ2ZzJztcclxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XHJcblxyXG5jb25zdCBMT0dfUEFUSCA9IHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi8uLi9zZWN1cml0eS5sb2cnKTtcclxuY29uc3QgYXR0ZW1wdHM6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4gPSB7fTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBsb2dBY2Nlc3MoaXA6IHN0cmluZywgcm91dGU6IHN0cmluZywgc3RhdHVzOiBudW1iZXIpIHtcclxuICBjb25zdCBsaW5lID0gYCR7bmV3IERhdGUoKS50b0lTT1N0cmluZygpfSB8ICR7aXB9IHwgJHtyb3V0ZX0gfCAke3N0YXR1c31cXG5gO1xyXG4gIGZzLmFwcGVuZEZpbGVTeW5jKExPR19QQVRILCBsaW5lKTtcclxuICBpZiAoc3RhdHVzID09PSA0MDMpIHtcclxuICAgIGF0dGVtcHRzW2lwXSA9IChhdHRlbXB0c1tpcF0gfHwgMCkgKyAxO1xyXG4gICAgaWYgKGF0dGVtcHRzW2lwXSA+IDUpIHtcclxuICAgICAgLy8gQWxlcnRlIGJydXRlIGZvcmNlXHJcbiAgICAgIGZzLmFwcGVuZEZpbGVTeW5jKExPR19QQVRILCBgQUxFUlQ6IEJydXRlIGZvcmNlIHN1c3BlY3TDqWUgZGVwdWlzICR7aXB9XFxuYCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcmVzZXRBdHRlbXB0cyhpcDogc3RyaW5nKSB7XHJcbiAgYXR0ZW1wdHNbaXBdID0gMDtcclxufSAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBVUk7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSkpFLE9BQUEsQ0FBQUMsU0FBQSxHQUFBQSxTQUFBO0FBVUM7QUFBQUgsY0FBQSxHQUFBSSxDQUFBO0FBRURGLE9BQUEsQ0FBQUcsYUFBQSxHQUFBQSxhQUFBO0FBbEJBLE1BQUFDLElBQUE7QUFBQTtBQUFBLENBQUFOLGNBQUEsR0FBQUksQ0FBQSxPQUFBRyxlQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBQyxNQUFBO0FBQUE7QUFBQSxDQUFBVCxjQUFBLEdBQUFJLENBQUEsT0FBQUcsZUFBQSxDQUFBQyxPQUFBO0FBRUEsTUFBTUUsUUFBUTtBQUFBO0FBQUEsQ0FBQVYsY0FBQSxHQUFBSSxDQUFBLE9BQUdLLE1BQUEsQ0FBQUUsT0FBSSxDQUFDQyxJQUFJLENBQUNDLFNBQVMsRUFBRSxvQkFBb0IsQ0FBQztBQUMzRCxNQUFNQyxRQUFRO0FBQUE7QUFBQSxDQUFBZCxjQUFBLEdBQUFJLENBQUEsT0FBMkIsRUFBRTtBQUUzQyxTQUFnQkQsU0FBU0EsQ0FBQ1ksRUFBVSxFQUFFQyxLQUFhLEVBQUVDLE1BQWM7RUFBQTtFQUFBakIsY0FBQSxHQUFBa0IsQ0FBQTtFQUNqRSxNQUFNQyxJQUFJO0VBQUE7RUFBQSxDQUFBbkIsY0FBQSxHQUFBSSxDQUFBLE9BQUcsR0FBRyxJQUFJZ0IsSUFBSSxFQUFFLENBQUNDLFdBQVcsRUFBRSxNQUFNTixFQUFFLE1BQU1DLEtBQUssTUFBTUMsTUFBTSxJQUFJO0VBQUM7RUFBQWpCLGNBQUEsR0FBQUksQ0FBQTtFQUM1RUUsSUFBQSxDQUFBSyxPQUFFLENBQUNXLGNBQWMsQ0FBQ1osUUFBUSxFQUFFUyxJQUFJLENBQUM7RUFBQztFQUFBbkIsY0FBQSxHQUFBSSxDQUFBO0VBQ2xDLElBQUlhLE1BQU0sS0FBSyxHQUFHLEVBQUU7SUFBQTtJQUFBakIsY0FBQSxHQUFBdUIsQ0FBQTtJQUFBdkIsY0FBQSxHQUFBSSxDQUFBO0lBQ2xCVSxRQUFRLENBQUNDLEVBQUUsQ0FBQyxHQUFHO0lBQUM7SUFBQSxDQUFBZixjQUFBLEdBQUF1QixDQUFBLFVBQUFULFFBQVEsQ0FBQ0MsRUFBRSxDQUFDO0lBQUE7SUFBQSxDQUFBZixjQUFBLEdBQUF1QixDQUFBLFVBQUksQ0FBQyxLQUFJLENBQUM7SUFBQztJQUFBdkIsY0FBQSxHQUFBSSxDQUFBO0lBQ3ZDLElBQUlVLFFBQVEsQ0FBQ0MsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFO01BQUE7TUFBQWYsY0FBQSxHQUFBdUIsQ0FBQTtNQUFBdkIsY0FBQSxHQUFBSSxDQUFBO01BQ3BCO01BQ0FFLElBQUEsQ0FBQUssT0FBRSxDQUFDVyxjQUFjLENBQUNaLFFBQVEsRUFBRSx1Q0FBdUNLLEVBQUUsSUFBSSxDQUFDO0lBQzVFLENBQUM7SUFBQTtJQUFBO01BQUFmLGNBQUEsR0FBQXVCLENBQUE7SUFBQTtFQUNILENBQUM7RUFBQTtFQUFBO0lBQUF2QixjQUFBLEdBQUF1QixDQUFBO0VBQUE7QUFDSDtBQUVBLFNBQWdCbEIsYUFBYUEsQ0FBQ1UsRUFBVTtFQUFBO0VBQUFmLGNBQUEsR0FBQWtCLENBQUE7RUFBQWxCLGNBQUEsR0FBQUksQ0FBQTtFQUN0Q1UsUUFBUSxDQUFDQyxFQUFFLENBQUMsR0FBRyxDQUFDO0FBQ2xCIiwiaWdub3JlTGlzdCI6W119