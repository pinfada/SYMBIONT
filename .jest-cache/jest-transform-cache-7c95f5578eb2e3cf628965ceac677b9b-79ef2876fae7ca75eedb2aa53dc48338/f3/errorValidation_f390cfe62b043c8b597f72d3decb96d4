23e16d584de692dae5b43a4ef16bdd3c
"use strict";

/* istanbul ignore next */
function cov_27jbirh236() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/errorValidation.ts";
  var hash = "f52d18b7f32d26bfdaf0be22921e5b4d4ab4b9d7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/errorValidation.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 44
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 56
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 56
        }
      },
      "4": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 54
        }
      },
      "5": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 38
        }
      },
      "6": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 60
        }
      },
      "7": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 5
        }
      },
      "8": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 82
        }
      },
      "9": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 77
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 108
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 21
        }
      },
      "14": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "15": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 85
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 21
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 16
        }
      },
      "18": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 110
        }
      },
      "20": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 21
        }
      },
      "21": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 16
        }
      },
      "22": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "23": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "24": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 87
        }
      },
      "25": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "26": {
        start: {
          line: 57,
          column: 29
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "27": {
        start: {
          line: 58,
          column: 28
        },
        end: {
          line: 58,
          column: 47
        }
      },
      "28": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "29": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 65,
          column: 19
        }
      },
      "30": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "31": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 73,
          column: 19
        }
      },
      "32": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "33": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 81,
          column: 19
        }
      },
      "34": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 55
        }
      },
      "35": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "36": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 62
        }
      },
      "37": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 72
        }
      },
      "38": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "39": {
        start: {
          line: 98,
          column: 24
        },
        end: {
          line: 98,
          column: 48
        }
      },
      "40": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "41": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 41
        }
      },
      "42": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 83
        }
      },
      "43": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 63
        }
      },
      "44": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "45": {
        start: {
          line: 111,
          column: 27
        },
        end: {
          line: 111,
          column: 29
        }
      },
      "46": {
        start: {
          line: 112,
          column: 24
        },
        end: {
          line: 114,
          column: 15
        }
      },
      "47": {
        start: {
          line: 113,
          column: 42
        },
        end: {
          line: 113,
          column: 47
        }
      },
      "48": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 100
        }
      },
      "49": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 63
        }
      },
      "50": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 128,
          column: 5
        }
      },
      "51": {
        start: {
          line: 122,
          column: 29
        },
        end: {
          line: 122,
          column: 38
        }
      },
      "52": {
        start: {
          line: 123,
          column: 23
        },
        end: {
          line: 123,
          column: 48
        }
      },
      "53": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 99
        }
      },
      "54": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 63
        }
      },
      "55": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 51
        }
      }
    },
    fnMap: {
      "0": {
        name: "validateVariable",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 25
          }
        },
        loc: {
          start: {
            line: 13,
            column: 50
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "validateLengthProperty",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 31
          }
        },
        loc: {
          start: {
            line: 24,
            column: 49
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 24
      },
      "2": {
        name: "validateSplitOperation",
        decl: {
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 31
          }
        },
        loc: {
          start: {
            line: 38,
            column: 49
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 38
      },
      "3": {
        name: "enableErrorValidation",
        decl: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 30
          }
        },
        loc: {
          start: {
            line: 49,
            column: 54
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 49
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 57,
            column: 29
          },
          end: {
            line: 57,
            column: 30
          }
        },
        loc: {
          start: {
            line: 57,
            column: 40
          },
          end: {
            line: 83,
            column: 9
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 86,
            column: 15
          },
          end: {
            line: 86,
            column: 16
          }
        },
        loc: {
          start: {
            line: 86,
            column: 21
          },
          end: {
            line: 88,
            column: 9
          }
        },
        line: 86
      },
      "6": {
        name: "runErrorTests",
        decl: {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 94,
            column: 22
          }
        },
        loc: {
          start: {
            line: 94,
            column: 25
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 94
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 113,
            column: 32
          },
          end: {
            line: 113,
            column: 33
          }
        },
        loc: {
          start: {
            line: 113,
            column: 42
          },
          end: {
            line: 113,
            column: 47
          }
        },
        line: 113
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 31
          },
          end: {
            line: 49,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 49,
            column: 47
          },
          end: {
            line: 49,
            column: 52
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 41
          }
        }, {
          start: {
            line: 58,
            column: 45
          },
          end: {
            line: 58,
            column: 47
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "12": {
        loc: {
          start: {
            line: 75,
            column: 16
          },
          end: {
            line: 75,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 16
          },
          end: {
            line: 75,
            column: 49
          }
        }, {
          start: {
            line: 75,
            column: 53
          },
          end: {
            line: 75,
            column: 94
          }
        }],
        line: 75
      },
      "13": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        }, {
          start: {
            line: 102,
            column: 13
          },
          end: {
            line: 104,
            column: 9
          }
        }],
        line: 99
      },
      "14": {
        loc: {
          start: {
            line: 112,
            column: 24
          },
          end: {
            line: 114,
            column: 15
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 14
          },
          end: {
            line: 113,
            column: 71
          }
        }, {
          start: {
            line: 114,
            column: 14
          },
          end: {
            line: 114,
            column: 15
          }
        }],
        line: 112
      },
      "15": {
        loc: {
          start: {
            line: 123,
            column: 23
          },
          end: {
            line: 123,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 23
          },
          end: {
            line: 123,
            column: 43
          }
        }, {
          start: {
            line: 123,
            column: 47
          },
          end: {
            line: 123,
            column: 48
          }
        }],
        line: 123
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/errorValidation.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/errorValidation.ts"],
      sourcesContent: ["import { logger } from '@shared/utils/secureLogger';\n// Utilitaire de validation pour d\xE9tecter et pr\xE9venir les erreurs courantes\r\n\r\n/**\r\n * V\xE9rifie si une variable peut causer l'erreur \"Cannot read properties of undefined\"\r\n */\r\nexport function validateVariable(variable: any, variableName: string): void {\r\n  if (variable === undefined) {\r\n    logger.warn(`\u26A0\uFE0F Variable \"${variableName}\" est undefined`);\r\n  }\r\n  if (variable === null) {\r\n    logger.warn(`\u26A0\uFE0F Variable \"${variableName}\" est null`);\r\n  }\r\n}\r\n\r\n/**\r\n * V\xE9rifie si un objet a des propri\xE9t\xE9s length avant de les utiliser\r\n */\r\nexport function validateLengthProperty(obj: any, objectName: string): boolean {\r\n  if (!obj) {\r\n    logger.warn(`\u26A0\uFE0F \"${objectName}\" est null/undefined, impossible d'acc\xE9der \xE0 .length`);\r\n    return false;\r\n  }\r\n  \r\n  if (!('length' in obj)) {\r\n    logger.warn(`\u26A0\uFE0F \"${objectName}\" n'a pas de propri\xE9t\xE9 length`);\r\n    return false;\r\n  }\r\n  \r\n  return true;\r\n}\r\n\r\n/**\r\n * V\xE9rifie si une string peut \xEAtre split\xE9e\r\n */\r\nexport function validateSplitOperation(str: any, stringName: string): boolean {\r\n  if (typeof str !== 'string') {\r\n    logger.warn(`\u26A0\uFE0F \"${stringName}\" n'est pas une string, impossible d'utiliser .split()`);\r\n    return false;\r\n  }\r\n  \r\n  return true;\r\n}\r\n\r\n/**\r\n * Mode debug pour traquer les erreurs potentielles\r\n * Utiliser uniquement en d\xE9veloppement\r\n */\r\nexport function enableErrorValidation(isDevelopment: boolean = false): (() => void) | void {\r\n  if (!isDevelopment) {\r\n    // En production, ne pas activer le mode debug verbose\r\n    return;\r\n  }\r\n  \r\n  logger.info('\u2705 Validation d\\'erreurs activ\xE9e (mode d\xE9veloppement)');\r\n  \r\n  // Surveiller les erreurs via window.addEventListener\r\n  if (typeof window !== 'undefined') {\r\n    const errorHandler = (event: ErrorEvent) => {\r\n      const message = event.message || '';\r\n      \r\n      if (message.includes('split is not a function')) {\r\n        logger.error('\uD83D\uDEA8 Erreur className.split d\xE9tect\xE9e:', {\r\n          message: event.message,\r\n          filename: event.filename,\r\n          lineno: event.lineno,\r\n          stack: event.error?.stack\r\n        });\r\n      }\r\n      \r\n      if (message.includes('Cannot read properties of undefined')) {\r\n        logger.error('\uD83D\uDEA8 Erreur lecture propri\xE9t\xE9 undefined d\xE9tect\xE9e:', {\r\n          message: event.message,\r\n          filename: event.filename,\r\n          lineno: event.lineno,\r\n          stack: event.error?.stack\r\n        });\r\n      }\r\n      \r\n      if (message.includes('Cannot access') && message.includes('before initialization')) {\r\n        logger.error('\uD83D\uDEA8 Erreur variable non initialis\xE9e d\xE9tect\xE9e:', {\r\n          message: event.message,\r\n          filename: event.filename,\r\n          lineno: event.lineno,\r\n          stack: event.error?.stack\r\n        });\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('error', errorHandler);\r\n    \r\n    // Nettoyer l'\xE9couteur si n\xE9cessaire\r\n    return () => {\r\n      window.removeEventListener('error', errorHandler);\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Teste les corrections apport\xE9es\r\n */\r\nexport function runErrorTests(): void {\r\n  logger.info('\uD83E\uDDEA Test des corrections d\\'erreurs...');\r\n  \r\n  // Test 1: className.split sur undefined\r\n  try {\r\n    const element = { className: undefined } as any;\r\n    if (typeof element.className === 'string') {\r\n      element.className.split(' ');\r\n    } else {\r\n      logger.info('\u2705 Test 1 r\xE9ussi: className.split prot\xE9g\xE9');\r\n    }\r\n  } catch (error) {\r\n    logger.error('\u274C Test 1 \xE9chou\xE9:', error);\r\n  }\r\n  \r\n  // Test 2: Division par z\xE9ro\r\n  try {\r\n    const emptyArray: number[] = [];\r\n    const average = emptyArray.length > 0 \r\n      ? emptyArray.reduce((a, b) => a + b, 0) / emptyArray.length \r\n      : 0;\r\n    logger.info('\u2705 Test 2 r\xE9ussi: Division par z\xE9ro \xE9vit\xE9e, moyenne =', average);\r\n  } catch (error) {\r\n    logger.error('\u274C Test 2 \xE9chou\xE9:', error);\r\n  }\r\n  \r\n  // Test 3: Propri\xE9t\xE9 length sur undefined\r\n  try {\r\n    const undefinedVar = undefined as any;\r\n    const length = undefinedVar?.length || 0;\r\n    logger.info('\u2705 Test 3 r\xE9ussi: Propri\xE9t\xE9 length prot\xE9g\xE9e, length =', length);\r\n  } catch (error) {\r\n    logger.error('\u274C Test 3 \xE9chou\xE9:', error);\r\n  }\r\n  \r\n  logger.info('\u2705 Tests termin\xE9s');\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f52d18b7f32d26bfdaf0be22921e5b4d4ab4b9d7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27jbirh236 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27jbirh236();
cov_27jbirh236().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_27jbirh236().s[1]++;
exports.validateVariable = validateVariable;
/* istanbul ignore next */
cov_27jbirh236().s[2]++;
exports.validateLengthProperty = validateLengthProperty;
/* istanbul ignore next */
cov_27jbirh236().s[3]++;
exports.validateSplitOperation = validateSplitOperation;
/* istanbul ignore next */
cov_27jbirh236().s[4]++;
exports.enableErrorValidation = enableErrorValidation;
/* istanbul ignore next */
cov_27jbirh236().s[5]++;
exports.runErrorTests = runErrorTests;
const secureLogger_1 =
/* istanbul ignore next */
(cov_27jbirh236().s[6]++, require("@shared/utils/secureLogger"));
// Utilitaire de validation pour détecter et prévenir les erreurs courantes
/**
 * Vérifie si une variable peut causer l'erreur "Cannot read properties of undefined"
 */
function validateVariable(variable, variableName) {
  /* istanbul ignore next */
  cov_27jbirh236().f[0]++;
  cov_27jbirh236().s[7]++;
  if (variable === undefined) {
    /* istanbul ignore next */
    cov_27jbirh236().b[0][0]++;
    cov_27jbirh236().s[8]++;
    secureLogger_1.logger.warn(`⚠️ Variable "${variableName}" est undefined`);
  } else
  /* istanbul ignore next */
  {
    cov_27jbirh236().b[0][1]++;
  }
  cov_27jbirh236().s[9]++;
  if (variable === null) {
    /* istanbul ignore next */
    cov_27jbirh236().b[1][0]++;
    cov_27jbirh236().s[10]++;
    secureLogger_1.logger.warn(`⚠️ Variable "${variableName}" est null`);
  } else
  /* istanbul ignore next */
  {
    cov_27jbirh236().b[1][1]++;
  }
}
/**
 * Vérifie si un objet a des propriétés length avant de les utiliser
 */
function validateLengthProperty(obj, objectName) {
  /* istanbul ignore next */
  cov_27jbirh236().f[1]++;
  cov_27jbirh236().s[11]++;
  if (!obj) {
    /* istanbul ignore next */
    cov_27jbirh236().b[2][0]++;
    cov_27jbirh236().s[12]++;
    secureLogger_1.logger.warn(`⚠️ "${objectName}" est null/undefined, impossible d'accéder à .length`);
    /* istanbul ignore next */
    cov_27jbirh236().s[13]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_27jbirh236().b[2][1]++;
  }
  cov_27jbirh236().s[14]++;
  if (!('length' in obj)) {
    /* istanbul ignore next */
    cov_27jbirh236().b[3][0]++;
    cov_27jbirh236().s[15]++;
    secureLogger_1.logger.warn(`⚠️ "${objectName}" n'a pas de propriété length`);
    /* istanbul ignore next */
    cov_27jbirh236().s[16]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_27jbirh236().b[3][1]++;
  }
  cov_27jbirh236().s[17]++;
  return true;
}
/**
 * Vérifie si une string peut être splitée
 */
function validateSplitOperation(str, stringName) {
  /* istanbul ignore next */
  cov_27jbirh236().f[2]++;
  cov_27jbirh236().s[18]++;
  if (typeof str !== 'string') {
    /* istanbul ignore next */
    cov_27jbirh236().b[4][0]++;
    cov_27jbirh236().s[19]++;
    secureLogger_1.logger.warn(`⚠️ "${stringName}" n'est pas une string, impossible d'utiliser .split()`);
    /* istanbul ignore next */
    cov_27jbirh236().s[20]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_27jbirh236().b[4][1]++;
  }
  cov_27jbirh236().s[21]++;
  return true;
}
/**
 * Mode debug pour traquer les erreurs potentielles
 * Utiliser uniquement en développement
 */
function enableErrorValidation(isDevelopment =
/* istanbul ignore next */
(cov_27jbirh236().b[5][0]++, false)) {
  /* istanbul ignore next */
  cov_27jbirh236().f[3]++;
  cov_27jbirh236().s[22]++;
  if (!isDevelopment) {
    /* istanbul ignore next */
    cov_27jbirh236().b[6][0]++;
    cov_27jbirh236().s[23]++;
    // En production, ne pas activer le mode debug verbose
    return;
  } else
  /* istanbul ignore next */
  {
    cov_27jbirh236().b[6][1]++;
  }
  cov_27jbirh236().s[24]++;
  secureLogger_1.logger.info('✅ Validation d\'erreurs activée (mode développement)');
  // Surveiller les erreurs via window.addEventListener
  /* istanbul ignore next */
  cov_27jbirh236().s[25]++;
  if (typeof window !== 'undefined') {
    /* istanbul ignore next */
    cov_27jbirh236().b[7][0]++;
    cov_27jbirh236().s[26]++;
    const errorHandler = event => {
      /* istanbul ignore next */
      cov_27jbirh236().f[4]++;
      const message =
      /* istanbul ignore next */
      (cov_27jbirh236().s[27]++,
      /* istanbul ignore next */
      (cov_27jbirh236().b[8][0]++, event.message) ||
      /* istanbul ignore next */
      (cov_27jbirh236().b[8][1]++, ''));
      /* istanbul ignore next */
      cov_27jbirh236().s[28]++;
      if (message.includes('split is not a function')) {
        /* istanbul ignore next */
        cov_27jbirh236().b[9][0]++;
        cov_27jbirh236().s[29]++;
        secureLogger_1.logger.error('🚨 Erreur className.split détectée:', {
          message: event.message,
          filename: event.filename,
          lineno: event.lineno,
          stack: event.error?.stack
        });
      } else
      /* istanbul ignore next */
      {
        cov_27jbirh236().b[9][1]++;
      }
      cov_27jbirh236().s[30]++;
      if (message.includes('Cannot read properties of undefined')) {
        /* istanbul ignore next */
        cov_27jbirh236().b[10][0]++;
        cov_27jbirh236().s[31]++;
        secureLogger_1.logger.error('🚨 Erreur lecture propriété undefined détectée:', {
          message: event.message,
          filename: event.filename,
          lineno: event.lineno,
          stack: event.error?.stack
        });
      } else
      /* istanbul ignore next */
      {
        cov_27jbirh236().b[10][1]++;
      }
      cov_27jbirh236().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_27jbirh236().b[12][0]++, message.includes('Cannot access')) &&
      /* istanbul ignore next */
      (cov_27jbirh236().b[12][1]++, message.includes('before initialization'))) {
        /* istanbul ignore next */
        cov_27jbirh236().b[11][0]++;
        cov_27jbirh236().s[33]++;
        secureLogger_1.logger.error('🚨 Erreur variable non initialisée détectée:', {
          message: event.message,
          filename: event.filename,
          lineno: event.lineno,
          stack: event.error?.stack
        });
      } else
      /* istanbul ignore next */
      {
        cov_27jbirh236().b[11][1]++;
      }
    };
    /* istanbul ignore next */
    cov_27jbirh236().s[34]++;
    window.addEventListener('error', errorHandler);
    // Nettoyer l'écouteur si nécessaire
    /* istanbul ignore next */
    cov_27jbirh236().s[35]++;
    return () => {
      /* istanbul ignore next */
      cov_27jbirh236().f[5]++;
      cov_27jbirh236().s[36]++;
      window.removeEventListener('error', errorHandler);
    };
  } else
  /* istanbul ignore next */
  {
    cov_27jbirh236().b[7][1]++;
  }
}
/**
 * Teste les corrections apportées
 */
function runErrorTests() {
  /* istanbul ignore next */
  cov_27jbirh236().f[6]++;
  cov_27jbirh236().s[37]++;
  secureLogger_1.logger.info('🧪 Test des corrections d\'erreurs...');
  // Test 1: className.split sur undefined
  /* istanbul ignore next */
  cov_27jbirh236().s[38]++;
  try {
    const element =
    /* istanbul ignore next */
    (cov_27jbirh236().s[39]++, {
      className: undefined
    });
    /* istanbul ignore next */
    cov_27jbirh236().s[40]++;
    if (typeof element.className === 'string') {
      /* istanbul ignore next */
      cov_27jbirh236().b[13][0]++;
      cov_27jbirh236().s[41]++;
      element.className.split(' ');
    } else {
      /* istanbul ignore next */
      cov_27jbirh236().b[13][1]++;
      cov_27jbirh236().s[42]++;
      secureLogger_1.logger.info('✅ Test 1 réussi: className.split protégé');
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_27jbirh236().s[43]++;
    secureLogger_1.logger.error('❌ Test 1 échoué:', error);
  }
  // Test 2: Division par zéro
  /* istanbul ignore next */
  cov_27jbirh236().s[44]++;
  try {
    const emptyArray =
    /* istanbul ignore next */
    (cov_27jbirh236().s[45]++, []);
    const average =
    /* istanbul ignore next */
    (cov_27jbirh236().s[46]++, emptyArray.length > 0 ?
    /* istanbul ignore next */
    (cov_27jbirh236().b[14][0]++, emptyArray.reduce((a, b) => {
      /* istanbul ignore next */
      cov_27jbirh236().f[7]++;
      cov_27jbirh236().s[47]++;
      return a + b;
    }, 0) / emptyArray.length) :
    /* istanbul ignore next */
    (cov_27jbirh236().b[14][1]++, 0));
    /* istanbul ignore next */
    cov_27jbirh236().s[48]++;
    secureLogger_1.logger.info('✅ Test 2 réussi: Division par zéro évitée, moyenne =', average);
  } catch (error) {
    /* istanbul ignore next */
    cov_27jbirh236().s[49]++;
    secureLogger_1.logger.error('❌ Test 2 échoué:', error);
  }
  // Test 3: Propriété length sur undefined
  /* istanbul ignore next */
  cov_27jbirh236().s[50]++;
  try {
    const undefinedVar =
    /* istanbul ignore next */
    (cov_27jbirh236().s[51]++, undefined);
    const length =
    /* istanbul ignore next */
    (cov_27jbirh236().s[52]++,
    /* istanbul ignore next */
    (cov_27jbirh236().b[15][0]++, undefinedVar?.length) ||
    /* istanbul ignore next */
    (cov_27jbirh236().b[15][1]++, 0));
    /* istanbul ignore next */
    cov_27jbirh236().s[53]++;
    secureLogger_1.logger.info('✅ Test 3 réussi: Propriété length protégée, length =', length);
  } catch (error) {
    /* istanbul ignore next */
    cov_27jbirh236().s[54]++;
    secureLogger_1.logger.error('❌ Test 3 échoué:', error);
  }
  /* istanbul ignore next */
  cov_27jbirh236().s[55]++;
  secureLogger_1.logger.info('✅ Tests terminés');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjdqYmlyaDIzNiIsImFjdHVhbENvdmVyYWdlIiwicyIsImV4cG9ydHMiLCJ2YWxpZGF0ZVZhcmlhYmxlIiwidmFsaWRhdGVMZW5ndGhQcm9wZXJ0eSIsInZhbGlkYXRlU3BsaXRPcGVyYXRpb24iLCJlbmFibGVFcnJvclZhbGlkYXRpb24iLCJydW5FcnJvclRlc3RzIiwic2VjdXJlTG9nZ2VyXzEiLCJyZXF1aXJlIiwidmFyaWFibGUiLCJ2YXJpYWJsZU5hbWUiLCJmIiwidW5kZWZpbmVkIiwiYiIsImxvZ2dlciIsIndhcm4iLCJvYmoiLCJvYmplY3ROYW1lIiwic3RyIiwic3RyaW5nTmFtZSIsImlzRGV2ZWxvcG1lbnQiLCJpbmZvIiwid2luZG93IiwiZXJyb3JIYW5kbGVyIiwiZXZlbnQiLCJtZXNzYWdlIiwiaW5jbHVkZXMiLCJlcnJvciIsImZpbGVuYW1lIiwibGluZW5vIiwic3RhY2siLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImVsZW1lbnQiLCJjbGFzc05hbWUiLCJzcGxpdCIsImVtcHR5QXJyYXkiLCJhdmVyYWdlIiwibGVuZ3RoIiwicmVkdWNlIiwiYSIsInVuZGVmaW5lZFZhciJdLCJzb3VyY2VzIjpbIi9tbnQvYy9Vc2Vycy9tX29saS9Qcm9qZXRzL1NZTUJJT05UL3NyYy9zaGFyZWQvdXRpbHMvZXJyb3JWYWxpZGF0aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0BzaGFyZWQvdXRpbHMvc2VjdXJlTG9nZ2VyJztcbi8vIFV0aWxpdGFpcmUgZGUgdmFsaWRhdGlvbiBwb3VyIGTDqXRlY3RlciBldCBwcsOpdmVuaXIgbGVzIGVycmV1cnMgY291cmFudGVzXHJcblxyXG4vKipcclxuICogVsOpcmlmaWUgc2kgdW5lIHZhcmlhYmxlIHBldXQgY2F1c2VyIGwnZXJyZXVyIFwiQ2Fubm90IHJlYWQgcHJvcGVydGllcyBvZiB1bmRlZmluZWRcIlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlVmFyaWFibGUodmFyaWFibGU6IGFueSwgdmFyaWFibGVOYW1lOiBzdHJpbmcpOiB2b2lkIHtcclxuICBpZiAodmFyaWFibGUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgbG9nZ2VyLndhcm4oYOKaoO+4jyBWYXJpYWJsZSBcIiR7dmFyaWFibGVOYW1lfVwiIGVzdCB1bmRlZmluZWRgKTtcclxuICB9XHJcbiAgaWYgKHZhcmlhYmxlID09PSBudWxsKSB7XHJcbiAgICBsb2dnZXIud2Fybihg4pqg77iPIFZhcmlhYmxlIFwiJHt2YXJpYWJsZU5hbWV9XCIgZXN0IG51bGxgKTtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBWw6lyaWZpZSBzaSB1biBvYmpldCBhIGRlcyBwcm9wcmnDqXTDqXMgbGVuZ3RoIGF2YW50IGRlIGxlcyB1dGlsaXNlclxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlTGVuZ3RoUHJvcGVydHkob2JqOiBhbnksIG9iamVjdE5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gIGlmICghb2JqKSB7XHJcbiAgICBsb2dnZXIud2Fybihg4pqg77iPIFwiJHtvYmplY3ROYW1lfVwiIGVzdCBudWxsL3VuZGVmaW5lZCwgaW1wb3NzaWJsZSBkJ2FjY8OpZGVyIMOgIC5sZW5ndGhgKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcbiAgXHJcbiAgaWYgKCEoJ2xlbmd0aCcgaW4gb2JqKSkge1xyXG4gICAgbG9nZ2VyLndhcm4oYOKaoO+4jyBcIiR7b2JqZWN0TmFtZX1cIiBuJ2EgcGFzIGRlIHByb3ByacOpdMOpIGxlbmd0aGApO1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuICBcclxuICByZXR1cm4gdHJ1ZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFbDqXJpZmllIHNpIHVuZSBzdHJpbmcgcGV1dCDDqnRyZSBzcGxpdMOpZVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlU3BsaXRPcGVyYXRpb24oc3RyOiBhbnksIHN0cmluZ05hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xyXG4gICAgbG9nZ2VyLndhcm4oYOKaoO+4jyBcIiR7c3RyaW5nTmFtZX1cIiBuJ2VzdCBwYXMgdW5lIHN0cmluZywgaW1wb3NzaWJsZSBkJ3V0aWxpc2VyIC5zcGxpdCgpYCk7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG4gIFxyXG4gIHJldHVybiB0cnVlO1xyXG59XHJcblxyXG4vKipcclxuICogTW9kZSBkZWJ1ZyBwb3VyIHRyYXF1ZXIgbGVzIGVycmV1cnMgcG90ZW50aWVsbGVzXHJcbiAqIFV0aWxpc2VyIHVuaXF1ZW1lbnQgZW4gZMOpdmVsb3BwZW1lbnRcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBlbmFibGVFcnJvclZhbGlkYXRpb24oaXNEZXZlbG9wbWVudDogYm9vbGVhbiA9IGZhbHNlKTogKCgpID0+IHZvaWQpIHwgdm9pZCB7XHJcbiAgaWYgKCFpc0RldmVsb3BtZW50KSB7XHJcbiAgICAvLyBFbiBwcm9kdWN0aW9uLCBuZSBwYXMgYWN0aXZlciBsZSBtb2RlIGRlYnVnIHZlcmJvc2VcclxuICAgIHJldHVybjtcclxuICB9XHJcbiAgXHJcbiAgbG9nZ2VyLmluZm8oJ+KchSBWYWxpZGF0aW9uIGRcXCdlcnJldXJzIGFjdGl2w6llIChtb2RlIGTDqXZlbG9wcGVtZW50KScpO1xyXG4gIFxyXG4gIC8vIFN1cnZlaWxsZXIgbGVzIGVycmV1cnMgdmlhIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyXHJcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBjb25zdCBlcnJvckhhbmRsZXIgPSAoZXZlbnQ6IEVycm9yRXZlbnQpID0+IHtcclxuICAgICAgY29uc3QgbWVzc2FnZSA9IGV2ZW50Lm1lc3NhZ2UgfHwgJyc7XHJcbiAgICAgIFxyXG4gICAgICBpZiAobWVzc2FnZS5pbmNsdWRlcygnc3BsaXQgaXMgbm90IGEgZnVuY3Rpb24nKSkge1xyXG4gICAgICAgIGxvZ2dlci5lcnJvcign8J+aqCBFcnJldXIgY2xhc3NOYW1lLnNwbGl0IGTDqXRlY3TDqWU6Jywge1xyXG4gICAgICAgICAgbWVzc2FnZTogZXZlbnQubWVzc2FnZSxcclxuICAgICAgICAgIGZpbGVuYW1lOiBldmVudC5maWxlbmFtZSxcclxuICAgICAgICAgIGxpbmVubzogZXZlbnQubGluZW5vLFxyXG4gICAgICAgICAgc3RhY2s6IGV2ZW50LmVycm9yPy5zdGFja1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICBpZiAobWVzc2FnZS5pbmNsdWRlcygnQ2Fubm90IHJlYWQgcHJvcGVydGllcyBvZiB1bmRlZmluZWQnKSkge1xyXG4gICAgICAgIGxvZ2dlci5lcnJvcign8J+aqCBFcnJldXIgbGVjdHVyZSBwcm9wcmnDqXTDqSB1bmRlZmluZWQgZMOpdGVjdMOpZTonLCB7XHJcbiAgICAgICAgICBtZXNzYWdlOiBldmVudC5tZXNzYWdlLFxyXG4gICAgICAgICAgZmlsZW5hbWU6IGV2ZW50LmZpbGVuYW1lLFxyXG4gICAgICAgICAgbGluZW5vOiBldmVudC5saW5lbm8sXHJcbiAgICAgICAgICBzdGFjazogZXZlbnQuZXJyb3I/LnN0YWNrXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIGlmIChtZXNzYWdlLmluY2x1ZGVzKCdDYW5ub3QgYWNjZXNzJykgJiYgbWVzc2FnZS5pbmNsdWRlcygnYmVmb3JlIGluaXRpYWxpemF0aW9uJykpIHtcclxuICAgICAgICBsb2dnZXIuZXJyb3IoJ/CfmqggRXJyZXVyIHZhcmlhYmxlIG5vbiBpbml0aWFsaXPDqWUgZMOpdGVjdMOpZTonLCB7XHJcbiAgICAgICAgICBtZXNzYWdlOiBldmVudC5tZXNzYWdlLFxyXG4gICAgICAgICAgZmlsZW5hbWU6IGV2ZW50LmZpbGVuYW1lLFxyXG4gICAgICAgICAgbGluZW5vOiBldmVudC5saW5lbm8sXHJcbiAgICAgICAgICBzdGFjazogZXZlbnQuZXJyb3I/LnN0YWNrXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgICBcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIGVycm9ySGFuZGxlcik7XHJcbiAgICBcclxuICAgIC8vIE5ldHRveWVyIGwnw6ljb3V0ZXVyIHNpIG7DqWNlc3NhaXJlXHJcbiAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignZXJyb3InLCBlcnJvckhhbmRsZXIpO1xyXG4gICAgfTtcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUZXN0ZSBsZXMgY29ycmVjdGlvbnMgYXBwb3J0w6llc1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHJ1bkVycm9yVGVzdHMoKTogdm9pZCB7XHJcbiAgbG9nZ2VyLmluZm8oJ/Cfp6ogVGVzdCBkZXMgY29ycmVjdGlvbnMgZFxcJ2VycmV1cnMuLi4nKTtcclxuICBcclxuICAvLyBUZXN0IDE6IGNsYXNzTmFtZS5zcGxpdCBzdXIgdW5kZWZpbmVkXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGVsZW1lbnQgPSB7IGNsYXNzTmFtZTogdW5kZWZpbmVkIH0gYXMgYW55O1xyXG4gICAgaWYgKHR5cGVvZiBlbGVtZW50LmNsYXNzTmFtZSA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgZWxlbWVudC5jbGFzc05hbWUuc3BsaXQoJyAnKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGxvZ2dlci5pbmZvKCfinIUgVGVzdCAxIHLDqXVzc2k6IGNsYXNzTmFtZS5zcGxpdCBwcm90w6lnw6knKTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgbG9nZ2VyLmVycm9yKCfinYwgVGVzdCAxIMOpY2hvdcOpOicsIGVycm9yKTtcclxuICB9XHJcbiAgXHJcbiAgLy8gVGVzdCAyOiBEaXZpc2lvbiBwYXIgesOpcm9cclxuICB0cnkge1xyXG4gICAgY29uc3QgZW1wdHlBcnJheTogbnVtYmVyW10gPSBbXTtcclxuICAgIGNvbnN0IGF2ZXJhZ2UgPSBlbXB0eUFycmF5Lmxlbmd0aCA+IDAgXHJcbiAgICAgID8gZW1wdHlBcnJheS5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAwKSAvIGVtcHR5QXJyYXkubGVuZ3RoIFxyXG4gICAgICA6IDA7XHJcbiAgICBsb2dnZXIuaW5mbygn4pyFIFRlc3QgMiByw6l1c3NpOiBEaXZpc2lvbiBwYXIgesOpcm8gw6l2aXTDqWUsIG1veWVubmUgPScsIGF2ZXJhZ2UpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBsb2dnZXIuZXJyb3IoJ+KdjCBUZXN0IDIgw6ljaG91w6k6JywgZXJyb3IpO1xyXG4gIH1cclxuICBcclxuICAvLyBUZXN0IDM6IFByb3ByacOpdMOpIGxlbmd0aCBzdXIgdW5kZWZpbmVkXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHVuZGVmaW5lZFZhciA9IHVuZGVmaW5lZCBhcyBhbnk7XHJcbiAgICBjb25zdCBsZW5ndGggPSB1bmRlZmluZWRWYXI/Lmxlbmd0aCB8fCAwO1xyXG4gICAgbG9nZ2VyLmluZm8oJ+KchSBUZXN0IDMgcsOpdXNzaTogUHJvcHJpw6l0w6kgbGVuZ3RoIHByb3TDqWfDqWUsIGxlbmd0aCA9JywgbGVuZ3RoKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgbG9nZ2VyLmVycm9yKCfinYwgVGVzdCAzIMOpY2hvdcOpOicsIGVycm9yKTtcclxuICB9XHJcbiAgXHJcbiAgbG9nZ2VyLmluZm8oJ+KchSBUZXN0cyB0ZXJtaW7DqXMnKTtcclxufSAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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