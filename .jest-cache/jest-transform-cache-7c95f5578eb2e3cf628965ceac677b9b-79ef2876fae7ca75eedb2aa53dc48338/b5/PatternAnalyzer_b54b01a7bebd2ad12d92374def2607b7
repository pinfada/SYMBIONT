7aba9bcd7c36e8a2d1643b525aa64fde
"use strict";

// Analyseur de patterns
/* istanbul ignore next */
function cov_1kbw7ea9zf() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/PatternAnalyzer.ts";
  var hash = "4e8dc01e3b3308163a5f5a19806c504edf8aa21c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/PatternAnalyzer.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 33
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 55
        }
      },
      "3": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 17,
          column: 10
        }
      },
      "4": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 24,
          column: 12
        }
      },
      "5": {
        start: {
          line: 21,
          column: 36
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "6": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 27
          }
        },
        loc: {
          start: {
            line: 21,
            column: 36
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 21
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/PatternAnalyzer.ts",
      mappings: ";AAAA,wBAAwB;;;AAExB,MAAa,eAAe;IAC1B,sDAAsD;IACtD,eAAe,CAAC,IAAW;QACzB,yBAAyB;QACzB,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC;IACjD,CAAC;IAED,eAAe,CAAC,QAAe;QAC7B,8BAA8B;QAC9B,OAAO;YACL,OAAO,EAAE,SAAS;YAClB,UAAU,EAAE,GAAG;YACf,SAAS,EAAE,QAAQ,CAAC,MAAM;SAC3B,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,MAAa;QAC1B,0BAA0B;QAC1B,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC1B,GAAG,KAAK;YACR,WAAW,EAAE,UAAU;SACxB,CAAC,CAAC,CAAC;IACN,CAAC;CACF;AAvBD,0CAuBC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/PatternAnalyzer.ts"],
      sourcesContent: ["// Analyseur de patterns\r\n\r\nexport class PatternAnalyzer {\r\n  // @ts-expect-error Param\xE8tre r\xE9serv\xE9 pour usage futur\r\n  analyzeSequence(data: any[]): any {\r\n    // Pattern analysis logic\r\n    return { pattern: 'unknown', confidence: 0.5 };\r\n  }\r\n\r\n  analyzeBehavior(sequence: any[]): any {\r\n    // Analyze behavioral patterns\r\n    return {\r\n      pattern: 'default',\r\n      confidence: 0.5,\r\n      behaviors: sequence.length\r\n    };\r\n  }\r\n\r\n  detectPatterns(events: any[]): any[] {\r\n    // Pattern detection logic\r\n    return events.map(event => ({\r\n      ...event,\r\n      patternType: 'detected'\r\n    }));\r\n  }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4e8dc01e3b3308163a5f5a19806c504edf8aa21c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kbw7ea9zf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kbw7ea9zf();
cov_1kbw7ea9zf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1kbw7ea9zf().s[1]++;
exports.PatternAnalyzer = void 0;
class PatternAnalyzer {
  // @ts-expect-error Paramètre réservé pour usage futur
  analyzeSequence(data) {
    /* istanbul ignore next */
    cov_1kbw7ea9zf().f[0]++;
    cov_1kbw7ea9zf().s[2]++;
    // Pattern analysis logic
    return {
      pattern: 'unknown',
      confidence: 0.5
    };
  }
  analyzeBehavior(sequence) {
    /* istanbul ignore next */
    cov_1kbw7ea9zf().f[1]++;
    cov_1kbw7ea9zf().s[3]++;
    // Analyze behavioral patterns
    return {
      pattern: 'default',
      confidence: 0.5,
      behaviors: sequence.length
    };
  }
  detectPatterns(events) {
    /* istanbul ignore next */
    cov_1kbw7ea9zf().f[2]++;
    cov_1kbw7ea9zf().s[4]++;
    // Pattern detection logic
    return events.map(event => {
      /* istanbul ignore next */
      cov_1kbw7ea9zf().f[3]++;
      cov_1kbw7ea9zf().s[5]++;
      return {
        ...event,
        patternType: 'detected'
      };
    });
  }
}
/* istanbul ignore next */
cov_1kbw7ea9zf().s[6]++;
exports.PatternAnalyzer = PatternAnalyzer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWtidzdlYTl6ZiIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiUGF0dGVybkFuYWx5emVyIiwiYW5hbHl6ZVNlcXVlbmNlIiwiZGF0YSIsInBhdHRlcm4iLCJjb25maWRlbmNlIiwiYW5hbHl6ZUJlaGF2aW9yIiwic2VxdWVuY2UiLCJiZWhhdmlvcnMiLCJsZW5ndGgiLCJkZXRlY3RQYXR0ZXJucyIsImV2ZW50cyIsIm1hcCIsImV2ZW50IiwicGF0dGVyblR5cGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiL21udC9jL1VzZXJzL21fb2xpL1Byb2pldHMvU1lNQklPTlQvc3JjL2JlaGF2aW9yYWwvY29yZS9QYXR0ZXJuQW5hbHl6ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQW5hbHlzZXVyIGRlIHBhdHRlcm5zXHJcblxyXG5leHBvcnQgY2xhc3MgUGF0dGVybkFuYWx5emVyIHtcclxuICAvLyBAdHMtZXhwZWN0LWVycm9yIFBhcmFtw6h0cmUgcsOpc2VydsOpIHBvdXIgdXNhZ2UgZnV0dXJcclxuICBhbmFseXplU2VxdWVuY2UoZGF0YTogYW55W10pOiBhbnkge1xyXG4gICAgLy8gUGF0dGVybiBhbmFseXNpcyBsb2dpY1xyXG4gICAgcmV0dXJuIHsgcGF0dGVybjogJ3Vua25vd24nLCBjb25maWRlbmNlOiAwLjUgfTtcclxuICB9XHJcblxyXG4gIGFuYWx5emVCZWhhdmlvcihzZXF1ZW5jZTogYW55W10pOiBhbnkge1xyXG4gICAgLy8gQW5hbHl6ZSBiZWhhdmlvcmFsIHBhdHRlcm5zXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwYXR0ZXJuOiAnZGVmYXVsdCcsXHJcbiAgICAgIGNvbmZpZGVuY2U6IDAuNSxcclxuICAgICAgYmVoYXZpb3JzOiBzZXF1ZW5jZS5sZW5ndGhcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBkZXRlY3RQYXR0ZXJucyhldmVudHM6IGFueVtdKTogYW55W10ge1xyXG4gICAgLy8gUGF0dGVybiBkZXRlY3Rpb24gbG9naWNcclxuICAgIHJldHVybiBldmVudHMubWFwKGV2ZW50ID0+ICh7XHJcbiAgICAgIC4uLmV2ZW50LFxyXG4gICAgICBwYXR0ZXJuVHlwZTogJ2RldGVjdGVkJ1xyXG4gICAgfSkpO1xyXG4gIH1cclxufSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUFBO0FBQUEsU0FBQUEsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO0lBQUFDLGNBQUE7TUFBQUMsSUFBQTtNQUFBQyxRQUFBO01BQUFDLEtBQUE7TUFBQUMsT0FBQTtNQUFBQyxjQUFBO01BQUFDLE9BQUE7SUFBQTtJQUFBQyxlQUFBO0lBQUF6QixJQUFBO0VBQUE7RUFBQSxJQUFBMEIsUUFBQSxHQUFBekIsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUF1QixRQUFBLENBQUEzQixJQUFBLEtBQUEyQixRQUFBLENBQUEzQixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBMEIsUUFBQSxDQUFBM0IsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBdUIsY0FBQSxHQUFBRCxRQUFBLENBQUEzQixJQUFBO0VBQUE7SUFjTTtJQUFBRCxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBNkIsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQTdCLGNBQUE7QUFBQUEsY0FBQSxHQUFBaUIsQ0FBQTs7Ozs7OztBQVpOLE1BQWFhLGVBQWU7RUFDMUI7RUFDQUMsZUFBZUEsQ0FBQ0MsSUFBVztJQUFBO0lBQUFoQyxjQUFBLEdBQUFrQixDQUFBO0lBQUFsQixjQUFBLEdBQUFpQixDQUFBO0lBQ3pCO0lBQ0EsT0FBTztNQUFFZ0IsT0FBTyxFQUFFLFNBQVM7TUFBRUMsVUFBVSxFQUFFO0lBQUcsQ0FBRTtFQUNoRDtFQUVBQyxlQUFlQSxDQUFDQyxRQUFlO0lBQUE7SUFBQXBDLGNBQUEsR0FBQWtCLENBQUE7SUFBQWxCLGNBQUEsR0FBQWlCLENBQUE7SUFDN0I7SUFDQSxPQUFPO01BQ0xnQixPQUFPLEVBQUUsU0FBUztNQUNsQkMsVUFBVSxFQUFFLEdBQUc7TUFDZkcsU0FBUyxFQUFFRCxRQUFRLENBQUNFO0tBQ3JCO0VBQ0g7RUFFQUMsY0FBY0EsQ0FBQ0MsTUFBYTtJQUFBO0lBQUF4QyxjQUFBLEdBQUFrQixDQUFBO0lBQUFsQixjQUFBLEdBQUFpQixDQUFBO0lBQzFCO0lBQ0EsT0FBT3VCLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDQyxLQUFLLElBQUs7TUFBQTtNQUFBMUMsY0FBQSxHQUFBa0IsQ0FBQTtNQUFBbEIsY0FBQSxHQUFBaUIsQ0FBQTtNQUFBO1FBQzFCLEdBQUd5QixLQUFLO1FBQ1JDLFdBQVcsRUFBRTtPQUNkO0tBQUMsQ0FBQztFQUNMOztBQUNEO0FBQUEzQyxjQUFBLEdBQUFpQixDQUFBO0FBdkJEMkIsT0FBQSxDQUFBZCxlQUFBLEdBQUFBLGVBQUEiLCJpZ25vcmVMaXN0IjpbXX0=