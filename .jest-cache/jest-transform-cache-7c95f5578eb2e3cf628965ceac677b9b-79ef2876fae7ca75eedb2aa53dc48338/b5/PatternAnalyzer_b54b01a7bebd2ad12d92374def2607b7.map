{"version":3,"names":["cov_1kbw7ea9zf","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","PatternAnalyzer","analyzeSequence","data","pattern","confidence","analyzeBehavior","sequence","behaviors","length","detectPatterns","events","map","event","patternType","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/PatternAnalyzer.ts"],"sourcesContent":["// Analyseur de patterns\r\n\r\nexport class PatternAnalyzer {\r\n  // @ts-expect-error Paramètre réservé pour usage futur\r\n  analyzeSequence(data: any[]): any {\r\n    // Pattern analysis logic\r\n    return { pattern: 'unknown', confidence: 0.5 };\r\n  }\r\n\r\n  analyzeBehavior(sequence: any[]): any {\r\n    // Analyze behavioral patterns\r\n    return {\r\n      pattern: 'default',\r\n      confidence: 0.5,\r\n      behaviors: sequence.length\r\n    };\r\n  }\r\n\r\n  detectPatterns(events: any[]): any[] {\r\n    // Pattern detection logic\r\n    return events.map(event => ({\r\n      ...event,\r\n      patternType: 'detected'\r\n    }));\r\n  }\r\n}"],"mappings":"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","ignoreList":[]}