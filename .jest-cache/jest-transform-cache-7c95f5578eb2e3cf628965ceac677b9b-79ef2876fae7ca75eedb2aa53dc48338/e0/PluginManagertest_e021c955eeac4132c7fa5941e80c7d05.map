{"file":"/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/PluginManager.test.ts","mappings":";;AAAA,mDAAwD;AAExD,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,UAAU,CAAC,GAAG,EAAE;QACd,aAAa;QACb,6BAAa,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAC1C,MAAM,MAAM,GAAW,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QACpE,6BAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC/B,MAAM,CAAC,6BAAa,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClD,MAAM,CAAC,6BAAa,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE;QACzB,6BAAa,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;QAC/D,6BAAa,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;QACtE,MAAM,CAAC,6BAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,6BAAa,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC/C,MAAM,CAAC,6BAAa,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC;IACjE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/PluginManager.test.ts"],"sourcesContent":["import { PluginManager, Plugin } from './PluginManager';\r\n\r\ndescribe('PluginManager', () => {\r\n  beforeEach(() => {\r\n    // @ts-ignore\r\n    PluginManager['plugins'] = [];\r\n  });\r\n\r\n  it('enregistre et récupère un plugin', () => {\r\n    const plugin: Plugin = { id: 'test', type: 'ritual', name: 'Test' };\r\n    PluginManager.register(plugin);\r\n    expect(PluginManager.getPlugins().length).toBe(1);\r\n    expect(PluginManager.getPluginById('test')).toEqual(plugin);\r\n  });\r\n\r\n  it('filtre par type', () => {\r\n    PluginManager.register({ id: 'a', type: 'ritual', name: 'A' });\r\n    PluginManager.register({ id: 'b', type: 'visualization', name: 'B' });\r\n    expect(PluginManager.getPlugins('ritual').length).toBe(1);\r\n    expect(PluginManager.getPlugins('visualization').length).toBe(1);\r\n  });\r\n\r\n  it('retourne undefined pour un id inconnu', () => {\r\n    expect(PluginManager.getPluginById('inconnu')).toBeUndefined();\r\n  });\r\n}); "],"version":3}