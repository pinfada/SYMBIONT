cfc9975623e7a904b54de7aef2532b54
"use strict";

/* istanbul ignore next */
function cov_1q5xf35yf0() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/webgl.ts";
  var hash = "6e46add977561f05ae0c403b41d72710c06e38b3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/webgl.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "2": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 48
        }
      },
      "3": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 44
        }
      },
      "4": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 12,
          column: 9
        }
      },
      "5": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 67
        }
      },
      "6": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 24
        }
      },
      "7": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "8": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "9": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "10": {
        start: {
          line: 16,
          column: 26
        },
        end: {
          line: 16,
          column: 53
        }
      },
      "11": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 76
        }
      },
      "12": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 36
        }
      },
      "13": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 24
        }
      },
      "14": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 22
        }
      },
      "15": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 82
        }
      },
      "16": {
        start: {
          line: 25,
          column: 31
        },
        end: {
          line: 25,
          column: 88
        }
      },
      "17": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "18": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "19": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 42
        }
      },
      "20": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "21": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 75
        }
      },
      "22": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 24
        }
      },
      "23": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 47
        }
      },
      "24": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 49
        }
      },
      "25": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 32
        }
      },
      "26": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "27": {
        start: {
          line: 38,
          column: 26
        },
        end: {
          line: 38,
          column: 55
        }
      },
      "28": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 73
        }
      },
      "29": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 38
        }
      },
      "30": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 24
        }
      },
      "31": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 44,
          column: 27
        }
      },
      "32": {
        start: {
          line: 45,
          column: 27
        },
        end: {
          line: 45,
          column: 29
        }
      },
      "33": {
        start: {
          line: 46,
          column: 29
        },
        end: {
          line: 46,
          column: 80
        }
      },
      "34": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "35": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 47,
          column: 22
        }
      },
      "36": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 63
        }
      },
      "37": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 51,
          column: 13
        }
      },
      "38": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 94
        }
      },
      "39": {
        start: {
          line: 53,
          column: 31
        },
        end: {
          line: 53,
          column: 84
        }
      },
      "40": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "41": {
        start: {
          line: 54,
          column: 21
        },
        end: {
          line: 54,
          column: 22
        }
      },
      "42": {
        start: {
          line: 55,
          column: 34
        },
        end: {
          line: 55,
          column: 64
        }
      },
      "43": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "44": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 99
        }
      },
      "45": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 38
        }
      },
      "46": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 40
        }
      },
      "47": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 67,
          column: 10
        }
      },
      "48": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 70,
          column: 40
        }
      },
      "49": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "50": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 67
        }
      },
      "51": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 24
        }
      },
      "52": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 47
        }
      },
      "53": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 52
        }
      },
      "54": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 45
        }
      },
      "55": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 22
        }
      },
      "56": {
        start: {
          line: 81,
          column: 23
        },
        end: {
          line: 81,
          column: 40
        }
      },
      "57": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "58": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 73
        }
      },
      "59": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 24
        }
      },
      "60": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 55
        }
      },
      "61": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 60
        }
      },
      "62": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 53
        }
      },
      "63": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 22
        }
      },
      "64": {
        start: {
          line: 93,
          column: 25
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "65": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 102,
          column: 10
        }
      },
      "66": {
        start: {
          line: 103,
          column: 29
        },
        end: {
          line: 103,
          column: 60
        }
      },
      "67": {
        start: {
          line: 104,
          column: 28
        },
        end: {
          line: 104,
          column: 63
        }
      },
      "68": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "69": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 24
        }
      },
      "70": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 112,
          column: 10
        }
      },
      "71": {
        start: {
          line: 115,
          column: 25
        },
        end: {
          line: 115,
          column: 27
        }
      },
      "72": {
        start: {
          line: 116,
          column: 24
        },
        end: {
          line: 116,
          column: 26
        }
      },
      "73": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 38
        }
      },
      "74": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "75": {
        start: {
          line: 120,
          column: 21
        },
        end: {
          line: 120,
          column: 22
        }
      },
      "76": {
        start: {
          line: 121,
          column: 26
        },
        end: {
          line: 121,
          column: 54
        }
      },
      "77": {
        start: {
          line: 122,
          column: 22
        },
        end: {
          line: 122,
          column: 37
        }
      },
      "78": {
        start: {
          line: 123,
          column: 22
        },
        end: {
          line: 123,
          column: 37
        }
      },
      "79": {
        start: {
          line: 124,
          column: 22
        },
        end: {
          line: 124,
          column: 35
        }
      },
      "80": {
        start: {
          line: 125,
          column: 22
        },
        end: {
          line: 125,
          column: 35
        }
      },
      "81": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 38
        }
      },
      "82": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "83": {
        start: {
          line: 129,
          column: 21
        },
        end: {
          line: 129,
          column: 22
        }
      },
      "84": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 38
        }
      },
      "85": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 41
        }
      },
      "86": {
        start: {
          line: 133,
          column: 29
        },
        end: {
          line: 133,
          column: 78
        }
      },
      "87": {
        start: {
          line: 134,
          column: 28
        },
        end: {
          line: 134,
          column: 80
        }
      },
      "88": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "89": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 24
        }
      },
      "90": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 142,
          column: 10
        }
      },
      "91": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "92": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 42
        }
      },
      "93": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "94": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 44
        }
      },
      "95": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "96": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 57
        }
      },
      "97": {
        start: {
          line: 160,
          column: 24
        },
        end: {
          line: 160,
          column: 42
        }
      },
      "98": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "99": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 68
        }
      },
      "100": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 24
        }
      },
      "101": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 47
        }
      },
      "102": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "103": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 104
        }
      },
      "104": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 104
        }
      },
      "105": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 74
        }
      },
      "106": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 74
        }
      },
      "107": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 77
        }
      },
      "108": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 77
        }
      },
      "109": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 44
        }
      },
      "110": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 23
        }
      },
      "111": {
        start: {
          line: 180,
          column: 21
        },
        end: {
          line: 180,
          column: 52
        }
      },
      "112": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "113": {
        start: {
          line: 181,
          column: 21
        },
        end: {
          line: 181,
          column: 22
        }
      },
      "114": {
        start: {
          line: 182,
          column: 26
        },
        end: {
          line: 182,
          column: 39
        }
      },
      "115": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 38
        }
      },
      "116": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 42
        }
      },
      "117": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 42
        }
      },
      "118": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 34
        }
      },
      "119": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 56
        }
      },
      "120": {
        start: {
          line: 191,
          column: 22
        },
        end: {
          line: 191,
          column: 56
        }
      },
      "121": {
        start: {
          line: 192,
          column: 23
        },
        end: {
          line: 192,
          column: 59
        }
      },
      "122": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "123": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 33
        }
      },
      "124": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 35
        }
      },
      "125": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 24
        }
      },
      "126": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 21
        }
      },
      "127": {
        start: {
          line: 201,
          column: 0
        },
        end: {
          line: 201,
          column: 32
        }
      },
      "128": {
        start: {
          line: 202,
          column: 0
        },
        end: {
          line: 202,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 42
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 59
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 58
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 69
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 63
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 80
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 30
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 91
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        loc: {
          start: {
            line: 114,
            column: 47
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 114
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        loc: {
          start: {
            line: 144,
            column: 45
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 144
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 5
          }
        },
        loc: {
          start: {
            line: 149,
            column: 47
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 149
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 51
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 154
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 50
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 159
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 179,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        loc: {
          start: {
            line: 179,
            column: 48
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 179
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 61
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 190
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 12,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 12,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 25
          }
        }, {
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 26,
            column: 44
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 69,
            column: 34
          },
          end: {
            line: 69,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 69,
            column: 42
          },
          end: {
            line: 69,
            column: 56
          }
        }],
        line: 69
      },
      "9": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "10": {
        loc: {
          start: {
            line: 80,
            column: 39
          },
          end: {
            line: 80,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 80,
            column: 47
          },
          end: {
            line: 80,
            column: 61
          }
        }],
        line: 80
      },
      "11": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "12": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 107,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "13": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 25
          }
        }, {
          start: {
            line: 105,
            column: 29
          },
          end: {
            line: 105,
            column: 41
          }
        }],
        line: 105
      },
      "14": {
        loc: {
          start: {
            line: 114,
            column: 32
          },
          end: {
            line: 114,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 114,
            column: 43
          },
          end: {
            line: 114,
            column: 45
          }
        }],
        line: 114
      },
      "15": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "16": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 25
          }
        }, {
          start: {
            line: 135,
            column: 29
          },
          end: {
            line: 135,
            column: 41
          }
        }],
        line: 135
      },
      "17": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "18": {
        loc: {
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 145,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 12
          },
          end: {
            line: 145,
            column: 29
          }
        }, {
          start: {
            line: 145,
            column: 33
          },
          end: {
            line: 145,
            column: 55
          }
        }],
        line: 145
      },
      "19": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "20": {
        loc: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 150,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 150,
            column: 29
          }
        }, {
          start: {
            line: 150,
            column: 33
          },
          end: {
            line: 150,
            column: 55
          }
        }],
        line: 150
      },
      "21": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "22": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 155,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 155,
            column: 29
          }
        }, {
          start: {
            line: 155,
            column: 33
          },
          end: {
            line: 155,
            column: 55
          }
        }],
        line: 155
      },
      "23": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "24": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: 169,
            column: 13
          },
          end: {
            line: 171,
            column: 9
          }
        }],
        line: 166
      },
      "25": {
        loc: {
          start: {
            line: 179,
            column: 36
          },
          end: {
            line: 179,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 179,
            column: 43
          },
          end: {
            line: 179,
            column: 46
          }
        }],
        line: 179
      },
      "26": {
        loc: {
          start: {
            line: 191,
            column: 22
          },
          end: {
            line: 191,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 22
          },
          end: {
            line: 191,
            column: 34
          }
        }, {
          start: {
            line: 191,
            column: 38
          },
          end: {
            line: 191,
            column: 56
          }
        }],
        line: 191
      },
      "27": {
        loc: {
          start: {
            line: 192,
            column: 23
          },
          end: {
            line: 192,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 23
          },
          end: {
            line: 192,
            column: 36
          }
        }, {
          start: {
            line: 192,
            column: 40
          },
          end: {
            line: 192,
            column: 59
          }
        }],
        line: 192
      },
      "28": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "29": {
        loc: {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 193,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 193,
            column: 34
          }
        }, {
          start: {
            line: 193,
            column: 38
          },
          end: {
            line: 193,
            column: 62
          }
        }],
        line: 193
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/webgl.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/webgl.ts"],
      sourcesContent: ["// src/shared/utils/webgl.ts\r\nimport { logger } from './secureLogger';\r\n\r\nexport interface ShaderProgram {\r\n  program: WebGLProgram;\r\n  uniforms: Record<string, WebGLUniformLocation | null>;\r\n  attributes: Record<string, number>;\r\n}\r\n\r\nexport interface WebGLMesh {\r\n  vertexBuffer: WebGLBuffer;\r\n  indexBuffer: WebGLBuffer;\r\n  vertexCount: number;\r\n}\r\n\r\nexport class WebGLUtils {\r\n  static createShader(gl: WebGLRenderingContext | WebGL2RenderingContext, type: number, source: string): WebGLShader | null {\r\n    const shader = gl.createShader(type);\r\n    if (!shader) {\r\n      logger.error('Failed to create shader');\r\n      return null;\r\n    }\r\n\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      const error = gl.getShaderInfoLog(shader);\r\n      logger.error('Shader compilation error:', error);\r\n      gl.deleteShader(shader);\r\n      return null;\r\n    }\r\n\r\n    return shader;\r\n  }\r\n\r\n  static createProgram(\r\n    gl: WebGLRenderingContext | WebGL2RenderingContext,\r\n    vertexSource: string,\r\n    fragmentSource: string\r\n  ): ShaderProgram | null {\r\n    const vertexShader = this.createShader(gl, gl.VERTEX_SHADER, vertexSource);\r\n    const fragmentShader = this.createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n    if (!vertexShader || !fragmentShader) {\r\n      return null;\r\n    }\r\n\r\n    const program = gl.createProgram();\r\n    if (!program) {\r\n      logger.error('Failed to create shader program');\r\n      return null;\r\n    }\r\n\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n      const error = gl.getProgramInfoLog(program);\r\n      logger.error('Program linking error:', error);\r\n      gl.deleteProgram(program);\r\n      return null;\r\n    }\r\n\r\n    // Get uniforms and attributes\r\n    const uniforms: Record<string, WebGLUniformLocation | null> = {};\r\n    const attributes: Record<string, number> = {};\r\n\r\n    const uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n    for (let i = 0; i < uniformCount; i++) {\r\n      const uniformInfo = gl.getActiveUniform(program, i);\r\n      if (uniformInfo) {\r\n        uniforms[uniformInfo.name] = gl.getUniformLocation(program, uniformInfo.name);\r\n      }\r\n    }\r\n\r\n    const attributeCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < attributeCount; i++) {\r\n      const attributeInfo = gl.getActiveAttrib(program, i);\r\n      if (attributeInfo) {\r\n        attributes[attributeInfo.name] = gl.getAttribLocation(program, attributeInfo.name);\r\n      }\r\n    }\r\n\r\n    // Clean up shaders\r\n    gl.deleteShader(vertexShader);\r\n    gl.deleteShader(fragmentShader);\r\n\r\n    return {\r\n      program,\r\n      uniforms,\r\n      attributes\r\n    };\r\n  }\r\n\r\n  static createBuffer(gl: WebGLRenderingContext | WebGL2RenderingContext, data: Float32Array, usage = gl.STATIC_DRAW): WebGLBuffer | null {\r\n    const buffer = gl.createBuffer();\r\n    if (!buffer) {\r\n      logger.error('Failed to create buffer');\r\n      return null;\r\n    }\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, data, usage);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n    return buffer;\r\n  }\r\n\r\n  static createIndexBuffer(gl: WebGLRenderingContext | WebGL2RenderingContext, data: Uint16Array, usage = gl.STATIC_DRAW): WebGLBuffer | null {\r\n    const buffer = gl.createBuffer();\r\n    if (!buffer) {\r\n      logger.error('Failed to create index buffer');\r\n      return null;\r\n    }\r\n\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n\r\n    return buffer;\r\n  }\r\n\r\n  static createQuadMesh(gl: WebGLRenderingContext | WebGL2RenderingContext): WebGLMesh | null {\r\n    // Quad vertices: position (x, y) and texture coordinates (u, v)\r\n    const vertices = new Float32Array([\r\n      -1.0, -1.0,  0.0, 0.0,  // Bottom-left\r\n       1.0, -1.0,  1.0, 0.0,  // Bottom-right\r\n       1.0,  1.0,  1.0, 1.0,  // Top-right\r\n      -1.0,  1.0,  0.0, 1.0   // Top-left\r\n    ]);\r\n\r\n    const indices = new Uint16Array([\r\n      0, 1, 2,  // First triangle\r\n      0, 2, 3   // Second triangle\r\n    ]);\r\n\r\n    const vertexBuffer = this.createBuffer(gl, vertices);\r\n    const indexBuffer = this.createIndexBuffer(gl, indices);\r\n\r\n    if (!vertexBuffer || !indexBuffer) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      vertexBuffer,\r\n      indexBuffer,\r\n      vertexCount: indices.length\r\n    };\r\n  }\r\n\r\n  static createCircleMesh(gl: WebGLRenderingContext | WebGL2RenderingContext, segments = 32): WebGLMesh | null {\r\n    const vertices: number[] = [];\r\n    const indices: number[] = [];\r\n\r\n    // Center vertex\r\n    vertices.push(0, 0, 0.5, 0.5);\r\n\r\n    // Circle vertices\r\n    for (let i = 0; i <= segments; i++) {\r\n      const angle = (i / segments) * Math.PI * 2;\r\n      const x = Math.cos(angle);\r\n      const y = Math.sin(angle);\r\n      const u = (x + 1) * 0.5;\r\n      const v = (y + 1) * 0.5;\r\n      \r\n      vertices.push(x, y, u, v);\r\n    }\r\n\r\n    // Create triangles\r\n    for (let i = 1; i <= segments; i++) {\r\n      indices.push(0, i, i + 1);\r\n    }\r\n    indices.push(0, segments + 1, 1); // Close the circle\r\n\r\n    const vertexBuffer = this.createBuffer(gl, new Float32Array(vertices));\r\n    const indexBuffer = this.createIndexBuffer(gl, new Uint16Array(indices));\r\n\r\n    if (!vertexBuffer || !indexBuffer) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      vertexBuffer,\r\n      indexBuffer,\r\n      vertexCount: indices.length\r\n    };\r\n  }\r\n\r\n  static setUniform1f(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation | null, value: number): void {\r\n    if (location !== null && location !== undefined) {\r\n      gl.uniform1f(location, value);\r\n    }\r\n  }\r\n\r\n  static setUniform3f(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation | null, x: number, y: number, z: number): void {\r\n    if (location !== null && location !== undefined) {\r\n      gl.uniform3f(location, x, y, z);\r\n    }\r\n  }\r\n\r\n  static setUniformMatrix3(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation | null, matrix: Float32Array): void {\r\n    if (location !== null && location !== undefined) {\r\n      gl.uniformMatrix3fv(location, false, matrix);\r\n    }\r\n  }\r\n\r\n  static createTexture(gl: WebGLRenderingContext | WebGL2RenderingContext, width: number, height: number, data?: Uint8Array): WebGLTexture | null {\r\n    const texture = gl.createTexture();\r\n    if (!texture) {\r\n      logger.error('Failed to create texture');\r\n      return null;\r\n    }\r\n\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    \r\n    if (data) {\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\r\n    } else {\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    }\r\n    \r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    \r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n    return texture;\r\n  }\r\n\r\n  static generateNoiseTexture(gl: WebGLRenderingContext | WebGL2RenderingContext, size = 256): WebGLTexture | null {\r\n    const data = new Uint8Array(size * size * 4);\r\n    \r\n    for (let i = 0; i < size * size; i++) {\r\n      const noise = Math.random();\r\n      data[i * 4] = noise * 255;     // R\r\n      data[i * 4 + 1] = noise * 255; // G\r\n      data[i * 4 + 2] = noise * 255; // B\r\n      data[i * 4 + 3] = 255;         // A\r\n    }\r\n\r\n    return this.createTexture(gl, size, size, data);\r\n  }\r\n\r\n  static resizeCanvas(canvas: HTMLCanvasElement, displayWidth?: number, displayHeight?: number): boolean {\r\n    const width = displayWidth || canvas.clientWidth;\r\n    const height = displayHeight || canvas.clientHeight;\r\n\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default WebGLUtils;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6e46add977561f05ae0c403b41d72710c06e38b3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1q5xf35yf0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1q5xf35yf0();
cov_1q5xf35yf0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1q5xf35yf0().s[1]++;
exports.WebGLUtils = void 0;
// src/shared/utils/webgl.ts
const secureLogger_1 =
/* istanbul ignore next */
(cov_1q5xf35yf0().s[2]++, require("./secureLogger"));
class WebGLUtils {
  static createShader(gl, type, source) {
    /* istanbul ignore next */
    cov_1q5xf35yf0().f[0]++;
    const shader =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[3]++, gl.createShader(type));
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[4]++;
    if (!shader) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[0][0]++;
      cov_1q5xf35yf0().s[5]++;
      secureLogger_1.logger.error('Failed to create shader');
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[6]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[0][1]++;
    }
    cov_1q5xf35yf0().s[7]++;
    gl.shaderSource(shader, source);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[8]++;
    gl.compileShader(shader);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[9]++;
    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[1][0]++;
      const error =
      /* istanbul ignore next */
      (cov_1q5xf35yf0().s[10]++, gl.getShaderInfoLog(shader));
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[11]++;
      secureLogger_1.logger.error('Shader compilation error:', error);
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[12]++;
      gl.deleteShader(shader);
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[13]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[1][1]++;
    }
    cov_1q5xf35yf0().s[14]++;
    return shader;
  }
  static createProgram(gl, vertexSource, fragmentSource) {
    /* istanbul ignore next */
    cov_1q5xf35yf0().f[1]++;
    const vertexShader =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[15]++, this.createShader(gl, gl.VERTEX_SHADER, vertexSource));
    const fragmentShader =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[16]++, this.createShader(gl, gl.FRAGMENT_SHADER, fragmentSource));
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[3][0]++, !vertexShader) ||
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[3][1]++, !fragmentShader)) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[2][0]++;
      cov_1q5xf35yf0().s[18]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[2][1]++;
    }
    const program =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[19]++, gl.createProgram());
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[20]++;
    if (!program) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[4][0]++;
      cov_1q5xf35yf0().s[21]++;
      secureLogger_1.logger.error('Failed to create shader program');
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[22]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[4][1]++;
    }
    cov_1q5xf35yf0().s[23]++;
    gl.attachShader(program, vertexShader);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[24]++;
    gl.attachShader(program, fragmentShader);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[25]++;
    gl.linkProgram(program);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[26]++;
    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[5][0]++;
      const error =
      /* istanbul ignore next */
      (cov_1q5xf35yf0().s[27]++, gl.getProgramInfoLog(program));
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[28]++;
      secureLogger_1.logger.error('Program linking error:', error);
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[29]++;
      gl.deleteProgram(program);
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[30]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[5][1]++;
    }
    // Get uniforms and attributes
    const uniforms =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[31]++, {});
    const attributes =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[32]++, {});
    const uniformCount =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[33]++, gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS));
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[34]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[35]++, 0); i < uniformCount; i++) {
      const uniformInfo =
      /* istanbul ignore next */
      (cov_1q5xf35yf0().s[36]++, gl.getActiveUniform(program, i));
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[37]++;
      if (uniformInfo) {
        /* istanbul ignore next */
        cov_1q5xf35yf0().b[6][0]++;
        cov_1q5xf35yf0().s[38]++;
        uniforms[uniformInfo.name] = gl.getUniformLocation(program, uniformInfo.name);
      } else
      /* istanbul ignore next */
      {
        cov_1q5xf35yf0().b[6][1]++;
      }
    }
    const attributeCount =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[39]++, gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES));
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[40]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[41]++, 0); i < attributeCount; i++) {
      const attributeInfo =
      /* istanbul ignore next */
      (cov_1q5xf35yf0().s[42]++, gl.getActiveAttrib(program, i));
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[43]++;
      if (attributeInfo) {
        /* istanbul ignore next */
        cov_1q5xf35yf0().b[7][0]++;
        cov_1q5xf35yf0().s[44]++;
        attributes[attributeInfo.name] = gl.getAttribLocation(program, attributeInfo.name);
      } else
      /* istanbul ignore next */
      {
        cov_1q5xf35yf0().b[7][1]++;
      }
    }
    // Clean up shaders
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[45]++;
    gl.deleteShader(vertexShader);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[46]++;
    gl.deleteShader(fragmentShader);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[47]++;
    return {
      program,
      uniforms,
      attributes
    };
  }
  static createBuffer(gl, data, usage =
  /* istanbul ignore next */
  (cov_1q5xf35yf0().b[8][0]++, gl.STATIC_DRAW)) {
    /* istanbul ignore next */
    cov_1q5xf35yf0().f[2]++;
    const buffer =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[48]++, gl.createBuffer());
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[49]++;
    if (!buffer) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[9][0]++;
      cov_1q5xf35yf0().s[50]++;
      secureLogger_1.logger.error('Failed to create buffer');
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[51]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[9][1]++;
    }
    cov_1q5xf35yf0().s[52]++;
    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[53]++;
    gl.bufferData(gl.ARRAY_BUFFER, data, usage);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[54]++;
    gl.bindBuffer(gl.ARRAY_BUFFER, null);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[55]++;
    return buffer;
  }
  static createIndexBuffer(gl, data, usage =
  /* istanbul ignore next */
  (cov_1q5xf35yf0().b[10][0]++, gl.STATIC_DRAW)) {
    /* istanbul ignore next */
    cov_1q5xf35yf0().f[3]++;
    const buffer =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[56]++, gl.createBuffer());
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[57]++;
    if (!buffer) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[11][0]++;
      cov_1q5xf35yf0().s[58]++;
      secureLogger_1.logger.error('Failed to create index buffer');
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[59]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[11][1]++;
    }
    cov_1q5xf35yf0().s[60]++;
    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[61]++;
    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[62]++;
    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[63]++;
    return buffer;
  }
  static createQuadMesh(gl) {
    /* istanbul ignore next */
    cov_1q5xf35yf0().f[4]++;
    // Quad vertices: position (x, y) and texture coordinates (u, v)
    const vertices =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[64]++, new Float32Array([-1.0, -1.0, 0.0, 0.0,
    // Bottom-left
    1.0, -1.0, 1.0, 0.0,
    // Bottom-right
    1.0, 1.0, 1.0, 1.0,
    // Top-right
    -1.0, 1.0, 0.0, 1.0 // Top-left
    ]));
    const indices =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[65]++, new Uint16Array([0, 1, 2,
    // First triangle
    0, 2, 3 // Second triangle
    ]));
    const vertexBuffer =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[66]++, this.createBuffer(gl, vertices));
    const indexBuffer =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[67]++, this.createIndexBuffer(gl, indices));
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[68]++;
    if (
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[13][0]++, !vertexBuffer) ||
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[13][1]++, !indexBuffer)) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[12][0]++;
      cov_1q5xf35yf0().s[69]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[12][1]++;
    }
    cov_1q5xf35yf0().s[70]++;
    return {
      vertexBuffer,
      indexBuffer,
      vertexCount: indices.length
    };
  }
  static createCircleMesh(gl, segments =
  /* istanbul ignore next */
  (cov_1q5xf35yf0().b[14][0]++, 32)) {
    /* istanbul ignore next */
    cov_1q5xf35yf0().f[5]++;
    const vertices =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[71]++, []);
    const indices =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[72]++, []);
    // Center vertex
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[73]++;
    vertices.push(0, 0, 0.5, 0.5);
    // Circle vertices
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[74]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[75]++, 0); i <= segments; i++) {
      const angle =
      /* istanbul ignore next */
      (cov_1q5xf35yf0().s[76]++, i / segments * Math.PI * 2);
      const x =
      /* istanbul ignore next */
      (cov_1q5xf35yf0().s[77]++, Math.cos(angle));
      const y =
      /* istanbul ignore next */
      (cov_1q5xf35yf0().s[78]++, Math.sin(angle));
      const u =
      /* istanbul ignore next */
      (cov_1q5xf35yf0().s[79]++, (x + 1) * 0.5);
      const v =
      /* istanbul ignore next */
      (cov_1q5xf35yf0().s[80]++, (y + 1) * 0.5);
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[81]++;
      vertices.push(x, y, u, v);
    }
    // Create triangles
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[82]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[83]++, 1); i <= segments; i++) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[84]++;
      indices.push(0, i, i + 1);
    }
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[85]++;
    indices.push(0, segments + 1, 1); // Close the circle
    const vertexBuffer =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[86]++, this.createBuffer(gl, new Float32Array(vertices)));
    const indexBuffer =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[87]++, this.createIndexBuffer(gl, new Uint16Array(indices)));
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[88]++;
    if (
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[16][0]++, !vertexBuffer) ||
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[16][1]++, !indexBuffer)) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[15][0]++;
      cov_1q5xf35yf0().s[89]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[15][1]++;
    }
    cov_1q5xf35yf0().s[90]++;
    return {
      vertexBuffer,
      indexBuffer,
      vertexCount: indices.length
    };
  }
  static setUniform1f(gl, location, value) {
    /* istanbul ignore next */
    cov_1q5xf35yf0().f[6]++;
    cov_1q5xf35yf0().s[91]++;
    if (
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[18][0]++, location !== null) &&
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[18][1]++, location !== undefined)) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[17][0]++;
      cov_1q5xf35yf0().s[92]++;
      gl.uniform1f(location, value);
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[17][1]++;
    }
  }
  static setUniform3f(gl, location, x, y, z) {
    /* istanbul ignore next */
    cov_1q5xf35yf0().f[7]++;
    cov_1q5xf35yf0().s[93]++;
    if (
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[20][0]++, location !== null) &&
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[20][1]++, location !== undefined)) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[19][0]++;
      cov_1q5xf35yf0().s[94]++;
      gl.uniform3f(location, x, y, z);
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[19][1]++;
    }
  }
  static setUniformMatrix3(gl, location, matrix) {
    /* istanbul ignore next */
    cov_1q5xf35yf0().f[8]++;
    cov_1q5xf35yf0().s[95]++;
    if (
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[22][0]++, location !== null) &&
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[22][1]++, location !== undefined)) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[21][0]++;
      cov_1q5xf35yf0().s[96]++;
      gl.uniformMatrix3fv(location, false, matrix);
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[21][1]++;
    }
  }
  static createTexture(gl, width, height, data) {
    /* istanbul ignore next */
    cov_1q5xf35yf0().f[9]++;
    const texture =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[97]++, gl.createTexture());
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[98]++;
    if (!texture) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[23][0]++;
      cov_1q5xf35yf0().s[99]++;
      secureLogger_1.logger.error('Failed to create texture');
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[100]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[23][1]++;
    }
    cov_1q5xf35yf0().s[101]++;
    gl.bindTexture(gl.TEXTURE_2D, texture);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[102]++;
    if (data) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[24][0]++;
      cov_1q5xf35yf0().s[103]++;
      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);
    } else {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[24][1]++;
      cov_1q5xf35yf0().s[104]++;
      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);
    }
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[105]++;
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[106]++;
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[107]++;
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[108]++;
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[109]++;
    gl.bindTexture(gl.TEXTURE_2D, null);
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[110]++;
    return texture;
  }
  static generateNoiseTexture(gl, size =
  /* istanbul ignore next */
  (cov_1q5xf35yf0().b[25][0]++, 256)) {
    /* istanbul ignore next */
    cov_1q5xf35yf0().f[10]++;
    const data =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[111]++, new Uint8Array(size * size * 4));
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[112]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[113]++, 0); i < size * size; i++) {
      const noise =
      /* istanbul ignore next */
      (cov_1q5xf35yf0().s[114]++, Math.random());
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[115]++;
      data[i * 4] = noise * 255; // R
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[116]++;
      data[i * 4 + 1] = noise * 255; // G
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[117]++;
      data[i * 4 + 2] = noise * 255; // B
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[118]++;
      data[i * 4 + 3] = 255; // A
    }
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[119]++;
    return this.createTexture(gl, size, size, data);
  }
  static resizeCanvas(canvas, displayWidth, displayHeight) {
    /* istanbul ignore next */
    cov_1q5xf35yf0().f[11]++;
    const width =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[120]++,
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[26][0]++, displayWidth) ||
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[26][1]++, canvas.clientWidth));
    const height =
    /* istanbul ignore next */
    (cov_1q5xf35yf0().s[121]++,
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[27][0]++, displayHeight) ||
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[27][1]++, canvas.clientHeight));
    /* istanbul ignore next */
    cov_1q5xf35yf0().s[122]++;
    if (
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[29][0]++, canvas.width !== width) ||
    /* istanbul ignore next */
    (cov_1q5xf35yf0().b[29][1]++, canvas.height !== height)) {
      /* istanbul ignore next */
      cov_1q5xf35yf0().b[28][0]++;
      cov_1q5xf35yf0().s[123]++;
      canvas.width = width;
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[124]++;
      canvas.height = height;
      /* istanbul ignore next */
      cov_1q5xf35yf0().s[125]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_1q5xf35yf0().b[28][1]++;
    }
    cov_1q5xf35yf0().s[126]++;
    return false;
  }
}
/* istanbul ignore next */
cov_1q5xf35yf0().s[127]++;
exports.WebGLUtils = WebGLUtils;
/* istanbul ignore next */
cov_1q5xf35yf0().s[128]++;
exports.default = WebGLUtils;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,