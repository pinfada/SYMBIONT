{"version":3,"names":["cov_1q5xf35yf0","actualCoverage","s","secureLogger_1","require","WebGLUtils","createShader","gl","type","source","f","shader","b","logger","error","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createProgram","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","uniforms","attributes","uniformCount","ACTIVE_UNIFORMS","i","uniformInfo","getActiveUniform","name","getUniformLocation","attributeCount","ACTIVE_ATTRIBUTES","attributeInfo","getActiveAttrib","getAttribLocation","createBuffer","data","usage","STATIC_DRAW","buffer","bindBuffer","ARRAY_BUFFER","bufferData","createIndexBuffer","ELEMENT_ARRAY_BUFFER","createQuadMesh","vertices","Float32Array","indices","Uint16Array","vertexBuffer","indexBuffer","vertexCount","length","createCircleMesh","segments","push","angle","Math","PI","x","cos","y","sin","u","v","setUniform1f","location","value","undefined","uniform1f","setUniform3f","z","uniform3f","setUniformMatrix3","matrix","uniformMatrix3fv","createTexture","width","height","texture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","generateNoiseTexture","size","Uint8Array","noise","random","resizeCanvas","canvas","displayWidth","displayHeight","clientWidth","clientHeight","exports","default"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/utils/webgl.ts"],"sourcesContent":["// src/shared/utils/webgl.ts\r\nimport { logger } from './secureLogger';\r\n\r\nexport interface ShaderProgram {\r\n  program: WebGLProgram;\r\n  uniforms: Record<string, WebGLUniformLocation | null>;\r\n  attributes: Record<string, number>;\r\n}\r\n\r\nexport interface WebGLMesh {\r\n  vertexBuffer: WebGLBuffer;\r\n  indexBuffer: WebGLBuffer;\r\n  vertexCount: number;\r\n}\r\n\r\nexport class WebGLUtils {\r\n  static createShader(gl: WebGLRenderingContext | WebGL2RenderingContext, type: number, source: string): WebGLShader | null {\r\n    const shader = gl.createShader(type);\r\n    if (!shader) {\r\n      logger.error('Failed to create shader');\r\n      return null;\r\n    }\r\n\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      const error = gl.getShaderInfoLog(shader);\r\n      logger.error('Shader compilation error:', error);\r\n      gl.deleteShader(shader);\r\n      return null;\r\n    }\r\n\r\n    return shader;\r\n  }\r\n\r\n  static createProgram(\r\n    gl: WebGLRenderingContext | WebGL2RenderingContext,\r\n    vertexSource: string,\r\n    fragmentSource: string\r\n  ): ShaderProgram | null {\r\n    const vertexShader = this.createShader(gl, gl.VERTEX_SHADER, vertexSource);\r\n    const fragmentShader = this.createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\r\n\r\n    if (!vertexShader || !fragmentShader) {\r\n      return null;\r\n    }\r\n\r\n    const program = gl.createProgram();\r\n    if (!program) {\r\n      logger.error('Failed to create shader program');\r\n      return null;\r\n    }\r\n\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n      const error = gl.getProgramInfoLog(program);\r\n      logger.error('Program linking error:', error);\r\n      gl.deleteProgram(program);\r\n      return null;\r\n    }\r\n\r\n    // Get uniforms and attributes\r\n    const uniforms: Record<string, WebGLUniformLocation | null> = {};\r\n    const attributes: Record<string, number> = {};\r\n\r\n    const uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n    for (let i = 0; i < uniformCount; i++) {\r\n      const uniformInfo = gl.getActiveUniform(program, i);\r\n      if (uniformInfo) {\r\n        uniforms[uniformInfo.name] = gl.getUniformLocation(program, uniformInfo.name);\r\n      }\r\n    }\r\n\r\n    const attributeCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < attributeCount; i++) {\r\n      const attributeInfo = gl.getActiveAttrib(program, i);\r\n      if (attributeInfo) {\r\n        attributes[attributeInfo.name] = gl.getAttribLocation(program, attributeInfo.name);\r\n      }\r\n    }\r\n\r\n    // Clean up shaders\r\n    gl.deleteShader(vertexShader);\r\n    gl.deleteShader(fragmentShader);\r\n\r\n    return {\r\n      program,\r\n      uniforms,\r\n      attributes\r\n    };\r\n  }\r\n\r\n  static createBuffer(gl: WebGLRenderingContext | WebGL2RenderingContext, data: Float32Array, usage = gl.STATIC_DRAW): WebGLBuffer | null {\r\n    const buffer = gl.createBuffer();\r\n    if (!buffer) {\r\n      logger.error('Failed to create buffer');\r\n      return null;\r\n    }\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, data, usage);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\n    return buffer;\r\n  }\r\n\r\n  static createIndexBuffer(gl: WebGLRenderingContext | WebGL2RenderingContext, data: Uint16Array, usage = gl.STATIC_DRAW): WebGLBuffer | null {\r\n    const buffer = gl.createBuffer();\r\n    if (!buffer) {\r\n      logger.error('Failed to create index buffer');\r\n      return null;\r\n    }\r\n\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, usage);\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n\r\n    return buffer;\r\n  }\r\n\r\n  static createQuadMesh(gl: WebGLRenderingContext | WebGL2RenderingContext): WebGLMesh | null {\r\n    // Quad vertices: position (x, y) and texture coordinates (u, v)\r\n    const vertices = new Float32Array([\r\n      -1.0, -1.0,  0.0, 0.0,  // Bottom-left\r\n       1.0, -1.0,  1.0, 0.0,  // Bottom-right\r\n       1.0,  1.0,  1.0, 1.0,  // Top-right\r\n      -1.0,  1.0,  0.0, 1.0   // Top-left\r\n    ]);\r\n\r\n    const indices = new Uint16Array([\r\n      0, 1, 2,  // First triangle\r\n      0, 2, 3   // Second triangle\r\n    ]);\r\n\r\n    const vertexBuffer = this.createBuffer(gl, vertices);\r\n    const indexBuffer = this.createIndexBuffer(gl, indices);\r\n\r\n    if (!vertexBuffer || !indexBuffer) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      vertexBuffer,\r\n      indexBuffer,\r\n      vertexCount: indices.length\r\n    };\r\n  }\r\n\r\n  static createCircleMesh(gl: WebGLRenderingContext | WebGL2RenderingContext, segments = 32): WebGLMesh | null {\r\n    const vertices: number[] = [];\r\n    const indices: number[] = [];\r\n\r\n    // Center vertex\r\n    vertices.push(0, 0, 0.5, 0.5);\r\n\r\n    // Circle vertices\r\n    for (let i = 0; i <= segments; i++) {\r\n      const angle = (i / segments) * Math.PI * 2;\r\n      const x = Math.cos(angle);\r\n      const y = Math.sin(angle);\r\n      const u = (x + 1) * 0.5;\r\n      const v = (y + 1) * 0.5;\r\n      \r\n      vertices.push(x, y, u, v);\r\n    }\r\n\r\n    // Create triangles\r\n    for (let i = 1; i <= segments; i++) {\r\n      indices.push(0, i, i + 1);\r\n    }\r\n    indices.push(0, segments + 1, 1); // Close the circle\r\n\r\n    const vertexBuffer = this.createBuffer(gl, new Float32Array(vertices));\r\n    const indexBuffer = this.createIndexBuffer(gl, new Uint16Array(indices));\r\n\r\n    if (!vertexBuffer || !indexBuffer) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      vertexBuffer,\r\n      indexBuffer,\r\n      vertexCount: indices.length\r\n    };\r\n  }\r\n\r\n  static setUniform1f(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation | null, value: number): void {\r\n    if (location !== null && location !== undefined) {\r\n      gl.uniform1f(location, value);\r\n    }\r\n  }\r\n\r\n  static setUniform3f(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation | null, x: number, y: number, z: number): void {\r\n    if (location !== null && location !== undefined) {\r\n      gl.uniform3f(location, x, y, z);\r\n    }\r\n  }\r\n\r\n  static setUniformMatrix3(gl: WebGLRenderingContext | WebGL2RenderingContext, location: WebGLUniformLocation | null, matrix: Float32Array): void {\r\n    if (location !== null && location !== undefined) {\r\n      gl.uniformMatrix3fv(location, false, matrix);\r\n    }\r\n  }\r\n\r\n  static createTexture(gl: WebGLRenderingContext | WebGL2RenderingContext, width: number, height: number, data?: Uint8Array): WebGLTexture | null {\r\n    const texture = gl.createTexture();\r\n    if (!texture) {\r\n      logger.error('Failed to create texture');\r\n      return null;\r\n    }\r\n\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    \r\n    if (data) {\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\r\n    } else {\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    }\r\n    \r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    \r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n    return texture;\r\n  }\r\n\r\n  static generateNoiseTexture(gl: WebGLRenderingContext | WebGL2RenderingContext, size = 256): WebGLTexture | null {\r\n    const data = new Uint8Array(size * size * 4);\r\n    \r\n    for (let i = 0; i < size * size; i++) {\r\n      const noise = Math.random();\r\n      data[i * 4] = noise * 255;     // R\r\n      data[i * 4 + 1] = noise * 255; // G\r\n      data[i * 4 + 2] = noise * 255; // B\r\n      data[i * 4 + 3] = 255;         // A\r\n    }\r\n\r\n    return this.createTexture(gl, size, size, data);\r\n  }\r\n\r\n  static resizeCanvas(canvas: HTMLCanvasElement, displayWidth?: number, displayHeight?: number): boolean {\r\n    const width = displayWidth || canvas.clientWidth;\r\n    const height = displayHeight || canvas.clientHeight;\r\n\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default WebGLUtils;"],"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","ignoreList":[]}