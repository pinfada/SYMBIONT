{"file":"/mnt/c/Users/m_oli/Projets/SYMBIONT/__tests__/setup.ts","mappings":"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","names":[],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/__tests__/setup.ts"],"sourcesContent":["// Jest setup file for SYMBIONT tests\r\nimport '@testing-library/jest-dom';\r\n\r\n// Mock global objects that might not be available in test environment\r\nglobal.performance = global.performance || {\r\n  now: jest.fn(() => Date.now()),\r\n  mark: jest.fn(),\r\n  measure: jest.fn(),\r\n  clearMarks: jest.fn(),\r\n  clearMeasures: jest.fn(),\r\n  getEntries: jest.fn(() => []),\r\n  getEntriesByName: jest.fn(() => []),\r\n  getEntriesByType: jest.fn(() => [])\r\n};\r\n\r\n// Mock requestAnimationFrame and cancelAnimationFrame\r\nglobal.requestAnimationFrame = jest.fn((callback) => {\r\n  return setTimeout(callback, 16); // ~60fps\r\n});\r\n\r\nglobal.cancelAnimationFrame = jest.fn((id) => {\r\n  clearTimeout(id);\r\n});\r\n\r\n// Mock URL.createObjectURL for Web Workers\r\nglobal.URL = global.URL || {\r\n  createObjectURL: jest.fn(() => 'blob:mock-url'),\r\n  revokeObjectURL: jest.fn()\r\n};\r\n\r\n// Mock Worker constructor\r\nglobal.Worker = jest.fn().mockImplementation(() => ({\r\n  postMessage: jest.fn(),\r\n  terminate: jest.fn(),\r\n  addEventListener: jest.fn(),\r\n  removeEventListener: jest.fn(),\r\n  onmessage: null,\r\n  onerror: null\r\n}));\r\n\r\n// Mock WebGL context\r\nconst createMockWebGLContext = () => ({\r\n  // WebGL constants\r\n  TRIANGLES: 4,\r\n  LINES: 1,\r\n  POINTS: 0,\r\n  ARRAY_BUFFER: 34962,\r\n  ELEMENT_ARRAY_BUFFER: 34963,\r\n  DYNAMIC_DRAW: 35048,\r\n  STATIC_DRAW: 35044,\r\n  FLOAT: 5126,\r\n  UNSIGNED_SHORT: 5123,\r\n  \r\n  // Buffer methods\r\n  createBuffer: jest.fn(() => ({ id: Math.random() })),\r\n  deleteBuffer: jest.fn(),\r\n  bindBuffer: jest.fn(),\r\n  bufferData: jest.fn(),\r\n  \r\n  // Vertex attributes\r\n  vertexAttribPointer: jest.fn(),\r\n  enableVertexAttribArray: jest.fn(),\r\n  disableVertexAttribArray: jest.fn(),\r\n  \r\n  // Drawing\r\n  drawArrays: jest.fn(),\r\n  drawElements: jest.fn(),\r\n  \r\n  // Shaders (for future tests)\r\n  createShader: jest.fn(() => ({ id: Math.random() })),\r\n  createProgram: jest.fn(() => ({ id: Math.random() })),\r\n  compileShader: jest.fn(),\r\n  linkProgram: jest.fn(),\r\n  useProgram: jest.fn(),\r\n  \r\n  // State\r\n  viewport: jest.fn(),\r\n  clear: jest.fn(),\r\n  clearColor: jest.fn(),\r\n  enable: jest.fn(),\r\n  disable: jest.fn(),\r\n  \r\n  // Error checking\r\n  getError: jest.fn(() => 0), // GL_NO_ERROR\r\n  \r\n  // Extensions\r\n  getExtension: jest.fn(),\r\n  getSupportedExtensions: jest.fn(() => [])\r\n});\r\n\r\n// Mock canvas and WebGL\r\n(HTMLCanvasElement.prototype.getContext as jest.Mock) = jest.fn((contextType) => {\r\n  if (contextType === 'webgl' || contextType === 'experimental-webgl') {\r\n    return createMockWebGLContext() as unknown as WebGLRenderingContext;\r\n  }\r\n  if (contextType === 'webgl2') {\r\n    return {\r\n      ...createMockWebGLContext(),\r\n      createVertexArray: jest.fn(() => ({ id: Math.random() })),\r\n      deleteVertexArray: jest.fn(),\r\n      bindVertexArray: jest.fn()\r\n    } as unknown as WebGL2RenderingContext;\r\n  }\r\n  return null;\r\n});\r\n\r\n// Mock Chrome APIs for extension testing\r\n(global as any).chrome = {\r\n  runtime: {\r\n    onMessage: {\r\n      addListener: jest.fn(),\r\n      removeListener: jest.fn()\r\n    } as Partial<chrome.events.Event<any>>,\r\n    sendMessage: jest.fn(),\r\n    getURL: jest.fn((path: string) => `chrome-extension://mock-id/${path}`)\r\n  } as Partial<typeof chrome.runtime>,\r\n  tabs: {\r\n    query: jest.fn(),\r\n    create: jest.fn(),\r\n    update: jest.fn()\r\n  } as Partial<typeof chrome.tabs>,\r\n  storage: {\r\n    local: {\r\n      get: jest.fn(),\r\n      set: jest.fn(),\r\n      remove: jest.fn(),\r\n      clear: jest.fn()\r\n    } as Partial<chrome.storage.LocalStorageArea>,\r\n    sync: {\r\n      get: jest.fn(),\r\n      set: jest.fn(),\r\n      remove: jest.fn(),\r\n      clear: jest.fn()\r\n    } as Partial<chrome.storage.SyncStorageArea>\r\n  } as Partial<typeof chrome.storage>\r\n};\r\n\r\n// Console override for test cleanup\r\nconst originalConsole = global.console;\r\nglobal.console = {\r\n  ...originalConsole,\r\n  // Suppress console.log in tests unless explicitly needed\r\n  log: process.env.JEST_VERBOSE === 'true' ? originalConsole.log : jest.fn(),\r\n  info: process.env.JEST_VERBOSE === 'true' ? originalConsole.info : jest.fn(),\r\n  warn: originalConsole.warn,\r\n  error: originalConsole.error,\r\n  debug: process.env.JEST_VERBOSE === 'true' ? originalConsole.debug : jest.fn()\r\n};\r\n\r\n// Increase timeout for integration tests\r\njest.setTimeout(10000);\r\n\r\n// Global test utilities\r\nglobal.testUtils = {\r\n  // Helper to wait for async operations\r\n  waitFor: (ms: number) => new Promise(resolve => setTimeout(resolve, ms)),\r\n  \r\n  // Helper to create mock DNA sequences\r\n  createMockDNA: (length: number = 16) => {\r\n    const bases = ['A', 'T', 'C', 'G'];\r\n    return Array.from({ length }, () => bases[Math.floor(Math.random() * bases.length)]).join('');\r\n  },\r\n  \r\n  // Helper to create valid organism traits\r\n  createMockTraits: () => ({\r\n    curiosity: Math.random(),\r\n    focus: Math.random(),\r\n    rhythm: Math.random(),\r\n    empathy: Math.random(),\r\n    creativity: Math.random(),\r\n    energy: Math.random(),\r\n    harmony: Math.random(),\r\n    wisdom: Math.random() * 0.2 // Wisdom is typically lower\r\n  }),\r\n  \r\n  // Helper to suppress console output during tests\r\n  suppressConsole: () => {\r\n    const spy = {\r\n      log: jest.spyOn(console, 'log').mockImplementation(() => {}),\r\n      info: jest.spyOn(console, 'info').mockImplementation(() => {}),\r\n      warn: jest.spyOn(console, 'warn').mockImplementation(() => {}),\r\n      error: jest.spyOn(console, 'error').mockImplementation(() => {}),\r\n      debug: jest.spyOn(console, 'debug').mockImplementation(() => {})\r\n    };\r\n    \r\n    return () => {\r\n      Object.values(spy).forEach(s => s.mockRestore());\r\n    };\r\n  }\r\n};\r\n\r\n// Clean up after each test\r\nafterEach(() => {\r\n  jest.clearAllMocks();\r\n  jest.clearAllTimers();\r\n  \r\n  // Reset performance mock if it exists and is a Jest mock\r\n  if (global.performance.now && typeof (global.performance.now as any).mockClear === 'function') {\r\n    (global.performance.now as jest.Mock).mockClear();\r\n  }\r\n  \r\n  // Reset RAF mocks if they exist and are Jest mocks\r\n  if (global.requestAnimationFrame && typeof (global.requestAnimationFrame as any).mockClear === 'function') {\r\n    (global.requestAnimationFrame as jest.Mock).mockClear();\r\n  }\r\n  if (global.cancelAnimationFrame && typeof (global.cancelAnimationFrame as any).mockClear === 'function') {\r\n    (global.cancelAnimationFrame as jest.Mock).mockClear();\r\n  }\r\n});\r\n\r\n// TypeScript declarations for global test utilities\r\ndeclare global {\r\n  var testUtils: {\r\n    waitFor: (ms: number) => Promise<void>;\r\n    createMockDNA: (length?: number) => string;\r\n    createMockTraits: () => any;\r\n    suppressConsole: () => () => void;\r\n  };\r\n} "],"version":3}