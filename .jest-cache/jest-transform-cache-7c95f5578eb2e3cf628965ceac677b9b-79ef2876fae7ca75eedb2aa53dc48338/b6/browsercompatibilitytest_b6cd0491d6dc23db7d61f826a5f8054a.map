{"file":"/mnt/c/Users/m_oli/Projets/SYMBIONT/__tests__/browser.compatibility.test.ts","mappings":";;AAAA,iEAA8D;AAC9D,iEAA8D;AAC9D,2DAAwD;AACxD,uDAAoD;AAEpD,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;IAC3C,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,IAAI,MAAyB,CAAC;QAE9B,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;YAC1C,MAAM,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;YAEjF,MAAM,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC;YAExB,IAAI,EAAE,IAAK,EAAU,CAAC,SAAS,KAAK,SAAS,EAAE,CAAC;gBAC9C,MAAM,KAAK,GAAG,EAA2B,CAAC;gBAC1C,qCAAqC;gBACrC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;gBACtC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;gBACzC,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,WAAW,EAAE,CAAC;gBAEjD,uBAAuB;gBACvB,MAAM,MAAM,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;gBACpC,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;gBAE5B,IAAI,MAAM,EAAE,CAAC;oBACX,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC7B,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACrD,MAAM,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAA2B,CAAC;YAEjE,IAAI,EAAE,EAAE,CAAC;gBACP,yBAAyB;gBACzB,MAAM,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,WAAW,EAAE,CAAC;gBAC3C,MAAM,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,WAAW,EAAE,CAAC;gBAC3C,MAAM,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC,WAAW,EAAE,CAAC;gBAEzC,yBAAyB;gBACzB,MAAM,GAAG,GAAG,EAAE,CAAC,iBAAiB,EAAE,CAAC;gBACnC,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;gBAEzB,IAAI,GAAG,EAAE,CAAC;oBACR,EAAE,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;oBACxB,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;oBACzB,EAAE,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;gBAC5B,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,4BAA4B;gBAC5B,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;gBAClF,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;YAC3B,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qDAAqD,EAAE,GAAG,EAAE;YAC7D,MAAM,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO,CAA0B,CAAC;YAC/D,MAAM,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC;YAExB,IAAI,EAAE,EAAE,CAAC;gBACP,MAAM,OAAO,GAAG,IAAI,2BAAY,CAAC,EAAE,EAAE;oBACnC,YAAY,EAAE,CAAC;oBACf,WAAW,EAAE,GAAG;iBACjB,CAAC,CAAC;gBAEH,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;gBAE9B,2BAA2B;gBAC3B,MAAM,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC;oBACrC,IAAI,EAAE,UAAU;oBAChB,QAAQ,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACpD,QAAQ,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE;oBAC1B,QAAQ,EAAE,QAAQ;iBACnB,CAAC,CAAC;gBAEH,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,CAAC;gBAEjC,OAAO,CAAC,KAAK,EAAE,CAAC;gBAChB,OAAO,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACrD,MAAM,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO,CAA0B,CAAC;YAC/D,MAAM,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC;YAExB,IAAI,EAAE,EAAE,CAAC;gBACP,MAAM,OAAO,GAAG,IAAI,2BAAY,CAAC,EAAE,CAAC,CAAC;gBAErC,wBAAwB;gBACxB,MAAM,cAAc,GAAG,EAAE,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;gBAC7D,IAAI,cAAc,EAAE,CAAC;oBACnB,oCAAoC;oBACpC,OAAO,CAAC,WAAW,CAAC;wBAClB,IAAI,EAAE,UAAU;wBAChB,QAAQ,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;wBACpD,QAAQ,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE;wBAC1B,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC;oBAEH,eAAe;oBACf,cAAc,CAAC,WAAW,EAAE,CAAC;oBAE7B,iCAAiC;oBACjC,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;oBAE5C,kBAAkB;oBAClB,cAAc,CAAC,cAAc,EAAE,CAAC;gBAClC,CAAC;gBAED,OAAO,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;YACzD,MAAM,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO,CAA0B,CAAC;YAC/D,MAAM,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC;YAExB,IAAI,EAAE,EAAE,CAAC;gBACP,iCAAiC;gBACjC,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;gBACtC,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC;gBACtC,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,CAAC;gBAEvC,yEAAyE;gBACzE,MAAM,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,gCAAgC,CAAC,CAAC;gBACnE,MAAM,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;gBACtD,MAAM,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;gBAExD,8EAA8E;gBAC9E,MAAM,CAAC,QAAQ,KAAK,IAAI,IAAI,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACrE,MAAM,CAAC,QAAQ,KAAK,IAAI,IAAI,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACrE,MAAM,CAAC,QAAQ,KAAK,IAAI,IAAI,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAErE,oCAAoC;gBACpC,MAAM,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;gBAC9C,MAAM,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBAE1C,MAAM,CAAC,OAAO,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACvC,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAErC,uBAAuB;gBACvB,MAAM,MAAM,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;gBACjC,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;gBAE5B,IAAI,MAAM,EAAE,CAAC;oBACX,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC1B,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACzC,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;YACtC,MAAM,gBAAgB,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC;YACvD,MAAM,CAAC,OAAO,gBAAgB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEhD,IAAI,gBAAgB,EAAE,CAAC;gBACrB,sBAAsB;gBACtB,MAAM,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,CAAC;gBAC7B,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACzC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;YAClE,MAAM,UAAU,GAAG,IAAI,iCAAe,CAAC;gBACrC,SAAS,EAAE,IAAI;gBACf,oBAAoB,EAAE,IAAI;aAC3B,CAAC,CAAC;YAEH,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,CAAC;YAEjC,MAAM,UAAU,CAAC,UAAU,EAAE,CAAC;YAE9B,wDAAwD;YACxD,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;YAC3C,UAAU,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;YAC3C,UAAU,CAAC,aAAa,CAAC,QAAQ,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;YAEnD,UAAU,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YACpC,UAAU,CAAC,SAAS,EAAE,CAAC;YAEvB,MAAM,UAAU,GAAG,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YACvD,MAAM,CAAC,OAAO,UAAU,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEzC,MAAM,UAAU,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YAC/D,2CAA2C;YAC3C,MAAM,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC;YACrC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE;gBAC3B,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC;gBACH,MAAM,UAAU,GAAG,IAAI,iCAAe,CAAC;oBACrC,SAAS,EAAE,IAAI;oBACf,oBAAoB,EAAE,IAAI;iBAC3B,CAAC,CAAC;gBAEH,MAAM,UAAU,CAAC,UAAU,EAAE,CAAC;gBAE9B,iCAAiC;gBACjC,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;gBACpC,UAAU,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;gBAElC,MAAM,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;gBAEnD,MAAM,UAAU,CAAC,OAAO,EAAE,CAAC;YAC7B,CAAC;oBAAS,CAAC;gBACT,MAAM,CAAC,MAAM,GAAG,cAAc,CAAC;YACjC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;YACnD,gDAAgD;YAChD,MAAM,UAAU,GAAG;gBACjB,WAAW,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,EAAE;oBAC/B,iDAAiD;oBACjD,IAAI,OAAO,CAAC,IAAI,KAAK,WAAW,EAAE,CAAC;wBACjC,UAAU,CAAC,GAAG,EAAE;4BACd,IAAI,UAAU,CAAC,OAAO,EAAE,CAAC;gCACvB,UAAU,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,OAAO,EAAE;oCACzC,OAAO,EAAE,2BAA2B;oCACpC,QAAQ,EAAE,WAAW;oCACrB,MAAM,EAAE,CAAC;iCACV,CAAC,CAAC,CAAC;4BACN,CAAC;wBACH,CAAC,EAAE,EAAE,CAAC,CAAC;oBACT,CAAC;gBACH,CAAC,CAAC;gBACF,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE;gBACpB,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;gBAC3B,mBAAmB,EAAE,IAAI,CAAC,EAAE,EAAE;gBAC9B,SAAS,EAAE,IAAI;gBACf,OAAO,EAAE,IAAI;aACd,CAAC;YAEF,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,UAAiB,CAAC,CAAC;YAEjD,IAAI,CAAC;gBACH,MAAM,UAAU,GAAG,IAAI,iCAAe,CAAC;oBACrC,SAAS,EAAE,IAAI;oBACf,oBAAoB,EAAE,IAAI;iBAC3B,CAAC,CAAC;gBAEH,MAAM,UAAU,CAAC,UAAU,EAAE,CAAC;gBAE9B,yCAAyC;gBACzC,UAAU,CAAC,SAAS,EAAE,CAAC;gBAEvB,iCAAiC;gBACjC,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;gBAEtD,kCAAkC;gBAClC,MAAM,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;gBAEhE,MAAM,UAAU,CAAC,OAAO,EAAE,CAAC;YAC7B,CAAC;oBAAS,CAAC;gBACT,MAAM,CAAC,MAAM,GAAI,MAAc,CAAC,cAAc,IAAI,CAAC,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;YAC/D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;QAC7C,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACtD,IAAI,OAAO,WAAW,KAAK,WAAW,IAAI,WAAW,CAAC,GAAG,EAAE,CAAC;gBAC1D,MAAM,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;gBACpC,MAAM,CAAC,OAAO,SAAS,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACxC,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;gBAErC,MAAM,OAAO,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;gBAClC,MAAM,CAAC,OAAO,CAAC,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;YACpD,CAAC;iBAAM,CAAC;gBACN,yBAAyB;gBACzB,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBAC7B,MAAM,CAAC,OAAO,SAAS,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACxC,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACvC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE,GAAG,EAAE;YAC1D,IAAI,OAAO,qBAAqB,KAAK,WAAW,EAAE,CAAC;gBACjD,IAAI,MAAM,GAAG,KAAK,CAAC;gBACnB,MAAM,EAAE,GAAG,qBAAqB,CAAC,GAAG,EAAE;oBACpC,MAAM,GAAG,IAAI,CAAC;gBAChB,CAAC,CAAC,CAAC;gBAEH,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAEjC,IAAI,OAAO,oBAAoB,KAAK,WAAW,EAAE,CAAC;oBAChD,oBAAoB,CAAC,EAAE,CAAC,CAAC;gBAC3B,CAAC;YACH,CAAC;iBAAM,CAAC;gBACN,yBAAyB;gBACzB,IAAI,MAAM,GAAG,KAAK,CAAC;gBACnB,MAAM,EAAE,GAAG,UAAU,CAAC,GAAG,EAAE;oBACzB,MAAM,GAAG,IAAI,CAAC;gBAChB,CAAC,EAAE,EAAE,CAAC,CAAC;gBAEP,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACjC,YAAY,CAAC,EAAE,CAAC,CAAC;YACnB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iCAAiC,EAAE,GAAG,EAAE;QAC/C,EAAE,CAAC,2DAA2D,EAAE,GAAG,EAAE;YACnE,MAAM,WAAW,GAAmB,EAAE,CAAC;YAEvC,IAAI,CAAC;gBACH,sEAAsE;gBACtE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC5B,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW;oBACjD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC1B,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC1B,CAAC;gBAED,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAEpC,wBAAwB;gBACxB,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBAC1B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;oBAC3C,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;YAEL,CAAC;oBAAS,CAAC;gBACT,UAAU;gBACV,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,qDAAqD,EAAE,GAAG,EAAE;YAC7D,yCAAyC;YACzC,IAAI,OAAQ,MAAc,CAAC,EAAE,KAAK,UAAU,EAAE,CAAC;gBAC7C,MAAM,CAAC,GAAG,EAAE,CAAE,MAAc,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YACnD,CAAC;YAED,iDAAiD;YACjD,MAAM,OAAO,GAAG,EAAE,CAAC;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC7B,OAAO,CAAC,IAAI,CAAC;oBACX,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;oBACxC,EAAE,EAAE,CAAC;iBACN,CAAC,CAAC;YACL,CAAC;YAED,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEjC,mBAAmB;YACnB,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;YAEnB,wBAAwB;YACxB,IAAI,OAAQ,MAAc,CAAC,EAAE,KAAK,UAAU,EAAE,CAAC;gBAC5C,MAAc,CAAC,EAAE,EAAE,CAAC;YACvB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0CAA0C,EAAE,GAAG,EAAE;QACxD,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;YACvE,MAAM,QAAQ,GAAG,IAAI,2BAAY,CAAC,kBAAkB,EAAE;gBACpD,UAAU,EAAE,GAAG;gBACf,KAAK,EAAE,GAAG;aACX,EAAE,GAAG,EAAE,CAAC,IAAI,uBAAU,EAAE,CAAC,CAAC;YAE3B,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEtB,0BAA0B;YAC1B,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;YACzC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACrB,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEtB,MAAM,KAAK,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;YAE/C,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;YACpC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAEzC,2BAA2B;YAC3B,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,qBAAqB,EAAE,CAAC;YACvD,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;YAC9B,MAAM,CAAC,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,CAAC,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE7C,MAAM,QAAQ,CAAC,SAAS,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,QAAQ,GAAG,IAAI,2BAAY,CAAC,kBAAkB,CAAC,CAAC;YAEtD,iCAAiC;YACjC,MAAM,QAAQ,GAAG;gBACf,QAAQ,CAAC,IAAI,EAAE;gBACf,QAAQ,CAAC,qBAAqB,EAAE;gBAChC,QAAQ,CAAC,cAAc,EAAE;aAC1B,CAAC;YAEF,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAE5B,qCAAqC;YACrC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;YAE1C,MAAM,QAAQ,CAAC,SAAS,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACzC,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;YACnD,iBAAiB;YACjB,MAAM,SAAS,GAAG,OAAO,iBAAiB,KAAK,WAAW,CAAC;YAC3D,MAAM,CAAC,OAAO,SAAS,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEzC,gBAAgB;YAChB,IAAI,SAAS,EAAE,CAAC;gBACd,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAChD,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,CAAC;gBAC3F,MAAM,CAAC,OAAO,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC1C,CAAC;YAED,iBAAiB;YACjB,MAAM,UAAU,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC;YACjD,MAAM,CAAC,OAAO,UAAU,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAE1C,sBAAsB;YACtB,MAAM,cAAc,GAAG,OAAO,YAAY,KAAK,WAAW,CAAC;YAC3D,MAAM,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAElC,kBAAkB;YAClB,MAAM,WAAW,GAAG,OAAO,OAAO,KAAK,WAAW,CAAC;YACnD,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE/B,kBAAkB;YAClB,MAAM,SAAS,GAAG,OAAO,GAAG,KAAK,WAAW,IAAI,OAAO,GAAG,KAAK,WAAW,CAAC;YAC3E,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/__tests__/browser.compatibility.test.ts"],"sourcesContent":["import { NeuralMeshAsync } from '../src/core/NeuralMeshAsync';\r\nimport { WebGLBatcher } from '../src/core/utils/WebGLBatcher';\r\nimport { OrganismCore } from '../src/core/OrganismCore';\r\nimport { NeuralMesh } from '../src/core/NeuralMesh';\r\n\r\ndescribe('Browser Compatibility Tests', () => {\r\n  describe('WebGL Compatibility', () => {\r\n    let canvas: HTMLCanvasElement;\r\n\r\n    beforeEach(() => {\r\n      canvas = document.createElement('canvas');\r\n    });\r\n\r\n    it('should support WebGL 1.0 context', () => {\r\n      const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n      \r\n      expect(gl).toBeTruthy();\r\n      \r\n      if (gl && (gl as any).TRIANGLES !== undefined) {\r\n        const webgl = gl as WebGLRenderingContext;\r\n        // Test basic WebGL 1.0 functionality\r\n        expect(webgl.TRIANGLES).toBeDefined();\r\n        expect(webgl.ARRAY_BUFFER).toBeDefined();\r\n        expect(webgl.ELEMENT_ARRAY_BUFFER).toBeDefined();\r\n        \r\n        // Test buffer creation\r\n        const buffer = webgl.createBuffer();\r\n        expect(buffer).toBeTruthy();\r\n        \r\n        if (buffer) {\r\n          webgl.deleteBuffer(buffer);\r\n        }\r\n      }\r\n    });\r\n\r\n    it('should gracefully handle WebGL 2.0 features', () => {\r\n      const gl = canvas.getContext('webgl2') as WebGL2RenderingContext;\r\n      \r\n      if (gl) {\r\n        // WebGL 2.0 is available\r\n        expect(gl.createVertexArray).toBeDefined();\r\n        expect(gl.deleteVertexArray).toBeDefined();\r\n        expect(gl.bindVertexArray).toBeDefined();\r\n        \r\n        // Test VAO functionality\r\n        const vao = gl.createVertexArray();\r\n        expect(vao).toBeTruthy();\r\n        \r\n        if (vao) {\r\n          gl.bindVertexArray(vao);\r\n          gl.bindVertexArray(null);\r\n          gl.deleteVertexArray(vao);\r\n        }\r\n      } else {\r\n        // WebGL 2.0 fallback to 1.0\r\n        const gl1 = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n        expect(gl1).toBeTruthy();\r\n      }\r\n    });\r\n\r\n    it('should create WebGLBatcher with appropriate context', () => {\r\n      const gl = canvas.getContext('webgl') as WebGLRenderingContext;\r\n      expect(gl).toBeTruthy();\r\n      \r\n      if (gl) {\r\n        const batcher = new WebGLBatcher(gl, {\r\n          maxBatchSize: 5,\r\n          maxVertices: 100\r\n        });\r\n        \r\n        expect(batcher).toBeDefined();\r\n        \r\n        // Test basic functionality\r\n        const drawCallId = batcher.addDrawCall({\r\n          type: 'triangle',\r\n          vertices: new Float32Array([0, 0, 0, 0, 0, 1, 0, 0]),\r\n          uniforms: { u_color: 1.0 },\r\n          priority: 'normal'\r\n        });\r\n        \r\n        expect(drawCallId).toBeDefined();\r\n        \r\n        batcher.flush();\r\n        batcher.dispose();\r\n      }\r\n    });\r\n\r\n    it('should handle WebGL context loss gracefully', () => {\r\n      const gl = canvas.getContext('webgl') as WebGLRenderingContext;\r\n      expect(gl).toBeTruthy();\r\n      \r\n      if (gl) {\r\n        const batcher = new WebGLBatcher(gl);\r\n        \r\n        // Simulate context loss\r\n        const loseContextExt = gl.getExtension('WEBGL_lose_context');\r\n        if (loseContextExt) {\r\n          // Add draw call before context loss\r\n          batcher.addDrawCall({\r\n            type: 'triangle',\r\n            vertices: new Float32Array([0, 0, 0, 0, 0, 1, 0, 0]),\r\n            uniforms: { u_color: 1.0 },\r\n            priority: 'normal'\r\n          });\r\n          \r\n          // Lose context\r\n          loseContextExt.loseContext();\r\n          \r\n          // Should not crash when flushing\r\n          expect(() => batcher.flush()).not.toThrow();\r\n          \r\n          // Restore context\r\n          loseContextExt.restoreContext();\r\n        }\r\n        \r\n        batcher.dispose();\r\n      }\r\n    });\r\n\r\n    it('should detect WebGL capabilities and extensions', () => {\r\n      const gl = canvas.getContext('webgl') as WebGLRenderingContext;\r\n      expect(gl).toBeTruthy();\r\n      \r\n      if (gl) {\r\n        // Test basic WebGL functionality\r\n        expect(gl.getParameter).toBeDefined();\r\n        expect(gl.createShader).toBeDefined();\r\n        expect(gl.createProgram).toBeDefined();\r\n        \r\n        // Test WebGL extensions availability (these may or may not be available)\r\n        const anisoExt = gl.getExtension('EXT_texture_filter_anisotropic');\r\n        const floatExt = gl.getExtension('OES_texture_float');\r\n        const depthExt = gl.getExtension('WEBGL_depth_texture');\r\n        \r\n        // These might or might not be available, just test that the calls don't crash\r\n        expect(anisoExt === null || typeof anisoExt === 'object').toBe(true);\r\n        expect(floatExt === null || typeof floatExt === 'object').toBe(true);\r\n        expect(depthExt === null || typeof depthExt === 'object').toBe(true);\r\n        \r\n        // Test basic rendering capabilities\r\n        const renderer = gl.getParameter(gl.RENDERER);\r\n        const vendor = gl.getParameter(gl.VENDOR);\r\n        \r\n        expect(typeof renderer).toBe('string');\r\n        expect(typeof vendor).toBe('string');\r\n        \r\n        // Test buffer creation\r\n        const buffer = gl.createBuffer();\r\n        expect(buffer).toBeTruthy();\r\n        \r\n        if (buffer) {\r\n          gl.deleteBuffer(buffer);\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  describe('Web Workers Compatibility', () => {\r\n    it('should detect Worker support', () => {\r\n      const hasWorkerSupport = typeof Worker !== 'undefined';\r\n      expect(typeof hasWorkerSupport).toBe('boolean');\r\n      \r\n      if (hasWorkerSupport) {\r\n        // Worker is available\r\n        expect(Worker).toBeDefined();\r\n        expect(typeof Worker).toBe('function');\r\n      }\r\n    });\r\n\r\n    it('should handle NeuralMeshAsync with Worker fallback', async () => {\r\n      const neuralMesh = new NeuralMeshAsync({\r\n        useWorker: true,\r\n        fallbackToMainThread: true\r\n      });\r\n      \r\n      expect(neuralMesh).toBeDefined();\r\n      \r\n      await neuralMesh.initialize();\r\n      \r\n      // Test basic functionality regardless of worker support\r\n      neuralMesh.addNode('input1', 'input', 0.5);\r\n      neuralMesh.addNode('output1', 'output', 0);\r\n      neuralMesh.addConnection('input1', 'output1', 0.8);\r\n      \r\n      neuralMesh.stimulate('input1', 1.0);\r\n      neuralMesh.propagate();\r\n      \r\n      const activation = neuralMesh.getActivation('output1');\r\n      expect(typeof activation).toBe('number');\r\n      \r\n      await neuralMesh.suspend();\r\n    });\r\n\r\n    it('should handle Worker creation errors gracefully', async () => {\r\n      // Mock Worker to simulate creation failure\r\n      const originalWorker = global.Worker;\r\n      global.Worker = jest.fn(() => {\r\n        throw new Error('Worker creation failed');\r\n      });\r\n      \r\n      try {\r\n        const neuralMesh = new NeuralMeshAsync({\r\n          useWorker: true,\r\n          fallbackToMainThread: true\r\n        });\r\n        \r\n        await neuralMesh.initialize();\r\n        \r\n        // Should fallback to main thread\r\n        neuralMesh.addNode('test', 'input');\r\n        neuralMesh.stimulate('test', 0.5);\r\n        \r\n        expect(() => neuralMesh.propagate()).not.toThrow();\r\n        \r\n        await neuralMesh.suspend();\r\n      } finally {\r\n        global.Worker = originalWorker;\r\n      }\r\n    });\r\n\r\n    it('should handle Worker message errors', async () => {\r\n      // Mock Worker with error-prone message handling\r\n      const mockWorker = {\r\n        postMessage: jest.fn((message) => {\r\n          // Simulate message error for specific operations\r\n          if (message.type === 'propagate') {\r\n            setTimeout(() => {\r\n              if (mockWorker.onerror) {\r\n                mockWorker.onerror(new ErrorEvent('error', {\r\n                  message: 'Worker propagation failed',\r\n                  filename: 'worker.js',\r\n                  lineno: 1\r\n                }));\r\n              }\r\n            }, 10);\r\n          }\r\n        }),\r\n        terminate: jest.fn(),\r\n        addEventListener: jest.fn(),\r\n        removeEventListener: jest.fn(),\r\n        onmessage: null,\r\n        onerror: null\r\n      };\r\n\r\n      global.Worker = jest.fn(() => mockWorker as any);\r\n      \r\n      try {\r\n        const neuralMesh = new NeuralMeshAsync({\r\n          useWorker: true,\r\n          fallbackToMainThread: true\r\n        });\r\n        \r\n        await neuralMesh.initialize();\r\n        \r\n        // This should trigger the error scenario\r\n        neuralMesh.propagate();\r\n        \r\n        // Wait for error to be processed\r\n        await new Promise(resolve => setTimeout(resolve, 50));\r\n        \r\n        // System should remain functional\r\n        expect(() => neuralMesh.addNode('test', 'input')).not.toThrow();\r\n        \r\n        await neuralMesh.suspend();\r\n      } finally {\r\n        global.Worker = (global as any).originalWorker || (() => {});\r\n      }\r\n    });\r\n  });\r\n\r\n  describe('Performance API Compatibility', () => {\r\n    it('should handle performance.now() availability', () => {\r\n      if (typeof performance !== 'undefined' && performance.now) {\r\n        const startTime = performance.now();\r\n        expect(typeof startTime).toBe('number');\r\n        expect(startTime).toBeGreaterThan(0);\r\n        \r\n        const endTime = performance.now();\r\n        expect(endTime).toBeGreaterThanOrEqual(startTime);\r\n      } else {\r\n        // Fallback to Date.now()\r\n        const startTime = Date.now();\r\n        expect(typeof startTime).toBe('number');\r\n        expect(startTime).toBeGreaterThan(0);\r\n      }\r\n    });\r\n\r\n    it('should handle requestAnimationFrame availability', () => {\r\n      if (typeof requestAnimationFrame !== 'undefined') {\r\n        let called = false;\r\n        const id = requestAnimationFrame(() => {\r\n          called = true;\r\n        });\r\n        \r\n        expect(typeof id).toBe('number');\r\n        \r\n        if (typeof cancelAnimationFrame !== 'undefined') {\r\n          cancelAnimationFrame(id);\r\n        }\r\n      } else {\r\n        // Fallback to setTimeout\r\n        let called = false;\r\n        const id = setTimeout(() => {\r\n          called = true;\r\n        }, 16);\r\n        \r\n        expect(typeof id).toBe('number');\r\n        clearTimeout(id);\r\n      }\r\n    });\r\n  });\r\n\r\n  describe('Memory Management Compatibility', () => {\r\n    it('should handle large object creation without memory errors', () => {\r\n      const largeArrays: Float32Array[] = [];\r\n      \r\n      try {\r\n        // Create moderately large arrays (not too large for test environment)\r\n        for (let i = 0; i < 10; i++) {\r\n          const array = new Float32Array(1000); // 4KB each\r\n          array.fill(Math.random());\r\n          largeArrays.push(array);\r\n        }\r\n        \r\n        expect(largeArrays.length).toBe(10);\r\n        \r\n        // Verify data integrity\r\n        largeArrays.forEach(array => {\r\n          expect(array.length).toBe(1000);\r\n          expect(array[0]).toBeGreaterThanOrEqual(0);\r\n          expect(array[0]).toBeLessThanOrEqual(1);\r\n        });\r\n        \r\n      } finally {\r\n        // Cleanup\r\n        largeArrays.length = 0;\r\n      }\r\n    });\r\n\r\n    it('should handle garbage collection hints if available', () => {\r\n      // Some browsers provide gc() for testing\r\n      if (typeof (global as any).gc === 'function') {\r\n        expect(() => (global as any).gc()).not.toThrow();\r\n      }\r\n      \r\n      // Create and dispose objects to test GC behavior\r\n      const objects = [];\r\n      for (let i = 0; i < 100; i++) {\r\n        objects.push({\r\n          data: new Array(100).fill(Math.random()),\r\n          id: i\r\n        });\r\n      }\r\n      \r\n      expect(objects.length).toBe(100);\r\n      \r\n      // Clear references\r\n      objects.length = 0;\r\n      \r\n      // Force GC if available\r\n      if (typeof (global as any).gc === 'function') {\r\n        (global as any).gc();\r\n      }\r\n    });\r\n  });\r\n\r\n  describe('Cross-Browser OrganismCore Compatibility', () => {\r\n    it('should function correctly across different environments', async () => {\r\n      const organism = new OrganismCore('ATCGATCGATCGATCG', {\r\n        creativity: 0.5,\r\n        focus: 0.7\r\n      }, () => new NeuralMesh());\r\n      \r\n      await organism.boot();\r\n      \r\n      // Test core functionality\r\n      organism.stimulate('sensory_input', 0.8);\r\n      organism.update(1.0);\r\n      organism.mutate(0.05);\r\n      \r\n      const state = organism.getState();\r\n      expect(state.health).toBeGreaterThanOrEqual(0);\r\n      expect(state.energy).toBeGreaterThanOrEqual(0);\r\n      \r\n      const traits = organism.getTraits();\r\n      expect(traits.creativity).toBeCloseTo(0.5, 1);\r\n      expect(traits.focus).toBeCloseTo(0.7, 1);\r\n      \r\n      // Test performance metrics\r\n      const metrics = await organism.getPerformanceMetrics();\r\n      expect(metrics).toBeDefined();\r\n      expect(typeof metrics.cpu).toBe('number');\r\n      expect(typeof metrics.memory).toBe('number');\r\n      \r\n      await organism.hibernate();\r\n    });\r\n\r\n    it('should handle async operations consistently', async () => {\r\n      const organism = new OrganismCore('ATCGATCGATCGATCG');\r\n      \r\n      // Test multiple async operations\r\n      const promises = [\r\n        organism.boot(),\r\n        organism.getPerformanceMetrics(),\r\n        organism.flushMutations()\r\n      ];\r\n      \r\n      await Promise.all(promises);\r\n      \r\n      // All should complete without errors\r\n      expect(organism.getState()).toBeDefined();\r\n      \r\n      await organism.hibernate();\r\n    });\r\n  });\r\n\r\n  describe('Browser Feature Detection', () => {\r\n    it('should detect available APIs and features', () => {\r\n      // Canvas support\r\n      const hasCanvas = typeof HTMLCanvasElement !== 'undefined';\r\n      expect(typeof hasCanvas).toBe('boolean');\r\n      \r\n      // WebGL support\r\n      if (hasCanvas) {\r\n        const canvas = document.createElement('canvas');\r\n        const hasWebGL = !!(canvas.getContext('webgl') || canvas.getContext('experimental-webgl'));\r\n        expect(typeof hasWebGL).toBe('boolean');\r\n      }\r\n      \r\n      // Worker support\r\n      const hasWorkers = typeof Worker !== 'undefined';\r\n      expect(typeof hasWorkers).toBe('boolean');\r\n      \r\n      // Typed Array support\r\n      const hasTypedArrays = typeof Float32Array !== 'undefined';\r\n      expect(hasTypedArrays).toBe(true);\r\n      \r\n      // Promise support\r\n      const hasPromises = typeof Promise !== 'undefined';\r\n      expect(hasPromises).toBe(true);\r\n      \r\n      // Map/Set support\r\n      const hasMapSet = typeof Map !== 'undefined' && typeof Set !== 'undefined';\r\n      expect(hasMapSet).toBe(true);\r\n    });\r\n  });\r\n}); "],"version":3}