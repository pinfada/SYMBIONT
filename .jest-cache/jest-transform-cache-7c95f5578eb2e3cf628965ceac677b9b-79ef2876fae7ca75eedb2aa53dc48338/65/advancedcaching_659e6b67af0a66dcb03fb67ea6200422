c21d0e4e07e2cd8d1385b6d50c607bd5
"use strict";

/* istanbul ignore next */
function cov_2qycsiys8r() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/optimization/advanced-caching.ts";
  var hash = "f64799365849185456907c2ed76d81e0d20ac584";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/optimization/advanced-caching.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 4,
          column: 23
        },
        end: {
          line: 4,
          column: 60
        }
      },
      "3": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "4": {
        start: {
          line: 12,
          column: 27
        },
        end: {
          line: 12,
          column: 47
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 80
        }
      },
      "7": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 19,
          column: 24
        }
      },
      "9": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 24
        }
      },
      "10": {
        start: {
          line: 20,
          column: 22
        },
        end: {
          line: 20,
          column: 49
        }
      },
      "11": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 76
        }
      },
      "12": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 21
        }
      },
      "13": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 72
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 27
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 36
        }
      },
      "18": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "19": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 36
        }
      },
      "20": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 24
        }
      },
      "21": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 46,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 18
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 19
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 32
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 21
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 36
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 19,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 19,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/optimization/advanced-caching.ts",
      mappings: ";;;AAAA,6DAAoD;AACpD,mCAAmC;AACnC,kEAAkE;AAElE,MAAa,eAAe;IAA5B;QACU,UAAK,GAAqB,IAAI,GAAG,EAAE,CAAA;IAuC7C,CAAC;IArCC,GAAG,CAAC,GAAW,EAAE,KAAc;QAC7B,MAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;QACvC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;QAC/B,qBAAM,CAAC,IAAI,CAAC,qCAAqC,GAAG,GAAG,CAAC,CAAA;IAC1D,CAAC;IAED,GAAG,CAAC,GAAW;QACb,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QACtC,IAAI,CAAC,UAAU;YAAE,OAAO,IAAI,CAAA;QAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAA;QACzC,qBAAM,CAAC,IAAI,CAAC,iCAAiC,GAAG,GAAG,CAAC,CAAA;QACpD,OAAO,KAAK,CAAA;IACd,CAAC;IAED,UAAU,CAAC,GAAW;QACpB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;QACtB,qBAAM,CAAC,IAAI,CAAC,6BAA6B,GAAG,GAAG,CAAC,CAAA;IAClD,CAAC;IAED,KAAK;QACH,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;QAClB,qBAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAA;IACnC,CAAC;IAEO,QAAQ,CAAC,IAAa;QAC5B,yCAAyC;QACzC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;IAC7B,CAAC;IAEO,UAAU,CAAC,IAAa;QAC9B,8BAA8B;QAC9B,IAAI,CAAC;YACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAc,CAAC,CAAA;QACnC,CAAC;QAAC,MAAM,CAAC;YACP,OAAO,IAAI,CAAA;QACb,CAAC;IACH,CAAC;CACF;AAxCD,0CAwCC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/optimization/advanced-caching.ts"],
      sourcesContent: ["import { logger } from '@shared/utils/secureLogger';\r\n// optimization/advanced-caching.ts\r\n// Syst\xE8me de cache avanc\xE9 avec compression intelligente (Phase 4)\r\n\r\nexport class AdvancedCaching {\r\n  private cache: Map<string, any> = new Map()\r\n\r\n  set(key: string, value: unknown) {\r\n    const compressed = this.compress(value)\r\n    this.cache.set(key, compressed)\r\n    logger.info(`[Cache] Donn\xE9e mise en cache (cl\xE9=${key})`)\r\n  }\r\n\r\n  get(key: string): any {\r\n    const compressed = this.cache.get(key)\r\n    if (!compressed) return null\r\n    const value = this.decompress(compressed)\r\n    logger.info(`[Cache] Donn\xE9e r\xE9cup\xE9r\xE9e (cl\xE9=${key})`)\r\n    return value\r\n  }\r\n\r\n  invalidate(key: string) {\r\n    this.cache.delete(key)\r\n    logger.info(`[Cache] Invalidation (cl\xE9=${key})`)\r\n  }\r\n\r\n  clear() {\r\n    this.cache.clear()\r\n    logger.info(`[Cache] Cache vid\xE9`)\r\n  }\r\n\r\n  private compress(data: unknown): any {\r\n    // Simulation de compression intelligente\r\n    return JSON.stringify(data)\r\n  }\r\n\r\n  private decompress(data: unknown): any {\r\n    // Simulation de d\xE9compression\r\n    try {\r\n      return JSON.parse(data as string)\r\n    } catch {\r\n      return data\r\n    }\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f64799365849185456907c2ed76d81e0d20ac584"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2qycsiys8r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2qycsiys8r();
cov_2qycsiys8r().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2qycsiys8r().s[1]++;
exports.AdvancedCaching = void 0;
const secureLogger_1 =
/* istanbul ignore next */
(cov_2qycsiys8r().s[2]++, require("@shared/utils/secureLogger"));
// optimization/advanced-caching.ts
// Système de cache avancé avec compression intelligente (Phase 4)
class AdvancedCaching {
  constructor() {
    /* istanbul ignore next */
    cov_2qycsiys8r().f[0]++;
    cov_2qycsiys8r().s[3]++;
    this.cache = new Map();
  }
  set(key, value) {
    /* istanbul ignore next */
    cov_2qycsiys8r().f[1]++;
    const compressed =
    /* istanbul ignore next */
    (cov_2qycsiys8r().s[4]++, this.compress(value));
    /* istanbul ignore next */
    cov_2qycsiys8r().s[5]++;
    this.cache.set(key, compressed);
    /* istanbul ignore next */
    cov_2qycsiys8r().s[6]++;
    secureLogger_1.logger.info(`[Cache] Donnée mise en cache (clé=${key})`);
  }
  get(key) {
    /* istanbul ignore next */
    cov_2qycsiys8r().f[2]++;
    const compressed =
    /* istanbul ignore next */
    (cov_2qycsiys8r().s[7]++, this.cache.get(key));
    /* istanbul ignore next */
    cov_2qycsiys8r().s[8]++;
    if (!compressed) {
      /* istanbul ignore next */
      cov_2qycsiys8r().b[0][0]++;
      cov_2qycsiys8r().s[9]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2qycsiys8r().b[0][1]++;
    }
    const value =
    /* istanbul ignore next */
    (cov_2qycsiys8r().s[10]++, this.decompress(compressed));
    /* istanbul ignore next */
    cov_2qycsiys8r().s[11]++;
    secureLogger_1.logger.info(`[Cache] Donnée récupérée (clé=${key})`);
    /* istanbul ignore next */
    cov_2qycsiys8r().s[12]++;
    return value;
  }
  invalidate(key) {
    /* istanbul ignore next */
    cov_2qycsiys8r().f[3]++;
    cov_2qycsiys8r().s[13]++;
    this.cache.delete(key);
    /* istanbul ignore next */
    cov_2qycsiys8r().s[14]++;
    secureLogger_1.logger.info(`[Cache] Invalidation (clé=${key})`);
  }
  clear() {
    /* istanbul ignore next */
    cov_2qycsiys8r().f[4]++;
    cov_2qycsiys8r().s[15]++;
    this.cache.clear();
    /* istanbul ignore next */
    cov_2qycsiys8r().s[16]++;
    secureLogger_1.logger.info(`[Cache] Cache vidé`);
  }
  compress(data) {
    /* istanbul ignore next */
    cov_2qycsiys8r().f[5]++;
    cov_2qycsiys8r().s[17]++;
    // Simulation de compression intelligente
    return JSON.stringify(data);
  }
  decompress(data) {
    /* istanbul ignore next */
    cov_2qycsiys8r().f[6]++;
    cov_2qycsiys8r().s[18]++;
    // Simulation de décompression
    try {
      /* istanbul ignore next */
      cov_2qycsiys8r().s[19]++;
      return JSON.parse(data);
    } catch {
      /* istanbul ignore next */
      cov_2qycsiys8r().s[20]++;
      return data;
    }
  }
}
/* istanbul ignore next */
cov_2qycsiys8r().s[21]++;
exports.AdvancedCaching = AdvancedCaching;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnF5Y3NpeXM4ciIsImFjdHVhbENvdmVyYWdlIiwicyIsInNlY3VyZUxvZ2dlcl8xIiwicmVxdWlyZSIsIkFkdmFuY2VkQ2FjaGluZyIsImNvbnN0cnVjdG9yIiwiZiIsImNhY2hlIiwiTWFwIiwic2V0Iiwia2V5IiwidmFsdWUiLCJjb21wcmVzc2VkIiwiY29tcHJlc3MiLCJsb2dnZXIiLCJpbmZvIiwiZ2V0IiwiYiIsImRlY29tcHJlc3MiLCJpbnZhbGlkYXRlIiwiZGVsZXRlIiwiY2xlYXIiLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsInBhcnNlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi9tbnQvYy9Vc2Vycy9tX29saS9Qcm9qZXRzL1NZTUJJT05UL3NyYy9vcHRpbWl6YXRpb24vYWR2YW5jZWQtY2FjaGluZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAc2hhcmVkL3V0aWxzL3NlY3VyZUxvZ2dlcic7XHJcbi8vIG9wdGltaXphdGlvbi9hZHZhbmNlZC1jYWNoaW5nLnRzXHJcbi8vIFN5c3TDqG1lIGRlIGNhY2hlIGF2YW5jw6kgYXZlYyBjb21wcmVzc2lvbiBpbnRlbGxpZ2VudGUgKFBoYXNlIDQpXHJcblxyXG5leHBvcnQgY2xhc3MgQWR2YW5jZWRDYWNoaW5nIHtcclxuICBwcml2YXRlIGNhY2hlOiBNYXA8c3RyaW5nLCBhbnk+ID0gbmV3IE1hcCgpXHJcblxyXG4gIHNldChrZXk6IHN0cmluZywgdmFsdWU6IHVua25vd24pIHtcclxuICAgIGNvbnN0IGNvbXByZXNzZWQgPSB0aGlzLmNvbXByZXNzKHZhbHVlKVxyXG4gICAgdGhpcy5jYWNoZS5zZXQoa2V5LCBjb21wcmVzc2VkKVxyXG4gICAgbG9nZ2VyLmluZm8oYFtDYWNoZV0gRG9ubsOpZSBtaXNlIGVuIGNhY2hlIChjbMOpPSR7a2V5fSlgKVxyXG4gIH1cclxuXHJcbiAgZ2V0KGtleTogc3RyaW5nKTogYW55IHtcclxuICAgIGNvbnN0IGNvbXByZXNzZWQgPSB0aGlzLmNhY2hlLmdldChrZXkpXHJcbiAgICBpZiAoIWNvbXByZXNzZWQpIHJldHVybiBudWxsXHJcbiAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZGVjb21wcmVzcyhjb21wcmVzc2VkKVxyXG4gICAgbG9nZ2VyLmluZm8oYFtDYWNoZV0gRG9ubsOpZSByw6ljdXDDqXLDqWUgKGNsw6k9JHtrZXl9KWApXHJcbiAgICByZXR1cm4gdmFsdWVcclxuICB9XHJcblxyXG4gIGludmFsaWRhdGUoa2V5OiBzdHJpbmcpIHtcclxuICAgIHRoaXMuY2FjaGUuZGVsZXRlKGtleSlcclxuICAgIGxvZ2dlci5pbmZvKGBbQ2FjaGVdIEludmFsaWRhdGlvbiAoY2zDqT0ke2tleX0pYClcclxuICB9XHJcblxyXG4gIGNsZWFyKCkge1xyXG4gICAgdGhpcy5jYWNoZS5jbGVhcigpXHJcbiAgICBsb2dnZXIuaW5mbyhgW0NhY2hlXSBDYWNoZSB2aWTDqWApXHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNvbXByZXNzKGRhdGE6IHVua25vd24pOiBhbnkge1xyXG4gICAgLy8gU2ltdWxhdGlvbiBkZSBjb21wcmVzc2lvbiBpbnRlbGxpZ2VudGVcclxuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShkYXRhKVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBkZWNvbXByZXNzKGRhdGE6IHVua25vd24pOiBhbnkge1xyXG4gICAgLy8gU2ltdWxhdGlvbiBkZSBkw6ljb21wcmVzc2lvblxyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIEpTT04ucGFyc2UoZGF0YSBhcyBzdHJpbmcpXHJcbiAgICB9IGNhdGNoIHtcclxuICAgICAgcmV0dXJuIGRhdGFcclxuICAgIH1cclxuICB9XHJcbn0gIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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