d6c499599d9e810698c2019fa907cdb4
"use strict";

// Version asynchrone de NeuralMesh utilisant Web Workers
// Décharge les calculs intensifs vers un thread séparé
/* istanbul ignore next */
function cov_1ws59xrqcx() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/NeuralMeshAsync.ts";
  var hash = "50f48d99b19e451ddedbd4f562a8fefa0ca6030f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/NeuralMeshAsync.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 62
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 33
        }
      },
      "2": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 54
        }
      },
      "3": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "4": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 37
        }
      },
      "5": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "6": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 33
        }
      },
      "7": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 27
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 43
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 32
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "14": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 92
        }
      },
      "15": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 32
        }
      },
      "16": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "17": {
        start: {
          line: 38,
          column: 31
        },
        end: {
          line: 44,
          column: 50
        }
      },
      "18": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 70
        }
      },
      "19": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 72
        }
      },
      "20": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 68
        }
      },
      "21": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 112
        }
      },
      "22": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "23": {
        start: {
          line: 59,
          column: 54
        },
        end: {
          line: 59,
          column: 64
        }
      },
      "24": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 60,
          column: 56
        }
      },
      "25": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "26": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 139
        }
      },
      "27": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 19
        }
      },
      "28": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 40
        }
      },
      "29": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 42
        }
      },
      "30": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 54
        }
      },
      "31": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "32": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 39
        }
      },
      "33": {
        start: {
          line: 73,
          column: 13
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "34": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 57
        }
      },
      "35": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 134
        }
      },
      "36": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "37": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 34
        }
      },
      "38": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 55
        }
      },
      "39": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 39
        }
      },
      "40": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "41": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "42": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 74
        }
      },
      "43": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 23
        }
      },
      "44": {
        start: {
          line: 98,
          column: 23
        },
        end: {
          line: 98,
          column: 89
        }
      },
      "45": {
        start: {
          line: 99,
          column: 28
        },
        end: {
          line: 102,
          column: 25
        }
      },
      "46": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 50
        }
      },
      "47": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 71
        }
      },
      "48": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 73
        }
      },
      "49": {
        start: {
          line: 104,
          column: 28
        },
        end: {
          line: 104,
          column: 49
        }
      },
      "50": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 45
        }
      },
      "51": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 30
        }
      },
      "52": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 50
        }
      },
      "53": {
        start: {
          line: 115,
          column: 23
        },
        end: {
          line: 115,
          column: 26
        }
      },
      "54": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 105
        }
      },
      "55": {
        start: {
          line: 122,
          column: 21
        },
        end: {
          line: 122,
          column: 54
        }
      },
      "56": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 33
        }
      },
      "57": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 36
        }
      },
      "58": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "59": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 87
        }
      },
      "60": {
        start: {
          line: 133,
          column: 27
        },
        end: {
          line: 133,
          column: 75
        }
      },
      "61": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "62": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 45
        }
      },
      "63": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 54
        }
      },
      "64": {
        start: {
          line: 143,
          column: 21
        },
        end: {
          line: 143,
          column: 43
        }
      },
      "65": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "66": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 144
        }
      },
      "67": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 19
        }
      },
      "68": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 44
        }
      },
      "69": {
        start: {
          line: 154,
          column: 26
        },
        end: {
          line: 154,
          column: 43
        }
      },
      "70": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 176,
          column: 77
        }
      },
      "71": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 34
        }
      },
      "72": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 172,
          column: 13
        }
      },
      "73": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 167,
          column: 19
        }
      },
      "74": {
        start: {
          line: 164,
          column: 20
        },
        end: {
          line: 164,
          column: 113
        }
      },
      "75": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 166,
          column: 41
        }
      },
      "76": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 171,
          column: 37
        }
      },
      "77": {
        start: {
          line: 174,
          column: 35
        },
        end: {
          line: 174,
          column: 64
        }
      },
      "78": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 58
        }
      },
      "79": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "80": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "81": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 56
        }
      },
      "82": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "83": {
        start: {
          line: 190,
          column: 35
        },
        end: {
          line: 190,
          column: 68
        }
      },
      "84": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 197,
          column: 13
        }
      },
      "85": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 193,
          column: 29
        }
      },
      "86": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 193,
          column: 29
        }
      },
      "87": {
        start: {
          line: 194,
          column: 42
        },
        end: {
          line: 194,
          column: 82
        }
      },
      "88": {
        start: {
          line: 195,
          column: 38
        },
        end: {
          line: 195,
          column: 94
        }
      },
      "89": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 81
        }
      },
      "90": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 38
        }
      },
      "91": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 49
        }
      },
      "92": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "93": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 227,
          column: 13
        }
      },
      "94": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 221,
          column: 19
        }
      },
      "95": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 51
        }
      },
      "96": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 226,
          column: 38
        }
      },
      "97": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 102
        }
      },
      "98": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 34
        }
      },
      "99": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "100": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 245,
          column: 13
        }
      },
      "101": {
        start: {
          line: 241,
          column: 16
        },
        end: {
          line: 244,
          column: 17
        }
      },
      "102": {
        start: {
          line: 242,
          column: 20
        },
        end: {
          line: 242,
          column: 69
        }
      },
      "103": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 243,
          column: 85
        }
      },
      "104": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "105": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 252,
          column: 13
        }
      },
      "106": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 57
        }
      },
      "107": {
        start: {
          line: 251,
          column: 16
        },
        end: {
          line: 251,
          column: 65
        }
      },
      "108": {
        start: {
          line: 267,
          column: 28
        },
        end: {
          line: 267,
          column: 29
        }
      },
      "109": {
        start: {
          line: 268,
          column: 24
        },
        end: {
          line: 268,
          column: 25
        }
      },
      "110": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "111": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 50
        }
      },
      "112": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 24
        }
      },
      "113": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 61
        }
      },
      "114": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "115": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 283,
          column: 13
        }
      },
      "116": {
        start: {
          line: 281,
          column: 31
        },
        end: {
          line: 281,
          column: 109
        }
      },
      "117": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 282,
          column: 39
        }
      },
      "118": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 118
        }
      },
      "119": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 40
        }
      },
      "120": {
        start: {
          line: 295,
          column: 26
        },
        end: {
          line: 295,
          column: 27
        }
      },
      "121": {
        start: {
          line: 296,
          column: 30
        },
        end: {
          line: 296,
          column: 31
        }
      },
      "122": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 304,
          column: 9
        }
      },
      "123": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 303,
          column: 13
        }
      },
      "124": {
        start: {
          line: 299,
          column: 16
        },
        end: {
          line: 302,
          column: 17
        }
      },
      "125": {
        start: {
          line: 300,
          column: 20
        },
        end: {
          line: 300,
          column: 63
        }
      },
      "126": {
        start: {
          line: 301,
          column: 20
        },
        end: {
          line: 301,
          column: 38
        }
      },
      "127": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 71
        }
      },
      "128": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 321,
          column: 10
        }
      },
      "129": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "130": {
        start: {
          line: 329,
          column: 12
        },
        end: {
          line: 329,
          column: 39
        }
      },
      "131": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "132": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 344,
          column: 13
        }
      },
      "133": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 338,
          column: 19
        }
      },
      "134": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 40
        }
      },
      "135": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 342,
          column: 110
        }
      },
      "136": {
        start: {
          line: 343,
          column: 16
        },
        end: {
          line: 343,
          column: 41
        }
      },
      "137": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 31
        }
      },
      "138": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 47
        }
      },
      "139": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 46
        }
      },
      "140": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 52
        }
      },
      "141": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 53
        }
      },
      "142": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 47
        }
      },
      "143": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 49
        }
      },
      "144": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 65
        }
      },
      "145": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 64
        }
      },
      "146": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 64
        }
      },
      "147": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 66
        }
      },
      "148": {
        start: {
          line: 367,
          column: 8
        },
        end: {
          line: 367,
          column: 64
        }
      },
      "149": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 33
        }
      },
      "150": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 380,
          column: 9
        }
      },
      "151": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 36
        }
      },
      "152": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 31
        }
      },
      "153": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 37
        }
      },
      "154": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 381,
          column: 45
        }
      },
      "155": {
        start: {
          line: 388,
          column: 25
        },
        end: {
          line: 388,
          column: 59
        }
      },
      "156": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 37
        }
      },
      "157": {
        start: {
          line: 395,
          column: 28
        },
        end: {
          line: 395,
          column: 97
        }
      },
      "158": {
        start: {
          line: 397,
          column: 27
        },
        end: {
          line: 397,
          column: 28
        }
      },
      "159": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 406,
          column: 9
        }
      },
      "160": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 405,
          column: 13
        }
      },
      "161": {
        start: {
          line: 401,
          column: 16
        },
        end: {
          line: 401,
          column: 43
        }
      },
      "162": {
        start: {
          line: 407,
          column: 28
        },
        end: {
          line: 407,
          column: 54
        }
      },
      "163": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 56
        }
      },
      "164": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 419,
          column: 10
        }
      },
      "165": {
        start: {
          line: 422,
          column: 0
        },
        end: {
          line: 422,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 29
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 35
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 31
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 58
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 29
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 80
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 83,
            column: 39
          },
          end: {
            line: 83,
            column: 40
          }
        },
        loc: {
          start: {
            line: 83,
            column: 64
          },
          end: {
            line: 86,
            column: 9
          }
        },
        line: 83
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 5
          }
        },
        loc: {
          start: {
            line: 92,
            column: 55
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 92
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 93,
            column: 27
          },
          end: {
            line: 93,
            column: 28
          }
        },
        loc: {
          start: {
            line: 93,
            column: 48
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 93
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 99,
            column: 39
          },
          end: {
            line: 99,
            column: 40
          }
        },
        loc: {
          start: {
            line: 99,
            column: 45
          },
          end: {
            line: 102,
            column: 13
          }
        },
        line: 99
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 45
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 111
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 32
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 121
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 129,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        loc: {
          start: {
            line: 129,
            column: 40
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 129
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 29
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 142
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 22
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 153
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 155,
            column: 48
          },
          end: {
            line: 155,
            column: 49
          }
        },
        loc: {
          start: {
            line: 155,
            column: 54
          },
          end: {
            line: 176,
            column: 9
          }
        },
        line: 155
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 163,
            column: 25
          },
          end: {
            line: 163,
            column: 26
          }
        },
        loc: {
          start: {
            line: 163,
            column: 34
          },
          end: {
            line: 167,
            column: 17
          }
        },
        line: 163
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 20
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 181
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 15
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 203
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        loc: {
          start: {
            line: 209,
            column: 26
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 209
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 30
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 215
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 21
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 237
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 258,
            column: 4
          },
          end: {
            line: 258,
            column: 5
          }
        },
        loc: {
          start: {
            line: 258,
            column: 34
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 258
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 24
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 265
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        loc: {
          start: {
            line: 278,
            column: 35
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 278
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        loc: {
          start: {
            line: 294,
            column: 28
          },
          end: {
            line: 306,
            column: 5
          }
        },
        line: 294
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 310,
            column: 4
          },
          end: {
            line: 310,
            column: 5
          }
        },
        loc: {
          start: {
            line: 310,
            column: 13
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 310
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 326,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        loc: {
          start: {
            line: 326,
            column: 23
          },
          end: {
            line: 348,
            column: 5
          }
        },
        line: 326
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 5
          }
        },
        loc: {
          start: {
            line: 352,
            column: 26
          },
          end: {
            line: 368,
            column: 5
          }
        },
        line: 352
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        loc: {
          start: {
            line: 372,
            column: 20
          },
          end: {
            line: 382,
            column: 5
          }
        },
        line: 372
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 386,
            column: 5
          }
        },
        loc: {
          start: {
            line: 386,
            column: 24
          },
          end: {
            line: 390,
            column: 5
          }
        },
        line: 386
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 394,
            column: 5
          }
        },
        loc: {
          start: {
            line: 394,
            column: 27
          },
          end: {
            line: 409,
            column: 5
          }
        },
        line: 394
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 413,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        },
        loc: {
          start: {
            line: 413,
            column: 28
          },
          end: {
            line: 420,
            column: 5
          }
        },
        line: 413
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 25
          },
          end: {
            line: 8,
            column: 27
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "2": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: 73,
            column: 13
          },
          end: {
            line: 75,
            column: 9
          }
        }],
        line: 70
      },
      "3": {
        loc: {
          start: {
            line: 73,
            column: 13
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 13
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "4": {
        loc: {
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 92,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 92,
            column: 49
          },
          end: {
            line: 92,
            column: 53
          }
        }],
        line: 92
      },
      "5": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "6": {
        loc: {
          start: {
            line: 121,
            column: 22
          },
          end: {
            line: 121,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 121,
            column: 29
          },
          end: {
            line: 121,
            column: 30
          }
        }],
        line: 121
      },
      "7": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "8": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 130,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 130,
            column: 35
          }
        }, {
          start: {
            line: 130,
            column: 39
          },
          end: {
            line: 130,
            column: 60
          }
        }],
        line: 130
      },
      "9": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "10": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "11": {
        loc: {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 144,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 144,
            column: 17
          }
        }, {
          start: {
            line: 144,
            column: 21
          },
          end: {
            line: 144,
            column: 42
          }
        }],
        line: 144
      },
      "12": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 172,
            column: 13
          }
        }, {
          start: {
            line: 169,
            column: 17
          },
          end: {
            line: 172,
            column: 13
          }
        }],
        line: 159
      },
      "13": {
        loc: {
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 159,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 16
          },
          end: {
            line: 159,
            column: 27
          }
        }, {
          start: {
            line: 159,
            column: 31
          },
          end: {
            line: 159,
            column: 47
          }
        }],
        line: 159
      },
      "14": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 186,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 186,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "15": {
        loc: {
          start: {
            line: 190,
            column: 35
          },
          end: {
            line: 190,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 35
          },
          end: {
            line: 190,
            column: 63
          }
        }, {
          start: {
            line: 190,
            column: 67
          },
          end: {
            line: 190,
            column: 68
          }
        }],
        line: 190
      },
      "16": {
        loc: {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 193,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 193,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "17": {
        loc: {
          start: {
            line: 194,
            column: 42
          },
          end: {
            line: 194,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 42
          },
          end: {
            line: 194,
            column: 77
          }
        }, {
          start: {
            line: 194,
            column: 81
          },
          end: {
            line: 194,
            column: 82
          }
        }],
        line: 194
      },
      "18": {
        loc: {
          start: {
            line: 210,
            column: 15
          },
          end: {
            line: 210,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 15
          },
          end: {
            line: 210,
            column: 43
          }
        }, {
          start: {
            line: 210,
            column: 47
          },
          end: {
            line: 210,
            column: 48
          }
        }],
        line: 210
      },
      "19": {
        loc: {
          start: {
            line: 215,
            column: 17
          },
          end: {
            line: 215,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 215,
            column: 24
          },
          end: {
            line: 215,
            column: 28
          }
        }],
        line: 215
      },
      "20": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 227,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 227,
            column: 13
          }
        }, {
          start: {
            line: 225,
            column: 17
          },
          end: {
            line: 227,
            column: 13
          }
        }],
        line: 217
      },
      "21": {
        loc: {
          start: {
            line: 217,
            column: 16
          },
          end: {
            line: 217,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 16
          },
          end: {
            line: 217,
            column: 27
          }
        }, {
          start: {
            line: 217,
            column: 31
          },
          end: {
            line: 217,
            column: 47
          }
        }],
        line: 217
      },
      "22": {
        loc: {
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 244,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 244,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "23": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "24": {
        loc: {
          start: {
            line: 273,
            column: 15
          },
          end: {
            line: 273,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 273,
            column: 31
          },
          end: {
            line: 273,
            column: 56
          }
        }, {
          start: {
            line: 273,
            column: 59
          },
          end: {
            line: 273,
            column: 60
          }
        }],
        line: 273
      },
      "25": {
        loc: {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 283,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "26": {
        loc: {
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 16
          },
          end: {
            line: 280,
            column: 27
          }
        }, {
          start: {
            line: 280,
            column: 31
          },
          end: {
            line: 280,
            column: 47
          }
        }],
        line: 280
      },
      "27": {
        loc: {
          start: {
            line: 299,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "28": {
        loc: {
          start: {
            line: 305,
            column: 15
          },
          end: {
            line: 305,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 305,
            column: 37
          },
          end: {
            line: 305,
            column: 66
          }
        }, {
          start: {
            line: 305,
            column: 69
          },
          end: {
            line: 305,
            column: 70
          }
        }],
        line: 305
      },
      "29": {
        loc: {
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "30": {
        loc: {
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "31": {
        loc: {
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 380,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      },
      "32": {
        loc: {
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 398
      },
      "33": {
        loc: {
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 398,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 12
          },
          end: {
            line: 398,
            column: 23
          }
        }, {
          start: {
            line: 398,
            column: 27
          },
          end: {
            line: 398,
            column: 43
          }
        }],
        line: 398
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/NeuralMeshAsync.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/NeuralMeshAsync.ts"],
      sourcesContent: ["// Version asynchrone de NeuralMesh utilisant Web Workers\r\n// D\xE9charge les calculs intensifs vers un thread s\xE9par\xE9\r\n\r\nimport { INeuralMesh } from './interfaces/INeuralMesh';\r\nimport { WorkerMessage, WorkerResponse } from '../workers/NeuralWorker';\r\nimport { errorHandler } from './utils/ErrorHandler';\r\n\r\ninterface NeuralNode {\r\n  id: string;\r\n  type: 'input' | 'hidden' | 'output';\r\n  activation: number;\r\n  bias: number;\r\n}\r\n\r\ninterface NeuralConnection {\r\n  from: string;\r\n  to: string;\r\n  weight: number;\r\n  active: boolean;\r\n}\r\n\r\ninterface NeuralMeshAsyncConfig {\r\n  useWorker?: boolean;\r\n  fallbackToMainThread?: boolean;\r\n  maxRetries?: number;\r\n  timeoutMs?: number;\r\n}\r\n\r\nexport class NeuralMeshAsync implements INeuralMesh {\r\n  private nodes: Map<string, NeuralNode> = new Map();\r\n  private connections: Map<string, NeuralConnection[]> = new Map();\r\n  private activations: Map<string, number> = new Map();\r\n  // @ts-expect-error Taux r\xE9serv\xE9 pour usage futur\r\n  private learningRate: number = 0.01;\r\n  \r\n  // Worker management\r\n  private worker: Worker | null = null;\r\n  private networkId: string;\r\n  private workerReady = false;\r\n  private pendingOperations = new Map<string, {\r\n    resolve: (value: any) => void;\r\n    reject: (error: Error) => void;\r\n    timeout: NodeJS.Timeout;\r\n  }>();\r\n\r\n  // Performance tracking\r\n  private lastPropagationTime = 0;\r\n  private averageProcessingTime = 0;\r\n  private operationCount = 0;\r\n\r\n  // @ts-expect-error Configuration r\xE9serv\xE9e pour usage futur\r\n  private config: any;\r\n\r\n  constructor(config: NeuralMeshAsyncConfig = {}) {\r\n    this.config = {\r\n      useWorker: true,\r\n      fallbackToMainThread: true,\r\n      maxRetries: 3,\r\n      timeoutMs: 5000,\r\n      ...config\r\n    };\r\n    this.networkId = `network_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    this.initializeWorker();\r\n  }\r\n\r\n  /**\r\n   * Initialise le Web Worker\r\n   */\r\n  private initializeWorker(): void {\r\n    try {\r\n      // Dans un environnement de navigateur, nous devons cr\xE9er le worker diff\xE9remment\r\n      const workerBlob = new Blob([\r\n        // Contenu du worker en tant que string (pour contourner les limitations)\r\n        `\r\n        // Worker code sera inject\xE9 ici lors du build\r\n        importScripts('./workers/NeuralWorker.js');\r\n        `\r\n      ], { type: 'application/javascript' });\r\n      \r\n      this.worker = new Worker(URL.createObjectURL(workerBlob));\r\n      this.worker.onmessage = this.handleWorkerMessage.bind(this);\r\n      this.worker.onerror = this.handleWorkerError.bind(this);\r\n      \r\n    } catch (error) {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'initializeWorker', error, 'warning');\r\n      // Fallback : mode synchrone\r\n      this.worker = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * G\xE8re les messages du worker\r\n   */\r\n  private handleWorkerMessage(event: MessageEvent<WorkerResponse>): void {\r\n    const { type, id, payload, processingTime } = event.data;\r\n    \r\n    const operation = this.pendingOperations.get(id);\r\n    if (!operation) {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'handleWorkerMessage', \r\n        `Unknown operation ID: ${id}`, 'warning');\r\n      return;\r\n    }\r\n\r\n    // Clear timeout et remove operation\r\n    clearTimeout(operation.timeout);\r\n    this.pendingOperations.delete(id);\r\n\r\n    // Update performance metrics\r\n    this.updatePerformanceMetrics(processingTime);\r\n\r\n    if (type === 'NEURAL_RESULT') {\r\n      operation.resolve(payload);\r\n    } else if (type === 'NEURAL_ERROR') {\r\n      operation.reject(new Error(payload.message));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * G\xE8re les erreurs du worker\r\n   */\r\n  private handleWorkerError(event: ErrorEvent): void {\r\n    errorHandler.logSimpleError('NeuralMeshAsync', 'handleWorkerError', \r\n      `Worker error: ${event.message}`, 'error');\r\n    \r\n    // Reject all pending operations\r\n    this.pendingOperations.forEach(({ reject, timeout }) => {\r\n      clearTimeout(timeout);\r\n      reject(new Error('Worker error occurred'));\r\n    });\r\n    this.pendingOperations.clear();\r\n  }\r\n\r\n  /**\r\n   * Envoie un message au worker avec timeout\r\n   */\r\n  private sendWorkerMessage<T>(\r\n    type: WorkerMessage['type'], \r\n    payload: any, \r\n    timeoutMs: number = 5000\r\n  ): Promise<T> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!this.worker) {\r\n        reject(new Error('Worker not available, using fallback'));\r\n        return;\r\n      }\r\n\r\n      const id = `${type}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n      \r\n      const timeout = setTimeout(() => {\r\n        this.pendingOperations.delete(id);\r\n        reject(new Error(`Worker operation timeout: ${type}`));\r\n      }, timeoutMs);\r\n\r\n      this.pendingOperations.set(id, { resolve, reject, timeout });\r\n\r\n      const message: WorkerMessage = { type, id, payload };\r\n      this.worker.postMessage(message);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Met \xE0 jour les m\xE9triques de performance\r\n   */\r\n  private updatePerformanceMetrics(processingTime: number): void {\r\n    this.operationCount++;\r\n    this.lastPropagationTime = processingTime;\r\n    \r\n    // Moving average\r\n    const weight = 0.1;\r\n    this.averageProcessingTime = this.averageProcessingTime * (1 - weight) + processingTime * weight;\r\n  }\r\n\r\n  /**\r\n   * Ajoute un n\u0153ud au r\xE9seau\r\n   */\r\n  addNode(id: string, type: 'input' | 'hidden' | 'output', bias: number = 0): void {\r\n    const node: NeuralNode = { id, type, activation: 0, bias };\r\n    this.nodes.set(id, node);\r\n    this.activations.set(id, 0);\r\n  }\r\n\r\n  /**\r\n   * Ajoute une connexion entre deux n\u0153uds\r\n   */\r\n  addConnection(fromId: string, toId: string, weight: number): void {\r\n    if (!this.nodes.has(fromId) || !this.nodes.has(toId)) {\r\n      throw new Error(`Cannot connect non-existent nodes: ${fromId} -> ${toId}`);\r\n    }\r\n\r\n    const connection: NeuralConnection = { from: fromId, to: toId, weight, active: true };\r\n\r\n    if (!this.connections.has(fromId)) {\r\n      this.connections.set(fromId, []);\r\n    }\r\n    this.connections.get(fromId)!.push(connection);\r\n  }\r\n\r\n  /**\r\n   * Stimule un n\u0153ud d'entr\xE9e\r\n   */\r\n  stimulate(nodeId: string, value: number): void {\r\n    const node = this.nodes.get(nodeId);\r\n    if (!node || node.type !== 'input') {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'stimulate', \r\n        `Cannot stimulate non-input node: ${nodeId}`, 'warning');\r\n      return;\r\n    }\r\n    this.activations.set(nodeId, value);\r\n  }\r\n\r\n  /**\r\n   * Propagation des signaux dans le r\xE9seau\r\n   */\r\n  async propagate(): Promise<void> {\r\n    const startTime = performance.now();\r\n    \r\n    errorHandler.safeExecute(\r\n      () => {\r\n        // Increment operation count\r\n        this.operationCount++;\r\n        \r\n        // Try worker first if available\r\n        if (this.worker && this.workerReady) {\r\n          this.sendWorkerMessage('NEURAL_PROPAGATE', {\r\n            networkId: this.networkId,\r\n            activations: Object.fromEntries(this.activations)\r\n          }).catch(error => {\r\n            errorHandler.logSimpleError('NeuralMeshAsync', 'propagate', error, 'warning');\r\n            // Fallback to sync\r\n            this.propagateSync();\r\n          });\r\n        } else {\r\n          // Fallback to synchronous propagation\r\n          this.propagateSync();\r\n        }\r\n        \r\n        // Update performance metrics\r\n        const processingTime = performance.now() - startTime;\r\n        this.updatePerformanceMetrics(processingTime);\r\n      },\r\n      undefined,\r\n      { component: 'NeuralMeshAsync', method: 'propagate' }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Propagation synchrone (fallback)\r\n   */\r\n  private propagateSync(): void {\r\n    // Reset non-input activations\r\n    for (const [nodeId, node] of this.nodes) {\r\n      if (node.type !== 'input') {\r\n        this.activations.set(nodeId, node.bias);\r\n      }\r\n    }\r\n\r\n    // Propagate through connections\r\n    for (const [fromId, connections] of this.connections) {\r\n      const fromActivation = this.activations.get(fromId) || 0;\r\n      \r\n      for (const connection of connections) {\r\n        if (!connection.active) continue;\r\n        \r\n        const currentActivation = this.activations.get(connection.to) || 0;\r\n        const newActivation = currentActivation + (fromActivation * connection.weight);\r\n        this.activations.set(connection.to, this.sigmoid(newActivation));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fonction d'activation sigmo\xEFde\r\n   */\r\n  private sigmoid(x: number): number {\r\n    return 1 / (1 + Math.exp(-x));\r\n  }\r\n\r\n  /**\r\n   * R\xE9cup\xE8re l'activation d'un n\u0153ud\r\n   */\r\n  getActivation(nodeId: string): number {\r\n    return this.activations.get(nodeId) || 0;\r\n  }\r\n\r\n  /**\r\n   * Applique une mutation al\xE9atoire au r\xE9seau (version async)\r\n   */\r\n  async mutate(rate: number = 0.05): Promise<void> {\r\n    try {\r\n      if (this.worker && this.workerReady) {\r\n        await this.sendWorkerMessage('NEURAL_MUTATE', {\r\n          networkId: this.networkId,\r\n          rate\r\n        });\r\n        \r\n        // Sync back the mutations to local state\r\n        await this.syncNetworkFromWorker();\r\n      } else {\r\n        this.mutateSync(rate);\r\n      }\r\n    } catch (error) {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'mutate', error, 'warning');\r\n      this.mutateSync(rate);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mutation synchrone (fallback)\r\n   */\r\n  private mutateSync(rate: number): void {\r\n    // Mutate connection weights\r\n    for (const connections of this.connections.values()) {\r\n      for (const connection of connections) {\r\n        if (Math.random() < rate) {\r\n          connection.weight += (Math.random() - 0.5) * 0.2;\r\n          connection.weight = Math.max(-2, Math.min(2, connection.weight));\r\n        }\r\n      }\r\n    }\r\n\r\n    // Mutate node biases\r\n    for (const node of this.nodes.values()) {\r\n      if (Math.random() < rate) {\r\n        node.bias += (Math.random() - 0.5) * 0.1;\r\n        node.bias = Math.max(-1, Math.min(1, node.bias));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Synchronise l'\xE9tat du r\xE9seau depuis le worker\r\n   */\r\n  private async syncNetworkFromWorker(): Promise<void> {\r\n    // Implementation would sync worker state back to local state\r\n    // For now, we'll skip this complex synchronization\r\n  }\r\n\r\n  /**\r\n   * Mesure l'activit\xE9 neurale globale - impl\xE9mentation unifi\xE9e\r\n   */\r\n  getNeuralActivity(): number {\r\n    // Synchronous fallback implementation\r\n    let totalActivity = 0;\r\n    let nodeCount = 0;\r\n\r\n    for (const activation of this.activations.values()) {\r\n      totalActivity += Math.abs(activation);\r\n      nodeCount++;\r\n    }\r\n\r\n    return nodeCount > 0 ? totalActivity / nodeCount : 0;\r\n  }\r\n\r\n  /**\r\n   * Version asynchrone de getNeuralActivity pour calculs avanc\xE9s\r\n   */\r\n  async getNeuralActivityAsync(): Promise<number> {\r\n    try {\r\n      if (this.worker && this.workerReady) {\r\n        const result = await this.sendWorkerMessage<{\r\n          activity: number;\r\n          connectionStrength: number;\r\n          nodeCount: number;\r\n          connectionCount: number;\r\n        }>('NEURAL_ACTIVITY', { networkId: this.networkId });\r\n        \r\n        return result.activity;\r\n      }\r\n    } catch (error) {\r\n      errorHandler.logSimpleError('NeuralMeshAsync', 'getNeuralActivityAsync', error, 'warning');\r\n    }\r\n\r\n    // Fallback synchrone\r\n    return this.getNeuralActivity();\r\n  }\r\n\r\n  /**\r\n   * Mesure la force moyenne des connexions\r\n   */\r\n  getConnectionStrength(): number {\r\n    let totalWeight = 0;\r\n    let connectionCount = 0;\r\n\r\n    for (const connections of this.connections.values()) {\r\n      for (const connection of connections) {\r\n        if (connection.active) {\r\n          totalWeight += Math.abs(connection.weight);\r\n          connectionCount++;\r\n        }\r\n      }\r\n    }\r\n\r\n    return connectionCount > 0 ? totalWeight / connectionCount : 0;\r\n  }\r\n\r\n  /**\r\n   * Export JSON pour debug/sauvegarde\r\n   */\r\n  toJSON(): any {\r\n    return {\r\n      nodes: Array.from(this.nodes.values()),\r\n      connections: Array.from(this.connections.values()).flat(),\r\n      activations: Object.fromEntries(this.activations),\r\n      performance: {\r\n        lastPropagationTime: this.lastPropagationTime,\r\n        averageProcessingTime: this.averageProcessingTime,\r\n        operationCount: this.operationCount,\r\n        workerReady: this.workerReady\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialise le r\xE9seau neuronal\r\n   */\r\n  async initialize(): Promise<void> {\r\n    // Setup default network if empty\r\n    if (this.nodes.size === 0) {\r\n      this.setupDefaultNetwork();\r\n    }\r\n\r\n    // Initialize worker network\r\n    if (this.worker) {\r\n      try {\r\n        await this.sendWorkerMessage('NEURAL_INIT', {\r\n          networkId: this.networkId,\r\n          nodes: Array.from(this.nodes.values()),\r\n          connections: Array.from(this.connections.values()).flat()\r\n        });\r\n        this.workerReady = true;\r\n      } catch (error) {\r\n        errorHandler.logSimpleError('NeuralMeshAsync', 'initialize', error, 'warning');\r\n        this.workerReady = false;\r\n      }\r\n    }\r\n    \r\n    // Perform initial propagation\r\n    await this.propagate();\r\n  }\r\n\r\n  /**\r\n   * Configure un r\xE9seau par d\xE9faut pour les tests\r\n   */\r\n  private setupDefaultNetwork(): void {\r\n    // Add input nodes\r\n    this.addNode('sensory_input', 'input');\r\n    this.addNode('memory_input', 'input');\r\n    \r\n    // Add hidden nodes\r\n    this.addNode('processing_1', 'hidden', 0.1);\r\n    this.addNode('processing_2', 'hidden', -0.1);\r\n    \r\n    // Add output nodes\r\n    this.addNode('motor_output', 'output');\r\n    this.addNode('emotion_output', 'output');\r\n    \r\n    // Connect the network\r\n    this.addConnection('sensory_input', 'processing_1', 0.8);\r\n    this.addConnection('memory_input', 'processing_2', 0.6);\r\n    this.addConnection('processing_1', 'motor_output', 0.9);\r\n    this.addConnection('processing_2', 'emotion_output', 0.7);\r\n    this.addConnection('processing_1', 'processing_2', 0.3);\r\n  }\r\n\r\n  /**\r\n   * Suspend neural processing\r\n   */\r\n  async suspend(): Promise<void> {\r\n    // Clear activations but keep structure\r\n    this.activations.clear();\r\n    \r\n    // Terminate worker if needed\r\n    if (this.worker) {\r\n      this.worker.terminate();\r\n      this.worker = null;\r\n      this.workerReady = false;\r\n    }\r\n    \r\n    console.log('Neural mesh suspended');\r\n  }\r\n\r\n  /**\r\n   * Get CPU usage estimation\r\n   */\r\n  async getCPUUsage(): Promise<number> {\r\n    // Calculate based on processing time and operation frequency\r\n    const baseLoad = this.averageProcessingTime / 16.67; // Compare to 60fps frame time\r\n    return Math.min(1, baseLoad);\r\n  }\r\n\r\n  /**\r\n   * Get memory usage estimation\r\n   */\r\n  async getMemoryUsage(): Promise<number> {\r\n    const localMemory = (this.nodes.size + Array.from(this.connections.values()).length) * 64;\r\n    \r\n    // Add worker memory if available\r\n    let workerMemory = 0;\r\n    if (this.worker && this.workerReady) {\r\n      try {\r\n        // Would get actual worker stats, simplified for now\r\n        workerMemory = localMemory; // Estimate\r\n      } catch (error) {\r\n        // Ignore worker memory calculation error\r\n      }\r\n    }\r\n    \r\n    const totalMemory = localMemory + workerMemory;\r\n    return Math.min(1, totalMemory / (1024 * 1024)); // Convert to MB ratio\r\n  }\r\n\r\n  /**\r\n   * Get performance metrics\r\n   */\r\n  getPerformanceMetrics(): {\r\n    lastPropagationTime: number;\r\n    averageProcessingTime: number;\r\n    operationCount: number;\r\n    workerReady: boolean;\r\n  } {\r\n    return {\r\n      lastPropagationTime: this.lastPropagationTime,\r\n      averageProcessingTime: this.averageProcessingTime,\r\n      operationCount: this.operationCount,\r\n      workerReady: this.workerReady\r\n    };\r\n  }\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "50f48d99b19e451ddedbd4f562a8fefa0ca6030f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ws59xrqcx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ws59xrqcx();
cov_1ws59xrqcx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ws59xrqcx().s[1]++;
exports.NeuralMeshAsync = void 0;
const ErrorHandler_1 =
/* istanbul ignore next */
(cov_1ws59xrqcx().s[2]++, require("./utils/ErrorHandler"));
class NeuralMeshAsync {
  constructor(config =
  /* istanbul ignore next */
  (cov_1ws59xrqcx().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[0]++;
    cov_1ws59xrqcx().s[3]++;
    this.nodes = new Map();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[4]++;
    this.connections = new Map();
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[5]++;
    this.activations = new Map();
    // @ts-expect-error Taux réservé pour usage futur
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[6]++;
    this.learningRate = 0.01;
    // Worker management
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[7]++;
    this.worker = null;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[8]++;
    this.workerReady = false;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[9]++;
    this.pendingOperations = new Map();
    // Performance tracking
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[10]++;
    this.lastPropagationTime = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[11]++;
    this.averageProcessingTime = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[12]++;
    this.operationCount = 0;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[13]++;
    this.config = {
      useWorker: true,
      fallbackToMainThread: true,
      maxRetries: 3,
      timeoutMs: 5000,
      ...config
    };
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[14]++;
    this.networkId = `network_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[15]++;
    this.initializeWorker();
  }
  /**
   * Initialise le Web Worker
   */
  initializeWorker() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[1]++;
    cov_1ws59xrqcx().s[16]++;
    try {
      // Dans un environnement de navigateur, nous devons créer le worker différemment
      const workerBlob =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[17]++, new Blob([
      // Contenu du worker en tant que string (pour contourner les limitations)
      `
        // Worker code sera injecté ici lors du build
        importScripts('./workers/NeuralWorker.js');
        `], {
        type: 'application/javascript'
      }));
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[18]++;
      this.worker = new Worker(URL.createObjectURL(workerBlob));
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[19]++;
      this.worker.onmessage = this.handleWorkerMessage.bind(this);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[20]++;
      this.worker.onerror = this.handleWorkerError.bind(this);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[21]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'initializeWorker', error, 'warning');
      // Fallback : mode synchrone
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[22]++;
      this.worker = null;
    }
  }
  /**
   * Gère les messages du worker
   */
  handleWorkerMessage(event) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[2]++;
    const {
      type,
      id,
      payload,
      processingTime
    } =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[23]++, event.data);
    const operation =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[24]++, this.pendingOperations.get(id));
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[25]++;
    if (!operation) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[1][0]++;
      cov_1ws59xrqcx().s[26]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'handleWorkerMessage', `Unknown operation ID: ${id}`, 'warning');
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[27]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[1][1]++;
    }
    // Clear timeout et remove operation
    cov_1ws59xrqcx().s[28]++;
    clearTimeout(operation.timeout);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[29]++;
    this.pendingOperations.delete(id);
    // Update performance metrics
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[30]++;
    this.updatePerformanceMetrics(processingTime);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[31]++;
    if (type === 'NEURAL_RESULT') {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[2][0]++;
      cov_1ws59xrqcx().s[32]++;
      operation.resolve(payload);
    } else {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[2][1]++;
      cov_1ws59xrqcx().s[33]++;
      if (type === 'NEURAL_ERROR') {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[3][0]++;
        cov_1ws59xrqcx().s[34]++;
        operation.reject(new Error(payload.message));
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[3][1]++;
      }
    }
  }
  /**
   * Gère les erreurs du worker
   */
  handleWorkerError(event) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[3]++;
    cov_1ws59xrqcx().s[35]++;
    ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'handleWorkerError', `Worker error: ${event.message}`, 'error');
    // Reject all pending operations
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[36]++;
    this.pendingOperations.forEach(({
      reject,
      timeout
    }) => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[4]++;
      cov_1ws59xrqcx().s[37]++;
      clearTimeout(timeout);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[38]++;
      reject(new Error('Worker error occurred'));
    });
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[39]++;
    this.pendingOperations.clear();
  }
  /**
   * Envoie un message au worker avec timeout
   */
  sendWorkerMessage(type, payload, timeoutMs =
  /* istanbul ignore next */
  (cov_1ws59xrqcx().b[4][0]++, 5000)) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[5]++;
    cov_1ws59xrqcx().s[40]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[6]++;
      cov_1ws59xrqcx().s[41]++;
      if (!this.worker) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[5][0]++;
        cov_1ws59xrqcx().s[42]++;
        reject(new Error('Worker not available, using fallback'));
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[43]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[5][1]++;
      }
      const id =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[44]++, `${type}_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
      const timeout =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[45]++, setTimeout(() => {
        /* istanbul ignore next */
        cov_1ws59xrqcx().f[7]++;
        cov_1ws59xrqcx().s[46]++;
        this.pendingOperations.delete(id);
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[47]++;
        reject(new Error(`Worker operation timeout: ${type}`));
      }, timeoutMs));
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[48]++;
      this.pendingOperations.set(id, {
        resolve,
        reject,
        timeout
      });
      const message =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[49]++, {
        type,
        id,
        payload
      });
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[50]++;
      this.worker.postMessage(message);
    });
  }
  /**
   * Met à jour les métriques de performance
   */
  updatePerformanceMetrics(processingTime) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[8]++;
    cov_1ws59xrqcx().s[51]++;
    this.operationCount++;
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[52]++;
    this.lastPropagationTime = processingTime;
    // Moving average
    const weight =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[53]++, 0.1);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[54]++;
    this.averageProcessingTime = this.averageProcessingTime * (1 - weight) + processingTime * weight;
  }
  /**
   * Ajoute un nœud au réseau
   */
  addNode(id, type, bias =
  /* istanbul ignore next */
  (cov_1ws59xrqcx().b[6][0]++, 0)) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[9]++;
    const node =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[55]++, {
      id,
      type,
      activation: 0,
      bias
    });
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[56]++;
    this.nodes.set(id, node);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[57]++;
    this.activations.set(id, 0);
  }
  /**
   * Ajoute une connexion entre deux nœuds
   */
  addConnection(fromId, toId, weight) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[10]++;
    cov_1ws59xrqcx().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[8][0]++, !this.nodes.has(fromId)) ||
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[8][1]++, !this.nodes.has(toId))) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[7][0]++;
      cov_1ws59xrqcx().s[59]++;
      throw new Error(`Cannot connect non-existent nodes: ${fromId} -> ${toId}`);
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[7][1]++;
    }
    const connection =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[60]++, {
      from: fromId,
      to: toId,
      weight,
      active: true
    });
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[61]++;
    if (!this.connections.has(fromId)) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[9][0]++;
      cov_1ws59xrqcx().s[62]++;
      this.connections.set(fromId, []);
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[9][1]++;
    }
    cov_1ws59xrqcx().s[63]++;
    this.connections.get(fromId).push(connection);
  }
  /**
   * Stimule un nœud d'entrée
   */
  stimulate(nodeId, value) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[11]++;
    const node =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[64]++, this.nodes.get(nodeId));
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[11][0]++, !node) ||
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[11][1]++, node.type !== 'input')) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[10][0]++;
      cov_1ws59xrqcx().s[66]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'stimulate', `Cannot stimulate non-input node: ${nodeId}`, 'warning');
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[67]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[10][1]++;
    }
    cov_1ws59xrqcx().s[68]++;
    this.activations.set(nodeId, value);
  }
  /**
   * Propagation des signaux dans le réseau
   */
  async propagate() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[12]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[69]++, performance.now());
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[70]++;
    ErrorHandler_1.errorHandler.safeExecute(() => {
      /* istanbul ignore next */
      cov_1ws59xrqcx().f[13]++;
      cov_1ws59xrqcx().s[71]++;
      // Increment operation count
      this.operationCount++;
      // Try worker first if available
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[72]++;
      if (
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[13][0]++, this.worker) &&
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[13][1]++, this.workerReady)) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[12][0]++;
        cov_1ws59xrqcx().s[73]++;
        this.sendWorkerMessage('NEURAL_PROPAGATE', {
          networkId: this.networkId,
          activations: Object.fromEntries(this.activations)
        }).catch(error => {
          /* istanbul ignore next */
          cov_1ws59xrqcx().f[14]++;
          cov_1ws59xrqcx().s[74]++;
          ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'propagate', error, 'warning');
          // Fallback to sync
          /* istanbul ignore next */
          cov_1ws59xrqcx().s[75]++;
          this.propagateSync();
        });
      } else {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[12][1]++;
        cov_1ws59xrqcx().s[76]++;
        // Fallback to synchronous propagation
        this.propagateSync();
      }
      // Update performance metrics
      const processingTime =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[77]++, performance.now() - startTime);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[78]++;
      this.updatePerformanceMetrics(processingTime);
    }, undefined, {
      component: 'NeuralMeshAsync',
      method: 'propagate'
    });
  }
  /**
   * Propagation synchrone (fallback)
   */
  propagateSync() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[15]++;
    cov_1ws59xrqcx().s[79]++;
    // Reset non-input activations
    for (const [nodeId, node] of this.nodes) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[80]++;
      if (node.type !== 'input') {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[14][0]++;
        cov_1ws59xrqcx().s[81]++;
        this.activations.set(nodeId, node.bias);
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[14][1]++;
      }
    }
    // Propagate through connections
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[82]++;
    for (const [fromId, connections] of this.connections) {
      const fromActivation =
      /* istanbul ignore next */
      (cov_1ws59xrqcx().s[83]++,
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[15][0]++, this.activations.get(fromId)) ||
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[15][1]++, 0));
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[84]++;
      for (const connection of connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[85]++;
        if (!connection.active) {
          /* istanbul ignore next */
          cov_1ws59xrqcx().b[16][0]++;
          cov_1ws59xrqcx().s[86]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1ws59xrqcx().b[16][1]++;
        }
        const currentActivation =
        /* istanbul ignore next */
        (cov_1ws59xrqcx().s[87]++,
        /* istanbul ignore next */
        (cov_1ws59xrqcx().b[17][0]++, this.activations.get(connection.to)) ||
        /* istanbul ignore next */
        (cov_1ws59xrqcx().b[17][1]++, 0));
        const newActivation =
        /* istanbul ignore next */
        (cov_1ws59xrqcx().s[88]++, currentActivation + fromActivation * connection.weight);
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[89]++;
        this.activations.set(connection.to, this.sigmoid(newActivation));
      }
    }
  }
  /**
   * Fonction d'activation sigmoïde
   */
  sigmoid(x) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[16]++;
    cov_1ws59xrqcx().s[90]++;
    return 1 / (1 + Math.exp(-x));
  }
  /**
   * Récupère l'activation d'un nœud
   */
  getActivation(nodeId) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[17]++;
    cov_1ws59xrqcx().s[91]++;
    return /* istanbul ignore next */(cov_1ws59xrqcx().b[18][0]++, this.activations.get(nodeId)) ||
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[18][1]++, 0);
  }
  /**
   * Applique une mutation aléatoire au réseau (version async)
   */
  async mutate(rate =
  /* istanbul ignore next */
  (cov_1ws59xrqcx().b[19][0]++, 0.05)) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[18]++;
    cov_1ws59xrqcx().s[92]++;
    try {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[93]++;
      if (
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[21][0]++, this.worker) &&
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[21][1]++, this.workerReady)) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[20][0]++;
        cov_1ws59xrqcx().s[94]++;
        await this.sendWorkerMessage('NEURAL_MUTATE', {
          networkId: this.networkId,
          rate
        });
        // Sync back the mutations to local state
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[95]++;
        await this.syncNetworkFromWorker();
      } else {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[20][1]++;
        cov_1ws59xrqcx().s[96]++;
        this.mutateSync(rate);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[97]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'mutate', error, 'warning');
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[98]++;
      this.mutateSync(rate);
    }
  }
  /**
   * Mutation synchrone (fallback)
   */
  mutateSync(rate) {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[19]++;
    cov_1ws59xrqcx().s[99]++;
    // Mutate connection weights
    for (const connections of this.connections.values()) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[100]++;
      for (const connection of connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[101]++;
        if (Math.random() < rate) {
          /* istanbul ignore next */
          cov_1ws59xrqcx().b[22][0]++;
          cov_1ws59xrqcx().s[102]++;
          connection.weight += (Math.random() - 0.5) * 0.2;
          /* istanbul ignore next */
          cov_1ws59xrqcx().s[103]++;
          connection.weight = Math.max(-2, Math.min(2, connection.weight));
        } else
        /* istanbul ignore next */
        {
          cov_1ws59xrqcx().b[22][1]++;
        }
      }
    }
    // Mutate node biases
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[104]++;
    for (const node of this.nodes.values()) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[105]++;
      if (Math.random() < rate) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[23][0]++;
        cov_1ws59xrqcx().s[106]++;
        node.bias += (Math.random() - 0.5) * 0.1;
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[107]++;
        node.bias = Math.max(-1, Math.min(1, node.bias));
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[23][1]++;
      }
    }
  }
  /**
   * Synchronise l'état du réseau depuis le worker
   */
  async syncNetworkFromWorker() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[20]++;
  } // Implementation would sync worker state back to local state
  // For now, we'll skip this complex synchronization
  /**
   * Mesure l'activité neurale globale - implémentation unifiée
   */
  getNeuralActivity() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[21]++;
    // Synchronous fallback implementation
    let totalActivity =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[108]++, 0);
    let nodeCount =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[109]++, 0);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[110]++;
    for (const activation of this.activations.values()) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[111]++;
      totalActivity += Math.abs(activation);
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[112]++;
      nodeCount++;
    }
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[113]++;
    return nodeCount > 0 ?
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[24][0]++, totalActivity / nodeCount) :
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[24][1]++, 0);
  }
  /**
   * Version asynchrone de getNeuralActivity pour calculs avancés
   */
  async getNeuralActivityAsync() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[22]++;
    cov_1ws59xrqcx().s[114]++;
    try {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[115]++;
      if (
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[26][0]++, this.worker) &&
      /* istanbul ignore next */
      (cov_1ws59xrqcx().b[26][1]++, this.workerReady)) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().b[25][0]++;
        const result =
        /* istanbul ignore next */
        (cov_1ws59xrqcx().s[116]++, await this.sendWorkerMessage('NEURAL_ACTIVITY', {
          networkId: this.networkId
        }));
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[117]++;
        return result.activity;
      } else
      /* istanbul ignore next */
      {
        cov_1ws59xrqcx().b[25][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[118]++;
      ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'getNeuralActivityAsync', error, 'warning');
    }
    // Fallback synchrone
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[119]++;
    return this.getNeuralActivity();
  }
  /**
   * Mesure la force moyenne des connexions
   */
  getConnectionStrength() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[23]++;
    let totalWeight =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[120]++, 0);
    let connectionCount =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[121]++, 0);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[122]++;
    for (const connections of this.connections.values()) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[123]++;
      for (const connection of connections) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[124]++;
        if (connection.active) {
          /* istanbul ignore next */
          cov_1ws59xrqcx().b[27][0]++;
          cov_1ws59xrqcx().s[125]++;
          totalWeight += Math.abs(connection.weight);
          /* istanbul ignore next */
          cov_1ws59xrqcx().s[126]++;
          connectionCount++;
        } else
        /* istanbul ignore next */
        {
          cov_1ws59xrqcx().b[27][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[127]++;
    return connectionCount > 0 ?
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[28][0]++, totalWeight / connectionCount) :
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[28][1]++, 0);
  }
  /**
   * Export JSON pour debug/sauvegarde
   */
  toJSON() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[24]++;
    cov_1ws59xrqcx().s[128]++;
    return {
      nodes: Array.from(this.nodes.values()),
      connections: Array.from(this.connections.values()).flat(),
      activations: Object.fromEntries(this.activations),
      performance: {
        lastPropagationTime: this.lastPropagationTime,
        averageProcessingTime: this.averageProcessingTime,
        operationCount: this.operationCount,
        workerReady: this.workerReady
      }
    };
  }
  /**
   * Initialise le réseau neuronal
   */
  async initialize() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[25]++;
    cov_1ws59xrqcx().s[129]++;
    // Setup default network if empty
    if (this.nodes.size === 0) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[29][0]++;
      cov_1ws59xrqcx().s[130]++;
      this.setupDefaultNetwork();
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[29][1]++;
    }
    // Initialize worker network
    cov_1ws59xrqcx().s[131]++;
    if (this.worker) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[30][0]++;
      cov_1ws59xrqcx().s[132]++;
      try {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[133]++;
        await this.sendWorkerMessage('NEURAL_INIT', {
          networkId: this.networkId,
          nodes: Array.from(this.nodes.values()),
          connections: Array.from(this.connections.values()).flat()
        });
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[134]++;
        this.workerReady = true;
      } catch (error) {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[135]++;
        ErrorHandler_1.errorHandler.logSimpleError('NeuralMeshAsync', 'initialize', error, 'warning');
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[136]++;
        this.workerReady = false;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[30][1]++;
    }
    // Perform initial propagation
    cov_1ws59xrqcx().s[137]++;
    await this.propagate();
  }
  /**
   * Configure un réseau par défaut pour les tests
   */
  setupDefaultNetwork() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[26]++;
    cov_1ws59xrqcx().s[138]++;
    // Add input nodes
    this.addNode('sensory_input', 'input');
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[139]++;
    this.addNode('memory_input', 'input');
    // Add hidden nodes
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[140]++;
    this.addNode('processing_1', 'hidden', 0.1);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[141]++;
    this.addNode('processing_2', 'hidden', -0.1);
    // Add output nodes
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[142]++;
    this.addNode('motor_output', 'output');
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[143]++;
    this.addNode('emotion_output', 'output');
    // Connect the network
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[144]++;
    this.addConnection('sensory_input', 'processing_1', 0.8);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[145]++;
    this.addConnection('memory_input', 'processing_2', 0.6);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[146]++;
    this.addConnection('processing_1', 'motor_output', 0.9);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[147]++;
    this.addConnection('processing_2', 'emotion_output', 0.7);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[148]++;
    this.addConnection('processing_1', 'processing_2', 0.3);
  }
  /**
   * Suspend neural processing
   */
  async suspend() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[27]++;
    cov_1ws59xrqcx().s[149]++;
    // Clear activations but keep structure
    this.activations.clear();
    // Terminate worker if needed
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[150]++;
    if (this.worker) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[31][0]++;
      cov_1ws59xrqcx().s[151]++;
      this.worker.terminate();
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[152]++;
      this.worker = null;
      /* istanbul ignore next */
      cov_1ws59xrqcx().s[153]++;
      this.workerReady = false;
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[31][1]++;
    }
    cov_1ws59xrqcx().s[154]++;
    console.log('Neural mesh suspended');
  }
  /**
   * Get CPU usage estimation
   */
  async getCPUUsage() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[28]++;
    // Calculate based on processing time and operation frequency
    const baseLoad =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[155]++, this.averageProcessingTime / 16.67); // Compare to 60fps frame time
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[156]++;
    return Math.min(1, baseLoad);
  }
  /**
   * Get memory usage estimation
   */
  async getMemoryUsage() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[29]++;
    const localMemory =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[157]++, (this.nodes.size + Array.from(this.connections.values()).length) * 64);
    // Add worker memory if available
    let workerMemory =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[158]++, 0);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[159]++;
    if (
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[33][0]++, this.worker) &&
    /* istanbul ignore next */
    (cov_1ws59xrqcx().b[33][1]++, this.workerReady)) {
      /* istanbul ignore next */
      cov_1ws59xrqcx().b[32][0]++;
      cov_1ws59xrqcx().s[160]++;
      try {
        /* istanbul ignore next */
        cov_1ws59xrqcx().s[161]++;
        // Would get actual worker stats, simplified for now
        workerMemory = localMemory; // Estimate
      } catch (error) {
        // Ignore worker memory calculation error
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ws59xrqcx().b[32][1]++;
    }
    const totalMemory =
    /* istanbul ignore next */
    (cov_1ws59xrqcx().s[162]++, localMemory + workerMemory);
    /* istanbul ignore next */
    cov_1ws59xrqcx().s[163]++;
    return Math.min(1, totalMemory / (1024 * 1024)); // Convert to MB ratio
  }
  /**
   * Get performance metrics
   */
  getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_1ws59xrqcx().f[30]++;
    cov_1ws59xrqcx().s[164]++;
    return {
      lastPropagationTime: this.lastPropagationTime,
      averageProcessingTime: this.averageProcessingTime,
      operationCount: this.operationCount,
      workerReady: this.workerReady
    };
  }
}
/* istanbul ignore next */
cov_1ws59xrqcx().s[165]++;
exports.NeuralMeshAsync = NeuralMeshAsync;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXdzNTl4cnFjeCIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIkVycm9ySGFuZGxlcl8xIiwicmVxdWlyZSIsIk5ldXJhbE1lc2hBc3luYyIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwibm9kZXMiLCJNYXAiLCJjb25uZWN0aW9ucyIsImFjdGl2YXRpb25zIiwibGVhcm5pbmdSYXRlIiwid29ya2VyIiwid29ya2VyUmVhZHkiLCJwZW5kaW5nT3BlcmF0aW9ucyIsImxhc3RQcm9wYWdhdGlvblRpbWUiLCJhdmVyYWdlUHJvY2Vzc2luZ1RpbWUiLCJvcGVyYXRpb25Db3VudCIsInVzZVdvcmtlciIsImZhbGxiYWNrVG9NYWluVGhyZWFkIiwibWF4UmV0cmllcyIsInRpbWVvdXRNcyIsIm5ldHdvcmtJZCIsIkRhdGUiLCJub3ciLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHIiLCJpbml0aWFsaXplV29ya2VyIiwid29ya2VyQmxvYiIsIkJsb2IiLCJXb3JrZXIiLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJvbm1lc3NhZ2UiLCJoYW5kbGVXb3JrZXJNZXNzYWdlIiwiYmluZCIsIm9uZXJyb3IiLCJoYW5kbGVXb3JrZXJFcnJvciIsImVycm9yIiwiZXJyb3JIYW5kbGVyIiwibG9nU2ltcGxlRXJyb3IiLCJldmVudCIsImlkIiwicGF5bG9hZCIsInByb2Nlc3NpbmdUaW1lIiwiZGF0YSIsIm9wZXJhdGlvbiIsImdldCIsImNsZWFyVGltZW91dCIsInRpbWVvdXQiLCJkZWxldGUiLCJ1cGRhdGVQZXJmb3JtYW5jZU1ldHJpY3MiLCJyZXNvbHZlIiwicmVqZWN0IiwiRXJyb3IiLCJtZXNzYWdlIiwiZm9yRWFjaCIsImNsZWFyIiwic2VuZFdvcmtlck1lc3NhZ2UiLCJQcm9taXNlIiwic2V0VGltZW91dCIsInNldCIsInBvc3RNZXNzYWdlIiwid2VpZ2h0IiwiYWRkTm9kZSIsImJpYXMiLCJub2RlIiwiYWN0aXZhdGlvbiIsImFkZENvbm5lY3Rpb24iLCJmcm9tSWQiLCJ0b0lkIiwiaGFzIiwiY29ubmVjdGlvbiIsImZyb20iLCJ0byIsImFjdGl2ZSIsInB1c2giLCJzdGltdWxhdGUiLCJub2RlSWQiLCJ2YWx1ZSIsInByb3BhZ2F0ZSIsInN0YXJ0VGltZSIsInBlcmZvcm1hbmNlIiwic2FmZUV4ZWN1dGUiLCJPYmplY3QiLCJmcm9tRW50cmllcyIsImNhdGNoIiwicHJvcGFnYXRlU3luYyIsImNvbXBvbmVudCIsIm1ldGhvZCIsImZyb21BY3RpdmF0aW9uIiwiY3VycmVudEFjdGl2YXRpb24iLCJuZXdBY3RpdmF0aW9uIiwic2lnbW9pZCIsIngiLCJleHAiLCJnZXRBY3RpdmF0aW9uIiwibXV0YXRlIiwicmF0ZSIsInN5bmNOZXR3b3JrRnJvbVdvcmtlciIsIm11dGF0ZVN5bmMiLCJ2YWx1ZXMiLCJtYXgiLCJtaW4iLCJnZXROZXVyYWxBY3Rpdml0eSIsInRvdGFsQWN0aXZpdHkiLCJub2RlQ291bnQiLCJhYnMiLCJnZXROZXVyYWxBY3Rpdml0eUFzeW5jIiwicmVzdWx0IiwiYWN0aXZpdHkiLCJnZXRDb25uZWN0aW9uU3RyZW5ndGgiLCJ0b3RhbFdlaWdodCIsImNvbm5lY3Rpb25Db3VudCIsInRvSlNPTiIsIkFycmF5IiwiZmxhdCIsImluaXRpYWxpemUiLCJzaXplIiwic2V0dXBEZWZhdWx0TmV0d29yayIsInN1c3BlbmQiLCJ0ZXJtaW5hdGUiLCJjb25zb2xlIiwibG9nIiwiZ2V0Q1BVVXNhZ2UiLCJiYXNlTG9hZCIsImdldE1lbW9yeVVzYWdlIiwibG9jYWxNZW1vcnkiLCJsZW5ndGgiLCJ3b3JrZXJNZW1vcnkiLCJ0b3RhbE1lbW9yeSIsImdldFBlcmZvcm1hbmNlTWV0cmljcyIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvbW50L2MvVXNlcnMvbV9vbGkvUHJvamV0cy9TWU1CSU9OVC9zcmMvY29yZS9OZXVyYWxNZXNoQXN5bmMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVmVyc2lvbiBhc3luY2hyb25lIGRlIE5ldXJhbE1lc2ggdXRpbGlzYW50IFdlYiBXb3JrZXJzXHJcbi8vIETDqWNoYXJnZSBsZXMgY2FsY3VscyBpbnRlbnNpZnMgdmVycyB1biB0aHJlYWQgc8OpcGFyw6lcclxuXHJcbmltcG9ydCB7IElOZXVyYWxNZXNoIH0gZnJvbSAnLi9pbnRlcmZhY2VzL0lOZXVyYWxNZXNoJztcclxuaW1wb3J0IHsgV29ya2VyTWVzc2FnZSwgV29ya2VyUmVzcG9uc2UgfSBmcm9tICcuLi93b3JrZXJzL05ldXJhbFdvcmtlcic7XHJcbmltcG9ydCB7IGVycm9ySGFuZGxlciB9IGZyb20gJy4vdXRpbHMvRXJyb3JIYW5kbGVyJztcclxuXHJcbmludGVyZmFjZSBOZXVyYWxOb2RlIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIHR5cGU6ICdpbnB1dCcgfCAnaGlkZGVuJyB8ICdvdXRwdXQnO1xyXG4gIGFjdGl2YXRpb246IG51bWJlcjtcclxuICBiaWFzOiBudW1iZXI7XHJcbn1cclxuXHJcbmludGVyZmFjZSBOZXVyYWxDb25uZWN0aW9uIHtcclxuICBmcm9tOiBzdHJpbmc7XHJcbiAgdG86IHN0cmluZztcclxuICB3ZWlnaHQ6IG51bWJlcjtcclxuICBhY3RpdmU6IGJvb2xlYW47XHJcbn1cclxuXHJcbmludGVyZmFjZSBOZXVyYWxNZXNoQXN5bmNDb25maWcge1xyXG4gIHVzZVdvcmtlcj86IGJvb2xlYW47XHJcbiAgZmFsbGJhY2tUb01haW5UaHJlYWQ/OiBib29sZWFuO1xyXG4gIG1heFJldHJpZXM/OiBudW1iZXI7XHJcbiAgdGltZW91dE1zPzogbnVtYmVyO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgTmV1cmFsTWVzaEFzeW5jIGltcGxlbWVudHMgSU5ldXJhbE1lc2gge1xyXG4gIHByaXZhdGUgbm9kZXM6IE1hcDxzdHJpbmcsIE5ldXJhbE5vZGU+ID0gbmV3IE1hcCgpO1xyXG4gIHByaXZhdGUgY29ubmVjdGlvbnM6IE1hcDxzdHJpbmcsIE5ldXJhbENvbm5lY3Rpb25bXT4gPSBuZXcgTWFwKCk7XHJcbiAgcHJpdmF0ZSBhY3RpdmF0aW9uczogTWFwPHN0cmluZywgbnVtYmVyPiA9IG5ldyBNYXAoKTtcclxuICAvLyBAdHMtZXhwZWN0LWVycm9yIFRhdXggcsOpc2VydsOpIHBvdXIgdXNhZ2UgZnV0dXJcclxuICBwcml2YXRlIGxlYXJuaW5nUmF0ZTogbnVtYmVyID0gMC4wMTtcclxuICBcclxuICAvLyBXb3JrZXIgbWFuYWdlbWVudFxyXG4gIHByaXZhdGUgd29ya2VyOiBXb3JrZXIgfCBudWxsID0gbnVsbDtcclxuICBwcml2YXRlIG5ldHdvcmtJZDogc3RyaW5nO1xyXG4gIHByaXZhdGUgd29ya2VyUmVhZHkgPSBmYWxzZTtcclxuICBwcml2YXRlIHBlbmRpbmdPcGVyYXRpb25zID0gbmV3IE1hcDxzdHJpbmcsIHtcclxuICAgIHJlc29sdmU6ICh2YWx1ZTogYW55KSA9PiB2b2lkO1xyXG4gICAgcmVqZWN0OiAoZXJyb3I6IEVycm9yKSA9PiB2b2lkO1xyXG4gICAgdGltZW91dDogTm9kZUpTLlRpbWVvdXQ7XHJcbiAgfT4oKTtcclxuXHJcbiAgLy8gUGVyZm9ybWFuY2UgdHJhY2tpbmdcclxuICBwcml2YXRlIGxhc3RQcm9wYWdhdGlvblRpbWUgPSAwO1xyXG4gIHByaXZhdGUgYXZlcmFnZVByb2Nlc3NpbmdUaW1lID0gMDtcclxuICBwcml2YXRlIG9wZXJhdGlvbkNvdW50ID0gMDtcclxuXHJcbiAgLy8gQHRzLWV4cGVjdC1lcnJvciBDb25maWd1cmF0aW9uIHLDqXNlcnbDqWUgcG91ciB1c2FnZSBmdXR1clxyXG4gIHByaXZhdGUgY29uZmlnOiBhbnk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGNvbmZpZzogTmV1cmFsTWVzaEFzeW5jQ29uZmlnID0ge30pIHtcclxuICAgIHRoaXMuY29uZmlnID0ge1xyXG4gICAgICB1c2VXb3JrZXI6IHRydWUsXHJcbiAgICAgIGZhbGxiYWNrVG9NYWluVGhyZWFkOiB0cnVlLFxyXG4gICAgICBtYXhSZXRyaWVzOiAzLFxyXG4gICAgICB0aW1lb3V0TXM6IDUwMDAsXHJcbiAgICAgIC4uLmNvbmZpZ1xyXG4gICAgfTtcclxuICAgIHRoaXMubmV0d29ya0lkID0gYG5ldHdvcmtfJHtEYXRlLm5vdygpfV8ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KX1gO1xyXG4gICAgdGhpcy5pbml0aWFsaXplV29ya2VyKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbml0aWFsaXNlIGxlIFdlYiBXb3JrZXJcclxuICAgKi9cclxuICBwcml2YXRlIGluaXRpYWxpemVXb3JrZXIoKTogdm9pZCB7XHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBEYW5zIHVuIGVudmlyb25uZW1lbnQgZGUgbmF2aWdhdGV1ciwgbm91cyBkZXZvbnMgY3LDqWVyIGxlIHdvcmtlciBkaWZmw6lyZW1tZW50XHJcbiAgICAgIGNvbnN0IHdvcmtlckJsb2IgPSBuZXcgQmxvYihbXHJcbiAgICAgICAgLy8gQ29udGVudSBkdSB3b3JrZXIgZW4gdGFudCBxdWUgc3RyaW5nIChwb3VyIGNvbnRvdXJuZXIgbGVzIGxpbWl0YXRpb25zKVxyXG4gICAgICAgIGBcclxuICAgICAgICAvLyBXb3JrZXIgY29kZSBzZXJhIGluamVjdMOpIGljaSBsb3JzIGR1IGJ1aWxkXHJcbiAgICAgICAgaW1wb3J0U2NyaXB0cygnLi93b3JrZXJzL05ldXJhbFdvcmtlci5qcycpO1xyXG4gICAgICAgIGBcclxuICAgICAgXSwgeyB0eXBlOiAnYXBwbGljYXRpb24vamF2YXNjcmlwdCcgfSk7XHJcbiAgICAgIFxyXG4gICAgICB0aGlzLndvcmtlciA9IG5ldyBXb3JrZXIoVVJMLmNyZWF0ZU9iamVjdFVSTCh3b3JrZXJCbG9iKSk7XHJcbiAgICAgIHRoaXMud29ya2VyLm9ubWVzc2FnZSA9IHRoaXMuaGFuZGxlV29ya2VyTWVzc2FnZS5iaW5kKHRoaXMpO1xyXG4gICAgICB0aGlzLndvcmtlci5vbmVycm9yID0gdGhpcy5oYW5kbGVXb3JrZXJFcnJvci5iaW5kKHRoaXMpO1xyXG4gICAgICBcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGVycm9ySGFuZGxlci5sb2dTaW1wbGVFcnJvcignTmV1cmFsTWVzaEFzeW5jJywgJ2luaXRpYWxpemVXb3JrZXInLCBlcnJvciwgJ3dhcm5pbmcnKTtcclxuICAgICAgLy8gRmFsbGJhY2sgOiBtb2RlIHN5bmNocm9uZVxyXG4gICAgICB0aGlzLndvcmtlciA9IG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHw6hyZSBsZXMgbWVzc2FnZXMgZHUgd29ya2VyXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBoYW5kbGVXb3JrZXJNZXNzYWdlKGV2ZW50OiBNZXNzYWdlRXZlbnQ8V29ya2VyUmVzcG9uc2U+KTogdm9pZCB7XHJcbiAgICBjb25zdCB7IHR5cGUsIGlkLCBwYXlsb2FkLCBwcm9jZXNzaW5nVGltZSB9ID0gZXZlbnQuZGF0YTtcclxuICAgIFxyXG4gICAgY29uc3Qgb3BlcmF0aW9uID0gdGhpcy5wZW5kaW5nT3BlcmF0aW9ucy5nZXQoaWQpO1xyXG4gICAgaWYgKCFvcGVyYXRpb24pIHtcclxuICAgICAgZXJyb3JIYW5kbGVyLmxvZ1NpbXBsZUVycm9yKCdOZXVyYWxNZXNoQXN5bmMnLCAnaGFuZGxlV29ya2VyTWVzc2FnZScsIFxyXG4gICAgICAgIGBVbmtub3duIG9wZXJhdGlvbiBJRDogJHtpZH1gLCAnd2FybmluZycpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2xlYXIgdGltZW91dCBldCByZW1vdmUgb3BlcmF0aW9uXHJcbiAgICBjbGVhclRpbWVvdXQob3BlcmF0aW9uLnRpbWVvdXQpO1xyXG4gICAgdGhpcy5wZW5kaW5nT3BlcmF0aW9ucy5kZWxldGUoaWQpO1xyXG5cclxuICAgIC8vIFVwZGF0ZSBwZXJmb3JtYW5jZSBtZXRyaWNzXHJcbiAgICB0aGlzLnVwZGF0ZVBlcmZvcm1hbmNlTWV0cmljcyhwcm9jZXNzaW5nVGltZSk7XHJcblxyXG4gICAgaWYgKHR5cGUgPT09ICdORVVSQUxfUkVTVUxUJykge1xyXG4gICAgICBvcGVyYXRpb24ucmVzb2x2ZShwYXlsb2FkKTtcclxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ05FVVJBTF9FUlJPUicpIHtcclxuICAgICAgb3BlcmF0aW9uLnJlamVjdChuZXcgRXJyb3IocGF5bG9hZC5tZXNzYWdlKSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHw6hyZSBsZXMgZXJyZXVycyBkdSB3b3JrZXJcclxuICAgKi9cclxuICBwcml2YXRlIGhhbmRsZVdvcmtlckVycm9yKGV2ZW50OiBFcnJvckV2ZW50KTogdm9pZCB7XHJcbiAgICBlcnJvckhhbmRsZXIubG9nU2ltcGxlRXJyb3IoJ05ldXJhbE1lc2hBc3luYycsICdoYW5kbGVXb3JrZXJFcnJvcicsIFxyXG4gICAgICBgV29ya2VyIGVycm9yOiAke2V2ZW50Lm1lc3NhZ2V9YCwgJ2Vycm9yJyk7XHJcbiAgICBcclxuICAgIC8vIFJlamVjdCBhbGwgcGVuZGluZyBvcGVyYXRpb25zXHJcbiAgICB0aGlzLnBlbmRpbmdPcGVyYXRpb25zLmZvckVhY2goKHsgcmVqZWN0LCB0aW1lb3V0IH0pID0+IHtcclxuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xyXG4gICAgICByZWplY3QobmV3IEVycm9yKCdXb3JrZXIgZXJyb3Igb2NjdXJyZWQnKSk7XHJcbiAgICB9KTtcclxuICAgIHRoaXMucGVuZGluZ09wZXJhdGlvbnMuY2xlYXIoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEVudm9pZSB1biBtZXNzYWdlIGF1IHdvcmtlciBhdmVjIHRpbWVvdXRcclxuICAgKi9cclxuICBwcml2YXRlIHNlbmRXb3JrZXJNZXNzYWdlPFQ+KFxyXG4gICAgdHlwZTogV29ya2VyTWVzc2FnZVsndHlwZSddLCBcclxuICAgIHBheWxvYWQ6IGFueSwgXHJcbiAgICB0aW1lb3V0TXM6IG51bWJlciA9IDUwMDBcclxuICApOiBQcm9taXNlPFQ+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgIGlmICghdGhpcy53b3JrZXIpIHtcclxuICAgICAgICByZWplY3QobmV3IEVycm9yKCdXb3JrZXIgbm90IGF2YWlsYWJsZSwgdXNpbmcgZmFsbGJhY2snKSk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCBpZCA9IGAke3R5cGV9XyR7RGF0ZS5ub3coKX1fJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSl9YDtcclxuICAgICAgXHJcbiAgICAgIGNvbnN0IHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICB0aGlzLnBlbmRpbmdPcGVyYXRpb25zLmRlbGV0ZShpZCk7XHJcbiAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihgV29ya2VyIG9wZXJhdGlvbiB0aW1lb3V0OiAke3R5cGV9YCkpO1xyXG4gICAgICB9LCB0aW1lb3V0TXMpO1xyXG5cclxuICAgICAgdGhpcy5wZW5kaW5nT3BlcmF0aW9ucy5zZXQoaWQsIHsgcmVzb2x2ZSwgcmVqZWN0LCB0aW1lb3V0IH0pO1xyXG5cclxuICAgICAgY29uc3QgbWVzc2FnZTogV29ya2VyTWVzc2FnZSA9IHsgdHlwZSwgaWQsIHBheWxvYWQgfTtcclxuICAgICAgdGhpcy53b3JrZXIucG9zdE1lc3NhZ2UobWVzc2FnZSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIE1ldCDDoCBqb3VyIGxlcyBtw6l0cmlxdWVzIGRlIHBlcmZvcm1hbmNlXHJcbiAgICovXHJcbiAgcHJpdmF0ZSB1cGRhdGVQZXJmb3JtYW5jZU1ldHJpY3MocHJvY2Vzc2luZ1RpbWU6IG51bWJlcik6IHZvaWQge1xyXG4gICAgdGhpcy5vcGVyYXRpb25Db3VudCsrO1xyXG4gICAgdGhpcy5sYXN0UHJvcGFnYXRpb25UaW1lID0gcHJvY2Vzc2luZ1RpbWU7XHJcbiAgICBcclxuICAgIC8vIE1vdmluZyBhdmVyYWdlXHJcbiAgICBjb25zdCB3ZWlnaHQgPSAwLjE7XHJcbiAgICB0aGlzLmF2ZXJhZ2VQcm9jZXNzaW5nVGltZSA9IHRoaXMuYXZlcmFnZVByb2Nlc3NpbmdUaW1lICogKDEgLSB3ZWlnaHQpICsgcHJvY2Vzc2luZ1RpbWUgKiB3ZWlnaHQ7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBBam91dGUgdW4gbsWTdWQgYXUgcsOpc2VhdVxyXG4gICAqL1xyXG4gIGFkZE5vZGUoaWQ6IHN0cmluZywgdHlwZTogJ2lucHV0JyB8ICdoaWRkZW4nIHwgJ291dHB1dCcsIGJpYXM6IG51bWJlciA9IDApOiB2b2lkIHtcclxuICAgIGNvbnN0IG5vZGU6IE5ldXJhbE5vZGUgPSB7IGlkLCB0eXBlLCBhY3RpdmF0aW9uOiAwLCBiaWFzIH07XHJcbiAgICB0aGlzLm5vZGVzLnNldChpZCwgbm9kZSk7XHJcbiAgICB0aGlzLmFjdGl2YXRpb25zLnNldChpZCwgMCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBBam91dGUgdW5lIGNvbm5leGlvbiBlbnRyZSBkZXV4IG7Fk3Vkc1xyXG4gICAqL1xyXG4gIGFkZENvbm5lY3Rpb24oZnJvbUlkOiBzdHJpbmcsIHRvSWQ6IHN0cmluZywgd2VpZ2h0OiBudW1iZXIpOiB2b2lkIHtcclxuICAgIGlmICghdGhpcy5ub2Rlcy5oYXMoZnJvbUlkKSB8fCAhdGhpcy5ub2Rlcy5oYXModG9JZCkpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgY29ubmVjdCBub24tZXhpc3RlbnQgbm9kZXM6ICR7ZnJvbUlkfSAtPiAke3RvSWR9YCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgY29ubmVjdGlvbjogTmV1cmFsQ29ubmVjdGlvbiA9IHsgZnJvbTogZnJvbUlkLCB0bzogdG9JZCwgd2VpZ2h0LCBhY3RpdmU6IHRydWUgfTtcclxuXHJcbiAgICBpZiAoIXRoaXMuY29ubmVjdGlvbnMuaGFzKGZyb21JZCkpIHtcclxuICAgICAgdGhpcy5jb25uZWN0aW9ucy5zZXQoZnJvbUlkLCBbXSk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmNvbm5lY3Rpb25zLmdldChmcm9tSWQpIS5wdXNoKGNvbm5lY3Rpb24pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU3RpbXVsZSB1biBuxZN1ZCBkJ2VudHLDqWVcclxuICAgKi9cclxuICBzdGltdWxhdGUobm9kZUlkOiBzdHJpbmcsIHZhbHVlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIGNvbnN0IG5vZGUgPSB0aGlzLm5vZGVzLmdldChub2RlSWQpO1xyXG4gICAgaWYgKCFub2RlIHx8IG5vZGUudHlwZSAhPT0gJ2lucHV0Jykge1xyXG4gICAgICBlcnJvckhhbmRsZXIubG9nU2ltcGxlRXJyb3IoJ05ldXJhbE1lc2hBc3luYycsICdzdGltdWxhdGUnLCBcclxuICAgICAgICBgQ2Fubm90IHN0aW11bGF0ZSBub24taW5wdXQgbm9kZTogJHtub2RlSWR9YCwgJ3dhcm5pbmcnKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdGhpcy5hY3RpdmF0aW9ucy5zZXQobm9kZUlkLCB2YWx1ZSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBQcm9wYWdhdGlvbiBkZXMgc2lnbmF1eCBkYW5zIGxlIHLDqXNlYXVcclxuICAgKi9cclxuICBhc3luYyBwcm9wYWdhdGUoKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBjb25zdCBzdGFydFRpbWUgPSBwZXJmb3JtYW5jZS5ub3coKTtcclxuICAgIFxyXG4gICAgZXJyb3JIYW5kbGVyLnNhZmVFeGVjdXRlKFxyXG4gICAgICAoKSA9PiB7XHJcbiAgICAgICAgLy8gSW5jcmVtZW50IG9wZXJhdGlvbiBjb3VudFxyXG4gICAgICAgIHRoaXMub3BlcmF0aW9uQ291bnQrKztcclxuICAgICAgICBcclxuICAgICAgICAvLyBUcnkgd29ya2VyIGZpcnN0IGlmIGF2YWlsYWJsZVxyXG4gICAgICAgIGlmICh0aGlzLndvcmtlciAmJiB0aGlzLndvcmtlclJlYWR5KSB7XHJcbiAgICAgICAgICB0aGlzLnNlbmRXb3JrZXJNZXNzYWdlKCdORVVSQUxfUFJPUEFHQVRFJywge1xyXG4gICAgICAgICAgICBuZXR3b3JrSWQ6IHRoaXMubmV0d29ya0lkLFxyXG4gICAgICAgICAgICBhY3RpdmF0aW9uczogT2JqZWN0LmZyb21FbnRyaWVzKHRoaXMuYWN0aXZhdGlvbnMpXHJcbiAgICAgICAgICB9KS5jYXRjaChlcnJvciA9PiB7XHJcbiAgICAgICAgICAgIGVycm9ySGFuZGxlci5sb2dTaW1wbGVFcnJvcignTmV1cmFsTWVzaEFzeW5jJywgJ3Byb3BhZ2F0ZScsIGVycm9yLCAnd2FybmluZycpO1xyXG4gICAgICAgICAgICAvLyBGYWxsYmFjayB0byBzeW5jXHJcbiAgICAgICAgICAgIHRoaXMucHJvcGFnYXRlU3luYygpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIC8vIEZhbGxiYWNrIHRvIHN5bmNocm9ub3VzIHByb3BhZ2F0aW9uXHJcbiAgICAgICAgICB0aGlzLnByb3BhZ2F0ZVN5bmMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gVXBkYXRlIHBlcmZvcm1hbmNlIG1ldHJpY3NcclxuICAgICAgICBjb25zdCBwcm9jZXNzaW5nVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpIC0gc3RhcnRUaW1lO1xyXG4gICAgICAgIHRoaXMudXBkYXRlUGVyZm9ybWFuY2VNZXRyaWNzKHByb2Nlc3NpbmdUaW1lKTtcclxuICAgICAgfSxcclxuICAgICAgdW5kZWZpbmVkLFxyXG4gICAgICB7IGNvbXBvbmVudDogJ05ldXJhbE1lc2hBc3luYycsIG1ldGhvZDogJ3Byb3BhZ2F0ZScgfVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFByb3BhZ2F0aW9uIHN5bmNocm9uZSAoZmFsbGJhY2spXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBwcm9wYWdhdGVTeW5jKCk6IHZvaWQge1xyXG4gICAgLy8gUmVzZXQgbm9uLWlucHV0IGFjdGl2YXRpb25zXHJcbiAgICBmb3IgKGNvbnN0IFtub2RlSWQsIG5vZGVdIG9mIHRoaXMubm9kZXMpIHtcclxuICAgICAgaWYgKG5vZGUudHlwZSAhPT0gJ2lucHV0Jykge1xyXG4gICAgICAgIHRoaXMuYWN0aXZhdGlvbnMuc2V0KG5vZGVJZCwgbm9kZS5iaWFzKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIFByb3BhZ2F0ZSB0aHJvdWdoIGNvbm5lY3Rpb25zXHJcbiAgICBmb3IgKGNvbnN0IFtmcm9tSWQsIGNvbm5lY3Rpb25zXSBvZiB0aGlzLmNvbm5lY3Rpb25zKSB7XHJcbiAgICAgIGNvbnN0IGZyb21BY3RpdmF0aW9uID0gdGhpcy5hY3RpdmF0aW9ucy5nZXQoZnJvbUlkKSB8fCAwO1xyXG4gICAgICBcclxuICAgICAgZm9yIChjb25zdCBjb25uZWN0aW9uIG9mIGNvbm5lY3Rpb25zKSB7XHJcbiAgICAgICAgaWYgKCFjb25uZWN0aW9uLmFjdGl2ZSkgY29udGludWU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgY3VycmVudEFjdGl2YXRpb24gPSB0aGlzLmFjdGl2YXRpb25zLmdldChjb25uZWN0aW9uLnRvKSB8fCAwO1xyXG4gICAgICAgIGNvbnN0IG5ld0FjdGl2YXRpb24gPSBjdXJyZW50QWN0aXZhdGlvbiArIChmcm9tQWN0aXZhdGlvbiAqIGNvbm5lY3Rpb24ud2VpZ2h0KTtcclxuICAgICAgICB0aGlzLmFjdGl2YXRpb25zLnNldChjb25uZWN0aW9uLnRvLCB0aGlzLnNpZ21vaWQobmV3QWN0aXZhdGlvbikpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBGb25jdGlvbiBkJ2FjdGl2YXRpb24gc2lnbW/Dr2RlXHJcbiAgICovXHJcbiAgcHJpdmF0ZSBzaWdtb2lkKHg6IG51bWJlcik6IG51bWJlciB7XHJcbiAgICByZXR1cm4gMSAvICgxICsgTWF0aC5leHAoLXgpKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFLDqWN1cMOocmUgbCdhY3RpdmF0aW9uIGQndW4gbsWTdWRcclxuICAgKi9cclxuICBnZXRBY3RpdmF0aW9uKG5vZGVJZDogc3RyaW5nKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLmFjdGl2YXRpb25zLmdldChub2RlSWQpIHx8IDA7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBBcHBsaXF1ZSB1bmUgbXV0YXRpb24gYWzDqWF0b2lyZSBhdSByw6lzZWF1ICh2ZXJzaW9uIGFzeW5jKVxyXG4gICAqL1xyXG4gIGFzeW5jIG11dGF0ZShyYXRlOiBudW1iZXIgPSAwLjA1KTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBpZiAodGhpcy53b3JrZXIgJiYgdGhpcy53b3JrZXJSZWFkeSkge1xyXG4gICAgICAgIGF3YWl0IHRoaXMuc2VuZFdvcmtlck1lc3NhZ2UoJ05FVVJBTF9NVVRBVEUnLCB7XHJcbiAgICAgICAgICBuZXR3b3JrSWQ6IHRoaXMubmV0d29ya0lkLFxyXG4gICAgICAgICAgcmF0ZVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIFN5bmMgYmFjayB0aGUgbXV0YXRpb25zIHRvIGxvY2FsIHN0YXRlXHJcbiAgICAgICAgYXdhaXQgdGhpcy5zeW5jTmV0d29ya0Zyb21Xb3JrZXIoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLm11dGF0ZVN5bmMocmF0ZSk7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGVycm9ySGFuZGxlci5sb2dTaW1wbGVFcnJvcignTmV1cmFsTWVzaEFzeW5jJywgJ211dGF0ZScsIGVycm9yLCAnd2FybmluZycpO1xyXG4gICAgICB0aGlzLm11dGF0ZVN5bmMocmF0ZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBNdXRhdGlvbiBzeW5jaHJvbmUgKGZhbGxiYWNrKVxyXG4gICAqL1xyXG4gIHByaXZhdGUgbXV0YXRlU3luYyhyYXRlOiBudW1iZXIpOiB2b2lkIHtcclxuICAgIC8vIE11dGF0ZSBjb25uZWN0aW9uIHdlaWdodHNcclxuICAgIGZvciAoY29uc3QgY29ubmVjdGlvbnMgb2YgdGhpcy5jb25uZWN0aW9ucy52YWx1ZXMoKSkge1xyXG4gICAgICBmb3IgKGNvbnN0IGNvbm5lY3Rpb24gb2YgY29ubmVjdGlvbnMpIHtcclxuICAgICAgICBpZiAoTWF0aC5yYW5kb20oKSA8IHJhdGUpIHtcclxuICAgICAgICAgIGNvbm5lY3Rpb24ud2VpZ2h0ICs9IChNYXRoLnJhbmRvbSgpIC0gMC41KSAqIDAuMjtcclxuICAgICAgICAgIGNvbm5lY3Rpb24ud2VpZ2h0ID0gTWF0aC5tYXgoLTIsIE1hdGgubWluKDIsIGNvbm5lY3Rpb24ud2VpZ2h0KSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gTXV0YXRlIG5vZGUgYmlhc2VzXHJcbiAgICBmb3IgKGNvbnN0IG5vZGUgb2YgdGhpcy5ub2Rlcy52YWx1ZXMoKSkge1xyXG4gICAgICBpZiAoTWF0aC5yYW5kb20oKSA8IHJhdGUpIHtcclxuICAgICAgICBub2RlLmJpYXMgKz0gKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMC4xO1xyXG4gICAgICAgIG5vZGUuYmlhcyA9IE1hdGgubWF4KC0xLCBNYXRoLm1pbigxLCBub2RlLmJpYXMpKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogU3luY2hyb25pc2UgbCfDqXRhdCBkdSByw6lzZWF1IGRlcHVpcyBsZSB3b3JrZXJcclxuICAgKi9cclxuICBwcml2YXRlIGFzeW5jIHN5bmNOZXR3b3JrRnJvbVdvcmtlcigpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIC8vIEltcGxlbWVudGF0aW9uIHdvdWxkIHN5bmMgd29ya2VyIHN0YXRlIGJhY2sgdG8gbG9jYWwgc3RhdGVcclxuICAgIC8vIEZvciBub3csIHdlJ2xsIHNraXAgdGhpcyBjb21wbGV4IHN5bmNocm9uaXphdGlvblxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogTWVzdXJlIGwnYWN0aXZpdMOpIG5ldXJhbGUgZ2xvYmFsZSAtIGltcGzDqW1lbnRhdGlvbiB1bmlmacOpZVxyXG4gICAqL1xyXG4gIGdldE5ldXJhbEFjdGl2aXR5KCk6IG51bWJlciB7XHJcbiAgICAvLyBTeW5jaHJvbm91cyBmYWxsYmFjayBpbXBsZW1lbnRhdGlvblxyXG4gICAgbGV0IHRvdGFsQWN0aXZpdHkgPSAwO1xyXG4gICAgbGV0IG5vZGVDb3VudCA9IDA7XHJcblxyXG4gICAgZm9yIChjb25zdCBhY3RpdmF0aW9uIG9mIHRoaXMuYWN0aXZhdGlvbnMudmFsdWVzKCkpIHtcclxuICAgICAgdG90YWxBY3Rpdml0eSArPSBNYXRoLmFicyhhY3RpdmF0aW9uKTtcclxuICAgICAgbm9kZUNvdW50Kys7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG5vZGVDb3VudCA+IDAgPyB0b3RhbEFjdGl2aXR5IC8gbm9kZUNvdW50IDogMDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFZlcnNpb24gYXN5bmNocm9uZSBkZSBnZXROZXVyYWxBY3Rpdml0eSBwb3VyIGNhbGN1bHMgYXZhbmPDqXNcclxuICAgKi9cclxuICBhc3luYyBnZXROZXVyYWxBY3Rpdml0eUFzeW5jKCk6IFByb21pc2U8bnVtYmVyPiB7XHJcbiAgICB0cnkge1xyXG4gICAgICBpZiAodGhpcy53b3JrZXIgJiYgdGhpcy53b3JrZXJSZWFkeSkge1xyXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuc2VuZFdvcmtlck1lc3NhZ2U8e1xyXG4gICAgICAgICAgYWN0aXZpdHk6IG51bWJlcjtcclxuICAgICAgICAgIGNvbm5lY3Rpb25TdHJlbmd0aDogbnVtYmVyO1xyXG4gICAgICAgICAgbm9kZUNvdW50OiBudW1iZXI7XHJcbiAgICAgICAgICBjb25uZWN0aW9uQ291bnQ6IG51bWJlcjtcclxuICAgICAgICB9PignTkVVUkFMX0FDVElWSVRZJywgeyBuZXR3b3JrSWQ6IHRoaXMubmV0d29ya0lkIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHJldHVybiByZXN1bHQuYWN0aXZpdHk7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGVycm9ySGFuZGxlci5sb2dTaW1wbGVFcnJvcignTmV1cmFsTWVzaEFzeW5jJywgJ2dldE5ldXJhbEFjdGl2aXR5QXN5bmMnLCBlcnJvciwgJ3dhcm5pbmcnKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBGYWxsYmFjayBzeW5jaHJvbmVcclxuICAgIHJldHVybiB0aGlzLmdldE5ldXJhbEFjdGl2aXR5KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBNZXN1cmUgbGEgZm9yY2UgbW95ZW5uZSBkZXMgY29ubmV4aW9uc1xyXG4gICAqL1xyXG4gIGdldENvbm5lY3Rpb25TdHJlbmd0aCgpOiBudW1iZXIge1xyXG4gICAgbGV0IHRvdGFsV2VpZ2h0ID0gMDtcclxuICAgIGxldCBjb25uZWN0aW9uQ291bnQgPSAwO1xyXG5cclxuICAgIGZvciAoY29uc3QgY29ubmVjdGlvbnMgb2YgdGhpcy5jb25uZWN0aW9ucy52YWx1ZXMoKSkge1xyXG4gICAgICBmb3IgKGNvbnN0IGNvbm5lY3Rpb24gb2YgY29ubmVjdGlvbnMpIHtcclxuICAgICAgICBpZiAoY29ubmVjdGlvbi5hY3RpdmUpIHtcclxuICAgICAgICAgIHRvdGFsV2VpZ2h0ICs9IE1hdGguYWJzKGNvbm5lY3Rpb24ud2VpZ2h0KTtcclxuICAgICAgICAgIGNvbm5lY3Rpb25Db3VudCsrO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBjb25uZWN0aW9uQ291bnQgPiAwID8gdG90YWxXZWlnaHQgLyBjb25uZWN0aW9uQ291bnQgOiAwO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogRXhwb3J0IEpTT04gcG91ciBkZWJ1Zy9zYXV2ZWdhcmRlXHJcbiAgICovXHJcbiAgdG9KU09OKCk6IGFueSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBub2RlczogQXJyYXkuZnJvbSh0aGlzLm5vZGVzLnZhbHVlcygpKSxcclxuICAgICAgY29ubmVjdGlvbnM6IEFycmF5LmZyb20odGhpcy5jb25uZWN0aW9ucy52YWx1ZXMoKSkuZmxhdCgpLFxyXG4gICAgICBhY3RpdmF0aW9uczogT2JqZWN0LmZyb21FbnRyaWVzKHRoaXMuYWN0aXZhdGlvbnMpLFxyXG4gICAgICBwZXJmb3JtYW5jZToge1xyXG4gICAgICAgIGxhc3RQcm9wYWdhdGlvblRpbWU6IHRoaXMubGFzdFByb3BhZ2F0aW9uVGltZSxcclxuICAgICAgICBhdmVyYWdlUHJvY2Vzc2luZ1RpbWU6IHRoaXMuYXZlcmFnZVByb2Nlc3NpbmdUaW1lLFxyXG4gICAgICAgIG9wZXJhdGlvbkNvdW50OiB0aGlzLm9wZXJhdGlvbkNvdW50LFxyXG4gICAgICAgIHdvcmtlclJlYWR5OiB0aGlzLndvcmtlclJlYWR5XHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBJbml0aWFsaXNlIGxlIHLDqXNlYXUgbmV1cm9uYWxcclxuICAgKi9cclxuICBhc3luYyBpbml0aWFsaXplKCk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgLy8gU2V0dXAgZGVmYXVsdCBuZXR3b3JrIGlmIGVtcHR5XHJcbiAgICBpZiAodGhpcy5ub2Rlcy5zaXplID09PSAwKSB7XHJcbiAgICAgIHRoaXMuc2V0dXBEZWZhdWx0TmV0d29yaygpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEluaXRpYWxpemUgd29ya2VyIG5ldHdvcmtcclxuICAgIGlmICh0aGlzLndvcmtlcikge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGF3YWl0IHRoaXMuc2VuZFdvcmtlck1lc3NhZ2UoJ05FVVJBTF9JTklUJywge1xyXG4gICAgICAgICAgbmV0d29ya0lkOiB0aGlzLm5ldHdvcmtJZCxcclxuICAgICAgICAgIG5vZGVzOiBBcnJheS5mcm9tKHRoaXMubm9kZXMudmFsdWVzKCkpLFxyXG4gICAgICAgICAgY29ubmVjdGlvbnM6IEFycmF5LmZyb20odGhpcy5jb25uZWN0aW9ucy52YWx1ZXMoKSkuZmxhdCgpXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy53b3JrZXJSZWFkeSA9IHRydWU7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgZXJyb3JIYW5kbGVyLmxvZ1NpbXBsZUVycm9yKCdOZXVyYWxNZXNoQXN5bmMnLCAnaW5pdGlhbGl6ZScsIGVycm9yLCAnd2FybmluZycpO1xyXG4gICAgICAgIHRoaXMud29ya2VyUmVhZHkgPSBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBQZXJmb3JtIGluaXRpYWwgcHJvcGFnYXRpb25cclxuICAgIGF3YWl0IHRoaXMucHJvcGFnYXRlKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDb25maWd1cmUgdW4gcsOpc2VhdSBwYXIgZMOpZmF1dCBwb3VyIGxlcyB0ZXN0c1xyXG4gICAqL1xyXG4gIHByaXZhdGUgc2V0dXBEZWZhdWx0TmV0d29yaygpOiB2b2lkIHtcclxuICAgIC8vIEFkZCBpbnB1dCBub2Rlc1xyXG4gICAgdGhpcy5hZGROb2RlKCdzZW5zb3J5X2lucHV0JywgJ2lucHV0Jyk7XHJcbiAgICB0aGlzLmFkZE5vZGUoJ21lbW9yeV9pbnB1dCcsICdpbnB1dCcpO1xyXG4gICAgXHJcbiAgICAvLyBBZGQgaGlkZGVuIG5vZGVzXHJcbiAgICB0aGlzLmFkZE5vZGUoJ3Byb2Nlc3NpbmdfMScsICdoaWRkZW4nLCAwLjEpO1xyXG4gICAgdGhpcy5hZGROb2RlKCdwcm9jZXNzaW5nXzInLCAnaGlkZGVuJywgLTAuMSk7XHJcbiAgICBcclxuICAgIC8vIEFkZCBvdXRwdXQgbm9kZXNcclxuICAgIHRoaXMuYWRkTm9kZSgnbW90b3Jfb3V0cHV0JywgJ291dHB1dCcpO1xyXG4gICAgdGhpcy5hZGROb2RlKCdlbW90aW9uX291dHB1dCcsICdvdXRwdXQnKTtcclxuICAgIFxyXG4gICAgLy8gQ29ubmVjdCB0aGUgbmV0d29ya1xyXG4gICAgdGhpcy5hZGRDb25uZWN0aW9uKCdzZW5zb3J5X2lucHV0JywgJ3Byb2Nlc3NpbmdfMScsIDAuOCk7XHJcbiAgICB0aGlzLmFkZENvbm5lY3Rpb24oJ21lbW9yeV9pbnB1dCcsICdwcm9jZXNzaW5nXzInLCAwLjYpO1xyXG4gICAgdGhpcy5hZGRDb25uZWN0aW9uKCdwcm9jZXNzaW5nXzEnLCAnbW90b3Jfb3V0cHV0JywgMC45KTtcclxuICAgIHRoaXMuYWRkQ29ubmVjdGlvbigncHJvY2Vzc2luZ18yJywgJ2Vtb3Rpb25fb3V0cHV0JywgMC43KTtcclxuICAgIHRoaXMuYWRkQ29ubmVjdGlvbigncHJvY2Vzc2luZ18xJywgJ3Byb2Nlc3NpbmdfMicsIDAuMyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBTdXNwZW5kIG5ldXJhbCBwcm9jZXNzaW5nXHJcbiAgICovXHJcbiAgYXN5bmMgc3VzcGVuZCgpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIC8vIENsZWFyIGFjdGl2YXRpb25zIGJ1dCBrZWVwIHN0cnVjdHVyZVxyXG4gICAgdGhpcy5hY3RpdmF0aW9ucy5jbGVhcigpO1xyXG4gICAgXHJcbiAgICAvLyBUZXJtaW5hdGUgd29ya2VyIGlmIG5lZWRlZFxyXG4gICAgaWYgKHRoaXMud29ya2VyKSB7XHJcbiAgICAgIHRoaXMud29ya2VyLnRlcm1pbmF0ZSgpO1xyXG4gICAgICB0aGlzLndvcmtlciA9IG51bGw7XHJcbiAgICAgIHRoaXMud29ya2VyUmVhZHkgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgY29uc29sZS5sb2coJ05ldXJhbCBtZXNoIHN1c3BlbmRlZCcpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0IENQVSB1c2FnZSBlc3RpbWF0aW9uXHJcbiAgICovXHJcbiAgYXN5bmMgZ2V0Q1BVVXNhZ2UoKTogUHJvbWlzZTxudW1iZXI+IHtcclxuICAgIC8vIENhbGN1bGF0ZSBiYXNlZCBvbiBwcm9jZXNzaW5nIHRpbWUgYW5kIG9wZXJhdGlvbiBmcmVxdWVuY3lcclxuICAgIGNvbnN0IGJhc2VMb2FkID0gdGhpcy5hdmVyYWdlUHJvY2Vzc2luZ1RpbWUgLyAxNi42NzsgLy8gQ29tcGFyZSB0byA2MGZwcyBmcmFtZSB0aW1lXHJcbiAgICByZXR1cm4gTWF0aC5taW4oMSwgYmFzZUxvYWQpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0IG1lbW9yeSB1c2FnZSBlc3RpbWF0aW9uXHJcbiAgICovXHJcbiAgYXN5bmMgZ2V0TWVtb3J5VXNhZ2UoKTogUHJvbWlzZTxudW1iZXI+IHtcclxuICAgIGNvbnN0IGxvY2FsTWVtb3J5ID0gKHRoaXMubm9kZXMuc2l6ZSArIEFycmF5LmZyb20odGhpcy5jb25uZWN0aW9ucy52YWx1ZXMoKSkubGVuZ3RoKSAqIDY0O1xyXG4gICAgXHJcbiAgICAvLyBBZGQgd29ya2VyIG1lbW9yeSBpZiBhdmFpbGFibGVcclxuICAgIGxldCB3b3JrZXJNZW1vcnkgPSAwO1xyXG4gICAgaWYgKHRoaXMud29ya2VyICYmIHRoaXMud29ya2VyUmVhZHkpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICAvLyBXb3VsZCBnZXQgYWN0dWFsIHdvcmtlciBzdGF0cywgc2ltcGxpZmllZCBmb3Igbm93XHJcbiAgICAgICAgd29ya2VyTWVtb3J5ID0gbG9jYWxNZW1vcnk7IC8vIEVzdGltYXRlXHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgLy8gSWdub3JlIHdvcmtlciBtZW1vcnkgY2FsY3VsYXRpb24gZXJyb3JcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBjb25zdCB0b3RhbE1lbW9yeSA9IGxvY2FsTWVtb3J5ICsgd29ya2VyTWVtb3J5O1xyXG4gICAgcmV0dXJuIE1hdGgubWluKDEsIHRvdGFsTWVtb3J5IC8gKDEwMjQgKiAxMDI0KSk7IC8vIENvbnZlcnQgdG8gTUIgcmF0aW9cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEdldCBwZXJmb3JtYW5jZSBtZXRyaWNzXHJcbiAgICovXHJcbiAgZ2V0UGVyZm9ybWFuY2VNZXRyaWNzKCk6IHtcclxuICAgIGxhc3RQcm9wYWdhdGlvblRpbWU6IG51bWJlcjtcclxuICAgIGF2ZXJhZ2VQcm9jZXNzaW5nVGltZTogbnVtYmVyO1xyXG4gICAgb3BlcmF0aW9uQ291bnQ6IG51bWJlcjtcclxuICAgIHdvcmtlclJlYWR5OiBib29sZWFuO1xyXG4gIH0ge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbGFzdFByb3BhZ2F0aW9uVGltZTogdGhpcy5sYXN0UHJvcGFnYXRpb25UaW1lLFxyXG4gICAgICBhdmVyYWdlUHJvY2Vzc2luZ1RpbWU6IHRoaXMuYXZlcmFnZVByb2Nlc3NpbmdUaW1lLFxyXG4gICAgICBvcGVyYXRpb25Db3VudDogdGhpcy5vcGVyYXRpb25Db3VudCxcclxuICAgICAgd29ya2VyUmVhZHk6IHRoaXMud29ya2VyUmVhZHlcclxuICAgIH07XHJcbiAgfVxyXG59ICJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBO0FBQUE7QUFBQSxTQUFBQSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBSSxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO01BQUE7UUFBQUQsR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFXLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFB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