{"version":3,"names":["cov_3r9ftkoz4","actualCoverage","s","DNAInterpreter_1","require","MutationEngine_1","ProceduralGenerator_1","PerformanceMonitor_1","vertexShaderSource","fragmentShaderSource","OrganismEngine","constructor","canvas","dna","f","program","vertexBuffer","indexBuffer","frameCount","elapsedTime","lastGeometryComplexity","fractalTexture","b","Error","gl","getContext","addEventListener","e","preventDefault","cleanup","dnaInterpreter","DNAInterpreter","mutationEngine","MutationEngine","generator","ProceduralGenerator","getCurrentParameters","performanceMonitor","PerformanceMonitor","traits","curiosity","focus","rhythm","empathy","creativity","energy","harmony","wisdom","visualProperties","primaryColor","h","l","secondaryColor","currentState","id","generation","health","visualDNA","lastMutation","Date","now","mutations","createdAt","birthTime","socialConnections","memoryFragments","geometry","generateBaseForm","fractal","generateFractalPattern","createGLTexture","setupGL","setupShaders","setupBuffers","clearColor","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DEPTH_TEST","depthFunc","LEQUAL","resizeCanvas","window","bind","devicePixelRatio","displayWidth","clientWidth","displayHeight","clientHeight","width","height","viewport","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","vertices","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","indices","vert","compileShader","VERTEX_SHADER","frag","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","source","type","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","render","state","params","complexity","patternDensity","colorVariance","symmetry","fluidity","Math","abs","startFrame","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","useProgram","setupAttributes","setupUniforms","drawElements","TRIANGLES","length","UNSIGNED_SHORT","endFrame","posLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","timeLoc","getUniformLocation","uniform1f","uniform3fv","update","performance","mutationState","getCurrentState","colorShift","fractalLoc","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","uniform1i","mutate","mutation","includes","apply","getPerformanceMetrics","getMetrics","deleteBuffer","deleteProgram","removeEventListener","log","isInitialized","textureData","tex","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","data","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","exports"],"sources":["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/generative/OrganismEngine.ts"],"sourcesContent":["// src/generative/OrganismEngine.ts\r\n// Moteur WebGL principal harmonisé\r\nimport { DNAInterpreter } from './DNAInterpreter';\r\nimport { MutationEngine } from './MutationEngine';\r\nimport { ProceduralGenerator } from './ProceduralGenerator';\r\nimport { PerformanceMonitor } from '../monitoring/PerformanceMonitor';\r\nimport {\r\n  OrganismState,\r\n  OrganismMutation,\r\n  OrganismTraits,\r\n  VisualProperties,\r\n  Geometry\r\n} from '@shared/types';\r\n\r\n// Importer les shaders via raw-loader (Webpack)\r\nconst vertexShaderSource = '';\r\nconst fragmentShaderSource = '';\r\n\r\n/**\r\n * OrganismEngine - Moteur WebGL pour le rendu de l'organisme\r\n */\r\nexport class OrganismEngine {\r\n  private canvas: HTMLCanvasElement;\r\n  private gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n  private program: WebGLProgram | null = null;\r\n  private dnaInterpreter: DNAInterpreter;\r\n  private mutationEngine: MutationEngine;\r\n  private generator: ProceduralGenerator;\r\n  private performanceMonitor: PerformanceMonitor;\r\n  \r\n  // Buffers\r\n  private vertexBuffer: WebGLBuffer | null = null;\r\n  private indexBuffer: WebGLBuffer | null = null;\r\n  \r\n  // État\r\n  private frameCount = 0;\r\n  // @ts-expect-error Temps réservé pour usage futur\r\n  private elapsedTime = 0;\r\n  private geometry: Geometry;\r\n  private traits: OrganismTraits;\r\n  // @ts-expect-error Propriétés réservées pour usage futur\r\n  private visualProperties: VisualProperties;\r\n  // @ts-expect-error État réservé pour usage futur\r\n  private currentState: OrganismState;\r\n  private lastGeometryComplexity: number = 0;\r\n  private fractalTexture: WebGLTexture | null = null;\r\n  \r\n  /**\r\n   * Constructeur\r\n   */\r\n  constructor(canvas: HTMLCanvasElement, dna: string) {\r\n    this.canvas = canvas;\r\n    if (!this.canvas) {\r\n      throw new Error('Canvas element is required');\r\n    }\r\n    // Initialisation WebGL (WebGL2 si possible)\r\n    const gl = this.canvas.getContext('webgl2') || this.canvas.getContext('webgl');\r\n    if (!gl) throw new Error('WebGL not supported');\r\n    this.gl = gl;\r\n    \r\n    // Gestion du contexte perdu\r\n    this.canvas.addEventListener('webglcontextlost', (e) => {\r\n      e.preventDefault();\r\n      this.cleanup();\r\n    });\r\n    \r\n    // Initialisation des modules\r\n    this.dnaInterpreter = new DNAInterpreter(dna);\r\n    this.mutationEngine = new MutationEngine();\r\n    this.generator = new ProceduralGenerator(this.dnaInterpreter.getCurrentParameters());\r\n    this.performanceMonitor = new PerformanceMonitor(0.3);\r\n    \r\n    // Propriétés initiales\r\n    this.traits = {\r\n      curiosity: 0.5, focus: 0.5, rhythm: 0.5, empathy: 0.5,\r\n      creativity: 0.5, energy: 0.5, harmony: 0.5, wisdom: 0.1\r\n    };\r\n    this.visualProperties = {\r\n      primaryColor: { h: 200, s: 80, l: 60 },\r\n      secondaryColor: { h: 340, s: 60, l: 40 }\r\n    };\r\n    this.currentState = {\r\n      id: 'engine',\r\n      generation: 1,\r\n      health: 1,\r\n      energy: 1,\r\n      traits: this.traits,\r\n      visualDNA: dna,\r\n      lastMutation: Date.now(),\r\n      mutations: [],\r\n      createdAt: Date.now(),\r\n      dna: dna,\r\n      birthTime: Date.now(),\r\n      socialConnections: [],\r\n      memoryFragments: []\r\n    };\r\n    \r\n    // Génération de la géométrie initiale\r\n    this.geometry = this.generator.generateBaseForm(this.dnaInterpreter.getCurrentParameters());\r\n    // Génération et upload de la texture fractale\r\n    const fractal = this.generator.generateFractalPattern(Date.now());\r\n    this.fractalTexture = this.createGLTexture(fractal);\r\n    this.setupGL();\r\n    this.setupShaders();\r\n    this.setupBuffers();\r\n  }\r\n  \r\n  /**\r\n   * Configuration WebGL\r\n   */\r\n  private setupGL(): void {\r\n    const gl = this.gl;\r\n    \r\n    // Configuration de base\r\n    gl.clearColor(0, 0, 0, 0);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.depthFunc(gl.LEQUAL);\r\n    \r\n    // Configuration du viewport\r\n    this.resizeCanvas();\r\n    \r\n    // Event listener pour redimensionnement\r\n    window.addEventListener('resize', this.resizeCanvas.bind(this));\r\n  }\r\n  \r\n  /**\r\n   * Mise à jour du viewport canvas\r\n   */\r\n  private resizeCanvas(): void {\r\n    // Ajustement pour la densité de pixels\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n    \r\n    // Taille affichée\r\n    const displayWidth = this.canvas.clientWidth;\r\n    const displayHeight = this.canvas.clientHeight;\r\n    \r\n    // Vérifier si le redimensionnement est nécessaire\r\n    if (this.canvas.width !== displayWidth * devicePixelRatio ||\r\n        this.canvas.height !== displayHeight * devicePixelRatio) {\r\n        \r\n      // Ajuster le buffer canvas\r\n      this.canvas.width = displayWidth * devicePixelRatio;\r\n      this.canvas.height = displayHeight * devicePixelRatio;\r\n      \r\n      // Mettre à jour le viewport\r\n      this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Préparation des buffers WebGL\r\n   */\r\n  private setupBuffers(): void {\r\n    const gl = this.gl;\r\n    \r\n    // Vertex buffer\r\n    this.vertexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, this.geometry.vertices, gl.STATIC_DRAW);\r\n    \r\n    // Index buffer\r\n    this.indexBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.geometry.indices, gl.STATIC_DRAW);\r\n  }\r\n  \r\n  /**\r\n   * Compilation et linkage des shaders\r\n   */\r\n  private setupShaders(): void {\r\n    const gl = this.gl;\r\n    const vert = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\r\n    const frag = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\r\n    if (!vert || !frag) throw new Error('Shader compilation failed');\r\n    this.program = gl.createProgram();\r\n    if (!this.program) throw new Error('Program creation failed');\r\n    gl.attachShader(this.program, vert);\r\n    gl.attachShader(this.program, frag);\r\n    gl.linkProgram(this.program);\r\n    if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\r\n      throw new Error('Shader program linking failed: ' + gl.getProgramInfoLog(this.program));\r\n    }\r\n    gl.deleteShader(vert);\r\n    gl.deleteShader(frag);\r\n  }\r\n  \r\n  private compileShader(source: string, type: number): WebGLShader | null {\r\n    const gl = this.gl;\r\n    const shader = gl.createShader(type);\r\n    if (!shader) return null;\r\n    gl.shaderSource(shader, source);\r\n    gl.compileShader(shader);\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      console.error('Shader compilation error:', gl.getShaderInfoLog(shader));\r\n      gl.deleteShader(shader);\r\n      return null;\r\n    }\r\n    return shader;\r\n  }\r\n  \r\n  /**\r\n   * Rendu principal\r\n   */\r\n  public render(state?: OrganismState): void {\r\n    if (state) {\r\n      this.currentState = state;\r\n      // Adapter dynamiquement les paramètres selon les traits\r\n      const traits = state.traits || this.traits;\r\n      const params = this.dnaInterpreter.getCurrentParameters();\r\n      // Influence des traits sur les paramètres visuels\r\n      params.complexity = 0.3 + 0.7 * (traits.curiosity ?? 0.5); // curiosité → complexité\r\n      params.patternDensity = 0.2 + 0.8 * (traits.creativity ?? 0.5); // créativité → densité\r\n      params.colorVariance = 0.1 + 0.7 * (traits.creativity ?? 0.5); // créativité → variance chromatique\r\n      params.symmetry = 0.2 + 0.7 * (traits.focus ?? 0.5); // focus → symétrie\r\n      params.fluidity = 0.2 + 0.7 * (traits.energy ?? 0.5); // énergie → fluidité\r\n      // Régénérer la géométrie si la complexité change beaucoup\r\n      if (Math.abs(params.complexity - this.lastGeometryComplexity) > 0.2) {\r\n        this.geometry = this.generator.generateBaseForm(params);\r\n        this.setupBuffers();\r\n        this.lastGeometryComplexity = params.complexity;\r\n      }\r\n    }\r\n    this.performanceMonitor.startFrame();\r\n    const gl = this.gl;\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n    if (!this.program) return;\r\n    gl.useProgram(this.program);\r\n    this.setupAttributes();\r\n    this.setupUniforms();\r\n    gl.drawElements(gl.TRIANGLES, this.geometry.indices.length, gl.UNSIGNED_SHORT, 0);\r\n    this.frameCount++;\r\n    this.performanceMonitor.endFrame();\r\n  }\r\n  \r\n  /**\r\n   * Configuration des attributs du shader\r\n   */\r\n  private setupAttributes(): void {\r\n    const gl = this.gl;\r\n    if (!this.program) return;\r\n    // a_position\r\n    const posLoc = gl.getAttribLocation(this.program, 'a_position');\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n    gl.enableVertexAttribArray(posLoc);\r\n    gl.vertexAttribPointer(posLoc, 3, gl.FLOAT, false, 0, 0);\r\n    // (ajouter a_texCoord si besoin)\r\n    // Index buffer déjà bindé\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\r\n  }\r\n  \r\n  /**\r\n   * Configuration des uniforms du shader\r\n   */\r\n  private setupUniforms(): void {\r\n    const gl = this.gl;\r\n    if (!this.program) return;\r\n    // Temps\r\n    const timeLoc = gl.getUniformLocation(this.program, 'u_time');\r\n    gl.uniform1f(timeLoc, this.frameCount * 0.016);\r\n    // Paramètres DNA\r\n    const params = this.dnaInterpreter.getCurrentParameters();\r\n    gl.uniform3fv(gl.getUniformLocation(this.program, 'u_primaryColor'), params.primaryColor);\r\n    gl.uniform3fv(gl.getUniformLocation(this.program, 'u_secondaryColor'), params.secondaryColor);\r\n    gl.uniform1f(gl.getUniformLocation(this.program, 'u_complexity'), params.complexity);\r\n    gl.uniform1f(gl.getUniformLocation(this.program, 'u_symmetry'), params.symmetry);\r\n    gl.uniform1f(gl.getUniformLocation(this.program, 'u_fluidity'), params.fluidity);\r\n    gl.uniform1f(gl.getUniformLocation(this.program, 'u_colorVariance'), params.colorVariance);\r\n    gl.uniform1f(gl.getUniformLocation(this.program, 'u_patternDensity'), params.patternDensity);\r\n    // Mutations\r\n    this.mutationEngine.update(performance.now());\r\n    const mutationState = this.mutationEngine.getCurrentState();\r\n    gl.uniform1f(gl.getUniformLocation(this.program, 'u_mutation'), mutationState.colorShift || 0);\r\n    // Texture fractale\r\n    if (this.fractalTexture) {\r\n      const fractalLoc = gl.getUniformLocation(this.program, 'u_fractalTex');\r\n      gl.activeTexture(gl.TEXTURE0);\r\n      gl.bindTexture(gl.TEXTURE_2D, this.fractalTexture);\r\n      gl.uniform1i(fractalLoc, 0);\r\n    }\r\n    // (ajouter d'autres uniforms selon le shader)\r\n  }\r\n  \r\n  /**\r\n   * Application d'une mutation\r\n   */\r\n  public mutate(mutation: OrganismMutation): void {\r\n    // On ignore les mutations non visuelles pour le moteur WebGL\r\n    if (!['visual', 'behavioral', 'cognitive'].includes(mutation.type)) {\r\n      return;\r\n    }\r\n    this.mutationEngine.apply(mutation as any); // Cast sûr car on filtre ci-dessus\r\n  }\r\n  \r\n  /**\r\n   * Récupération des métriques de performance\r\n   */\r\n  public getPerformanceMetrics() {\r\n    return this.performanceMonitor.getMetrics();\r\n  }\r\n  \r\n  /**\r\n   * Nettoyage mémoire et ressources\r\n   */\r\n  public cleanup(): void {\r\n    const gl = this.gl;\r\n    if (this.vertexBuffer) gl.deleteBuffer(this.vertexBuffer);\r\n    if (this.indexBuffer) gl.deleteBuffer(this.indexBuffer);\r\n    if (this.program) gl.deleteProgram(this.program);\r\n    \r\n    // Suppression des event listeners\r\n    window.removeEventListener('resize', this.resizeCanvas.bind(this));\r\n    \r\n    console.log('OrganismEngine resources cleaned up');\r\n  }\r\n  \r\n  /**\r\n   * Indique si le moteur est prêt\r\n   */\r\n  public isInitialized(): boolean {\r\n    return !!this.gl && !!this.program;\r\n  }\r\n  \r\n  private createGLTexture(textureData: { data: Uint8Array; width: number; height: number }): WebGLTexture {\r\n    const gl = this.gl;\r\n    const tex = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, tex);\r\n    gl.texImage2D(\r\n      gl.TEXTURE_2D,\r\n      0,\r\n      gl.RGBA,\r\n      textureData.width,\r\n      textureData.height,\r\n      0,\r\n      gl.RGBA,\r\n      gl.UNSIGNED_BYTE,\r\n      textureData.data\r\n    );\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    return tex!;\r\n  }\r\n}"],"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","ignoreList":[]}