36878469bf6d7f6b499d691ece93cb56
"use strict";

/* istanbul ignore next */
function cov_172q5jwqsb() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/NetworkContext.tsx";
  var hash = "63416ece592a165fb5f55ec9f930622c8e996fab";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/NetworkContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 42
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "3": {
        start: {
          line: 5,
          column: 22
        },
        end: {
          line: 5,
          column: 50
        }
      },
      "4": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "5": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 60
        }
      },
      "6": {
        start: {
          line: 8,
          column: 16
        },
        end: {
          line: 8,
          column: 122
        }
      },
      "7": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 117
        }
      },
      "8": {
        start: {
          line: 10,
          column: 23
        },
        end: {
          line: 10,
          column: 55
        }
      },
      "9": {
        start: {
          line: 12,
          column: 34
        },
        end: {
          line: 12,
          column: 81
        }
      },
      "10": {
        start: {
          line: 13,
          column: 34
        },
        end: {
          line: 13,
          column: 61
        }
      },
      "11": {
        start: {
          line: 14,
          column: 30
        },
        end: {
          line: 14,
          column: 57
        }
      },
      "12": {
        start: {
          line: 15,
          column: 42
        },
        end: {
          line: 15,
          column: 70
        }
      },
      "13": {
        start: {
          line: 16,
          column: 44
        },
        end: {
          line: 16,
          column: 73
        }
      },
      "14": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 24,
          column: 11
        }
      },
      "15": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 25
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 23,
          column: 76
        }
      },
      "17": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 21,
          column: 35
        }
      },
      "18": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 45
        }
      },
      "19": {
        start: {
          line: 22,
          column: 46
        },
        end: {
          line: 22,
          column: 64
        }
      },
      "20": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 23,
          column: 53
        }
      },
      "21": {
        start: {
          line: 23,
          column: 54
        },
        end: {
          line: 23,
          column: 72
        }
      },
      "22": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "23": {
        start: {
          line: 27,
          column: 19
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 10
        }
      },
      "25": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 33
        }
      },
      "26": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "27": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "28": {
        start: {
          line: 33,
          column: 29
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "29": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "30": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 84
        }
      },
      "31": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "32": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 34
        }
      },
      "33": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "34": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 23
        }
      },
      "35": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 35
        }
      },
      "36": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "37": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 15
        }
      },
      "38": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 39
        }
      },
      "39": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 60
        }
      },
      "40": {
        start: {
          line: 57,
          column: 29
        },
        end: {
          line: 57,
          column: 52
        }
      },
      "41": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 37
        }
      },
      "42": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 35
        }
      },
      "43": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "44": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 70,
          column: 15
        }
      },
      "45": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 39
        }
      },
      "46": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 60
        }
      },
      "47": {
        start: {
          line: 72,
          column: 29
        },
        end: {
          line: 72,
          column: 52
        }
      },
      "48": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 37
        }
      },
      "49": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 81,
          column: 34
        }
      },
      "50": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 51
        }
      }
    },
    fnMap: {
      "0": {
        name: "NetworkProvider",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 24
          }
        },
        loc: {
          start: {
            line: 11,
            column: 39
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 18,
            column: 28
          }
        },
        loc: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 19
          }
        },
        loc: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 35
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 19
          }
        },
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 22,
            column: 66
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 19
          },
          end: {
            line: 23,
            column: 20
          }
        },
        loc: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 74
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 27
          },
          end: {
            line: 26,
            column: 28
          }
        },
        loc: {
          start: {
            line: 26,
            column: 33
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 21
          }
        },
        loc: {
          start: {
            line: 28,
            column: 26
          },
          end: {
            line: 30,
            column: 9
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 24
          }
        },
        loc: {
          start: {
            line: 31,
            column: 34
          },
          end: {
            line: 39,
            column: 9
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 40,
            column: 21
          },
          end: {
            line: 40,
            column: 22
          }
        },
        loc: {
          start: {
            line: 40,
            column: 27
          },
          end: {
            line: 42,
            column: 9
          }
        },
        line: 40
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 43,
            column: 15
          },
          end: {
            line: 43,
            column: 16
          }
        },
        loc: {
          start: {
            line: 43,
            column: 21
          },
          end: {
            line: 45,
            column: 9
          }
        },
        line: 43
      },
      "10": {
        name: "invite",
        decl: {
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 48,
            column: 25
          }
        },
        loc: {
          start: {
            line: 48,
            column: 54
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 48
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 57,
            column: 24
          }
        },
        loc: {
          start: {
            line: 57,
            column: 29
          },
          end: {
            line: 57,
            column: 52
          }
        },
        line: 57
      },
      "12": {
        name: "fusion",
        decl: {
          start: {
            line: 63,
            column: 19
          },
          end: {
            line: 63,
            column: 25
          }
        },
        loc: {
          start: {
            line: 63,
            column: 66
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 63
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 72,
            column: 23
          },
          end: {
            line: 72,
            column: 24
          }
        },
        loc: {
          start: {
            line: 72,
            column: 29
          },
          end: {
            line: 72,
            column: 52
          }
        },
        line: 72
      },
      "14": {
        name: "useNetwork",
        decl: {
          start: {
            line: 83,
            column: 9
          },
          end: {
            line: 83,
            column: 19
          }
        },
        loc: {
          start: {
            line: 83,
            column: 22
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 83
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 8,
            column: 57
          },
          end: {
            line: 8,
            column: 80
          }
        }, {
          start: {
            line: 8,
            column: 83
          },
          end: {
            line: 8,
            column: 122
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 9,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 9,
            column: 56
          },
          end: {
            line: 9,
            column: 77
          }
        }, {
          start: {
            line: 9,
            column: 80
          },
          end: {
            line: 9,
            column: 117
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/NetworkContext.tsx",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/shared/NetworkContext.tsx"],
      sourcesContent: ["import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { logger } from '@shared/utils/secureLogger';\r\n\r\nconst API_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : 'https://symbiont-backend.onrender.com';\r\nconst WS_URL = process.env.NODE_ENV === 'development' ? 'ws://localhost:8080' : 'wss://symbiont-backend.onrender.com';\r\n\r\ninterface Network {\r\n  nodes: any[];\r\n  links: any[];\r\n}\r\ninterface InviteParams {\r\n  source: string;\r\n  target: string;\r\n  traits: any;\r\n}\r\ninterface FusionParams {\r\n  type: string;\r\n  participants: string[];\r\n  result: string;\r\n  traits: any;\r\n}\r\n\r\ninterface NetworkContextType {\r\n  network: Network;\r\n  loading: boolean;\r\n  error: string | null;\r\n  wsConnected: boolean;\r\n  actionStatus: 'idle' | 'loading' | 'success' | 'error';\r\n  invite: (params: InviteParams) => Promise<void>;\r\n  fusion: (params: FusionParams) => Promise<void>;\r\n}\r\n\r\nconst NetworkContext = createContext<NetworkContextType | null>(null);\r\n\r\nexport function NetworkProvider({ children }: { children: ReactNode }) {\r\n  const [network, setNetwork] = useState<Network>({ nodes: [], links: [] });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [wsConnected, setWsConnected] = useState(false);\r\n  const [actionStatus, setActionStatus] = useState<'idle'|'loading'|'success'|'error'>('idle');\r\n\r\n  // Fetch initial\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(API_URL + '/api/network')\r\n      .then(res => res.json())\r\n      .then(data => { setNetwork(data); setLoading(false); })\r\n      .catch(() => { setError('Erreur r\xE9seau'); setLoading(false); });\r\n  }, []);\r\n\r\n  // WebSocket\r\n  useEffect(() => {\r\n    const ws = new WebSocket(WS_URL);\r\n    \r\n    ws.onopen = () => {\r\n      setWsConnected(true);\r\n    };\r\n    \r\n    ws.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        setNetwork(data);\r\n      } catch (error) {\r\n        logger.error('Failed to parse network data:', error);\r\n      }\r\n    };\r\n    \r\n    ws.onclose = () => {\r\n      setWsConnected(false);\r\n    };\r\n    \r\n    return () => {\r\n      ws.close();\r\n    };\r\n  }, []);\r\n\r\n  // Actions\r\n  async function invite({ source, target, traits }: InviteParams) {\r\n    setActionStatus('loading');\r\n    try {\r\n      await fetch(API_URL + '/api/invite', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ source, target, traits })\r\n      });\r\n      setActionStatus('success');\r\n      setTimeout(() => setActionStatus('idle'), 2000);\r\n    } catch {\r\n      setActionStatus('error');\r\n    }\r\n  }\r\n  async function fusion({ type, participants, result, traits }: FusionParams) {\r\n    setActionStatus('loading');\r\n    try {\r\n      await fetch(API_URL + '/api/ritual', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ type, participants, result, traits })\r\n      });\r\n      setActionStatus('success');\r\n      setTimeout(() => setActionStatus('idle'), 2000);\r\n    } catch {\r\n      setActionStatus('error');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <NetworkContext.Provider value={{\r\n      network, loading, error, wsConnected, actionStatus,\r\n      invite, fusion\r\n    }}>\r\n      {children}\r\n    </NetworkContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useNetwork() {\r\n  return useContext(NetworkContext)!;\r\n} "],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "63416ece592a165fb5f55ec9f930622c8e996fab"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_172q5jwqsb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_172q5jwqsb();
cov_172q5jwqsb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_172q5jwqsb().s[1]++;
exports.NetworkProvider = NetworkProvider;
/* istanbul ignore next */
cov_172q5jwqsb().s[2]++;
exports.useNetwork = useNetwork;
const jsx_runtime_1 =
/* istanbul ignore next */
(cov_172q5jwqsb().s[3]++, require("react/jsx-runtime"));
const react_1 =
/* istanbul ignore next */
(cov_172q5jwqsb().s[4]++, require("react"));
const secureLogger_1 =
/* istanbul ignore next */
(cov_172q5jwqsb().s[5]++, require("@shared/utils/secureLogger"));
const API_URL =
/* istanbul ignore next */
(cov_172q5jwqsb().s[6]++, process.env.NODE_ENV === 'development' ?
/* istanbul ignore next */
(cov_172q5jwqsb().b[0][0]++, 'http://localhost:8080') :
/* istanbul ignore next */
(cov_172q5jwqsb().b[0][1]++, 'https://symbiont-backend.onrender.com'));
const WS_URL =
/* istanbul ignore next */
(cov_172q5jwqsb().s[7]++, process.env.NODE_ENV === 'development' ?
/* istanbul ignore next */
(cov_172q5jwqsb().b[1][0]++, 'ws://localhost:8080') :
/* istanbul ignore next */
(cov_172q5jwqsb().b[1][1]++, 'wss://symbiont-backend.onrender.com'));
const NetworkContext =
/* istanbul ignore next */
(cov_172q5jwqsb().s[8]++, (0, react_1.createContext)(null));
function NetworkProvider({
  children
}) {
  /* istanbul ignore next */
  cov_172q5jwqsb().f[0]++;
  const [network, setNetwork] =
  /* istanbul ignore next */
  (cov_172q5jwqsb().s[9]++, (0, react_1.useState)({
    nodes: [],
    links: []
  }));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_172q5jwqsb().s[10]++, (0, react_1.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_172q5jwqsb().s[11]++, (0, react_1.useState)(null));
  const [wsConnected, setWsConnected] =
  /* istanbul ignore next */
  (cov_172q5jwqsb().s[12]++, (0, react_1.useState)(false));
  const [actionStatus, setActionStatus] =
  /* istanbul ignore next */
  (cov_172q5jwqsb().s[13]++, (0, react_1.useState)('idle'));
  // Fetch initial
  /* istanbul ignore next */
  cov_172q5jwqsb().s[14]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_172q5jwqsb().f[1]++;
    cov_172q5jwqsb().s[15]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_172q5jwqsb().s[16]++;
    fetch(API_URL + '/api/network').then(res => {
      /* istanbul ignore next */
      cov_172q5jwqsb().f[2]++;
      cov_172q5jwqsb().s[17]++;
      return res.json();
    }).then(data => {
      /* istanbul ignore next */
      cov_172q5jwqsb().f[3]++;
      cov_172q5jwqsb().s[18]++;
      setNetwork(data);
      /* istanbul ignore next */
      cov_172q5jwqsb().s[19]++;
      setLoading(false);
    }).catch(() => {
      /* istanbul ignore next */
      cov_172q5jwqsb().f[4]++;
      cov_172q5jwqsb().s[20]++;
      setError('Erreur réseau');
      /* istanbul ignore next */
      cov_172q5jwqsb().s[21]++;
      setLoading(false);
    });
  }, []);
  // WebSocket
  /* istanbul ignore next */
  cov_172q5jwqsb().s[22]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_172q5jwqsb().f[5]++;
    const ws =
    /* istanbul ignore next */
    (cov_172q5jwqsb().s[23]++, new WebSocket(WS_URL));
    /* istanbul ignore next */
    cov_172q5jwqsb().s[24]++;
    ws.onopen = () => {
      /* istanbul ignore next */
      cov_172q5jwqsb().f[6]++;
      cov_172q5jwqsb().s[25]++;
      setWsConnected(true);
    };
    /* istanbul ignore next */
    cov_172q5jwqsb().s[26]++;
    ws.onmessage = event => {
      /* istanbul ignore next */
      cov_172q5jwqsb().f[7]++;
      cov_172q5jwqsb().s[27]++;
      try {
        const data =
        /* istanbul ignore next */
        (cov_172q5jwqsb().s[28]++, JSON.parse(event.data));
        /* istanbul ignore next */
        cov_172q5jwqsb().s[29]++;
        setNetwork(data);
      } catch (error) {
        /* istanbul ignore next */
        cov_172q5jwqsb().s[30]++;
        secureLogger_1.logger.error('Failed to parse network data:', error);
      }
    };
    /* istanbul ignore next */
    cov_172q5jwqsb().s[31]++;
    ws.onclose = () => {
      /* istanbul ignore next */
      cov_172q5jwqsb().f[8]++;
      cov_172q5jwqsb().s[32]++;
      setWsConnected(false);
    };
    /* istanbul ignore next */
    cov_172q5jwqsb().s[33]++;
    return () => {
      /* istanbul ignore next */
      cov_172q5jwqsb().f[9]++;
      cov_172q5jwqsb().s[34]++;
      ws.close();
    };
  }, []);
  // Actions
  async function invite({
    source,
    target,
    traits
  }) {
    /* istanbul ignore next */
    cov_172q5jwqsb().f[10]++;
    cov_172q5jwqsb().s[35]++;
    setActionStatus('loading');
    /* istanbul ignore next */
    cov_172q5jwqsb().s[36]++;
    try {
      /* istanbul ignore next */
      cov_172q5jwqsb().s[37]++;
      await fetch(API_URL + '/api/invite', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          source,
          target,
          traits
        })
      });
      /* istanbul ignore next */
      cov_172q5jwqsb().s[38]++;
      setActionStatus('success');
      /* istanbul ignore next */
      cov_172q5jwqsb().s[39]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_172q5jwqsb().f[11]++;
        cov_172q5jwqsb().s[40]++;
        return setActionStatus('idle');
      }, 2000);
    } catch {
      /* istanbul ignore next */
      cov_172q5jwqsb().s[41]++;
      setActionStatus('error');
    }
  }
  async function fusion({
    type,
    participants,
    result,
    traits
  }) {
    /* istanbul ignore next */
    cov_172q5jwqsb().f[12]++;
    cov_172q5jwqsb().s[42]++;
    setActionStatus('loading');
    /* istanbul ignore next */
    cov_172q5jwqsb().s[43]++;
    try {
      /* istanbul ignore next */
      cov_172q5jwqsb().s[44]++;
      await fetch(API_URL + '/api/ritual', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          type,
          participants,
          result,
          traits
        })
      });
      /* istanbul ignore next */
      cov_172q5jwqsb().s[45]++;
      setActionStatus('success');
      /* istanbul ignore next */
      cov_172q5jwqsb().s[46]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_172q5jwqsb().f[13]++;
        cov_172q5jwqsb().s[47]++;
        return setActionStatus('idle');
      }, 2000);
    } catch {
      /* istanbul ignore next */
      cov_172q5jwqsb().s[48]++;
      setActionStatus('error');
    }
  }
  /* istanbul ignore next */
  cov_172q5jwqsb().s[49]++;
  return (0, jsx_runtime_1.jsx)(NetworkContext.Provider, {
    value: {
      network,
      loading,
      error,
      wsConnected,
      actionStatus,
      invite,
      fusion
    },
    children: children
  });
}
function useNetwork() {
  /* istanbul ignore next */
  cov_172q5jwqsb().f[14]++;
  cov_172q5jwqsb().s[50]++;
  return (0, react_1.useContext)(NetworkContext);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,