25ee64b47798197dbb2d96cc8c3b42bb
"use strict";

// Analyseur de patterns
/* istanbul ignore next */
function cov_1kbw7ea9zf() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/PatternAnalyzer.ts";
  var hash = "3ab01d266993d2edaf533260e37c15a1ce8b2a82";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/PatternAnalyzer.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 33
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 55
        }
      },
      "3": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 17,
          column: 10
        }
      },
      "4": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 24,
          column: 12
        }
      },
      "5": {
        start: {
          line: 21,
          column: 36
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "6": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 26
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 27
          }
        },
        loc: {
          start: {
            line: 21,
            column: 36
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 22,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 53
          },
          end: {
            line: 22,
            column: 58
          }
        }, {
          start: {
            line: 22,
            column: 61
          },
          end: {
            line: 22,
            column: 63
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 22,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 22,
            column: 21
          }
        }, {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 22,
            column: 50
          }
        }],
        line: 22
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/PatternAnalyzer.ts",
      mappings: ";AAAA,wBAAwB;;;AAExB,MAAa,eAAe;IAC1B,sDAAsD;IACtD,eAAe,CAAC,IAAe;QAC7B,yBAAyB;QACzB,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC;IACjD,CAAC;IAED,eAAe,CAAC,QAAmB;QACjC,8BAA8B;QAC9B,OAAO;YACL,OAAO,EAAE,SAAS;YAClB,UAAU,EAAE,GAAG;YACf,SAAS,EAAE,QAAQ,CAAC,MAAM;SAC3B,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,MAAiB;QAC9B,0BAA0B;QAC1B,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC1B,GAAG,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;YACpD,WAAW,EAAE,UAAU;SACxB,CAAC,CAAC,CAAC;IACN,CAAC;CACF;AAvBD,0CAuBC",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/behavioral/core/PatternAnalyzer.ts"],
      sourcesContent: ["// Analyseur de patterns\r\n\r\nexport class PatternAnalyzer {\r\n  // @ts-expect-error Param\xE8tre r\xE9serv\xE9 pour usage futur\r\n  analyzeSequence(data: unknown[]): any {\r\n    // Pattern analysis logic\r\n    return { pattern: 'unknown', confidence: 0.5 };\r\n  }\r\n\r\n  analyzeBehavior(sequence: unknown[]): any {\r\n    // Analyze behavioral patterns\r\n    return {\r\n      pattern: 'default',\r\n      confidence: 0.5,\r\n      behaviors: sequence.length\r\n    };\r\n  }\r\n\r\n  detectPatterns(events: unknown[]): unknown[] {\r\n    // Pattern detection logic\r\n    return events.map(event => ({\r\n      ...(event && typeof event === 'object' ? event : {}),\r\n      patternType: 'detected'\r\n    }));\r\n  }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3ab01d266993d2edaf533260e37c15a1ce8b2a82"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kbw7ea9zf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kbw7ea9zf();
cov_1kbw7ea9zf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1kbw7ea9zf().s[1]++;
exports.PatternAnalyzer = void 0;
class PatternAnalyzer {
  // @ts-expect-error Paramètre réservé pour usage futur
  analyzeSequence(data) {
    /* istanbul ignore next */
    cov_1kbw7ea9zf().f[0]++;
    cov_1kbw7ea9zf().s[2]++;
    // Pattern analysis logic
    return {
      pattern: 'unknown',
      confidence: 0.5
    };
  }
  analyzeBehavior(sequence) {
    /* istanbul ignore next */
    cov_1kbw7ea9zf().f[1]++;
    cov_1kbw7ea9zf().s[3]++;
    // Analyze behavioral patterns
    return {
      pattern: 'default',
      confidence: 0.5,
      behaviors: sequence.length
    };
  }
  detectPatterns(events) {
    /* istanbul ignore next */
    cov_1kbw7ea9zf().f[2]++;
    cov_1kbw7ea9zf().s[4]++;
    // Pattern detection logic
    return events.map(event => {
      /* istanbul ignore next */
      cov_1kbw7ea9zf().f[3]++;
      cov_1kbw7ea9zf().s[5]++;
      return {
        ...(
        /* istanbul ignore next */
        (cov_1kbw7ea9zf().b[1][0]++, event) &&
        /* istanbul ignore next */
        (cov_1kbw7ea9zf().b[1][1]++, typeof event === 'object') ?
        /* istanbul ignore next */
        (cov_1kbw7ea9zf().b[0][0]++, event) :
        /* istanbul ignore next */
        (cov_1kbw7ea9zf().b[0][1]++, {})),
        patternType: 'detected'
      };
    });
  }
}
/* istanbul ignore next */
cov_1kbw7ea9zf().s[6]++;
exports.PatternAnalyzer = PatternAnalyzer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWtidzdlYTl6ZiIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIlBhdHRlcm5BbmFseXplciIsImFuYWx5emVTZXF1ZW5jZSIsImRhdGEiLCJwYXR0ZXJuIiwiY29uZmlkZW5jZSIsImFuYWx5emVCZWhhdmlvciIsInNlcXVlbmNlIiwiYmVoYXZpb3JzIiwibGVuZ3RoIiwiZGV0ZWN0UGF0dGVybnMiLCJldmVudHMiLCJtYXAiLCJldmVudCIsInBhdHRlcm5UeXBlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi9tbnQvYy9Vc2Vycy9tX29saS9Qcm9qZXRzL1NZTUJJT05UL3NyYy9iZWhhdmlvcmFsL2NvcmUvUGF0dGVybkFuYWx5emVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEFuYWx5c2V1ciBkZSBwYXR0ZXJuc1xyXG5cclxuZXhwb3J0IGNsYXNzIFBhdHRlcm5BbmFseXplciB7XHJcbiAgLy8gQHRzLWV4cGVjdC1lcnJvciBQYXJhbcOodHJlIHLDqXNlcnbDqSBwb3VyIHVzYWdlIGZ1dHVyXHJcbiAgYW5hbHl6ZVNlcXVlbmNlKGRhdGE6IHVua25vd25bXSk6IGFueSB7XHJcbiAgICAvLyBQYXR0ZXJuIGFuYWx5c2lzIGxvZ2ljXHJcbiAgICByZXR1cm4geyBwYXR0ZXJuOiAndW5rbm93bicsIGNvbmZpZGVuY2U6IDAuNSB9O1xyXG4gIH1cclxuXHJcbiAgYW5hbHl6ZUJlaGF2aW9yKHNlcXVlbmNlOiB1bmtub3duW10pOiBhbnkge1xyXG4gICAgLy8gQW5hbHl6ZSBiZWhhdmlvcmFsIHBhdHRlcm5zXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwYXR0ZXJuOiAnZGVmYXVsdCcsXHJcbiAgICAgIGNvbmZpZGVuY2U6IDAuNSxcclxuICAgICAgYmVoYXZpb3JzOiBzZXF1ZW5jZS5sZW5ndGhcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBkZXRlY3RQYXR0ZXJucyhldmVudHM6IHVua25vd25bXSk6IHVua25vd25bXSB7XHJcbiAgICAvLyBQYXR0ZXJuIGRldGVjdGlvbiBsb2dpY1xyXG4gICAgcmV0dXJuIGV2ZW50cy5tYXAoZXZlbnQgPT4gKHtcclxuICAgICAgLi4uKGV2ZW50ICYmIHR5cGVvZiBldmVudCA9PT0gJ29iamVjdCcgPyBldmVudCA6IHt9KSxcclxuICAgICAgcGF0dGVyblR5cGU6ICdkZXRlY3RlZCdcclxuICAgIH0pKTtcclxuICB9XHJcbn0iXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFBQTtBQUFBLFNBQUFBLGVBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLE1BQUEsT0FBQUMsUUFBQTtFQUFBLElBQUFDLEdBQUE7RUFBQSxJQUFBQyxZQUFBO0lBQUFMLElBQUE7SUFBQU0sWUFBQTtNQUFBO1FBQUFDLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBVSxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLGNBQUE7TUFBQUMsSUFBQTtNQUFBQyxRQUFBO01BQUFDLEtBQUE7TUFBQUMsT0FBQTtNQUFBQyxjQUFBO01BQUFDLE9BQUE7SUFBQTtJQUFBQyxlQUFBO0lBQUEzQixJQUFBO0VBQUE7RUFBQSxJQUFBNEIsUUFBQSxHQUFBM0IsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUF5QixRQUFBLENBQUE3QixJQUFBLEtBQUE2QixRQUFBLENBQUE3QixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBNEIsUUFBQSxDQUFBN0IsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBeUIsY0FBQSxHQUFBRCxRQUFBLENBQUE3QixJQUFBO0VBQUE7SUFjTTtJQUFBRCxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBK0IsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQS9CLGNBQUE7QUFBQUEsY0FBQSxHQUFBbUIsQ0FBQTs7Ozs7OztBQVpOLE1BQWFhLGVBQWU7RUFDMUI7RUFDQUMsZUFBZUEsQ0FBQ0MsSUFBZTtJQUFBO0lBQUFsQyxjQUFBLEdBQUFvQixDQUFBO0lBQUFwQixjQUFBLEdBQUFtQixDQUFBO0lBQzdCO0lBQ0EsT0FBTztNQUFFZ0IsT0FBTyxFQUFFLFNBQVM7TUFBRUMsVUFBVSxFQUFFO0lBQUcsQ0FBRTtFQUNoRDtFQUVBQyxlQUFlQSxDQUFDQyxRQUFtQjtJQUFBO0lBQUF0QyxjQUFBLEdBQUFvQixDQUFBO0lBQUFwQixjQUFBLEdBQUFtQixDQUFBO0lBQ2pDO0lBQ0EsT0FBTztNQUNMZ0IsT0FBTyxFQUFFLFNBQVM7TUFDbEJDLFVBQVUsRUFBRSxHQUFHO01BQ2ZHLFNBQVMsRUFBRUQsUUFBUSxDQUFDRTtLQUNyQjtFQUNIO0VBRUFDLGNBQWNBLENBQUNDLE1BQWlCO0lBQUE7SUFBQTFDLGNBQUEsR0FBQW9CLENBQUE7SUFBQXBCLGNBQUEsR0FBQW1CLENBQUE7SUFDOUI7SUFDQSxPQUFPdUIsTUFBTSxDQUFDQyxHQUFHLENBQUNDLEtBQUssSUFBSztNQUFBO01BQUE1QyxjQUFBLEdBQUFvQixDQUFBO01BQUFwQixjQUFBLEdBQUFtQixDQUFBO01BQUE7UUFDMUI7UUFBSTtRQUFBLENBQUFuQixjQUFBLEdBQUFxQixDQUFBLFVBQUF1QixLQUFLO1FBQUE7UUFBQSxDQUFBNUMsY0FBQSxHQUFBcUIsQ0FBQSxVQUFJLE9BQU91QixLQUFLLEtBQUssUUFBUTtRQUFBO1FBQUEsQ0FBQTVDLGNBQUEsR0FBQXFCLENBQUEsVUFBR3VCLEtBQUs7UUFBQTtRQUFBLENBQUE1QyxjQUFBLEdBQUFxQixDQUFBLFVBQUcsRUFBRSxFQUFDO1FBQ3BEd0IsV0FBVyxFQUFFO09BQ2Q7S0FBQyxDQUFDO0VBQ0w7O0FBQ0Q7QUFBQTdDLGNBQUEsR0FBQW1CLENBQUE7QUF2QkQyQixPQUFBLENBQUFkLGVBQUEsR0FBQUEsZUFBQSIsImlnbm9yZUxpc3QiOltdfQ==