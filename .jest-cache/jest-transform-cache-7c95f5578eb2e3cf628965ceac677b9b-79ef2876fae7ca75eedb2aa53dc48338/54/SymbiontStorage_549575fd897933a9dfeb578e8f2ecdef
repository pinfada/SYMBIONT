cff97dcda2743e41c3758bc10630757a
"use strict";

/* istanbul ignore next */
function cov_2mktkw1gu6() {
  var path = "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/storage/SymbiontStorage.ts";
  var hash = "7713fcaa8ad59823d05c51354592de9fe832cc45";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/storage/SymbiontStorage.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 23
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 37
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 28
        }
      },
      "5": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      },
      "6": {
        start: {
          line: 12,
          column: 28
        },
        end: {
          line: 12,
          column: 73
        }
      },
      "7": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 58
        }
      },
      "8": {
        start: {
          line: 13,
          column: 36
        },
        end: {
          line: 13,
          column: 57
        }
      },
      "9": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 17,
          column: 14
        }
      },
      "10": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "11": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 26
        }
      },
      "12": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 48,
          column: 14
        }
      },
      "13": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 46
        }
      },
      "14": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 25,
          column: 17
        }
      },
      "15": {
        start: {
          line: 22,
          column: 42
        },
        end: {
          line: 22,
          column: 94
        }
      },
      "16": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 93
        }
      },
      "17": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 91
        }
      },
      "18": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 31,
          column: 17
        }
      },
      "19": {
        start: {
          line: 28,
          column: 42
        },
        end: {
          line: 28,
          column: 95
        }
      },
      "20": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 91
        }
      },
      "21": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 30,
          column: 93
        }
      },
      "22": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 37,
          column: 17
        }
      },
      "23": {
        start: {
          line: 34,
          column: 42
        },
        end: {
          line: 34,
          column: 115
        }
      },
      "24": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 91
        }
      },
      "25": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 81
        }
      },
      "26": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 41,
          column: 17
        }
      },
      "27": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 40,
          column: 73
        }
      },
      "28": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 47,
          column: 17
        }
      },
      "29": {
        start: {
          line: 44,
          column: 44
        },
        end: {
          line: 44,
          column: 100
        }
      },
      "30": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 45,
          column: 93
        }
      },
      "31": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 87
        }
      },
      "32": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 53,
          column: 56
        }
      },
      "33": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 56
        }
      },
      "34": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "35": {
        start: {
          line: 55,
          column: 32
        },
        end: {
          line: 55,
          column: 78
        }
      },
      "36": {
        start: {
          line: 56,
          column: 26
        },
        end: {
          line: 56,
          column: 62
        }
      },
      "37": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "38": {
        start: {
          line: 58,
          column: 32
        },
        end: {
          line: 58,
          column: 45
        }
      },
      "39": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 74
        }
      },
      "40": {
        start: {
          line: 59,
          column: 42
        },
        end: {
          line: 59,
          column: 73
        }
      },
      "41": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 62
        }
      },
      "42": {
        start: {
          line: 60,
          column: 40
        },
        end: {
          line: 60,
          column: 61
        }
      },
      "43": {
        start: {
          line: 64,
          column: 32
        },
        end: {
          line: 64,
          column: 50
        }
      },
      "44": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 68,
          column: 18
        }
      },
      "45": {
        start: {
          line: 66,
          column: 35
        },
        end: {
          line: 66,
          column: 54
        }
      },
      "46": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 58
        }
      },
      "47": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 62
        }
      },
      "48": {
        start: {
          line: 69,
          column: 40
        },
        end: {
          line: 69,
          column: 61
        }
      },
      "49": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 75,
          column: 56
        }
      },
      "50": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 56
        }
      },
      "51": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 82,
          column: 11
        }
      },
      "52": {
        start: {
          line: 77,
          column: 32
        },
        end: {
          line: 77,
          column: 79
        }
      },
      "53": {
        start: {
          line: 78,
          column: 26
        },
        end: {
          line: 78,
          column: 62
        }
      },
      "54": {
        start: {
          line: 79,
          column: 28
        },
        end: {
          line: 79,
          column: 47
        }
      },
      "55": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 48
        }
      },
      "56": {
        start: {
          line: 80,
          column: 38
        },
        end: {
          line: 80,
          column: 47
        }
      },
      "57": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 58
        }
      },
      "58": {
        start: {
          line: 81,
          column: 36
        },
        end: {
          line: 81,
          column: 57
        }
      },
      "59": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 86,
          column: 56
        }
      },
      "60": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 56
        }
      },
      "61": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "62": {
        start: {
          line: 88,
          column: 32
        },
        end: {
          line: 88,
          column: 78
        }
      },
      "63": {
        start: {
          line: 89,
          column: 26
        },
        end: {
          line: 89,
          column: 62
        }
      },
      "64": {
        start: {
          line: 90,
          column: 28
        },
        end: {
          line: 90,
          column: 42
        }
      },
      "65": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 70
        }
      },
      "66": {
        start: {
          line: 91,
          column: 38
        },
        end: {
          line: 91,
          column: 69
        }
      },
      "67": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 58
        }
      },
      "68": {
        start: {
          line: 92,
          column: 36
        },
        end: {
          line: 92,
          column: 57
        }
      },
      "69": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 97,
          column: 56
        }
      },
      "70": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 56
        }
      },
      "71": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 104,
          column: 11
        }
      },
      "72": {
        start: {
          line: 99,
          column: 32
        },
        end: {
          line: 99,
          column: 79
        }
      },
      "73": {
        start: {
          line: 100,
          column: 26
        },
        end: {
          line: 100,
          column: 62
        }
      },
      "74": {
        start: {
          line: 101,
          column: 28
        },
        end: {
          line: 101,
          column: 47
        }
      },
      "75": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 48
        }
      },
      "76": {
        start: {
          line: 102,
          column: 38
        },
        end: {
          line: 102,
          column: 47
        }
      },
      "77": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 58
        }
      },
      "78": {
        start: {
          line: 103,
          column: 36
        },
        end: {
          line: 103,
          column: 57
        }
      },
      "79": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 108,
          column: 56
        }
      },
      "80": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 56
        }
      },
      "81": {
        start: {
          line: 109,
          column: 38
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "82": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "83": {
        start: {
          line: 114,
          column: 32
        },
        end: {
          line: 114,
          column: 79
        }
      },
      "84": {
        start: {
          line: 115,
          column: 26
        },
        end: {
          line: 115,
          column: 62
        }
      },
      "85": {
        start: {
          line: 116,
          column: 28
        },
        end: {
          line: 116,
          column: 60
        }
      },
      "86": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 48
        }
      },
      "87": {
        start: {
          line: 117,
          column: 38
        },
        end: {
          line: 117,
          column: 47
        }
      },
      "88": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 58
        }
      },
      "89": {
        start: {
          line: 118,
          column: 36
        },
        end: {
          line: 118,
          column: 57
        }
      },
      "90": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 123,
          column: 56
        }
      },
      "91": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 56
        }
      },
      "92": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 141,
          column: 11
        }
      },
      "93": {
        start: {
          line: 125,
          column: 32
        },
        end: {
          line: 125,
          column: 78
        }
      },
      "94": {
        start: {
          line: 126,
          column: 26
        },
        end: {
          line: 126,
          column: 62
        }
      },
      "95": {
        start: {
          line: 127,
          column: 26
        },
        end: {
          line: 127,
          column: 50
        }
      },
      "96": {
        start: {
          line: 128,
          column: 28
        },
        end: {
          line: 128,
          column: 58
        }
      },
      "97": {
        start: {
          line: 129,
          column: 30
        },
        end: {
          line: 129,
          column: 32
        }
      },
      "98": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 139,
          column: 14
        }
      },
      "99": {
        start: {
          line: 131,
          column: 31
        },
        end: {
          line: 131,
          column: 50
        }
      },
      "100": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 138,
          column: 17
        }
      },
      "101": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 49
        }
      },
      "102": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 134,
          column: 38
        }
      },
      "103": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 39
        }
      },
      "104": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 58
        }
      },
      "105": {
        start: {
          line: 140,
          column: 36
        },
        end: {
          line: 140,
          column: 57
        }
      },
      "106": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 145,
          column: 56
        }
      },
      "107": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 56
        }
      },
      "108": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "109": {
        start: {
          line: 147,
          column: 32
        },
        end: {
          line: 147,
          column: 77
        }
      },
      "110": {
        start: {
          line: 148,
          column: 26
        },
        end: {
          line: 148,
          column: 61
        }
      },
      "111": {
        start: {
          line: 149,
          column: 28
        },
        end: {
          line: 149,
          column: 42
        }
      },
      "112": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 153,
          column: 14
        }
      },
      "113": {
        start: {
          line: 151,
          column: 31
        },
        end: {
          line: 151,
          column: 45
        }
      },
      "114": {
        start: {
          line: 152,
          column: 16
        },
        end: {
          line: 152,
          column: 62
        }
      },
      "115": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 58
        }
      },
      "116": {
        start: {
          line: 154,
          column: 36
        },
        end: {
          line: 154,
          column: 57
        }
      },
      "117": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 159,
          column: 56
        }
      },
      "118": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 56
        }
      },
      "119": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 166,
          column: 11
        }
      },
      "120": {
        start: {
          line: 161,
          column: 32
        },
        end: {
          line: 161,
          column: 78
        }
      },
      "121": {
        start: {
          line: 162,
          column: 26
        },
        end: {
          line: 162,
          column: 61
        }
      },
      "122": {
        start: {
          line: 163,
          column: 28
        },
        end: {
          line: 163,
          column: 53
        }
      },
      "123": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 48
        }
      },
      "124": {
        start: {
          line: 164,
          column: 38
        },
        end: {
          line: 164,
          column: 47
        }
      },
      "125": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 58
        }
      },
      "126": {
        start: {
          line: 165,
          column: 36
        },
        end: {
          line: 165,
          column: 57
        }
      },
      "127": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 171,
          column: 56
        }
      },
      "128": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 56
        }
      },
      "129": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 181,
          column: 11
        }
      },
      "130": {
        start: {
          line: 173,
          column: 32
        },
        end: {
          line: 173,
          column: 81
        }
      },
      "131": {
        start: {
          line: 174,
          column: 26
        },
        end: {
          line: 174,
          column: 64
        }
      },
      "132": {
        start: {
          line: 175,
          column: 28
        },
        end: {
          line: 178,
          column: 14
        }
      },
      "133": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 48
        }
      },
      "134": {
        start: {
          line: 179,
          column: 38
        },
        end: {
          line: 179,
          column: 47
        }
      },
      "135": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 58
        }
      },
      "136": {
        start: {
          line: 180,
          column: 36
        },
        end: {
          line: 180,
          column: 57
        }
      },
      "137": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 185,
          column: 56
        }
      },
      "138": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 56
        }
      },
      "139": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 192,
          column: 11
        }
      },
      "140": {
        start: {
          line: 187,
          column: 32
        },
        end: {
          line: 187,
          column: 81
        }
      },
      "141": {
        start: {
          line: 188,
          column: 26
        },
        end: {
          line: 188,
          column: 64
        }
      },
      "142": {
        start: {
          line: 189,
          column: 28
        },
        end: {
          line: 189,
          column: 49
        }
      },
      "143": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 48
        }
      },
      "144": {
        start: {
          line: 190,
          column: 38
        },
        end: {
          line: 190,
          column: 47
        }
      },
      "145": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 58
        }
      },
      "146": {
        start: {
          line: 191,
          column: 36
        },
        end: {
          line: 191,
          column: 57
        }
      },
      "147": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 196,
          column: 56
        }
      },
      "148": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 56
        }
      },
      "149": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 203,
          column: 11
        }
      },
      "150": {
        start: {
          line: 198,
          column: 32
        },
        end: {
          line: 198,
          column: 80
        }
      },
      "151": {
        start: {
          line: 199,
          column: 26
        },
        end: {
          line: 199,
          column: 64
        }
      },
      "152": {
        start: {
          line: 200,
          column: 28
        },
        end: {
          line: 200,
          column: 43
        }
      },
      "153": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 70
        }
      },
      "154": {
        start: {
          line: 201,
          column: 38
        },
        end: {
          line: 201,
          column: 69
        }
      },
      "155": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 58
        }
      },
      "156": {
        start: {
          line: 202,
          column: 36
        },
        end: {
          line: 202,
          column: 57
        }
      },
      "157": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 207,
          column: 56
        }
      },
      "158": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 56
        }
      },
      "159": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 224,
          column: 11
        }
      },
      "160": {
        start: {
          line: 209,
          column: 32
        },
        end: {
          line: 209,
          column: 80
        }
      },
      "161": {
        start: {
          line: 210,
          column: 26
        },
        end: {
          line: 210,
          column: 64
        }
      },
      "162": {
        start: {
          line: 211,
          column: 28
        },
        end: {
          line: 211,
          column: 46
        }
      },
      "163": {
        start: {
          line: 212,
          column: 28
        },
        end: {
          line: 212,
          column: 30
        }
      },
      "164": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 222,
          column: 14
        }
      },
      "165": {
        start: {
          line: 214,
          column: 31
        },
        end: {
          line: 214,
          column: 50
        }
      },
      "166": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 221,
          column: 17
        }
      },
      "167": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 216,
          column: 47
        }
      },
      "168": {
        start: {
          line: 217,
          column: 20
        },
        end: {
          line: 217,
          column: 38
        }
      },
      "169": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 220,
          column: 37
        }
      },
      "170": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 58
        }
      },
      "171": {
        start: {
          line: 223,
          column: 36
        },
        end: {
          line: 223,
          column: 57
        }
      },
      "172": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 231,
          column: 56
        }
      },
      "173": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 56
        }
      },
      "174": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 254,
          column: 11
        }
      },
      "175": {
        start: {
          line: 233,
          column: 32
        },
        end: {
          line: 233,
          column: 78
        }
      },
      "176": {
        start: {
          line: 234,
          column: 26
        },
        end: {
          line: 234,
          column: 62
        }
      },
      "177": {
        start: {
          line: 235,
          column: 28
        },
        end: {
          line: 235,
          column: 46
        }
      },
      "178": {
        start: {
          line: 236,
          column: 28
        },
        end: {
          line: 236,
          column: 30
        }
      },
      "179": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 252,
          column: 14
        }
      },
      "180": {
        start: {
          line: 238,
          column: 31
        },
        end: {
          line: 238,
          column: 50
        }
      },
      "181": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 251,
          column: 17
        }
      },
      "182": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 240,
          column: 47
        }
      },
      "183": {
        start: {
          line: 241,
          column: 20
        },
        end: {
          line: 241,
          column: 38
        }
      },
      "184": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 249,
          column: 23
        }
      },
      "185": {
        start: {
          line: 246,
          column: 24
        },
        end: {
          line: 247,
          column: 63
        }
      },
      "186": {
        start: {
          line: 247,
          column: 28
        },
        end: {
          line: 247,
          column: 63
        }
      },
      "187": {
        start: {
          line: 248,
          column: 24
        },
        end: {
          line: 248,
          column: 57
        }
      },
      "188": {
        start: {
          line: 250,
          column: 20
        },
        end: {
          line: 250,
          column: 37
        }
      },
      "189": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 58
        }
      },
      "190": {
        start: {
          line: 253,
          column: 36
        },
        end: {
          line: 253,
          column: 57
        }
      },
      "191": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 261,
          column: 56
        }
      },
      "192": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 56
        }
      },
      "193": {
        start: {
          line: 262,
          column: 22
        },
        end: {
          line: 262,
          column: 43
        }
      },
      "194": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 286,
          column: 11
        }
      },
      "195": {
        start: {
          line: 264,
          column: 32
        },
        end: {
          line: 264,
          column: 78
        }
      },
      "196": {
        start: {
          line: 265,
          column: 26
        },
        end: {
          line: 265,
          column: 62
        }
      },
      "197": {
        start: {
          line: 266,
          column: 28
        },
        end: {
          line: 266,
          column: 46
        }
      },
      "198": {
        start: {
          line: 267,
          column: 27
        },
        end: {
          line: 267,
          column: 29
        }
      },
      "199": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 284,
          column: 14
        }
      },
      "200": {
        start: {
          line: 269,
          column: 31
        },
        end: {
          line: 269,
          column: 50
        }
      },
      "201": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 283,
          column: 17
        }
      },
      "202": {
        start: {
          line: 271,
          column: 37
        },
        end: {
          line: 271,
          column: 49
        }
      },
      "203": {
        start: {
          line: 273,
          column: 37
        },
        end: {
          line: 273,
          column: 100
        }
      },
      "204": {
        start: {
          line: 273,
          column: 79
        },
        end: {
          line: 273,
          column: 99
        }
      },
      "205": {
        start: {
          line: 274,
          column: 20
        },
        end: {
          line: 276,
          column: 21
        }
      },
      "206": {
        start: {
          line: 275,
          column: 24
        },
        end: {
          line: 275,
          column: 65
        }
      },
      "207": {
        start: {
          line: 277,
          column: 20
        },
        end: {
          line: 277,
          column: 38
        }
      },
      "208": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 281,
          column: 69
        }
      },
      "209": {
        start: {
          line: 281,
          column: 42
        },
        end: {
          line: 281,
          column: 67
        }
      },
      "210": {
        start: {
          line: 282,
          column: 20
        },
        end: {
          line: 282,
          column: 36
        }
      },
      "211": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 58
        }
      },
      "212": {
        start: {
          line: 285,
          column: 36
        },
        end: {
          line: 285,
          column: 57
        }
      },
      "213": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 293,
          column: 56
        }
      },
      "214": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 56
        }
      },
      "215": {
        start: {
          line: 294,
          column: 27
        },
        end: {
          line: 294,
          column: 77
        }
      },
      "216": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 313,
          column: 11
        }
      },
      "217": {
        start: {
          line: 297,
          column: 32
        },
        end: {
          line: 297,
          column: 79
        }
      },
      "218": {
        start: {
          line: 298,
          column: 26
        },
        end: {
          line: 298,
          column: 62
        }
      },
      "219": {
        start: {
          line: 299,
          column: 26
        },
        end: {
          line: 299,
          column: 50
        }
      },
      "220": {
        start: {
          line: 300,
          column: 26
        },
        end: {
          line: 300,
          column: 60
        }
      },
      "221": {
        start: {
          line: 301,
          column: 28
        },
        end: {
          line: 301,
          column: 51
        }
      },
      "222": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 311,
          column: 14
        }
      },
      "223": {
        start: {
          line: 303,
          column: 31
        },
        end: {
          line: 303,
          column: 50
        }
      },
      "224": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 310,
          column: 17
        }
      },
      "225": {
        start: {
          line: 305,
          column: 20
        },
        end: {
          line: 305,
          column: 36
        }
      },
      "226": {
        start: {
          line: 306,
          column: 20
        },
        end: {
          line: 306,
          column: 38
        }
      },
      "227": {
        start: {
          line: 309,
          column: 20
        },
        end: {
          line: 309,
          column: 30
        }
      },
      "228": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 58
        }
      },
      "229": {
        start: {
          line: 312,
          column: 36
        },
        end: {
          line: 312,
          column: 57
        }
      },
      "230": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "231": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 28
        }
      },
      "232": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 27
        }
      },
      "233": {
        start: {
          line: 325,
          column: 0
        },
        end: {
          line: 325,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 11,
            column: 27
          },
          end: {
            line: 11,
            column: 28
          }
        },
        loc: {
          start: {
            line: 11,
            column: 48
          },
          end: {
            line: 49,
            column: 9
          }
        },
        line: 11
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 13,
            column: 31
          }
        },
        loc: {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 13,
            column: 57
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 14,
            column: 32
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 38
          },
          end: {
            line: 17,
            column: 13
          }
        },
        line: 14
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 38
          },
          end: {
            line: 18,
            column: 39
          }
        },
        loc: {
          start: {
            line: 18,
            column: 49
          },
          end: {
            line: 48,
            column: 13
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 26
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 51
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 54,
            column: 27
          },
          end: {
            line: 54,
            column: 28
          }
        },
        loc: {
          start: {
            line: 54,
            column: 48
          },
          end: {
            line: 71,
            column: 9
          }
        },
        line: 54
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 59,
            column: 36
          },
          end: {
            line: 59,
            column: 37
          }
        },
        loc: {
          start: {
            line: 59,
            column: 42
          },
          end: {
            line: 59,
            column: 73
          }
        },
        line: 59
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 60,
            column: 34
          },
          end: {
            line: 60,
            column: 35
          }
        },
        loc: {
          start: {
            line: 60,
            column: 40
          },
          end: {
            line: 60,
            column: 61
          }
        },
        line: 60
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 65,
            column: 37
          }
        },
        loc: {
          start: {
            line: 65,
            column: 47
          },
          end: {
            line: 68,
            column: 17
          }
        },
        line: 65
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 69,
            column: 34
          },
          end: {
            line: 69,
            column: 35
          }
        },
        loc: {
          start: {
            line: 69,
            column: 40
          },
          end: {
            line: 69,
            column: 61
          }
        },
        line: 69
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 33
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 73
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 76,
            column: 27
          },
          end: {
            line: 76,
            column: 28
          }
        },
        loc: {
          start: {
            line: 76,
            column: 48
          },
          end: {
            line: 82,
            column: 9
          }
        },
        line: 76
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 80,
            column: 32
          },
          end: {
            line: 80,
            column: 33
          }
        },
        loc: {
          start: {
            line: 80,
            column: 38
          },
          end: {
            line: 80,
            column: 47
          }
        },
        line: 80
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 81,
            column: 31
          }
        },
        loc: {
          start: {
            line: 81,
            column: 36
          },
          end: {
            line: 81,
            column: 57
          }
        },
        line: 81
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 27
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 84
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 87,
            column: 27
          },
          end: {
            line: 87,
            column: 28
          }
        },
        loc: {
          start: {
            line: 87,
            column: 48
          },
          end: {
            line: 93,
            column: 9
          }
        },
        line: 87
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 91,
            column: 33
          }
        },
        loc: {
          start: {
            line: 91,
            column: 38
          },
          end: {
            line: 91,
            column: 69
          }
        },
        line: 91
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 92,
            column: 30
          },
          end: {
            line: 92,
            column: 31
          }
        },
        loc: {
          start: {
            line: 92,
            column: 36
          },
          end: {
            line: 92,
            column: 57
          }
        },
        line: 92
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 33
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 95
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 98,
            column: 27
          },
          end: {
            line: 98,
            column: 28
          }
        },
        loc: {
          start: {
            line: 98,
            column: 48
          },
          end: {
            line: 104,
            column: 9
          }
        },
        line: 98
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 102,
            column: 32
          },
          end: {
            line: 102,
            column: 33
          }
        },
        loc: {
          start: {
            line: 102,
            column: 38
          },
          end: {
            line: 102,
            column: 47
          }
        },
        line: 102
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 103,
            column: 30
          },
          end: {
            line: 103,
            column: 31
          }
        },
        loc: {
          start: {
            line: 103,
            column: 36
          },
          end: {
            line: 103,
            column: 57
          }
        },
        line: 103
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        loc: {
          start: {
            line: 106,
            column: 32
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 106
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 113,
            column: 27
          },
          end: {
            line: 113,
            column: 28
          }
        },
        loc: {
          start: {
            line: 113,
            column: 48
          },
          end: {
            line: 119,
            column: 9
          }
        },
        line: 113
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 117,
            column: 32
          },
          end: {
            line: 117,
            column: 33
          }
        },
        loc: {
          start: {
            line: 117,
            column: 38
          },
          end: {
            line: 117,
            column: 47
          }
        },
        line: 117
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 118,
            column: 30
          },
          end: {
            line: 118,
            column: 31
          }
        },
        loc: {
          start: {
            line: 118,
            column: 36
          },
          end: {
            line: 118,
            column: 57
          }
        },
        line: 118
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 41
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 121
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 124,
            column: 27
          },
          end: {
            line: 124,
            column: 28
          }
        },
        loc: {
          start: {
            line: 124,
            column: 48
          },
          end: {
            line: 141,
            column: 9
          }
        },
        line: 124
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 130,
            column: 32
          },
          end: {
            line: 130,
            column: 33
          }
        },
        loc: {
          start: {
            line: 130,
            column: 43
          },
          end: {
            line: 139,
            column: 13
          }
        },
        line: 130
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 140,
            column: 30
          },
          end: {
            line: 140,
            column: 31
          }
        },
        loc: {
          start: {
            line: 140,
            column: 36
          },
          end: {
            line: 140,
            column: 57
          }
        },
        line: 140
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 40
          },
          end: {
            line: 156,
            column: 5
          }
        },
        line: 143
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 146,
            column: 27
          },
          end: {
            line: 146,
            column: 28
          }
        },
        loc: {
          start: {
            line: 146,
            column: 48
          },
          end: {
            line: 155,
            column: 9
          }
        },
        line: 146
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 150,
            column: 32
          },
          end: {
            line: 150,
            column: 33
          }
        },
        loc: {
          start: {
            line: 150,
            column: 38
          },
          end: {
            line: 153,
            column: 13
          }
        },
        line: 150
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 154,
            column: 30
          },
          end: {
            line: 154,
            column: 31
          }
        },
        loc: {
          start: {
            line: 154,
            column: 36
          },
          end: {
            line: 154,
            column: 57
          }
        },
        line: 154
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 33
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 157
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 160,
            column: 27
          },
          end: {
            line: 160,
            column: 28
          }
        },
        loc: {
          start: {
            line: 160,
            column: 48
          },
          end: {
            line: 166,
            column: 9
          }
        },
        line: 160
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 164,
            column: 32
          },
          end: {
            line: 164,
            column: 33
          }
        },
        loc: {
          start: {
            line: 164,
            column: 38
          },
          end: {
            line: 164,
            column: 47
          }
        },
        line: 164
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 165,
            column: 30
          },
          end: {
            line: 165,
            column: 31
          }
        },
        loc: {
          start: {
            line: 165,
            column: 36
          },
          end: {
            line: 165,
            column: 57
          }
        },
        line: 165
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 169,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        loc: {
          start: {
            line: 169,
            column: 36
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 169
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 172,
            column: 27
          },
          end: {
            line: 172,
            column: 28
          }
        },
        loc: {
          start: {
            line: 172,
            column: 48
          },
          end: {
            line: 181,
            column: 9
          }
        },
        line: 172
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 179,
            column: 32
          },
          end: {
            line: 179,
            column: 33
          }
        },
        loc: {
          start: {
            line: 179,
            column: 38
          },
          end: {
            line: 179,
            column: 47
          }
        },
        line: 179
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 180,
            column: 30
          },
          end: {
            line: 180,
            column: 31
          }
        },
        loc: {
          start: {
            line: 180,
            column: 36
          },
          end: {
            line: 180,
            column: 57
          }
        },
        line: 180
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 39
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 183
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 186,
            column: 27
          },
          end: {
            line: 186,
            column: 28
          }
        },
        loc: {
          start: {
            line: 186,
            column: 48
          },
          end: {
            line: 192,
            column: 9
          }
        },
        line: 186
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 190,
            column: 32
          },
          end: {
            line: 190,
            column: 33
          }
        },
        loc: {
          start: {
            line: 190,
            column: 38
          },
          end: {
            line: 190,
            column: 47
          }
        },
        line: 190
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 191,
            column: 30
          },
          end: {
            line: 191,
            column: 31
          }
        },
        loc: {
          start: {
            line: 191,
            column: 36
          },
          end: {
            line: 191,
            column: 57
          }
        },
        line: 191
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        loc: {
          start: {
            line: 194,
            column: 30
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 194
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 197,
            column: 27
          },
          end: {
            line: 197,
            column: 28
          }
        },
        loc: {
          start: {
            line: 197,
            column: 48
          },
          end: {
            line: 203,
            column: 9
          }
        },
        line: 197
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 201,
            column: 32
          },
          end: {
            line: 201,
            column: 33
          }
        },
        loc: {
          start: {
            line: 201,
            column: 38
          },
          end: {
            line: 201,
            column: 69
          }
        },
        line: 201
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 202,
            column: 30
          },
          end: {
            line: 202,
            column: 31
          }
        },
        loc: {
          start: {
            line: 202,
            column: 36
          },
          end: {
            line: 202,
            column: 57
          }
        },
        line: 202
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        loc: {
          start: {
            line: 205,
            column: 30
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 205
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 208,
            column: 27
          },
          end: {
            line: 208,
            column: 28
          }
        },
        loc: {
          start: {
            line: 208,
            column: 48
          },
          end: {
            line: 224,
            column: 9
          }
        },
        line: 208
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 213,
            column: 32
          },
          end: {
            line: 213,
            column: 33
          }
        },
        loc: {
          start: {
            line: 213,
            column: 43
          },
          end: {
            line: 222,
            column: 13
          }
        },
        line: 213
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 223,
            column: 30
          },
          end: {
            line: 223,
            column: 31
          }
        },
        loc: {
          start: {
            line: 223,
            column: 36
          },
          end: {
            line: 223,
            column: 57
          }
        },
        line: 223
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 32
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 229
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 232,
            column: 27
          },
          end: {
            line: 232,
            column: 28
          }
        },
        loc: {
          start: {
            line: 232,
            column: 48
          },
          end: {
            line: 254,
            column: 9
          }
        },
        line: 232
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 237,
            column: 32
          },
          end: {
            line: 237,
            column: 33
          }
        },
        loc: {
          start: {
            line: 237,
            column: 43
          },
          end: {
            line: 252,
            column: 13
          }
        },
        line: 237
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 245,
            column: 33
          },
          end: {
            line: 245,
            column: 34
          }
        },
        loc: {
          start: {
            line: 245,
            column: 43
          },
          end: {
            line: 249,
            column: 21
          }
        },
        line: 245
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 253,
            column: 30
          },
          end: {
            line: 253,
            column: 31
          }
        },
        loc: {
          start: {
            line: 253,
            column: 36
          },
          end: {
            line: 253,
            column: 57
          }
        },
        line: 253
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        loc: {
          start: {
            line: 259,
            column: 60
          },
          end: {
            line: 287,
            column: 5
          }
        },
        line: 259
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 263,
            column: 27
          },
          end: {
            line: 263,
            column: 28
          }
        },
        loc: {
          start: {
            line: 263,
            column: 48
          },
          end: {
            line: 286,
            column: 9
          }
        },
        line: 263
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 268,
            column: 32
          },
          end: {
            line: 268,
            column: 33
          }
        },
        loc: {
          start: {
            line: 268,
            column: 43
          },
          end: {
            line: 284,
            column: 13
          }
        },
        line: 268
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 273,
            column: 74
          },
          end: {
            line: 273,
            column: 75
          }
        },
        loc: {
          start: {
            line: 273,
            column: 79
          },
          end: {
            line: 273,
            column: 99
          }
        },
        line: 273
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 281,
            column: 32
          },
          end: {
            line: 281,
            column: 33
          }
        },
        loc: {
          start: {
            line: 281,
            column: 42
          },
          end: {
            line: 281,
            column: 67
          }
        },
        line: 281
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 285,
            column: 30
          },
          end: {
            line: 285,
            column: 31
          }
        },
        loc: {
          start: {
            line: 285,
            column: 36
          },
          end: {
            line: 285,
            column: 57
          }
        },
        line: 285
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        },
        loc: {
          start: {
            line: 291,
            column: 38
          },
          end: {
            line: 314,
            column: 5
          }
        },
        line: 291
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 296,
            column: 27
          },
          end: {
            line: 296,
            column: 28
          }
        },
        loc: {
          start: {
            line: 296,
            column: 48
          },
          end: {
            line: 313,
            column: 9
          }
        },
        line: 296
      },
      "69": {
        name: "(anonymous_69)",
        decl: {
          start: {
            line: 302,
            column: 32
          },
          end: {
            line: 302,
            column: 33
          }
        },
        loc: {
          start: {
            line: 302,
            column: 43
          },
          end: {
            line: 311,
            column: 13
          }
        },
        line: 302
      },
      "70": {
        name: "(anonymous_70)",
        decl: {
          start: {
            line: 312,
            column: 30
          },
          end: {
            line: 312,
            column: 31
          }
        },
        loc: {
          start: {
            line: 312,
            column: 36
          },
          end: {
            line: 312,
            column: 57
          }
        },
        line: 312
      },
      "71": {
        name: "(anonymous_71)",
        decl: {
          start: {
            line: 318,
            column: 4
          },
          end: {
            line: 318,
            column: 5
          }
        },
        loc: {
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 323,
            column: 5
          }
        },
        line: 318
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 25,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 25,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 31,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 31,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 41,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 41,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 47,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 47,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 53,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: 62,
            column: 17
          },
          end: {
            line: 70,
            column: 13
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 50
          },
          end: {
            line: 59,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 50
          },
          end: {
            line: 59,
            column: 64
          }
        }, {
          start: {
            line: 59,
            column: 68
          },
          end: {
            line: 59,
            column: 72
          }
        }],
        line: 59
      },
      "8": {
        loc: {
          start: {
            line: 67,
            column: 28
          },
          end: {
            line: 67,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 37
          },
          end: {
            line: 67,
            column: 49
          }
        }, {
          start: {
            line: 67,
            column: 52
          },
          end: {
            line: 67,
            column: 56
          }
        }],
        line: 67
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 75,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 75,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "10": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 86,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 86,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "11": {
        loc: {
          start: {
            line: 91,
            column: 46
          },
          end: {
            line: 91,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 46
          },
          end: {
            line: 91,
            column: 60
          }
        }, {
          start: {
            line: 91,
            column: 64
          },
          end: {
            line: 91,
            column: 68
          }
        }],
        line: 91
      },
      "12": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 97,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 97,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "13": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 108,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 108,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "14": {
        loc: {
          start: {
            line: 111,
            column: 23
          },
          end: {
            line: 111,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 23
          },
          end: {
            line: 111,
            column: 41
          }
        }, {
          start: {
            line: 111,
            column: 45
          },
          end: {
            line: 111,
            column: 55
          }
        }],
        line: 111
      },
      "15": {
        loc: {
          start: {
            line: 121,
            column: 29
          },
          end: {
            line: 121,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 121,
            column: 37
          },
          end: {
            line: 121,
            column: 39
          }
        }],
        line: 121
      },
      "16": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 123,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 123,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "17": {
        loc: {
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 138,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 138,
            column: 17
          }
        }, {
          start: {
            line: 136,
            column: 21
          },
          end: {
            line: 138,
            column: 17
          }
        }],
        line: 132
      },
      "18": {
        loc: {
          start: {
            line: 132,
            column: 20
          },
          end: {
            line: 132,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 20
          },
          end: {
            line: 132,
            column: 26
          }
        }, {
          start: {
            line: 132,
            column: 30
          },
          end: {
            line: 132,
            column: 54
          }
        }],
        line: 132
      },
      "19": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 145,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 145,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "20": {
        loc: {
          start: {
            line: 152,
            column: 24
          },
          end: {
            line: 152,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 33
          },
          end: {
            line: 152,
            column: 45
          }
        }, {
          start: {
            line: 152,
            column: 48
          },
          end: {
            line: 152,
            column: 60
          }
        }],
        line: 152
      },
      "21": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 159,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 159,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "22": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 171,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 171,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "23": {
        loc: {
          start: {
            line: 177,
            column: 27
          },
          end: {
            line: 177,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 27
          },
          end: {
            line: 177,
            column: 47
          }
        }, {
          start: {
            line: 177,
            column: 51
          },
          end: {
            line: 177,
            column: 61
          }
        }],
        line: 177
      },
      "24": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 185,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 185,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "25": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 196,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 196,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "26": {
        loc: {
          start: {
            line: 201,
            column: 46
          },
          end: {
            line: 201,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 46
          },
          end: {
            line: 201,
            column: 60
          }
        }, {
          start: {
            line: 201,
            column: 64
          },
          end: {
            line: 201,
            column: 68
          }
        }],
        line: 201
      },
      "27": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 207,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 207,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "28": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 221,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 221,
            column: 17
          }
        }, {
          start: {
            line: 219,
            column: 21
          },
          end: {
            line: 221,
            column: 17
          }
        }],
        line: 215
      },
      "29": {
        loc: {
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 231,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 8
          },
          end: {
            line: 231,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "30": {
        loc: {
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 251,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 251,
            column: 17
          }
        }, {
          start: {
            line: 243,
            column: 21
          },
          end: {
            line: 251,
            column: 17
          }
        }],
        line: 239
      },
      "31": {
        loc: {
          start: {
            line: 246,
            column: 24
          },
          end: {
            line: 247,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 24
          },
          end: {
            line: 247,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "32": {
        loc: {
          start: {
            line: 259,
            column: 28
          },
          end: {
            line: 259,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 259,
            column: 39
          },
          end: {
            line: 259,
            column: 58
          }
        }],
        line: 259
      },
      "33": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 261,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 261,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "34": {
        loc: {
          start: {
            line: 270,
            column: 16
          },
          end: {
            line: 283,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 16
          },
          end: {
            line: 283,
            column: 17
          }
        }, {
          start: {
            line: 279,
            column: 21
          },
          end: {
            line: 283,
            column: 17
          }
        }],
        line: 270
      },
      "35": {
        loc: {
          start: {
            line: 273,
            column: 38
          },
          end: {
            line: 273,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 38
          },
          end: {
            line: 273,
            column: 59
          }
        }, {
          start: {
            line: 273,
            column: 63
          },
          end: {
            line: 273,
            column: 65
          }
        }],
        line: 273
      },
      "36": {
        loc: {
          start: {
            line: 291,
            column: 18
          },
          end: {
            line: 291,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 291,
            column: 34
          },
          end: {
            line: 291,
            column: 36
          }
        }],
        line: 291
      },
      "37": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 293,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 293,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "38": {
        loc: {
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 310,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 16
          },
          end: {
            line: 310,
            column: 17
          }
        }, {
          start: {
            line: 308,
            column: 21
          },
          end: {
            line: 310,
            column: 17
          }
        }],
        line: 304
      },
      "39": {
        loc: {
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 319,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 319
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0]
    },
    inputSourceMap: {
      file: "/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/storage/SymbiontStorage.ts",
      mappings: "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",
      names: [],
      sources: ["/mnt/c/Users/m_oli/Projets/SYMBIONT/src/core/storage/SymbiontStorage.ts"],
      sourcesContent: ["import { OrganismState, OrganismMutation } from '../../shared/types/organism';\r\n\r\ninterface BehaviorData {\r\n  url: string;\r\n  visitCount: number;\r\n  totalTime: number;\r\n  scrollDepth: number;\r\n  lastVisit: number;\r\n  interactions: Array<{\r\n    type: string;\r\n    timestamp: number;\r\n    data: unknown;\r\n  }>;\r\n}\r\n\r\n// @ts-expect-error Interface r\xE9serv\xE9e pour usage futur\r\ninterface _StorageSchema {\r\n  version: number;\r\n  organisms: OrganismState[];\r\n  behaviors: BehaviorData[];\r\n  mutations: OrganismMutation[];\r\n  settings: unknown;\r\n}\r\n\r\nexport class SymbiontStorage {\r\n  private db: IDBDatabase | null = null;\r\n  private readonly DB_NAME = 'symbiont-db';\r\n  private readonly DB_VERSION = 3;\r\n\r\n  async initialize(): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      const request = indexedDB.open(this.DB_NAME, this.DB_VERSION);\r\n      \r\n      request.onerror = () => reject(request.error);\r\n      request.onsuccess = () => {\r\n        this.db = request.result;\r\n        resolve();\r\n      };\r\n      \r\n      request.onupgradeneeded = (event) => {\r\n        const db = (event.target as IDBOpenDBRequest).result;\r\n        \r\n        // Store pour les organismes\r\n        if (!db.objectStoreNames.contains('organisms')) {\r\n          const organismStore = db.createObjectStore('organisms', { keyPath: 'id' });\r\n          organismStore.createIndex('generation', 'generation', { unique: false });\r\n          organismStore.createIndex('createdAt', 'createdAt', { unique: false });\r\n        }\r\n        \r\n        // Store pour les comportements\r\n        if (!db.objectStoreNames.contains('behaviors')) {\r\n          const behaviorStore = db.createObjectStore('behaviors', { keyPath: 'url' });\r\n          behaviorStore.createIndex('lastVisit', 'lastVisit', { unique: false });\r\n          behaviorStore.createIndex('visitCount', 'visitCount', { unique: false });\r\n        }\r\n        \r\n        // Store pour les mutations\r\n        if (!db.objectStoreNames.contains('mutations')) {\r\n          const mutationStore = db.createObjectStore('mutations', { keyPath: 'id', autoIncrement: true });\r\n          mutationStore.createIndex('timestamp', 'timestamp', { unique: false });\r\n          mutationStore.createIndex('type', 'type', { unique: false });\r\n        }\r\n        \r\n        // Store pour les param\xE8tres\r\n        if (!db.objectStoreNames.contains('settings')) {\r\n          db.createObjectStore('settings', { keyPath: 'key' });\r\n        }\r\n        \r\n        // Store pour les invitations\r\n        if (!db.objectStoreNames.contains('invitations')) {\r\n          const invitationStore = db.createObjectStore('invitations', { keyPath: 'code' });\r\n          invitationStore.createIndex('createdAt', 'createdAt', { unique: false });\r\n          invitationStore.createIndex('status', 'status', { unique: false });\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  async getOrganism(id?: string): Promise<OrganismState | null> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['organisms'], 'readonly');\r\n      const store = transaction.objectStore('organisms');\r\n      \r\n      if (id) {\r\n        const request = store.get(id);\r\n        request.onsuccess = () => resolve(request.result || null);\r\n        request.onerror = () => reject(request.error);\r\n      } else {\r\n        // R\xE9cup\xE9rer le premier organisme trouv\xE9\r\n        const request = store.openCursor();\r\n        request.onsuccess = (event) => {\r\n          const cursor = (event.target as IDBRequest).result;\r\n          resolve(cursor ? cursor.value : null);\r\n        };\r\n        request.onerror = () => reject(request.error);\r\n      }\r\n    });\r\n  }\r\n\r\n  async saveOrganism(organism: OrganismState): Promise<void> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['organisms'], 'readwrite');\r\n      const store = transaction.objectStore('organisms');\r\n      const request = store.put(organism);\r\n      \r\n      request.onsuccess = () => resolve();\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async getBehavior(url: string): Promise<BehaviorData | null> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['behaviors'], 'readonly');\r\n      const store = transaction.objectStore('behaviors');\r\n      const request = store.get(url);\r\n      \r\n      request.onsuccess = () => resolve(request.result || null);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async saveBehavior(behavior: BehaviorData): Promise<void> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['behaviors'], 'readwrite');\r\n      const store = transaction.objectStore('behaviors');\r\n      const request = store.put(behavior);\r\n      \r\n      request.onsuccess = () => resolve();\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async addMutation(mutation: OrganismMutation & { timestamp?: number }): Promise<void> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    \r\n    const mutationWithTimestamp = {\r\n      ...mutation,\r\n      timestamp: mutation.timestamp || Date.now()\r\n    };\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['mutations'], 'readwrite');\r\n      const store = transaction.objectStore('mutations');\r\n      const request = store.add(mutationWithTimestamp);\r\n      \r\n      request.onsuccess = () => resolve();\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async getRecentMutations(limit: number = 10): Promise<OrganismMutation[]> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['mutations'], 'readonly');\r\n      const store = transaction.objectStore('mutations');\r\n      const index = store.index('timestamp');\r\n      const request = index.openCursor(null, 'prev');\r\n      \r\n      const mutations: OrganismMutation[] = [];\r\n      \r\n      request.onsuccess = (event) => {\r\n        const cursor = (event.target as IDBRequest).result;\r\n        if (cursor && mutations.length < limit) {\r\n          mutations.push(cursor.value);\r\n          cursor.continue();\r\n        } else {\r\n          resolve(mutations);\r\n        }\r\n      };\r\n      \r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async getSetting<T>(key: string, defaultValue: T): Promise<T> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['settings'], 'readonly');\r\n      const store = transaction.objectStore('settings');\r\n      const request = store.get(key);\r\n      \r\n      request.onsuccess = () => {\r\n        const result = request.result;\r\n        resolve(result ? result.value : defaultValue);\r\n      };\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async setSetting<T>(key: string, value: T): Promise<void> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['settings'], 'readwrite');\r\n      const store = transaction.objectStore('settings');\r\n      const request = store.put({ key, value });\r\n      \r\n      request.onsuccess = () => resolve();\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  // --- INVITATIONS ---\r\n  async addInvitation(invitation: any): Promise<void> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['invitations'], 'readwrite');\r\n      const store = transaction.objectStore('invitations');\r\n      const request = store.add({\r\n        ...invitation,\r\n        createdAt: invitation.createdAt || Date.now()\r\n      });\r\n      request.onsuccess = () => resolve();\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async updateInvitation(invitation: any): Promise<void> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['invitations'], 'readwrite');\r\n      const store = transaction.objectStore('invitations');\r\n      const request = store.put(invitation);\r\n      request.onsuccess = () => resolve();\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async getInvitation(code: string): Promise<any | null> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['invitations'], 'readonly');\r\n      const store = transaction.objectStore('invitations');\r\n      const request = store.get(code);\r\n      request.onsuccess = () => resolve(request.result || null);\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  async getAllInvitations(): Promise<any[]> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['invitations'], 'readonly');\r\n      const store = transaction.objectStore('invitations');\r\n      const request = store.openCursor();\r\n      const results: unknown[] = [];\r\n      request.onsuccess = (event) => {\r\n        const cursor = (event.target as IDBRequest).result;\r\n        if (cursor) {\r\n          results.push(cursor.value);\r\n          cursor.continue();\r\n        } else {\r\n          resolve(results);\r\n        }\r\n      };\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Retourne la liste des comportements tri\xE9s par nombre de visites (visitCount) puis date de derni\xE8re visite (lastVisit)\r\n   */\r\n  async getBehaviorPatterns(): Promise<BehaviorData[]> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['behaviors'], 'readonly');\r\n      const store = transaction.objectStore('behaviors');\r\n      const request = store.openCursor();\r\n      const results: BehaviorData[] = [];\r\n      request.onsuccess = (event) => {\r\n        const cursor = (event.target as IDBRequest).result;\r\n        if (cursor) {\r\n          results.push(cursor.value);\r\n          cursor.continue();\r\n        } else {\r\n          // Tri par visitCount d\xE9croissant puis lastVisit d\xE9croissant\r\n          results.sort((a, b) => {\r\n            if (b.visitCount !== a.visitCount) return b.visitCount - a.visitCount;\r\n            return b.lastVisit - a.lastVisit;\r\n          });\r\n          resolve(results);\r\n        }\r\n      };\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Retourne les interactions r\xE9centes sur une p\xE9riode donn\xE9e (en ms, par d\xE9faut 24h)\r\n   */\r\n  async getRecentActivity(periodMs: number = 24 * 60 * 60 * 1000): Promise<any[]> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    const since = Date.now() - periodMs;\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['behaviors'], 'readonly');\r\n      const store = transaction.objectStore('behaviors');\r\n      const request = store.openCursor();\r\n      const recent: unknown[] = [];\r\n      request.onsuccess = (event) => {\r\n        const cursor = (event.target as IDBRequest).result;\r\n        if (cursor) {\r\n          const behavior: BehaviorData = cursor.value;\r\n          // On prend toutes les interactions r\xE9centes de ce comportement\r\n          const filtered = (behavior.interactions || []).filter(i => i.timestamp >= since);\r\n          for (const i of filtered) {\r\n            recent.push({ ...i, url: behavior.url });\r\n          }\r\n          cursor.continue();\r\n        } else {\r\n          // Tri par timestamp d\xE9croissant\r\n          recent.sort((a, b) => (b as any).timestamp - (a as any).timestamp);\r\n          resolve(recent);\r\n        }\r\n      };\r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Nettoie les anciennes donn\xE9es pour optimiser l'espace\r\n   */\r\n  async cleanup(retentionDays: number = 30): Promise<void> {\r\n    if (!this.db) throw new Error('Database not initialized');\r\n    \r\n    const cutoffDate = Date.now() - (retentionDays * 24 * 60 * 60 * 1000);\r\n    \r\n    // Nettoyer les anciennes mutations\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.db!.transaction(['mutations'], 'readwrite');\r\n      const store = transaction.objectStore('mutations');\r\n      const index = store.index('timestamp');\r\n      const range = IDBKeyRange.upperBound(cutoffDate);\r\n      const request = index.openCursor(range);\r\n      \r\n      request.onsuccess = (event) => {\r\n        const cursor = (event.target as IDBRequest).result;\r\n        if (cursor) {\r\n          cursor.delete();\r\n          cursor.continue();\r\n        } else {\r\n          resolve();\r\n        }\r\n      };\r\n      \r\n      request.onerror = () => reject(request.error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Ferme la connexion \xE0 la base de donn\xE9es\r\n   */\r\n  close(): void {\r\n    if (this.db) {\r\n      this.db.close();\r\n      this.db = null;\r\n    }\r\n  }\r\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7713fcaa8ad59823d05c51354592de9fe832cc45"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2mktkw1gu6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2mktkw1gu6();
cov_2mktkw1gu6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2mktkw1gu6().s[1]++;
exports.SymbiontStorage = void 0;
class SymbiontStorage {
  constructor() {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[0]++;
    cov_2mktkw1gu6().s[2]++;
    this.db = null;
    /* istanbul ignore next */
    cov_2mktkw1gu6().s[3]++;
    this.DB_NAME = 'symbiont-db';
    /* istanbul ignore next */
    cov_2mktkw1gu6().s[4]++;
    this.DB_VERSION = 3;
  }
  async initialize() {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[1]++;
    cov_2mktkw1gu6().s[5]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[2]++;
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[6]++, indexedDB.open(this.DB_NAME, this.DB_VERSION));
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[7]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[3]++;
        cov_2mktkw1gu6().s[8]++;
        return reject(request.error);
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[9]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[4]++;
        cov_2mktkw1gu6().s[10]++;
        this.db = request.result;
        /* istanbul ignore next */
        cov_2mktkw1gu6().s[11]++;
        resolve();
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[12]++;
      request.onupgradeneeded = event => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[5]++;
        const db =
        /* istanbul ignore next */
        (cov_2mktkw1gu6().s[13]++, event.target.result);
        // Store pour les organismes
        /* istanbul ignore next */
        cov_2mktkw1gu6().s[14]++;
        if (!db.objectStoreNames.contains('organisms')) {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[0][0]++;
          const organismStore =
          /* istanbul ignore next */
          (cov_2mktkw1gu6().s[15]++, db.createObjectStore('organisms', {
            keyPath: 'id'
          }));
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[16]++;
          organismStore.createIndex('generation', 'generation', {
            unique: false
          });
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[17]++;
          organismStore.createIndex('createdAt', 'createdAt', {
            unique: false
          });
        } else
        /* istanbul ignore next */
        {
          cov_2mktkw1gu6().b[0][1]++;
        }
        // Store pour les comportements
        cov_2mktkw1gu6().s[18]++;
        if (!db.objectStoreNames.contains('behaviors')) {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[1][0]++;
          const behaviorStore =
          /* istanbul ignore next */
          (cov_2mktkw1gu6().s[19]++, db.createObjectStore('behaviors', {
            keyPath: 'url'
          }));
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[20]++;
          behaviorStore.createIndex('lastVisit', 'lastVisit', {
            unique: false
          });
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[21]++;
          behaviorStore.createIndex('visitCount', 'visitCount', {
            unique: false
          });
        } else
        /* istanbul ignore next */
        {
          cov_2mktkw1gu6().b[1][1]++;
        }
        // Store pour les mutations
        cov_2mktkw1gu6().s[22]++;
        if (!db.objectStoreNames.contains('mutations')) {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[2][0]++;
          const mutationStore =
          /* istanbul ignore next */
          (cov_2mktkw1gu6().s[23]++, db.createObjectStore('mutations', {
            keyPath: 'id',
            autoIncrement: true
          }));
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[24]++;
          mutationStore.createIndex('timestamp', 'timestamp', {
            unique: false
          });
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[25]++;
          mutationStore.createIndex('type', 'type', {
            unique: false
          });
        } else
        /* istanbul ignore next */
        {
          cov_2mktkw1gu6().b[2][1]++;
        }
        // Store pour les paramètres
        cov_2mktkw1gu6().s[26]++;
        if (!db.objectStoreNames.contains('settings')) {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[3][0]++;
          cov_2mktkw1gu6().s[27]++;
          db.createObjectStore('settings', {
            keyPath: 'key'
          });
        } else
        /* istanbul ignore next */
        {
          cov_2mktkw1gu6().b[3][1]++;
        }
        // Store pour les invitations
        cov_2mktkw1gu6().s[28]++;
        if (!db.objectStoreNames.contains('invitations')) {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[4][0]++;
          const invitationStore =
          /* istanbul ignore next */
          (cov_2mktkw1gu6().s[29]++, db.createObjectStore('invitations', {
            keyPath: 'code'
          }));
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[30]++;
          invitationStore.createIndex('createdAt', 'createdAt', {
            unique: false
          });
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[31]++;
          invitationStore.createIndex('status', 'status', {
            unique: false
          });
        } else
        /* istanbul ignore next */
        {
          cov_2mktkw1gu6().b[4][1]++;
        }
      };
    });
  }
  async getOrganism(id) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[6]++;
    cov_2mktkw1gu6().s[32]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[5][0]++;
      cov_2mktkw1gu6().s[33]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[5][1]++;
    }
    cov_2mktkw1gu6().s[34]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[7]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[35]++, this.db.transaction(['organisms'], 'readonly'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[36]++, transaction.objectStore('organisms'));
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[37]++;
      if (id) {
        /* istanbul ignore next */
        cov_2mktkw1gu6().b[6][0]++;
        const request =
        /* istanbul ignore next */
        (cov_2mktkw1gu6().s[38]++, store.get(id));
        /* istanbul ignore next */
        cov_2mktkw1gu6().s[39]++;
        request.onsuccess = () => {
          /* istanbul ignore next */
          cov_2mktkw1gu6().f[8]++;
          cov_2mktkw1gu6().s[40]++;
          return resolve(
          /* istanbul ignore next */
          (cov_2mktkw1gu6().b[7][0]++, request.result) ||
          /* istanbul ignore next */
          (cov_2mktkw1gu6().b[7][1]++, null));
        };
        /* istanbul ignore next */
        cov_2mktkw1gu6().s[41]++;
        request.onerror = () => {
          /* istanbul ignore next */
          cov_2mktkw1gu6().f[9]++;
          cov_2mktkw1gu6().s[42]++;
          return reject(request.error);
        };
      } else {
        /* istanbul ignore next */
        cov_2mktkw1gu6().b[6][1]++;
        // Récupérer le premier organisme trouvé
        const request =
        /* istanbul ignore next */
        (cov_2mktkw1gu6().s[43]++, store.openCursor());
        /* istanbul ignore next */
        cov_2mktkw1gu6().s[44]++;
        request.onsuccess = event => {
          /* istanbul ignore next */
          cov_2mktkw1gu6().f[10]++;
          const cursor =
          /* istanbul ignore next */
          (cov_2mktkw1gu6().s[45]++, event.target.result);
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[46]++;
          resolve(cursor ?
          /* istanbul ignore next */
          (cov_2mktkw1gu6().b[8][0]++, cursor.value) :
          /* istanbul ignore next */
          (cov_2mktkw1gu6().b[8][1]++, null));
        };
        /* istanbul ignore next */
        cov_2mktkw1gu6().s[47]++;
        request.onerror = () => {
          /* istanbul ignore next */
          cov_2mktkw1gu6().f[11]++;
          cov_2mktkw1gu6().s[48]++;
          return reject(request.error);
        };
      }
    });
  }
  async saveOrganism(organism) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[12]++;
    cov_2mktkw1gu6().s[49]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[9][0]++;
      cov_2mktkw1gu6().s[50]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[9][1]++;
    }
    cov_2mktkw1gu6().s[51]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[13]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[52]++, this.db.transaction(['organisms'], 'readwrite'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[53]++, transaction.objectStore('organisms'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[54]++, store.put(organism));
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[55]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[14]++;
        cov_2mktkw1gu6().s[56]++;
        return resolve();
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[57]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[15]++;
        cov_2mktkw1gu6().s[58]++;
        return reject(request.error);
      };
    });
  }
  async getBehavior(url) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[16]++;
    cov_2mktkw1gu6().s[59]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[10][0]++;
      cov_2mktkw1gu6().s[60]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[10][1]++;
    }
    cov_2mktkw1gu6().s[61]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[17]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[62]++, this.db.transaction(['behaviors'], 'readonly'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[63]++, transaction.objectStore('behaviors'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[64]++, store.get(url));
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[65]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[18]++;
        cov_2mktkw1gu6().s[66]++;
        return resolve(
        /* istanbul ignore next */
        (cov_2mktkw1gu6().b[11][0]++, request.result) ||
        /* istanbul ignore next */
        (cov_2mktkw1gu6().b[11][1]++, null));
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[67]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[19]++;
        cov_2mktkw1gu6().s[68]++;
        return reject(request.error);
      };
    });
  }
  async saveBehavior(behavior) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[20]++;
    cov_2mktkw1gu6().s[69]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[12][0]++;
      cov_2mktkw1gu6().s[70]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[12][1]++;
    }
    cov_2mktkw1gu6().s[71]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[21]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[72]++, this.db.transaction(['behaviors'], 'readwrite'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[73]++, transaction.objectStore('behaviors'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[74]++, store.put(behavior));
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[75]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[22]++;
        cov_2mktkw1gu6().s[76]++;
        return resolve();
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[77]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[23]++;
        cov_2mktkw1gu6().s[78]++;
        return reject(request.error);
      };
    });
  }
  async addMutation(mutation) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[24]++;
    cov_2mktkw1gu6().s[79]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[13][0]++;
      cov_2mktkw1gu6().s[80]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[13][1]++;
    }
    const mutationWithTimestamp =
    /* istanbul ignore next */
    (cov_2mktkw1gu6().s[81]++, {
      ...mutation,
      timestamp:
      /* istanbul ignore next */
      (cov_2mktkw1gu6().b[14][0]++, mutation.timestamp) ||
      /* istanbul ignore next */
      (cov_2mktkw1gu6().b[14][1]++, Date.now())
    });
    /* istanbul ignore next */
    cov_2mktkw1gu6().s[82]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[25]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[83]++, this.db.transaction(['mutations'], 'readwrite'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[84]++, transaction.objectStore('mutations'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[85]++, store.add(mutationWithTimestamp));
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[86]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[26]++;
        cov_2mktkw1gu6().s[87]++;
        return resolve();
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[88]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[27]++;
        cov_2mktkw1gu6().s[89]++;
        return reject(request.error);
      };
    });
  }
  async getRecentMutations(limit =
  /* istanbul ignore next */
  (cov_2mktkw1gu6().b[15][0]++, 10)) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[28]++;
    cov_2mktkw1gu6().s[90]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[16][0]++;
      cov_2mktkw1gu6().s[91]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[16][1]++;
    }
    cov_2mktkw1gu6().s[92]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[29]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[93]++, this.db.transaction(['mutations'], 'readonly'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[94]++, transaction.objectStore('mutations'));
      const index =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[95]++, store.index('timestamp'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[96]++, index.openCursor(null, 'prev'));
      const mutations =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[97]++, []);
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[98]++;
      request.onsuccess = event => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[30]++;
        const cursor =
        /* istanbul ignore next */
        (cov_2mktkw1gu6().s[99]++, event.target.result);
        /* istanbul ignore next */
        cov_2mktkw1gu6().s[100]++;
        if (
        /* istanbul ignore next */
        (cov_2mktkw1gu6().b[18][0]++, cursor) &&
        /* istanbul ignore next */
        (cov_2mktkw1gu6().b[18][1]++, mutations.length < limit)) {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[17][0]++;
          cov_2mktkw1gu6().s[101]++;
          mutations.push(cursor.value);
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[102]++;
          cursor.continue();
        } else {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[17][1]++;
          cov_2mktkw1gu6().s[103]++;
          resolve(mutations);
        }
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[104]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[31]++;
        cov_2mktkw1gu6().s[105]++;
        return reject(request.error);
      };
    });
  }
  async getSetting(key, defaultValue) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[32]++;
    cov_2mktkw1gu6().s[106]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[19][0]++;
      cov_2mktkw1gu6().s[107]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[19][1]++;
    }
    cov_2mktkw1gu6().s[108]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[33]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[109]++, this.db.transaction(['settings'], 'readonly'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[110]++, transaction.objectStore('settings'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[111]++, store.get(key));
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[112]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[34]++;
        const result =
        /* istanbul ignore next */
        (cov_2mktkw1gu6().s[113]++, request.result);
        /* istanbul ignore next */
        cov_2mktkw1gu6().s[114]++;
        resolve(result ?
        /* istanbul ignore next */
        (cov_2mktkw1gu6().b[20][0]++, result.value) :
        /* istanbul ignore next */
        (cov_2mktkw1gu6().b[20][1]++, defaultValue));
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[115]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[35]++;
        cov_2mktkw1gu6().s[116]++;
        return reject(request.error);
      };
    });
  }
  async setSetting(key, value) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[36]++;
    cov_2mktkw1gu6().s[117]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[21][0]++;
      cov_2mktkw1gu6().s[118]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[21][1]++;
    }
    cov_2mktkw1gu6().s[119]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[37]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[120]++, this.db.transaction(['settings'], 'readwrite'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[121]++, transaction.objectStore('settings'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[122]++, store.put({
        key,
        value
      }));
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[123]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[38]++;
        cov_2mktkw1gu6().s[124]++;
        return resolve();
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[125]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[39]++;
        cov_2mktkw1gu6().s[126]++;
        return reject(request.error);
      };
    });
  }
  // --- INVITATIONS ---
  async addInvitation(invitation) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[40]++;
    cov_2mktkw1gu6().s[127]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[22][0]++;
      cov_2mktkw1gu6().s[128]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[22][1]++;
    }
    cov_2mktkw1gu6().s[129]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[41]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[130]++, this.db.transaction(['invitations'], 'readwrite'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[131]++, transaction.objectStore('invitations'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[132]++, store.add({
        ...invitation,
        createdAt:
        /* istanbul ignore next */
        (cov_2mktkw1gu6().b[23][0]++, invitation.createdAt) ||
        /* istanbul ignore next */
        (cov_2mktkw1gu6().b[23][1]++, Date.now())
      }));
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[133]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[42]++;
        cov_2mktkw1gu6().s[134]++;
        return resolve();
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[135]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[43]++;
        cov_2mktkw1gu6().s[136]++;
        return reject(request.error);
      };
    });
  }
  async updateInvitation(invitation) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[44]++;
    cov_2mktkw1gu6().s[137]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[24][0]++;
      cov_2mktkw1gu6().s[138]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[24][1]++;
    }
    cov_2mktkw1gu6().s[139]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[45]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[140]++, this.db.transaction(['invitations'], 'readwrite'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[141]++, transaction.objectStore('invitations'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[142]++, store.put(invitation));
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[143]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[46]++;
        cov_2mktkw1gu6().s[144]++;
        return resolve();
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[145]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[47]++;
        cov_2mktkw1gu6().s[146]++;
        return reject(request.error);
      };
    });
  }
  async getInvitation(code) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[48]++;
    cov_2mktkw1gu6().s[147]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[25][0]++;
      cov_2mktkw1gu6().s[148]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[25][1]++;
    }
    cov_2mktkw1gu6().s[149]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[49]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[150]++, this.db.transaction(['invitations'], 'readonly'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[151]++, transaction.objectStore('invitations'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[152]++, store.get(code));
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[153]++;
      request.onsuccess = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[50]++;
        cov_2mktkw1gu6().s[154]++;
        return resolve(
        /* istanbul ignore next */
        (cov_2mktkw1gu6().b[26][0]++, request.result) ||
        /* istanbul ignore next */
        (cov_2mktkw1gu6().b[26][1]++, null));
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[155]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[51]++;
        cov_2mktkw1gu6().s[156]++;
        return reject(request.error);
      };
    });
  }
  async getAllInvitations() {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[52]++;
    cov_2mktkw1gu6().s[157]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[27][0]++;
      cov_2mktkw1gu6().s[158]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[27][1]++;
    }
    cov_2mktkw1gu6().s[159]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[53]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[160]++, this.db.transaction(['invitations'], 'readonly'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[161]++, transaction.objectStore('invitations'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[162]++, store.openCursor());
      const results =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[163]++, []);
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[164]++;
      request.onsuccess = event => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[54]++;
        const cursor =
        /* istanbul ignore next */
        (cov_2mktkw1gu6().s[165]++, event.target.result);
        /* istanbul ignore next */
        cov_2mktkw1gu6().s[166]++;
        if (cursor) {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[28][0]++;
          cov_2mktkw1gu6().s[167]++;
          results.push(cursor.value);
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[168]++;
          cursor.continue();
        } else {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[28][1]++;
          cov_2mktkw1gu6().s[169]++;
          resolve(results);
        }
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[170]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[55]++;
        cov_2mktkw1gu6().s[171]++;
        return reject(request.error);
      };
    });
  }
  /**
   * Retourne la liste des comportements triés par nombre de visites (visitCount) puis date de dernière visite (lastVisit)
   */
  async getBehaviorPatterns() {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[56]++;
    cov_2mktkw1gu6().s[172]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[29][0]++;
      cov_2mktkw1gu6().s[173]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[29][1]++;
    }
    cov_2mktkw1gu6().s[174]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[57]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[175]++, this.db.transaction(['behaviors'], 'readonly'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[176]++, transaction.objectStore('behaviors'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[177]++, store.openCursor());
      const results =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[178]++, []);
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[179]++;
      request.onsuccess = event => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[58]++;
        const cursor =
        /* istanbul ignore next */
        (cov_2mktkw1gu6().s[180]++, event.target.result);
        /* istanbul ignore next */
        cov_2mktkw1gu6().s[181]++;
        if (cursor) {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[30][0]++;
          cov_2mktkw1gu6().s[182]++;
          results.push(cursor.value);
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[183]++;
          cursor.continue();
        } else {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[30][1]++;
          cov_2mktkw1gu6().s[184]++;
          // Tri par visitCount décroissant puis lastVisit décroissant
          results.sort((a, b) => {
            /* istanbul ignore next */
            cov_2mktkw1gu6().f[59]++;
            cov_2mktkw1gu6().s[185]++;
            if (b.visitCount !== a.visitCount) {
              /* istanbul ignore next */
              cov_2mktkw1gu6().b[31][0]++;
              cov_2mktkw1gu6().s[186]++;
              return b.visitCount - a.visitCount;
            } else
            /* istanbul ignore next */
            {
              cov_2mktkw1gu6().b[31][1]++;
            }
            cov_2mktkw1gu6().s[187]++;
            return b.lastVisit - a.lastVisit;
          });
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[188]++;
          resolve(results);
        }
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[189]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[60]++;
        cov_2mktkw1gu6().s[190]++;
        return reject(request.error);
      };
    });
  }
  /**
   * Retourne les interactions récentes sur une période donnée (en ms, par défaut 24h)
   */
  async getRecentActivity(periodMs =
  /* istanbul ignore next */
  (cov_2mktkw1gu6().b[32][0]++, 24 * 60 * 60 * 1000)) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[61]++;
    cov_2mktkw1gu6().s[191]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[33][0]++;
      cov_2mktkw1gu6().s[192]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[33][1]++;
    }
    const since =
    /* istanbul ignore next */
    (cov_2mktkw1gu6().s[193]++, Date.now() - periodMs);
    /* istanbul ignore next */
    cov_2mktkw1gu6().s[194]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[62]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[195]++, this.db.transaction(['behaviors'], 'readonly'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[196]++, transaction.objectStore('behaviors'));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[197]++, store.openCursor());
      const recent =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[198]++, []);
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[199]++;
      request.onsuccess = event => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[63]++;
        const cursor =
        /* istanbul ignore next */
        (cov_2mktkw1gu6().s[200]++, event.target.result);
        /* istanbul ignore next */
        cov_2mktkw1gu6().s[201]++;
        if (cursor) {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[34][0]++;
          const behavior =
          /* istanbul ignore next */
          (cov_2mktkw1gu6().s[202]++, cursor.value);
          // On prend toutes les interactions récentes de ce comportement
          const filtered =
          /* istanbul ignore next */
          (cov_2mktkw1gu6().s[203]++, (
          /* istanbul ignore next */
          (cov_2mktkw1gu6().b[35][0]++, behavior.interactions) ||
          /* istanbul ignore next */
          (cov_2mktkw1gu6().b[35][1]++, [])).filter(i => {
            /* istanbul ignore next */
            cov_2mktkw1gu6().f[64]++;
            cov_2mktkw1gu6().s[204]++;
            return i.timestamp >= since;
          }));
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[205]++;
          for (const i of filtered) {
            /* istanbul ignore next */
            cov_2mktkw1gu6().s[206]++;
            recent.push({
              ...i,
              url: behavior.url
            });
          }
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[207]++;
          cursor.continue();
        } else {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[34][1]++;
          cov_2mktkw1gu6().s[208]++;
          // Tri par timestamp décroissant
          recent.sort((a, b) => {
            /* istanbul ignore next */
            cov_2mktkw1gu6().f[65]++;
            cov_2mktkw1gu6().s[209]++;
            return b.timestamp - a.timestamp;
          });
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[210]++;
          resolve(recent);
        }
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[211]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[66]++;
        cov_2mktkw1gu6().s[212]++;
        return reject(request.error);
      };
    });
  }
  /**
   * Nettoie les anciennes données pour optimiser l'espace
   */
  async cleanup(retentionDays =
  /* istanbul ignore next */
  (cov_2mktkw1gu6().b[36][0]++, 30)) {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[67]++;
    cov_2mktkw1gu6().s[213]++;
    if (!this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[37][0]++;
      cov_2mktkw1gu6().s[214]++;
      throw new Error('Database not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[37][1]++;
    }
    const cutoffDate =
    /* istanbul ignore next */
    (cov_2mktkw1gu6().s[215]++, Date.now() - retentionDays * 24 * 60 * 60 * 1000);
    // Nettoyer les anciennes mutations
    /* istanbul ignore next */
    cov_2mktkw1gu6().s[216]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_2mktkw1gu6().f[68]++;
      const transaction =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[217]++, this.db.transaction(['mutations'], 'readwrite'));
      const store =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[218]++, transaction.objectStore('mutations'));
      const index =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[219]++, store.index('timestamp'));
      const range =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[220]++, IDBKeyRange.upperBound(cutoffDate));
      const request =
      /* istanbul ignore next */
      (cov_2mktkw1gu6().s[221]++, index.openCursor(range));
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[222]++;
      request.onsuccess = event => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[69]++;
        const cursor =
        /* istanbul ignore next */
        (cov_2mktkw1gu6().s[223]++, event.target.result);
        /* istanbul ignore next */
        cov_2mktkw1gu6().s[224]++;
        if (cursor) {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[38][0]++;
          cov_2mktkw1gu6().s[225]++;
          cursor.delete();
          /* istanbul ignore next */
          cov_2mktkw1gu6().s[226]++;
          cursor.continue();
        } else {
          /* istanbul ignore next */
          cov_2mktkw1gu6().b[38][1]++;
          cov_2mktkw1gu6().s[227]++;
          resolve();
        }
      };
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[228]++;
      request.onerror = () => {
        /* istanbul ignore next */
        cov_2mktkw1gu6().f[70]++;
        cov_2mktkw1gu6().s[229]++;
        return reject(request.error);
      };
    });
  }
  /**
   * Ferme la connexion à la base de données
   */
  close() {
    /* istanbul ignore next */
    cov_2mktkw1gu6().f[71]++;
    cov_2mktkw1gu6().s[230]++;
    if (this.db) {
      /* istanbul ignore next */
      cov_2mktkw1gu6().b[39][0]++;
      cov_2mktkw1gu6().s[231]++;
      this.db.close();
      /* istanbul ignore next */
      cov_2mktkw1gu6().s[232]++;
      this.db = null;
    } else
    /* istanbul ignore next */
    {
      cov_2mktkw1gu6().b[39][1]++;
    }
  }
}
/* istanbul ignore next */
cov_2mktkw1gu6().s[233]++;
exports.SymbiontStorage = SymbiontStorage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,